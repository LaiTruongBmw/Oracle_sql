DROP PROCEDURE HPDQ.HP_HR_IMP_HRTI00400_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_IMP_HRTI00400_0 (
   
   p_no               varchar2,
   p_emp_id           varchar2,
   p_fullnm           varchar2,
   p_date             varchar2,
   p_group_nm         varchar2,
   
   p_1                varchar2,
   p_2                varchar2,
   p_3                varchar2,
   p_4                varchar2,
   p_5                varchar2,
   
   p_sequence_dt      varchar2,
   p_crt_by           varchar2,
   p_rtn_value    out varchar2)
is

   l_thr_emp_pk  number;
   l_group_pk    number;
   l_from_wg_pk  number;
   l_times       number;
   l_date        varchar2(8);
begin
      
         l_date := HR_F_CONVERT_DATE(p_date);
            
         select max(a.pk) , max(a.thr_wg_pk)
         into l_thr_emp_pk, l_from_wg_pk 
         from thr_employee a
         where a.del_if=0
         and upper(a.emp_id) = upper(p_emp_id);
         
         select max(case 
                     when upper(trim(p_group_nm)) = 'A'     then 1 
                     when upper(trim(p_group_nm)) = 'B'     then 2
                     when upper(trim(p_group_nm)) = 'C'     then 3
                     when upper(trim(p_group_nm)) = 'HC'    then 4
                     else null end) into l_group_pk  
         from dual;

      if l_thr_emp_pk is not null and l_group_pk is not null then
         
            update thr_wg_sch_detail a
                set a.del_if = a.pk, 
                   a.remark = 'DELETE FROM NEW IMPORT',
                   a.mod_by = p_crt_by,
                   a.mod_dt = sysdate
            where       del_if = 0
                   and thr_emp_pk = l_thr_emp_pk
                   and work_dt >= l_date;

            --insert new schedule of new group
            insert into thr_wg_sch_detail
                        (
                            pk,
                            thr_wg_master_pk,
                            thr_wg_pk,
                            thr_ws_pk,
                            thr_emp_pk,
                            work_dt,
                            remark,
                            del_if,
                            crt_by,
                            crt_dt,
                            day_type,
                            hol_type
                        )
                select thr_wg_sch_detail_seq.nextval,
                       gw.thr_wg_master_pk,
                       gw.thr_wg_pk,
                       gw.thr_ws_pk,
                       gw.thr_emp_pk,
                       gw.work_dt,
                       'CHANGE WORKGROUP BY IMPORT',
                       0,
                       p_crt_by,
                       sysdate,
                       gw.day_type,
                       gw.hol_type
                from   (select a.pk as thr_wg_master_pk,
                               l_group_pk as thr_wg_pk,
                               a.thr_ws_pk as thr_ws_pk,
                               b.pk as thr_emp_pk,
                               a.work_dt as work_dt,
                               a.hol_type as hol_type,
                               a.day_type as day_type
                        from   thr_wg_sch_master a, thr_employee b
                        where       a.del_if = 0
                               and b.del_if = 0
                               and a.work_dt >= l_date
                               and b.pk not in (select g.thr_emp_pk
                                                from   thr_wg_sch_detail g
                                                where  g.del_if = 0 
                                                and g.work_dt = a.work_dt 
                                                and g.thr_emp_pk = b.pk)
                               and b.join_dt <= a.work_dt
                               and b.pk = l_thr_emp_pk
                               and a.thr_wg_pk = l_group_pk
                               and (b.left_dt is null or b.left_dt > a.work_dt)
                        order by a.work_dt) gw;
                        
         --INSERT VAO BANG APPOINTMENT
        select max(nvl(a.times, 1)) + 1
        into   l_times
        from   thr_appointment_detail a
        where  a.del_if = 0 and a.thr_employee_pk = l_thr_emp_pk;

        insert into thr_appointment_detail
                    ( pk, thr_employee_pk, from_org_pk, from_pos_type,  to_org_pk, to_pos_type,  appoint_date, description,
                        del_if, crt_by, crt_dt, from_manager_pk, to_manager_pk, old_salary, new_salary, from_manager_pos_pk,
                        from_manager_org_pk,  to_manager_org_pk, to_manager_pos_pk, times, from_wg_pk, to_wg_pk, approve_dt,
                        from_edu_type, to_edu_type
                    )
        SELECT thr_appointment_detail_seq.nextval, l_thr_emp_pk, a.tco_org_pk, a.pos_type, a.tco_org_pk, a.pos_type,
                   l_date,  'UPDATE WORKGROUP FROM IMPORT FILE',
                   0, p_crt_by, sysdate, NULL, NULL, NULL, NULL,
                   NULL p_from_manager_pos_pk,
                   NULL p_from_manager_org_pk,
                   (select e.tco_org_pk
                    from   thr_employee e
                    where  e.del_if = 0 and e.pk = hr_f_get_manager_org(A.TCO_ORG_PK, 'PK')),
                   (select e.pos_type
                    from   thr_employee e
                    where  e.del_if = 0 and e.pk = hr_f_get_manager_org(A.TCO_ORG_PK, 'PK')),
                   l_times,
                   l_from_wg_pk,
                   l_group_pk,
                   l_date,
                   a.edu_type p_from_edu_pk,
                   a.edu_type p_to_edu_pk
          FROM thr_employee a
          where a.del_if=0
          and a.pk = l_thr_emp_pk;        
                        
         update thr_employee a
            set    a.thr_wg_pk = l_group_pk,
                   a.sequence_dt = p_sequence_dt,
                   a.remark = 'UPDATE WORKGROUP BY IMPORT UPDATE',
                   a.mod_by = p_crt_by,
                   a.mod_dt = sysdate
            where  a.del_if = 0 and a.pk = l_thr_emp_pk;
            
      end if;

   p_rtn_value := '1';
exception
   when others
   then
      p_rtn_value := '-1';
end;
/

DROP PROCEDURE HPDQ.HP_HR_PRO_HRTI01600_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_PRO_HRTI01600_0 (
   
   p_no               varchar2,
   p_emp_id           varchar2,
   p_fullnm           varchar2,
   p_date             varchar2,
   p_reason           varchar2,
   p_wt               varchar2,
   
   p_1                varchar2,
   p_2                varchar2,
   p_3                varchar2,
   p_4                varchar2,
   p_5                varchar2,
   
   p_sequence_dt      varchar2,
   p_crt_by           varchar2,
   p_rtn_value    out varchar2)
is

   l_flag_exist   boolean := false;
   l_cur          sys_refcursor;
   l_pro          varchar2 (2000) := '';
   l_work_dt      varchar2 (8);
   l_ws           number;
   l_count_qcc    number;
   
begin
    -- WT > WS
    Select max(a.shift_time) into l_ws
        from thr_work_date a
        where a.del_if = 0
         and upper(a.emp_id) = upper(trim(p_emp_id))
         and to_char(to_date(a.work_dt,'yyyymmdd'),'dd/mm/yyyy') = p_date;
     
     -- quen cham cong lan thu 3
     select count(*) into l_count_qcc
            from thr_work_date a
            where a.del_if=0
            and upper(a.emp_id) = upper(trim(p_emp_id))
            and a.reason_type = 5 -- quen cham cong
            and substr(A.WORK_DT, 1, 6) = substr(to_char(to_date(p_date, 'dd/mm/yyyy'), 'yyyymmdd'), 1, 6);
     
   if p_wt > l_ws then
   
        if nvl(l_count_qcc, 0) >= 2 and p_reason = 5 then      
          
         -- update REASON_TYPE
         
            update thr_work_date d
                set d.reason_type = p_reason
                , d.mod_byhand_yn = 'Y'
                , d.remark = 'UPDATE REASON BY IMPORT FILE'
                , d.mod_by = p_crt_by
                , d.mod_dt = sysdate
            where d.del_if = 0
                and upper(d.emp_id) = upper(trim(p_emp_id))
                and to_char(to_date(d.work_dt,'yyyymmdd'),'dd/mm/yyyy') = p_date;
                
             p_rtn_value := '1';   
             
         else 
         
           -- update REASON_TYPE, WT, OT_XN  
                   
            update thr_work_date d
                set d.reason_type = p_reason
                , d.mod_byhand_yn = 'Y'
                , d.wt     = nvl(l_ws, 0)
                , d.ot_xn  = nvl(p_wt, 0) - nvl(l_ws , 0)
                , d.remark = 'UPD REASON, WT, OT_XN BY IMPORT FILE'
                , d.mod_by = p_crt_by
                , d.mod_dt = sysdate
            where d.del_if = 0
                and upper(d.emp_id) = upper(trim(p_emp_id))
                and to_char(to_date(d.work_dt,'yyyymmdd'),'dd/mm/yyyy') = p_date;
                       
             p_rtn_value := '1';    
         end if; 
   
   else
         if nvl(l_count_qcc, 0) >= 2 and p_reason = 5 then
         
         -- update REASON_TYPE, not update WT
         
            update thr_work_date d
                set d.reason_type = p_reason
                , d.mod_byhand_yn = 'Y'
                , d.remark = 'UPDATE REASON BY IMPORT FILE'
                , d.mod_by = p_crt_by
                , d.mod_dt = sysdate
            where d.del_if = 0
                and upper(d.emp_id) = upper(trim(p_emp_id))
                and to_char(to_date(d.work_dt,'yyyymmdd'),'dd/mm/yyyy') = p_date;

           p_rtn_value := '1'; 
           
        else 
        
        -- update REASON_TYPE, WT
        
            update thr_work_date d
                set d.reason_type = p_reason
                , d.mod_byhand_yn = 'Y'
                , d.wt     = nvl(p_wt, d.wt)
                , d.remark = 'UPD REASON, WT BY IMPORT FILE'
                , d.mod_by = p_crt_by
                , d.mod_dt = sysdate
            where d.del_if = 0
                and upper(d.emp_id) = upper(trim(p_emp_id))
                and to_char(to_date(d.work_dt,'yyyymmdd'),'dd/mm/yyyy') = p_date;

           p_rtn_value := '1'; 
       
       end if;      
    
   end if;   
  
exception
   when others
   then
      p_rtn_value := '-1';
end;
/

DROP PROCEDURE HPDQ.HP_HR_PRO_HRTI01603_0;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_pro_hrti01603_0 (
   p_tco_org_pk     varchar2,
   p_from           varchar2,
   p_to             varchar2,
   p_emp_id         varchar2,
   p_crt_by            varchar,
   p_return_flag   out varchar)
is
   l_tco_company_pk     number:=99;
   l_kind_ot        varchar(10):='02';
   
   l_wt_rate         number;
   l_ot_rate         number;
   l_nt30_rate       number;
   l_nt45_rate       number;
   l_nt60_rate       number;
   l_nt90_rate       number;
   l_ht_rate         number;
   l_ost_rate        number;
   l_oht_rate        number;
   l_st_rate         number;
   
   l_thr_emp_pk      number;
   l_count           number;
begin
   
  if p_emp_id is not null then
       
      select max(a.pk) into l_thr_emp_pk 
      from thr_employee a
       where a.del_if=0
       and upper(a.emp_id) = upper(p_emp_id);
           
       if l_thr_emp_pk is null then
         p_return_flag:=-1;
         raise_application_error(-20019, 'KHÔNG TÌM THẤY MÃ NHÂN VIÊN NÀY TRONG HỆ THỐNG, VUI LÒNG KIỂM TRA LẠI');
       end if;
  else 
          l_thr_emp_pk := null;
  end if;
  
  -- checking data of work schedule
  select count(a.pk) into l_count
  from thr_wg_sch_detail a
  where a.del_if=0
  and a.work_dt between p_from and p_to
--  and a.tco_org_pk in (select     g.pk
--                                from tco_org g
--                                where g.del_if = 0
--                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
--                                  connect by prior g.pk = g.p_pk) 
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
  
  if l_count = 0 then
         p_return_flag:=-1;
         raise_application_error(-20019, 'CHƯA CÓ DỮ LIỆU LỊCH LÀM VIỆC, VUI LÒNG KIỂM TRA LẠI');
  end if;
  
/*
  update  thr_work_date a
  set a.del_if = a.pk
  , A.REMARK = 'DELETE BEFORE PROCESS'
  where a.del_if=0
  and a.work_dt between p_from and p_to
  and nvl(a.mod_byhand_yn, 'N') = 'N'
  and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
*/
  select nvl(max(o.tco_company_pk), 99) 
  into l_tco_company_pk from tco_org o
  where o.del_if=0
  and o.pk = p_tco_org_pk;
  
  select    sum(decode(c.code,'01',c.num_1,0)) as wt
            ,sum(decode(c.code,'02',c.num_1,0)) as ot
            ,sum(decode(c.code,'03',c.num_1,0)) as nt30
            ,sum(decode(c.code,'04',c.num_1,0)) as nt45
            ,sum(decode(c.code,'05',c.num_1,0)) as nt60
            ,sum(decode(c.code,'06',c.num_1,0)) as nt90
            ,sum(decode(c.code,'07',c.num_1,0)) as ht
            ,sum(decode(c.code,'08',c.num_1,0)) as ost
            ,sum(decode(c.code,'09',c.num_1,0)) as oht
            ,sum(decode(c.code,'10',c.num_1,0)) as st
             into l_wt_rate,l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate,l_oht_rate,l_st_rate
             from thr_code_detail c,thr_code_master d
             where c.del_if=0 and d.del_if=0 and c.thr_code_master_pk=d.pk
             and d.id='HR0028' and nvl(d.use_yn,'N')='Y'
             and (nvl(to_char(c.tco_company_pk),l_tco_company_pk) = l_tco_company_pk );

  for l_cur in (select c.car_date as work_dt 
                from thr_calendar c
                where c.del_if=0
                and c.car_date between p_from and p_to
                and c.tco_company_pk = l_tco_company_pk )
 loop
      -- tao moi thong tin thr_work_date
       insert into thr_work_date(pk, thr_emp_pk, emp_id, id_num, thr_ws_pk,  thr_wg_pk, tco_org_pk, tco_company_pk
                , day_type, hol_type, work_dt, del_if, crt_by, crt_dt, ot_yn, start_ot, start_nt
                , shift_time, days_shift, shift_start, shift_end, shift_sunday_yn
                , week_no)
       select thr_work_date_seq.nextval, e.pk, e.emp_id, e.id_num, d.thr_ws_pk, d.thr_wg_pk, e.tco_org_pk, e.tco_company_pk
               , d.day_type, d.hol_type, d.work_dt, 0, p_crt_by, sysdate, nvl(e.ot_yn, 'N'), s.start_ot, s.start_nt
               , s.wt, nvl(s.during_day, 1), s.start_time, s.end_time, s.sunday_yn
               , hr_f_get_weeks(d.work_dt)
       from thr_employee e, thr_wg_sch_detail d, thr_work_shift s
       where e.del_if=0 and d.del_if=0 and s.del_if=0
       and d.thr_ws_pk = s.pk
       and e.pk = d.thr_emp_pk
       and nvl(e.attendance_yn, 'N') = 'Y'
       and d.work_dt = l_cur.work_dt
       and nvl(e.left_dt, '30000101') > l_cur.work_dt
       and e.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
       and d.thr_emp_pk not in (select w.thr_emp_pk 
                                    from thr_work_date w where w.del_if=0
                                    and w.work_dt = d.work_dt
                                    and w.thr_emp_pk = d.thr_emp_pk
                                    and nvl(w.tco_company_pk, l_tco_company_pk) = nvl(e.tco_company_pk, l_tco_company_pk)) 
       and d.thr_emp_pk=nvl(l_thr_emp_pk, d.thr_emp_pk);
                                    
     
   
      -- XAC DINH GIO VAO RA CHO CA 1 NGAY:
      -- ko di tre qua 4 h
      update thr_work_date a
      set (a.time_in, a.date_in) = (select min(t.time) , min(d.work_dt)
                                    from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    where d.del_if=0 and s.del_if=0 and e.del_if=0
                                    and e.pk = d.thr_emp_pk
                                    and d.thr_emp_pk = a.thr_emp_pk
                                    and d.thr_ws_pk = s.pk
                                    and t.work_dt = d.work_dt  
                                    and t.id= e.id_num
                                    and t.work_dt = a.work_dt
                                    and nvl(s.start_time, ' ') <= nvl(s.end_time, ' ')
                                    and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) <= nvl(a.shift_time, 8)/2 
                                    and abs(to_number(substr(t.time,1,2))-to_number(substr(s.start_time,1,2))) <= nvl(a.shift_time, 8) - 1 -- so gio lam viec co the >=1h
                                    and not exists (select 1 from thr_work_date k 
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and nvl(k.time_out, ' ') = nvl(t.time, ' ')
                                                                and k.work_dt = t.work_dt 
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                    )
        , a.remark = 'UPDATE TIME IN SHIFT 1 DAYS BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                            
 -- lam viec it nhat 10 phut thi lay gio ra 
      update thr_work_date a
      set (a.time_out, a.date_out) = (select max(t.time), min(d.work_dt) 
                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                        and e.pk = d.thr_emp_pk
                        and d.thr_emp_pk = a.thr_emp_pk
                        and d.thr_ws_pk = s.pk
                        and t.work_dt = d.work_dt  
                        and t.id= e.id_num
                        and t.work_dt = a.work_dt
                        and (to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||a.time_in, 'yyyymmddhh24:mi'))*24*60  >= 10     
--                        and abs(to_number(substr(t.time,1,2))-to_number(substr(s.end_time,1,2))) <= nvl(a.shift_time, 8) - 1 -- dao dong 4 h
                        and nvl(t.time, ' ') <> nvl(a.time_in, ' ')
                        )
        , a.remark = 'UPDATE TIME OUT SHIFT 1 DAYS BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);  
 
 -- lay lai gio in 1 lan nua khi da co gio out ma chua co gio in
     update thr_work_date a
      set (a.time_in, a.date_in) = (select min(t.time) , min(d.work_dt)
                                    from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    where d.del_if=0 and s.del_if=0 and e.del_if=0
                                    and e.pk = d.thr_emp_pk
                                    and d.thr_emp_pk = a.thr_emp_pk
                                    and d.thr_ws_pk = s.pk
                                    and t.work_dt = d.work_dt  
                                    and t.id= e.id_num
                                    and t.work_dt = a.work_dt
                                    and nvl(s.start_time, ' ') <= nvl(s.end_time, ' ')
--                                    and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) <= nvl(a.shift_time, 8)/2 
                                    and to_number(substr(a.time_out ,1,2))-to_number(substr(t.time,1,2)) >= 1 -- so gio lam viec co the >=1h
                                    and not exists (select 1 from thr_work_date k 
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and nvl(k.time_out, ' ') = nvl(t.time, ' ')
                                                                and k.work_dt = t.work_dt 
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                    )
        , a.remark = 'UPDATE TIME IN SHIFT 1 DAYS BY PROCESS AGAIN '
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is not null
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);                       
      
      
      -- loc gio ra them 1 lan nua
      update thr_work_date a
      set (a.time_out, a.date_out) = (select max(t.time), min(d.work_dt) 
                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                        and e.pk = d.thr_emp_pk
                        and d.thr_emp_pk = a.thr_emp_pk
                        and d.thr_ws_pk = s.pk
                        and t.work_dt = d.work_dt  
                        and t.id= e.id_num
                        and t.work_dt = a.work_dt
                        and (to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||a.time_in, 'yyyymmddhh24:mi'))*24*60  >= 10
                        and abs(to_number(substr(t.time,1,2))-to_number(substr(s.end_time,1,2))) <= 10-- dao dong  h
                        and nvl(t.time, ' ') <> nvl(a.time_in, ' ')
                        )
        , a.remark = 'UPDATE TIME OUT SHIFT 1 DAYS BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
      
      
      -- XAC DINH GIO VAO RA CHO CA 2 NGAY:
      -- VAO NGAY 1 RA NGAY 2
      update thr_work_date a
      set (a.time_in, a.date_in) = (select min(t.time) , min(d.work_dt)
                                    from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    where d.del_if=0 and s.del_if=0 and e.del_if=0
                                    and e.pk = d.thr_emp_pk
                                    and d.thr_emp_pk = a.thr_emp_pk
                                    and d.thr_ws_pk = s.pk
                                    and t.work_dt = d.work_dt  
                                    and t.id= e.id_num
                                    and t.work_dt = a.work_dt
                                    and nvl(s.start_time, ' ') > nvl(s.end_time, ' ')
                                    and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) <= 6
                                    and not exists (select 1 from thr_work_date k 
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and nvl(k.time_out, ' ') = nvl(t.time, ' ')
                                                                and k.work_dt = t.work_dt 
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                    )       
        , (a.time_out, a.date_out) = (select max(t.time) , min(t.work_dt)
                                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                                        and e.pk = d.thr_emp_pk
                                        and d.thr_emp_pk = a.thr_emp_pk
                                        and d.thr_ws_pk = s.pk
                                        and t.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')+1,'YYYYMMDD')  
                                        and t.id= e.id_num
                                        and t.work_dt = to_char(to_date(a.work_dt,'YYYYMMDD')+1,'YYYYMMDD') 
                                        and nvl(s.start_time, ' ') > nvl(s.end_time, ' ')
                                         and (to_date(to_char(to_date(d.work_dt,'YYYYMMDD')+1,'YYYYMMDD')||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||a.time_in, 'yyyymmddhh24:mi'))*24*60  >= 10
                                        and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') 
                                            - to_date(to_char(to_date(d.work_dt,'YYYYMMDD')+1,'YYYYMMDD')||s.end_time, 'yyyymmddhh24:mi'))*24) <= 6
                                        )
        , a.remark = 'UPDATE TIME IN OUT (IN1OUT2) BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                            
     -- vao ngay 1 ra ngay 1
      update thr_work_date a
      set  (a.time_out, a.date_out) = (select max(t.time) , min(t.work_dt)
                                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                                        and e.pk = d.thr_emp_pk
                                        and d.thr_emp_pk = a.thr_emp_pk
                                        and d.thr_ws_pk = s.pk
                                        and t.work_dt = d.work_dt  
                                        and t.id= e.id_num
                                        and t.work_dt = a.work_dt
                                        and nvl(t.time, ' ') > nvl(s.start_time, ' ')  --phai lon hon gio bat dau ca lam viec
                                        and (to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||a.time_in, 'yyyymmddhh24:mi'))*24*60  >= 10
                                        and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') 
                                            - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) >= 1 -- lon hon 1 tieng so voi bat dau ca moi lay
                                        )
        , a.remark = A.REMARK || ' - UPDATE TIME OUT (IN1OUT1) BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is  null
      and a.time_in is not null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                                 
      
      -- vao ngay 2 ra ngay 2 (da xac dinh dc out time)
      update thr_work_date a
      set  (a.time_in, a.date_in) = (select min(t.time) , min(t.work_dt)
                                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                                        and e.pk = d.thr_emp_pk
                                        and d.thr_emp_pk = a.thr_emp_pk
                                        and d.thr_ws_pk = s.pk
                                        and t.work_dt = d.work_dt
                                        and t.id= e.id_num
                                        and t.work_dt = a.work_dt  
                                        and nvl(t.time, ' ') < nvl(s.start_time, ' ')  --phai nho hon gio bat dau ca lam viec
                                        and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') 
                                            - to_date(a.date_out||a.time_out, 'yyyymmddhh24:mi'))*24) >= 1 -- nho hon 1 tieng so voi time out
--                                        and to_date(a.date_in||a.time_in, 'yyyymmddhh24:mi') > to_date(to_char(to_date(a.work_dt,'YYYYMMDD')-1,'YYYYMMDD')||  
                                        and exists (select 1 from thr_work_date k
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') > to_date(k.date_out||k.time_out, 'yyyymmddhh24:mi')
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                        )
        , a.remark = A.REMARK || ' - UPDATE TIME OUT (IN1OUT1) BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is not null
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);     
   

    /*                               
     -- KO CO GIO IN VA CA NGAY KE TIEP LA CA NGAY
      update thr_work_date a
      set a.time_out = null
        , a.date_out = null 
        , a.remark = A.REMARK || ' - KO CO GIO IN VA CA NGAY KE TIEP LA CA NGAY'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk in(select g.thr_emp_pk from thr_wg_sch_detail g,thr_work_shift s   -- ca cua ngay ke tiep la ca ngay 
                                        where g.del_if=0 and s.del_if=0 and g.thr_ws_pk=s.pk 
                                        and g.work_dt = to_char(to_date(a.work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                        and s.start_time < s.end_time
                                    and g.thr_emp_pk=a.thr_emp_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk); 
     
     */                           
     --gio in hom nay trung  voi gio out hom qua=> lay lai gio in 1 lan nua
      update thr_work_date a
      set  (a.time_in, a.date_in) = (select min(t.time) , min(t.work_dt)
                                            from thr_time_temp t,thr_employee e 
                                            where e.del_if=0 and e.id_num = t.id 
                                                and t.work_dt= l_cur.work_dt
                                                and t.time> a.time_in
                                                and e.pk= a.thr_emp_pk
                                                and t.work_dt = a.work_dt
                                                and t.time<'12:00')
        , a.remark = 'TRUNG VOI GIO OUT NGAY TRUOC'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and a.time_in is not null
      and a.time_in in(select nvl(t.time_out,' ') from thr_work_date t where t.del_if=0
                        and t.work_dt = to_char(to_date(l_cur.work_dt,'YYYYMMDD')-1,'YYYYMMDD')
                        and t.thr_emp_pk = a.thr_emp_pk)
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);                                          
       
  -- XU LY GIO RA VAO GIUA GIO
  -- XAC DINH TIME OUT 1
   update thr_work_date m
        set m.mid_time_out=hr_get_mid_time(m.date_in,m.time_in,m.date_out,m.time_out,m.id_num, m.thr_ws_pk)
        where m.del_if = 0
        and nvl(m.mod_byhand_yn,'N')<>'Y' 
        and m.time_in is not null
        and m.time_out is not null
        and m.work_dt = l_cur.work_dt
        and m.thr_emp_pk in (select pk from thr_employee e 
                                where  e.del_if=0
                                and e.tco_org_pk in (select     g.pk
                                            from tco_org g
                                            where g.del_if = 0
                                              start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                              connect by prior g.pk = g.p_pk) 
                                and e.pk=m.thr_emp_pk
                                )
        and nvl(m.approve_yn,'N')='N'
        and m.thr_ws_pk in (select s.pk from thr_work_shift s where s.del_if=0
                            and nvl(s.mm_mid , 0) > 0
                            and s.pk = m.thr_ws_pk)
        and m.thr_emp_pk=nvl(l_thr_emp_pk, m.thr_emp_pk);
        
       
        --XAC DINH TEMP IN 1 
        update thr_work_date m
        set m.mid_time_in=hr_get_mid_time((case when m.mid_time_out>m.time_in then m.date_in else to_char(to_date(m.date_in,'YYYYMMDD')+1,'YYYYMMDD') end) 
                                        ,m.mid_time_out,m.date_out,m.time_out,m.id_num, m.thr_ws_pk)
        where m.del_if = 0
        and nvl(m.mod_byhand_yn,'N')<>'Y'
        and m.time_in is not null
        and m.mid_time_out is not null
        and m.time_out is not null
        and m.work_dt = l_cur.work_dt
        and m.thr_emp_pk in (select pk from thr_employee e 
                                where  e.del_if=0
                                and e.tco_org_pk in (select     g.pk
                                            from tco_org g
                                            where g.del_if = 0
                                              start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                              connect by prior g.pk = g.p_pk) 
                                and e.pk=m.thr_emp_pk
                                )
        and nvl(m.approve_yn,'N')='N'
        and m.thr_ws_pk in (select s.pk from thr_work_shift s where s.del_if=0
                            and nvl(s.mm_mid , 0) > 0
                            and s.pk = m.thr_ws_pk)
        and m.thr_emp_pk=nvl(l_thr_emp_pk, m.thr_emp_pk);
    
        UPDATE thr_work_date M
        SET M.MID_WT=HR_GET_TEMP_HOUR_V4(l_tco_company_pk,M.TIME_IN,M.mid_time_out,M.mid_time_in,NULL,NULL,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'WT')
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = l_cur.work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.HOL_TYPE IS NULL --NGAY THUONG
        and m.thr_emp_pk=nvl(l_thr_emp_pk, m.thr_emp_pk);
        
        
        -- XU LY TRUONG HOP MIEN CHAM CONG KHONG CO GIO QUET THE
        update thr_work_date a
        set a.time_in = a.shift_start  --to_char(to_date(a.shift_start , 'hh24:mi')  -  round(dbms_random.value(1,15))/24/60, 'hh24:mi')
            , a.time_out = a.shift_end  --to_char(to_date(a.shift_end , 'hh24:mi')  +  round(dbms_random.value(1,15))/24/60, 'hh24:mi')
            , a.date_in  = a.work_dt
            , a.date_out = decode(nvl(a.days_shift, 1) , 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt)
            , a.auto_manu_yn = 'Y'
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N')<>'Y'
        and a.work_dt = l_cur.work_dt
        and (a.time_in is not null or  a.time_out is not null)
        and a.thr_emp_pk in (select pk from thr_employee e 
                                where  e.del_if=0
                                and e.tco_org_pk in (select     g.pk
                                            from tco_org g
                                            where g.del_if = 0
                                              start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                              connect by prior g.pk = g.p_pk) 
                                and e.pk=a.thr_emp_pk
                                )
        and nvl(a.approve_yn,'N')='N'
        and a.hol_type is null --NGAY THUONG
        and exists (select 1 from thr_att_time_auto e 
                        where e.del_if=0
                        and e.thr_emp_pk = a.thr_emp_pk
                        and a.work_dt between e.start_dt and NVL(e.end_dt, '30000101'))
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
        
    -- XU LY TRUONG HOP MIEN CHAM CONG KHONG CO GIO QUET THE
        update thr_work_date a
        set a.time_in = a.shift_start --to_char(to_date(a.shift_start , 'hh24:mi')  -  round(dbms_random.value(1,15))/24/60, 'hh24:mi')
            , a.time_out =  a.shift_end --to_char(to_date(a.shift_end , 'hh24:mi')  +  round(dbms_random.value(1,15))/24/60, 'hh24:mi')
            , a.date_in  = a.work_dt
            , a.date_out = decode(nvl(a.days_shift, 1) , 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt)
            , a.auto_manu_yn = 'N'
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N')<>'Y'
        and a.work_dt = l_cur.work_dt
        and a.time_in is null
        and a.time_out is null
        and a.thr_emp_pk in (select pk from thr_employee e 
                                where  e.del_if=0
                                and e.tco_org_pk in (select     g.pk
                                            from tco_org g
                                            where g.del_if = 0
                                              start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                              connect by prior g.pk = g.p_pk) 
                                and e.pk=a.thr_emp_pk
                                )
        and nvl(a.approve_yn,'N')='N'
        and a.hol_type is null --NGAY THUONG
        and exists (select 1 from thr_att_time_auto e 
                        where e.del_if=0
                        and e.thr_emp_pk = a.thr_emp_pk
                        and a.work_dt between e.start_dt and NVL(e.end_dt, '30000101'))
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
        
        
        
            
                     
        
     
    -- tinh gio wt, ot, nt
        update thr_work_date a
        set a.wt = hr_sf_get_wt_com(a.date_in||a.time_in,a.date_out||a.time_out,a.thr_ws_pk,a.work_dt, l_tco_company_pk)
           ,a.ot = case when a.ot_yn = 'Y' then hr_sf_get_ot_com(a.start_ot,a.date_out||a.time_out , a.thr_ws_pk, a.work_dt,l_kind_ot,l_tco_company_pk)
                        else 0 end
           ,a.nt = hr_sf_get_nt1_com(a.start_nt,a.date_out||a.time_out, a.thr_ws_pk, a.work_dt, a.date_in||a.time_in, l_tco_company_pk)
           ,a.ont= case when a.ot_yn = 'Y' then hr_sf_get_nt2_com(a.start_nt,a.date_out||a.time_out, a.thr_ws_pk, a.work_dt, a.date_in||a.time_in, l_tco_company_pk)
                        else 0 end
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.time_in is not null
        and a.time_out is not null
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                                  
    -- tinh gio wt rate, ot rate, nt rate
        update thr_work_date a
        set a.wt_rate = case when nvl(a.wt, 0) > 0 then decode(a.hol_type, 'SUN', l_st_rate, 'HOL', l_ht_rate, l_wt_rate) else 0 end
           ,a.ot_rate = case when nvl(a.ot, 0) > 0 then decode(a.hol_type, 'SUN', l_ost_rate, 'HOL', l_oht_rate, l_ot_rate) else 0 end
           ,a.nt_rate = case when nvl(a.nt, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt30_rate) else 0 end
           ,a.ont_rate = case when nvl(a.ont, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt45_rate) else 0 end
           ,a.wd = round(nvl(a.wt, 0)/ nvl(a.shift_time, 8), 2)
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.time_in is not null
        and a.time_out is not null
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
        
     -- cho nhung nguoi trong che do 
        update thr_work_date a 
        set a.wt =nvl((select 
                           decode(max(l.reg_type),'01',
                                    case when hr_sf_get_wt_com(to_char(to_date(a.date_in||a.time_in,'yyyymmdd HH24:MI')-max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date in 
                                         ,a.date_out||a.time_out--date out 
                                         ,a.thr_ws_pk,a.work_dt,l_tco_company_pk)>max(nvl(w.wt,0)+nvl(w.wt_plus,0)) then max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                    else hr_sf_get_wt_com(to_char(to_date(a.date_in||a.time_in,'yyyymmdd HH24:MI')-max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date in 
                                         ,a.date_out||a.time_out--date out 
                                         ,a.thr_ws_pk,a.work_dt,l_tco_company_pk)
                                    end,        
                                   '03',
                                    case when hr_sf_get_wt_com(a.date_in||a.time_in--date in 
                                         ,to_char(to_date(a.date_out||a.time_out,'yyyymmdd HH24:MI')+max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date out 
                                         ,a.thr_ws_pk,a.work_dt,l_tco_company_pk) >max(nvl(w.wt,0)+nvl(w.wt_plus,0)) then max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                    else hr_sf_get_wt_com(a.date_in||a.time_in--date in 
                                         ,to_char(to_date(a.date_out||a.time_out,'yyyymmdd HH24:MI')+max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date out 
                                         ,a.thr_ws_pk,a.work_dt,l_tco_company_pk)
                                    end,
                                    '04', 
                                    case when hr_sf_get_wt_com(a.date_in||a.time_in,a.date_out||a.time_out,a.thr_ws_pk,a.work_dt,l_tco_company_pk)+max(nvl(l.reg_hours,0))>max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                         then max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                    else hr_sf_get_wt_com(a.date_in||a.time_in,a.date_out||a.time_out, a.thr_ws_pk, a.work_dt,l_tco_company_pk)
                                         +max(nvl(l.reg_hours,0))
                                    end,0) as wt                                                                                                     
                            from thr_regulation l, thr_work_shift w
                            where l.del_if=0 and l.thr_emp_pk= a.thr_emp_pk
                            and w.del_if=0
                            and w.pk = a.thr_ws_pk
                            and a.work_dt between l.start_dt and l.end_dt
                            group by l.thr_emp_pk),0)
            , a.remark = 'UPDATE WT WITH REGULATION'
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.time_in is not null
        and a.time_out is not null
        and a.work_dt = l_cur.work_dt
        and a.hol_type is null
        and a.thr_emp_pk in (select d.thr_emp_pk
                                     from thr_regulation d where d.del_if = 0
                                     and d.thr_emp_pk=a.thr_emp_pk
                                     group by d.thr_emp_pk
                                     having max(d.start_dt)<= l_cur.work_dt and max(d.end_dt)>= l_cur.work_dt)
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);  
        
      -- TINH SO PHUT DI TRE VE SOM
        update thr_work_date a
        set (a.lately, a.early)  = (select round(case when a.time_in is not null and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi') 
                                                    then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                    else null end)
                                        ,round(case when a.time_out is not null and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                                        < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
                                                     then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                            - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60
                                                     else null end)
                                    from thr_work_shift s
                                    where s.del_if=0
                                    and s.pk = a.thr_ws_pk)  
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk)
        and a.thr_ws_pk not in (28, 50) ; --SHIFT 3 VA 5;
    
    -- TINH SO PHUT DI TRE VE SOM CHO CA 3 VÀ CA 5
        update thr_work_date a
        set (a.lately, a.early)  = (select round(case when a.time_in is not null and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi') 
                                                           then (case when a.time_in between s.start_meal1 and s.end_meal1 
                                                                     then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                                           - (to_date(a.work_dt || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_meal1, 'yyyymmddhh24:mi'))*24*60
                                                                     when a.time_in > s.end_meal1 
                                                                     then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                                            - (to_date(a.work_dt || s.end_meal1, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_meal1, 'yyyymmddhh24:mi'))*24*60
                                                                     else (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                                     end)
                                                    else null end) as lately
                                        ,round(case when a.time_out is not null and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                                        < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
                                                     then (case when a.time_out between s.start_meal1 and s.end_meal1 
                                                                then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                        - to_date(a.date_out || s.end_meal1 , 'yyyymmddhh24:mi'))*24*60
                                                                when a.time_out < s.start_meal1
                                                                then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                        - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60
                                                                    - (to_date(a.work_dt || s.end_meal1, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_meal1, 'yyyymmddhh24:mi'))*24*60
                                                                else (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                        - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60       
                                                                end)
                                                     else null end) as early
                                    from thr_work_shift s
                                    where s.del_if=0
                                    and s.pk = a.thr_ws_pk)  
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk)
        and a.thr_ws_pk in (28, 50) ; --SHIFT 3 VA 5
  
 
  end loop;
   p_return_flag := 1;
exception
   when others
   then
      raise_application_error (-20999, sqlerrm);
end;
/

DROP PROCEDURE HPDQ.HP_HR_PRO_HRTI01701_2;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_pro_hrti01701_2(
    p_work_mon          in varchar2,
    p_from              in varchar2,    -- YYYYMMDD
    p_to                in varchar2,     -- YYYYMMDD
    p_tco_org_pk        in varchar2,
    p_sal_period        in varchar2,
    p_emp_id            in varchar2,
    p_crt_by            varchar2,
    p_result        out number      -- RETURN VALUE ( NUMBER )
) is


    l_from_dt varchar2(8);
    l_to_dt varchar2(8);
    l_thr_emp_pk      number;
begin
       
  if p_emp_id is not null then
       
      select max(a.pk) into l_thr_emp_pk 
      from thr_employee a
       where a.del_if=0
       and upper(a.emp_id) = upper(p_emp_id);
           
       if l_thr_emp_pk is null then
         p_result:=-1;
         raise_application_error(-20019, 'KHÔNG TÌM THẤY MÃ NHÂN VIÊN NÀY TRONG HỆ THỐNG, VUI LÒNG KIỂM TRA LẠI');
       end if;
  else 
          l_thr_emp_pk := null;
  end if;

        l_from_dt := substr(p_from, 1, 6)||'01';
        l_to_dt := to_char(last_day(to_date(l_from_dt, 'yyyymmdd')), 'yyyymmdd');

  delete  thr_mon_lately_early a
  where a.del_if=0
  and a.work_mon = p_work_mon
  and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);

  insert into thr_mon_lately_early(pk, thr_emp_pk, emp_id, full_name, pos_type, job_type, tco_org_pk, org_seq, work_mon
        , lately_d1, early_d1, lately_d2, early_d2, lately_d3, early_d3, lately_d4, early_d4, lately_d5
        , early_d5, lately_d6, early_d6, lately_d7, early_d7, lately_d8, early_d8, lately_d9, early_d9, lately_d10, early_d10
        , lately_d11, early_d11, lately_d12, early_d12, lately_d13, early_d13, lately_d14, early_d14, lately_d15, early_d15, lately_d16
        , early_d16, lately_d17, early_d17, lately_d18, early_d18, lately_d19, early_d19, lately_d20, early_d20, lately_d21, early_d21
        , lately_d22, early_d22, lately_d23, early_d23, lately_d24, early_d24, lately_d25, early_d25, lately_d26, early_d26, lately_d27
        , early_d27, lately_d28, early_d28, lately_d29, early_d29, lately_d30, early_d30, lately_d31, early_d31, total_lately, total_early
        , total_forget_att, lately_up_10, lately_in_10, early_up_5, early_in_5
        , del_if, crt_by, crt_dt)
        select thr_mon_lately_early_SEQ.NEXTVAL
        , thr_emp_pk, b.emp_id, b.full_name, b.pos_type, b.job_type, b.tco_org_pk, null, p_work_mon
        , lately_d1, early_d1, lately_d2, early_d2, lately_d3, early_d3, lately_d4, early_d4, lately_d5
        , early_d5, lately_d6, early_d6, lately_d7, early_d7, lately_d8, early_d8, lately_d9, early_d9, lately_d10, early_d10
        , lately_d11, early_d11, lately_d12, early_d12, lately_d13, early_d13, lately_d14, early_d14, lately_d15, early_d15, lately_d16
        , early_d16, lately_d17, early_d17, lately_d18, early_d18, lately_d19, early_d19, lately_d20, early_d20, lately_d21, early_d21
        , lately_d22, early_d22, lately_d23, early_d23, lately_d24, early_d24, lately_d25, early_d25, lately_d26, early_d26, lately_d27
        , early_d27, lately_d28, early_d28, lately_d29, early_d29, lately_d30, early_d30, lately_d31, early_d31, total_lately, total_early
        , total_forget_att, lately_up_10, lately_in_10, early_up_5, early_in_5
        , 0, p_crt_by, sysdate
        from thr_employee b,
        (select a.thr_emp_pk
            ,sum(case when a.work_dt = l_from_dt then nvl(a.lately, 0) else 0 end) as lately_d1
            ,sum(case when a.work_dt = l_from_dt then nvl(a.early, 0) else 0 end) as early_d1
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 1, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d2
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 1, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d2
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 2, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d3
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 2, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d3
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 3, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d4
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 3, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d4
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 4, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d5
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 4, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d5
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 5, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d6
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 5, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d6
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 6, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d7
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 6, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d7
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 7, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d8
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 7, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d8
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 8, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d9
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 8, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d9
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 9, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d10
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 9, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d10
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 10, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d11
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 10, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d11
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 11, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d12
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 11, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d12
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 12, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d13
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 12, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d13
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 13, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d14
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 13, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d14
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 14, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d15
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 14, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d15
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 15, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d16
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 15, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d16
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 16, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d17
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 16, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d17
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 17, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d18
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 17, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d18
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 18, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d19
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 18, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d19
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 19, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d20
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 19, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d20
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 20, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d21
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 20, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d21
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 21, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d22
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 21, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d22
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 22, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d23
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 22, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d23
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 23, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d24
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 23, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d24
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 24, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d25
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 24, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d25
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 25, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d26
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 25, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d26
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 26, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d27
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 26, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d27
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 27, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d28
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 27, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d28
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 28, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d29
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 28, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d29
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 29, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d30
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 29, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d30
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 30, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d31
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 30, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d31
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.lately, 0) > 0 then 1 else 0 end) as total_lately
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.early, 0) > 0 then 1 else 0 end) as total_early
            ,sum(case when a.work_dt between p_from and p_to and nvl(A.REASON_TYPE , 0) = 5 then 1 else 0 end) as total_forget_att
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.lately, 0) > 10 then 1 else 0 end) as lately_up_10
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.lately, 0) > 0 and nvl(a.lately, 0) < 11  then 1 else 0 end) as lately_in_10
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.early, 0) > 5 then 1 else 0 end) as early_up_5
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.early, 0) > 0 and nvl(a.early, 0) < 6 then 1 else 0 end) as early_in_5
            from thr_work_date a, thr_employee e
            where a.del_if=0 and e.del_if=0
            and a.thr_emp_pk = e.pk
            and a.work_dt between l_from_dt and l_to_dt
            and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
            and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk)
            group by a.thr_emp_pk) t
          where b.del_if=0
          and b.pk = t.thr_emp_pk
          and not exists (select 1 from thr_mon_lately_early s 
                                where s.del_if=0 
                                and s.work_mon = p_work_mon
                                and s.thr_emp_pk = t.thr_emp_pk);
       
 
     
p_result:=1;
exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end  ;
/

DROP PROCEDURE HPDQ.HP_HR_PRO_HRTI02103_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_PRO_HRTI02103_0 (
   p_tco_org_pk     varchar2,
   p_from           varchar2,
   p_to             varchar2,
   p_emp_id         varchar2,
   p_crt_by            varchar,
   p_return_flag   out varchar)
is
   l_tco_company_pk     number:=99;
   l_kind_ot        varchar(10):='02';
   
   l_wt_rate         number;
   l_ot_rate         number;
   l_nt30_rate       number;
   l_nt45_rate       number;
   l_nt60_rate       number;
   l_nt90_rate       number;
   l_ht_rate         number;
   l_ost_rate        number;
   l_oht_rate        number;
   l_st_rate         number;
   
   l_thr_emp_pk      number;
   l_count           number;
begin
   
  if p_emp_id is not null then
       
      select max(a.pk) into l_thr_emp_pk 
      from thr_employee a
       where a.del_if=0
       and upper(a.emp_id) = upper(p_emp_id);
           
       if l_thr_emp_pk is null then
         p_return_flag:=-1;
         raise_application_error(-20019, 'KHÔNG TÌM THẤY MÃ NHÂN VIÊN NÀY TRONG HỆ THỐNG, VUI LÒNG KIỂM TRA LẠI');
       end if;
  else 
          l_thr_emp_pk := null;
  end if;
  
  -- checking data of work schedule
  select count(a.pk) into l_count
  from thr_wg_sch_detail a
  where a.del_if=0
  and a.work_dt between p_from and p_to
--  and a.tco_org_pk in (select     g.pk
--                                from tco_org g
--                                where g.del_if = 0
--                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
--                                  connect by prior g.pk = g.p_pk) 
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
  
  if l_count = 0 then
         p_return_flag:=-1;
         raise_application_error(-20019, 'CHƯA CÓ DỮ LIỆU LỊCH LÀM VIỆC, VUI LÒNG KIỂM TRA LẠI');
  end if;
  
/*
  update  thr_work_date_inout a
  set a.del_if = a.pk
  , A.REMARK = 'DELETE BEFORE PROCESS'
  where a.del_if=0
  and a.work_dt between p_from and p_to
  and nvl(a.mod_byhand_yn, 'N') = 'N'
  and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
*/
  select nvl(max(o.tco_company_pk), 99) 
  into l_tco_company_pk from tco_org o
  where o.del_if=0
  and o.pk = p_tco_org_pk;
  
  select    sum(decode(c.code,'01',c.num_1,0)) as wt
            ,sum(decode(c.code,'02',c.num_1,0)) as ot
            ,sum(decode(c.code,'03',c.num_1,0)) as nt30
            ,sum(decode(c.code,'04',c.num_1,0)) as nt45
            ,sum(decode(c.code,'05',c.num_1,0)) as nt60
            ,sum(decode(c.code,'06',c.num_1,0)) as nt90
            ,sum(decode(c.code,'07',c.num_1,0)) as ht
            ,sum(decode(c.code,'08',c.num_1,0)) as ost
            ,sum(decode(c.code,'09',c.num_1,0)) as oht
            ,sum(decode(c.code,'10',c.num_1,0)) as st
             into l_wt_rate,l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate,l_oht_rate,l_st_rate
             from thr_code_detail c,thr_code_master d
             where c.del_if=0 and d.del_if=0 and c.thr_code_master_pk=d.pk
             and d.id='HR0028' and nvl(d.use_yn,'N')='Y'
             and (nvl(to_char(c.tco_company_pk),l_tco_company_pk) = l_tco_company_pk );

  for l_cur in (select c.car_date as work_dt 
                from thr_calendar c
                where c.del_if=0
                and c.car_date between p_from and p_to
                and c.tco_company_pk = l_tco_company_pk )
 loop
      -- tao moi thong tin thr_work_date_inout
       insert into thr_work_date_inout(pk, thr_emp_pk, emp_id, id_num, thr_ws_pk,  thr_wg_pk, tco_org_pk, tco_company_pk
                , day_type, hol_type, work_dt, del_if, crt_by, crt_dt, ot_yn, start_ot, start_nt
                , shift_time, days_shift, shift_start, shift_end, shift_sunday_yn
                , week_no)
       select thr_work_date_inout_seq.nextval, e.pk, e.emp_id, e.id_num, d.thr_ws_pk, d.thr_wg_pk, e.tco_org_pk, e.tco_company_pk
               , d.day_type, d.hol_type, d.work_dt, 0, p_crt_by, sysdate, nvl(e.ot_yn, 'N'), s.start_ot, s.start_nt
               , s.wt, nvl(s.during_day, 1), s.start_time, s.end_time, s.sunday_yn
               , hr_f_get_weeks(d.work_dt)
       from thr_employee e, thr_wg_sch_detail d, thr_work_shift s
       where e.del_if=0 and d.del_if=0 and s.del_if=0
       and d.thr_ws_pk = s.pk
       and e.pk = d.thr_emp_pk
       and nvl(e.attendance_yn, 'N') = 'Y'
       and d.work_dt = l_cur.work_dt
       and nvl(e.left_dt, '30000101') > l_cur.work_dt
       and e.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
       and d.thr_emp_pk not in (select w.thr_emp_pk 
                                    from thr_work_date_inout w where w.del_if=0
                                    and w.work_dt = d.work_dt
                                    and w.thr_emp_pk = d.thr_emp_pk
                                    and nvl(w.tco_company_pk, l_tco_company_pk) = nvl(e.tco_company_pk, l_tco_company_pk)) 
       and d.thr_emp_pk=nvl(l_thr_emp_pk, d.thr_emp_pk);
                                    
     
   
      -- XAC DINH GIO VAO RA CHO CA 1 NGAY:
      -- ko di tre qua 4 h
      update thr_work_date_inout a
      set (a.time_in, a.date_in) = (select min(t.time) , min(d.work_dt)
--                                    from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    from thr_time_inout t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    where d.del_if=0 and s.del_if=0 and e.del_if=0
                                    and e.pk = d.thr_emp_pk
                                    and d.thr_emp_pk = a.thr_emp_pk
                                    and d.thr_ws_pk = s.pk
                                    and t.work_dt = d.work_dt  
                                    and t.id= e.id_num
                                    and t.work_dt = a.work_dt
                                    and nvl(s.start_time, ' ') <= nvl(s.end_time, ' ')
                                    and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) <= nvl(a.shift_time, 8)/2 
                                    and abs(to_number(substr(t.time,1,2))-to_number(substr(s.start_time,1,2))) <= nvl(a.shift_time, 8) - 1 -- so gio lam viec co the >=1h
                                    and not exists (select 1 from thr_work_date_inout k 
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and nvl(k.time_out, ' ') = nvl(t.time, ' ')
                                                                and k.work_dt = t.work_dt 
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                    )
        , a.remark = 'UPDATE TIME IN SHIFT 1 DAYS BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                            
 -- lam viec it nhat 10 phut thi lay gio ra 
      update thr_work_date_inout a
      set (a.time_out, a.date_out) = (select max(t.time), min(d.work_dt) 
--                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                        from thr_time_inout t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                        and e.pk = d.thr_emp_pk
                        and d.thr_emp_pk = a.thr_emp_pk
                        and d.thr_ws_pk = s.pk
                        and t.work_dt = d.work_dt  
                        and t.id= e.id_num
                        and t.work_dt = a.work_dt
                        and (to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||a.time_in, 'yyyymmddhh24:mi'))*24*60  >= 10     
--                        and abs(to_number(substr(t.time,1,2))-to_number(substr(s.end_time,1,2))) <= nvl(a.shift_time, 8) - 1 -- dao dong 4 h
                        and nvl(t.time, ' ') <> nvl(a.time_in, ' ')
                        )
        , a.remark = 'UPDATE TIME OUT SHIFT 1 DAYS BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);  
 
 -- lay lai gio in 1 lan nua khi da co gio out ma chua co gio in
     update thr_work_date_inout a
      set (a.time_in, a.date_in) = (select min(t.time) , min(d.work_dt)
                                    from thr_time_inout t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    where d.del_if=0 and s.del_if=0 and e.del_if=0
                                    and e.pk = d.thr_emp_pk
                                    and d.thr_emp_pk = a.thr_emp_pk
                                    and d.thr_ws_pk = s.pk
                                    and t.work_dt = d.work_dt  
                                    and t.id= e.id_num
                                    and t.work_dt = a.work_dt
                                    and nvl(s.start_time, ' ') <= nvl(s.end_time, ' ')
--                                    and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) <= nvl(a.shift_time, 8)/2 
                                    and to_number(substr(a.time_out ,1,2))-to_number(substr(t.time,1,2)) >= 1 -- so gio lam viec co the >=1h
                                    and not exists (select 1 from thr_work_date_inout k 
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and nvl(k.time_out, ' ') = nvl(t.time, ' ')
                                                                and k.work_dt = t.work_dt 
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                    )
        , a.remark = 'UPDATE TIME IN SHIFT 1 DAYS BY PROCESS AGAIN '
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is not null
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);                       
      
      
      -- loc gio ra them 1 lan nua
      update thr_work_date_inout a
      set (a.time_out, a.date_out) = (select max(t.time), min(d.work_dt) 
                        from thr_time_inout t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                        and e.pk = d.thr_emp_pk
                        and d.thr_emp_pk = a.thr_emp_pk
                        and d.thr_ws_pk = s.pk
                        and t.work_dt = d.work_dt  
                        and t.id= e.id_num
                        and t.work_dt = a.work_dt
                        and (to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||a.time_in, 'yyyymmddhh24:mi'))*24*60  >= 10
                        and abs(to_number(substr(t.time,1,2))-to_number(substr(s.end_time,1,2))) <= 10-- dao dong  h
                        and nvl(t.time, ' ') <> nvl(a.time_in, ' ')
                        )
        , a.remark = 'UPDATE TIME OUT SHIFT 1 DAYS BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
      
      
      -- XAC DINH GIO VAO RA CHO CA 2 NGAY:
      -- VAO NGAY 1 RA NGAY 2
      update thr_work_date_inout a
      set (a.time_in, a.date_in) = (select min(t.time) , min(d.work_dt)
--                                    from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    from thr_time_inout t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    where d.del_if=0 and s.del_if=0 and e.del_if=0
                                    and e.pk = d.thr_emp_pk
                                    and d.thr_emp_pk = a.thr_emp_pk
                                    and d.thr_ws_pk = s.pk
                                    and t.work_dt = d.work_dt  
                                    and t.id= e.id_num
                                    and t.work_dt = a.work_dt
                                    and nvl(s.start_time, ' ') > nvl(s.end_time, ' ')
                                    and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) <= 6
                                    and not exists (select 1 from thr_work_date_inout k 
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and nvl(k.time_out, ' ') = nvl(t.time, ' ')
                                                                and k.work_dt = t.work_dt 
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                    )       
        , (a.time_out, a.date_out) = (select max(t.time) , min(t.work_dt)
--                                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        from thr_time_inout t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                                        and e.pk = d.thr_emp_pk
                                        and d.thr_emp_pk = a.thr_emp_pk
                                        and d.thr_ws_pk = s.pk
                                        and t.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')+1,'YYYYMMDD')  
                                        and t.id= e.id_num
                                        and t.work_dt = to_char(to_date(a.work_dt,'YYYYMMDD')+1,'YYYYMMDD') 
                                        and nvl(s.start_time, ' ') > nvl(s.end_time, ' ')
                                         and (to_date(to_char(to_date(d.work_dt,'YYYYMMDD')+1,'YYYYMMDD')||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||a.time_in, 'yyyymmddhh24:mi'))*24*60  >= 10
                                        and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') 
                                            - to_date(to_char(to_date(d.work_dt,'YYYYMMDD')+1,'YYYYMMDD')||s.end_time, 'yyyymmddhh24:mi'))*24) <= 6
                                        )
        , a.remark = 'UPDATE TIME IN OUT (IN1OUT2) BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                            
     -- vao ngay 1 ra ngay 1
      update thr_work_date_inout a
      set  (a.time_out, a.date_out) = (select max(t.time) , min(t.work_dt)
--                                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        from thr_time_inout t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                                        and e.pk = d.thr_emp_pk
                                        and d.thr_emp_pk = a.thr_emp_pk
                                        and d.thr_ws_pk = s.pk
                                        and t.work_dt = d.work_dt  
                                        and t.id= e.id_num
                                        and t.work_dt = a.work_dt
                                        and nvl(t.time, ' ') > nvl(s.start_time, ' ')  --phai lon hon gio bat dau ca lam viec
                                        and (to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||a.time_in, 'yyyymmddhh24:mi'))*24*60  >= 10
                                        and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') 
                                            - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) >= 1 -- lon hon 1 tieng so voi bat dau ca moi lay
                                        )
        , a.remark = A.REMARK || ' - UPDATE TIME OUT (IN1OUT1) BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is  null
      and a.time_in is not null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                                 
      
      -- vao ngay 2 ra ngay 2 (da xac dinh dc out time)
      update thr_work_date_inout a
      set  (a.time_in, a.date_in) = (select min(t.time) , min(t.work_dt)
--                                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        from thr_time_inout t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                                        and e.pk = d.thr_emp_pk
                                        and d.thr_emp_pk = a.thr_emp_pk
                                        and d.thr_ws_pk = s.pk
                                        and t.work_dt = d.work_dt
                                        and t.id= e.id_num
                                        and t.work_dt = a.work_dt  
                                        and nvl(t.time, ' ') < nvl(s.start_time, ' ')  --phai nho hon gio bat dau ca lam viec
                                        and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') 
                                            - to_date(a.date_out||a.time_out, 'yyyymmddhh24:mi'))*24) >= 1 -- nho hon 1 tieng so voi time out
--                                        and to_date(a.date_in||a.time_in, 'yyyymmddhh24:mi') > to_date(to_char(to_date(a.work_dt,'YYYYMMDD')-1,'YYYYMMDD')||  
                                        and exists (select 1 from thr_work_date_inout k
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') > to_date(k.date_out||k.time_out, 'yyyymmddhh24:mi')
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                        )
        , a.remark = A.REMARK || ' - UPDATE TIME OUT (IN1OUT1) BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is not null
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);     
   

    /*                               
     -- KO CO GIO IN VA CA NGAY KE TIEP LA CA NGAY
      update thr_work_date_inout a
      set a.time_out = null
        , a.date_out = null 
        , a.remark = A.REMARK || ' - KO CO GIO IN VA CA NGAY KE TIEP LA CA NGAY'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk in(select g.thr_emp_pk from thr_wg_sch_detail g,thr_work_shift s   -- ca cua ngay ke tiep la ca ngay 
                                        where g.del_if=0 and s.del_if=0 and g.thr_ws_pk=s.pk 
                                        and g.work_dt = to_char(to_date(a.work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                        and s.start_time < s.end_time
                                    and g.thr_emp_pk=a.thr_emp_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk); 
     
     */                           
     --gio in hom nay trung  voi gio out hom qua=> lay lai gio in 1 lan nua
      update thr_work_date_inout a
      set  (a.time_in, a.date_in) = (select min(t.time) , min(t.work_dt)
--                                            from thr_time_temp t,thr_employee e 
                                            from thr_time_inout t,thr_employee e 
                                            where e.del_if=0 and e.id_num = t.id 
                                                and t.work_dt= l_cur.work_dt
                                                and t.time> a.time_in
                                                and e.pk= a.thr_emp_pk
                                                and t.work_dt = a.work_dt
                                                and t.time<'12:00')
        , a.remark = 'TRUNG VOI GIO OUT NGAY TRUOC'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and a.time_in is not null
      and a.time_in in(select nvl(t.time_out,' ') from thr_work_date_inout t where t.del_if=0
                        and t.work_dt = to_char(to_date(l_cur.work_dt,'YYYYMMDD')-1,'YYYYMMDD')
                        and t.thr_emp_pk = a.thr_emp_pk)
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);                                          
       
  -- XU LY GIO RA VAO GIUA GIO
  -- XAC DINH TIME OUT 1
   update thr_work_date_inout m
        set m.mid_time_out=hr_get_mid_time(m.date_in,m.time_in,m.date_out,m.time_out,m.id_num, m.thr_ws_pk)
        where m.del_if = 0
        and nvl(m.mod_byhand_yn,'N')<>'Y' 
        and m.time_in is not null
        and m.time_out is not null
        and m.work_dt = l_cur.work_dt
        and m.thr_emp_pk in (select pk from thr_employee e 
                                where  e.del_if=0
                                and e.tco_org_pk in (select     g.pk
                                            from tco_org g
                                            where g.del_if = 0
                                              start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                              connect by prior g.pk = g.p_pk) 
                                and e.pk=m.thr_emp_pk
                                )
        and nvl(m.approve_yn,'N')='N'
        and m.thr_ws_pk in (select s.pk from thr_work_shift s where s.del_if=0
                            and nvl(s.mm_mid , 0) > 0
                            and s.pk = m.thr_ws_pk)
        and m.thr_emp_pk=nvl(l_thr_emp_pk, m.thr_emp_pk);
        
       
        --XAC DINH TEMP IN 1 
        update thr_work_date_inout m
        set m.mid_time_in=hr_get_mid_time((case when m.mid_time_out>m.time_in then m.date_in else to_char(to_date(m.date_in,'YYYYMMDD')+1,'YYYYMMDD') end) 
                                        ,m.mid_time_out,m.date_out,m.time_out,m.id_num, m.thr_ws_pk)
        where m.del_if = 0
        and nvl(m.mod_byhand_yn,'N')<>'Y'
        and m.time_in is not null
        and m.mid_time_out is not null
        and m.time_out is not null
        and m.work_dt = l_cur.work_dt
        and m.thr_emp_pk in (select pk from thr_employee e 
                                where  e.del_if=0
                                and e.tco_org_pk in (select     g.pk
                                            from tco_org g
                                            where g.del_if = 0
                                              start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                              connect by prior g.pk = g.p_pk) 
                                and e.pk=m.thr_emp_pk
                                )
        and nvl(m.approve_yn,'N')='N'
        and m.thr_ws_pk in (select s.pk from thr_work_shift s where s.del_if=0
                            and nvl(s.mm_mid , 0) > 0
                            and s.pk = m.thr_ws_pk)
        and m.thr_emp_pk=nvl(l_thr_emp_pk, m.thr_emp_pk);
    
        UPDATE thr_work_date_inout M
        SET M.MID_WT=HR_GET_TEMP_HOUR_V4(l_tco_company_pk,M.TIME_IN,M.mid_time_out,M.mid_time_in,NULL,NULL,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'WT')
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = l_cur.work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.HOL_TYPE IS NULL --NGAY THUONG
        and m.thr_emp_pk=nvl(l_thr_emp_pk, m.thr_emp_pk);
        
  /*      
        -- XU LY TRUONG HOP MIEN CHAM CONG KHONG CO GIO QUET THE
        update thr_work_date_inout a
        set a.time_in = a.shift_start  --to_char(to_date(a.shift_start , 'hh24:mi')  -  round(dbms_random.value(1,15))/24/60, 'hh24:mi')
            , a.time_out = a.shift_end  --to_char(to_date(a.shift_end , 'hh24:mi')  +  round(dbms_random.value(1,15))/24/60, 'hh24:mi')
            , a.date_in  = a.work_dt
            , a.date_out = decode(nvl(a.days_shift, 1) , 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt)
            , a.auto_manu_yn = 'Y'
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N')<>'Y'
        and a.work_dt = l_cur.work_dt
        and (a.time_in is not null or  a.time_out is not null)
        and a.thr_emp_pk in (select pk from thr_employee e 
                                where  e.del_if=0
                                and e.tco_org_pk in (select     g.pk
                                            from tco_org g
                                            where g.del_if = 0
                                              start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                              connect by prior g.pk = g.p_pk) 
                                and e.pk=a.thr_emp_pk
                                )
        and nvl(a.approve_yn,'N')='N'
        and a.hol_type is null --NGAY THUONG
        and exists (select 1 from thr_att_time_auto e 
                        where e.del_if=0
                        and e.thr_emp_pk = a.thr_emp_pk
                        and a.work_dt between e.start_dt and NVL(e.end_dt, '30000101'))
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
       
    -- XU LY TRUONG HOP MIEN CHAM CONG KHONG CO GIO QUET THE
        update thr_work_date_inout a
        set a.time_in = a.shift_start --to_char(to_date(a.shift_start , 'hh24:mi')  -  round(dbms_random.value(1,15))/24/60, 'hh24:mi')
            , a.time_out =  a.shift_end --to_char(to_date(a.shift_end , 'hh24:mi')  +  round(dbms_random.value(1,15))/24/60, 'hh24:mi')
            , a.date_in  = a.work_dt
            , a.date_out = decode(nvl(a.days_shift, 1) , 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt)
            , a.auto_manu_yn = 'N'
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N')<>'Y'
        and a.work_dt = l_cur.work_dt
        and a.time_in is null
        and a.time_out is null
        and a.thr_emp_pk in (select pk from thr_employee e 
                                where  e.del_if=0
                                and e.tco_org_pk in (select     g.pk
                                            from tco_org g
                                            where g.del_if = 0
                                              start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                              connect by prior g.pk = g.p_pk) 
                                and e.pk=a.thr_emp_pk
                                )
        and nvl(a.approve_yn,'N')='N'
        and a.hol_type is null --NGAY THUONG
        and exists (select 1 from thr_att_time_auto e 
                        where e.del_if=0
                        and e.thr_emp_pk = a.thr_emp_pk
                        and a.work_dt between e.start_dt and NVL(e.end_dt, '30000101'))
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
        
        
        
            
                     
        */ 
     
    -- tinh gio wt, ot, nt
        update thr_work_date_inout a
        set a.wt = hr_sf_get_wt_com(a.date_in||a.time_in,a.date_out||a.time_out,a.thr_ws_pk,a.work_dt, l_tco_company_pk)
           ,a.ot = case when a.ot_yn = 'Y' then hr_sf_get_ot_com(a.start_ot,a.date_out||a.time_out , a.thr_ws_pk, a.work_dt,l_kind_ot,l_tco_company_pk)
                        else 0 end
           ,a.nt = hr_sf_get_nt1_com(a.start_nt,a.date_out||a.time_out, a.thr_ws_pk, a.work_dt, a.date_in||a.time_in, l_tco_company_pk)
           ,a.ont= case when a.ot_yn = 'Y' then hr_sf_get_nt2_com(a.start_nt,a.date_out||a.time_out, a.thr_ws_pk, a.work_dt, a.date_in||a.time_in, l_tco_company_pk)
                        else 0 end
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.time_in is not null
        and a.time_out is not null
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                                  
    -- tinh gio wt rate, ot rate, nt rate
        update thr_work_date_inout a
        set a.wt_rate = case when nvl(a.wt, 0) > 0 then decode(a.hol_type, 'SUN', l_st_rate, 'HOL', l_ht_rate, l_wt_rate) else 0 end
           ,a.ot_rate = case when nvl(a.ot, 0) > 0 then decode(a.hol_type, 'SUN', l_ost_rate, 'HOL', l_oht_rate, l_ot_rate) else 0 end
           ,a.nt_rate = case when nvl(a.nt, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt30_rate) else 0 end
           ,a.ont_rate = case when nvl(a.ont, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt45_rate) else 0 end
           ,a.wd = round(nvl(a.wt, 0)/ nvl(a.shift_time, 8), 2)
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.time_in is not null
        and a.time_out is not null
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
        
     -- cho nhung nguoi trong che do 
        update thr_work_date_inout a 
        set a.wt =nvl((select 
                           decode(max(l.reg_type),'01',
                                    case when hr_sf_get_wt_com(to_char(to_date(a.date_in||a.time_in,'yyyymmdd HH24:MI')-max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date in 
                                         ,a.date_out||a.time_out--date out 
                                         ,a.thr_ws_pk,a.work_dt,l_tco_company_pk)>max(nvl(w.wt,0)+nvl(w.wt_plus,0)) then max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                    else hr_sf_get_wt_com(to_char(to_date(a.date_in||a.time_in,'yyyymmdd HH24:MI')-max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date in 
                                         ,a.date_out||a.time_out--date out 
                                         ,a.thr_ws_pk,a.work_dt,l_tco_company_pk)
                                    end,        
                                   '03',
                                    case when hr_sf_get_wt_com(a.date_in||a.time_in--date in 
                                         ,to_char(to_date(a.date_out||a.time_out,'yyyymmdd HH24:MI')+max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date out 
                                         ,a.thr_ws_pk,a.work_dt,l_tco_company_pk) >max(nvl(w.wt,0)+nvl(w.wt_plus,0)) then max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                    else hr_sf_get_wt_com(a.date_in||a.time_in--date in 
                                         ,to_char(to_date(a.date_out||a.time_out,'yyyymmdd HH24:MI')+max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date out 
                                         ,a.thr_ws_pk,a.work_dt,l_tco_company_pk)
                                    end,
                                    '04', 
                                    case when hr_sf_get_wt_com(a.date_in||a.time_in,a.date_out||a.time_out,a.thr_ws_pk,a.work_dt,l_tco_company_pk)+max(nvl(l.reg_hours,0))>max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                         then max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                    else hr_sf_get_wt_com(a.date_in||a.time_in,a.date_out||a.time_out, a.thr_ws_pk, a.work_dt,l_tco_company_pk)
                                         +max(nvl(l.reg_hours,0))
                                    end,0) as wt                                                                                                     
                            from thr_regulation l, thr_work_shift w
                            where l.del_if=0 and l.thr_emp_pk= a.thr_emp_pk
                            and w.del_if=0
                            and w.pk = a.thr_ws_pk
                            and a.work_dt between l.start_dt and l.end_dt
                            group by l.thr_emp_pk),0)
            , a.remark = 'UPDATE WT WITH REGULATION'
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.time_in is not null
        and a.time_out is not null
        and a.work_dt = l_cur.work_dt
        and a.hol_type is null
        and a.thr_emp_pk in (select d.thr_emp_pk
                                     from thr_regulation d where d.del_if = 0
                                     and d.thr_emp_pk=a.thr_emp_pk
                                     group by d.thr_emp_pk
                                     having max(d.start_dt)<= l_cur.work_dt and max(d.end_dt)>= l_cur.work_dt)
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);  
        
      -- TINH SO PHUT DI TRE VE SOM
        update thr_work_date_inout a
        set (a.lately, a.early)  = (select round(case when a.time_in is not null and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi') 
                                                    then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                    else null end)
                                        ,round(case when a.time_out is not null and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                                        < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
                                                     then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                            - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60
                                                     else null end)
                                    from thr_work_shift s
                                    where s.del_if=0
                                    and s.pk = a.thr_ws_pk)  
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk)
        and a.thr_ws_pk not in (28, 50) ; --SHIFT 3 VA 5;
    
    -- TINH SO PHUT DI TRE VE SOM CHO CA 3 VÀ CA 5
        update thr_work_date_inout a
        set (a.lately, a.early)  = (select round(case when a.time_in is not null and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi') 
                                                           then (case when a.time_in between s.start_meal1 and s.end_meal1 
                                                                     then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                                           - (to_date(a.work_dt || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_meal1, 'yyyymmddhh24:mi'))*24*60
                                                                     when a.time_in > s.end_meal1 
                                                                     then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                                            - (to_date(a.work_dt || s.end_meal1, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_meal1, 'yyyymmddhh24:mi'))*24*60
                                                                     else (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                                     end)
                                                    else null end) as lately
                                        ,round(case when a.time_out is not null and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                                        < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
                                                     then (case when a.time_out between s.start_meal1 and s.end_meal1 
                                                                then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                        - to_date(a.date_out || s.end_meal1 , 'yyyymmddhh24:mi'))*24*60
                                                                when a.time_out < s.start_meal1
                                                                then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                        - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60
                                                                    - (to_date(a.work_dt || s.end_meal1, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_meal1, 'yyyymmddhh24:mi'))*24*60
                                                                else (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                        - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60       
                                                                end)
                                                     else null end) as early
                                    from thr_work_shift s
                                    where s.del_if=0
                                    and s.pk = a.thr_ws_pk)  
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk)
        and a.thr_ws_pk in (28, 50) ; --SHIFT 3 VA 5
  
 
  end loop;
   p_return_flag := 1;
exception
   when others
   then
      raise_application_error (-20999, sqlerrm);
end;
/

DROP PROCEDURE HPDQ.HP_HR_PRO_HRTI02103_1;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_PRO_HRTI02103_1 (
   p_tco_org_pk     varchar2,
   p_from           varchar2,
   p_to             varchar2,
   p_emp_id         varchar2,
   p_crt_by            varchar,
   p_return_flag   out varchar)
IS
   
   l_thr_emp_pk      number;
   
BEGIN
   
  if p_emp_id is not null then
       
      select max(a.pk) into l_thr_emp_pk 
      from thr_employee a
       where a.del_if=0
       and upper(a.emp_id) = upper(p_emp_id);
           
       if l_thr_emp_pk is null then
         p_return_flag:=-1;
         raise_application_error(-20019, 'KHÔNG TÌM THẤY MÃ NHÂN VIÊN NÀY TRONG HỆ THỐNG, VUI LÒNG KIỂM TRA LẠI');
       end if;
  else 
          l_thr_emp_pk := null;
  end if;

  update  thr_work_date_inout a
  set a.del_if = a.pk
  , a.mod_by = p_crt_by
  , a.mod_dt = sysdate
  , a.remark = 'DELETE PROCESS'
  where a.del_if=0
  and a.work_dt between p_from and p_to
  and nvl(a.mod_byhand_yn, 'N') = 'N'
   and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
  and a.thr_emp_pk not in (select b.thr_emp_pk from thr_absence b where b.del_if=0
                            and b.absence_dt = a.work_dt
                            and b.absence_type <> '13'
                            and b.thr_emp_pk = a.thr_emp_pk) 
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);

   update  thr_absence a
  set a.del_if = a.pk
  , a.mod_by = p_crt_by
  , a.mod_dt = sysdate
  , a.remark = 'DELETE PROCESS'
  where a.del_if=0
  and a.absence_dt between p_from and p_to
  and A.ABSENCE_TYPE = '13'
  and a.thr_emp_pk in (select e.pk from thr_employee e where e.del_if=0 
                          and (e.tco_org_pk in  (select  g.pk from tco_org g
                                                                         where g.del_if = 0 
                                                                          start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                                            connect by prior g.pk = g.p_pk)
                                                        or p_tco_org_pk ='ALL') )
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
  
   p_return_flag := 1;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01600_0;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_rpt_hrti01600_0 
(  p_lang       varchar2,
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions    varchar2,
   p_absence_type varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
       open p_rtn_value for
       select to_char(to_date(p_from, 'yyyymmdd'), 'dd/mm/yyyy') from_dt,
              to_char(to_date(p_to, 'yyyymmdd'), 'dd/mm/yyyy') to_dt ,
              o.org_nm,
              a.emp_id,
              e.full_name,
              to_char(to_date(a.work_dt, 'yyyymmdd'), 'dd/mm/yyyy') work_dt,
              a.time_in,
              a.time_out,
              nullif(a.wt, 0),
              nullif(a.ot, 0),
              nullif(a.nt, 0),
              nullif(a.ont, 0),
              (select decode(p_lang, 'ENG', v.code_nm, nvl(v.code_fnm, v.code_nm)) 
                    from vhr_hr_code v where v.id = 'HR0003' and c.absence_type = v.code) as absence_type, 
              nullif(c.absence_time, 0),
              a.lately as lately_minute,
              a.early as early_minute
              , s.description
              , (case 
                     when A.TIME_IN is null and A.TIME_OUT is null then 'Không có giờ vào ra'
                     when A.TIME_IN is null then 'Không có giờ vào'
                     when A.TIME_OUT is null then 'Không có giờ ra'
                     else '' end ) as status_scan
              , a.description
       from thr_work_date a, tco_org o, thr_work_shift s, thr_employee e, thr_absence c
       where a.del_if=0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and c.del_if(+)=0
       and a.thr_emp_pk = c.thr_emp_pk(+)
       and a.work_dt = c.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
       and a.work_dt between p_from and p_to
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and (p_conditions ='ALL'
           or (p_conditions = '1' and a.time_in is null)
           or (p_conditions = '2' and a.time_out is null)
           or (p_conditions = '3' and a.time_in is not null 
                                  and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))
           or (p_conditions = '4' and a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi'))
           or (p_conditions ='5' and exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
             or (p_conditions ='6' and not exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
           or (p_conditions = '7' and exists (select 1 from thr_work_date f, thr_absence k
                                                where f.del_if =0 and k.del_if=0
                                                and f.thr_emp_pk = k.thr_emp_pk
                                                and f.work_dt = k.absence_dt
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = a.work_dt
                                                and nvl(f.wt, 0) > 0 
                                                and nvl(k.absence_time, 0) > 0
                                                ))
           or (p_conditions = '8' and  nvl(a.ot, 0) <> nvl(a.ot_xn, 0))
           or (p_conditions = '9' and  nvl(a.auto_manu_yn , 'N') = 'Y' ) 
           )
       and (p_absence_type = 'ALL'
           or c.absence_type = p_absence_type)
       order by o.seq, a.work_dt, a.emp_id
       ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01600_1;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_rpt_hrti01600_1
(  p_lang       varchar2,
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions    varchar2,
   p_absence_type varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
       open p_rtn_value for
       select to_char(to_date(p_from, 'yyyymmdd'), 'dd/mm/yyyy') from_dt,
              to_char(to_date(p_to, 'yyyymmdd'), 'dd/mm/yyyy') to_dt ,
              a.emp_id,
              e.full_name,
              o.org_nm,
              S.DESCRIPTION  ,
              a.time_in,
              case when a.time_in is not null 
                        and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi')
                        then 'Đi muộn'
                   when a.time_in is null then 'Không chấm công' 
                   when nvl(a.auto_manu_yn, 'N') = 'Y' then 'Có giờ tự động và giờ chấm'
                   when a.time_in is not null and w.absence_type is not null then 'Đã cập nhật vắng'
                   else '' end as dimuon,
              case when (to_date(a.shift_start , 'hh24:mi') - to_date(a.time_in , 'hh24:mi')) *24*60 >=30 
                    then round((to_date(a.shift_start , 'hh24:mi') - to_date(a.time_in , 'hh24:mi')) *24, 2)
                   else null end as tangcasang,
              a.time_out,
              case when a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
                        then 'Về sớm'
                   when a.time_out is null then 'Không chấm công' 
                   when nvl(a.auto_manu_yn, 'N') = 'Y' then 'Có giờ tự động và giờ chấm'
                   when a.time_out is not null and w.absence_type is not null then 'Đã cập nhật vắng'
                   else '' end as vesom,
              case when (to_date(a.time_out , 'hh24:mi') - to_date(a.shift_end , 'hh24:mi')) *24*60 >=30 
                    then round((to_date(a.time_out , 'hh24:mi') - to_date(a.shift_end , 'hh24:mi')) *24, 2)  
                   else null end  as tangcachieu,  
              null as ykienxacnhan
       from thr_work_date a, tco_org o, thr_work_shift s, thr_employee e, thr_absence w
       where a.del_if=0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and w.del_if(+)=0
       and a.thr_emp_pk = w.thr_emp_pk(+)
       and a.work_dt = w.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
       and a.work_dt = p_from
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') -1,'YYYYMMDD')
       and a.reason_type is null
       and ((a.hol_type is null  and (nvl(a.lately, 0) > 0 
                                    or nvl(a.early, 0) > 0
                                    or a.time_out is null or a.time_in is null ))
            or (a.hol_type is not null and nvl(a.shift_sunday_yn, 'N') = 'N' 
                                       and (nvl(a.lately, 0) > 0 
                                            or nvl(a.early, 0) > 0
                                            or a.time_out is null 
                                            or a.time_in is null )   
                                       and (a.thr_emp_pk, a.work_dt) in (select r.thr_emp_pk, r.work_dt from thr_daily_ot_reg r
                                                                        where r.del_if=0
                                                                            and r.work_dt = a.work_dt
                                                                            and r.thr_emp_pk = a.thr_emp_pk
                                                                            ))
           or (a.hol_type is not null and nvl(a.shift_sunday_yn, 'N') = 'Y' 
                                       and (nvl(a.lately, 0) > 0 
                                            or nvl(a.early, 0) > 0
                                            or a.time_out is null 
                                            or a.time_in is null )) 
           or (a.hol_type is not null  and ((nvl(a.lately, 0) > 0 and a.time_in is not null)
                                                or (nvl(a.early, 0) > 0) and a.time_out is not null)
                                                or (a.time_in is not null and a.time_out is null)
                                                or (a.time_out is not null and a.time_in is null))
           or  nvl(a.auto_manu_yn , 'N') = 'Y'     
           or (to_date(a.shift_start , 'hh24:mi') - to_date(a.time_in , 'hh24:mi')) *24*60 >=30 
           or (to_date(a.time_out , 'hh24:mi') - to_date(a.shift_end , 'hh24:mi')) *24*60 >=30
           or (a.time_in is not null and a.time_out is not null and nvl(w.absence_time, 0)> 0)
         ) 
      and not exists (select 1 from thr_absence s
                where s.del_if=0
                and s.thr_emp_pk = a.thr_emp_pk 
                and s.absence_dt = a.work_dt
                and a.time_in is null
                and a.time_out is null
                )
    and not exists (select 1 from thr_att_time_auto r
                            where r.del_if=0
                                and a.work_dt between  r.start_dt and nvl(r.end_dt, '30000101')
                                and r.thr_emp_pk = a.thr_emp_pk
                                )
--        and not exists ( select 1 from thr_work_date w, thr_work_shift s
--                            where w.del_if=0 and s.del_if=0
--                            and w.thr_ws_pk = s.pk
--                            and w.hol_type is not null
--                            and nvl(s.sunday_yn, 'N') = 'N'
--                            and w.thr_emp_pk = a.thr_emp_pk
--                            and w.work_dt = a.work_dt)                               
--      or exists ( select 1 from thr_work_date w
--                    where w.del_if=0
--                    and w.thr_emp_pk = a.thr_emp_pk
--                    and w.work_dt = a.work_dt
--                    and ((to_date(w.shift_start , 'hh24:mi') - to_date(w.time_in , 'hh24:mi')) *24*60 <=30       
--                            or (to_date(w.time_out , 'hh24:mi') - to_date(w.shift_end , 'hh24:mi')) *24*60 >=30)   
--                 )             
                                                  
--       and (nvl(round(case when a.time_in is not null and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi') 
--                        then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
--                   else null end), 0) > 0
--           or nvl(round(case when a.time_out is not null and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
--                             < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
--                        then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
--                                - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60
--                   else null end), 0) > 0
--           or a.time_out is null or a.time_in is null         
--         )
       order by o.seq, a.work_dt, a.emp_id
       ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01600_2;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_rpt_hrti01600_2
(  p_user       varchar2,
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions    varchar2,
   p_absence_type varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    l_from_dt varchar2(8);
    l_to_dt varchar2(8);
begin
       
        l_from_dt := substr(p_from, 1, 6)||'01';
        l_to_dt := to_char(last_day(to_date(l_from_dt, 'yyyymmdd')), 'yyyymmdd');
        
        delete thr_rpt_lately_early a
        where a.crt_by = p_user;
        
        insert into thr_rpt_lately_early(PK,thr_emp_pk, work_mon, lately_d1, early_d1, lately_d2, early_d2, lately_d3, early_d3, lately_d4, early_d4, lately_d5
        , early_d5, lately_d6, early_d6, lately_d7, early_d7, lately_d8, early_d8, lately_d9, early_d9, lately_d10, early_d10
        , lately_d11, early_d11, lately_d12, early_d12, lately_d13, early_d13, lately_d14, early_d14, lately_d15, early_d15, lately_d16
        , early_d16, lately_d17, early_d17, lately_d18, early_d18, lately_d19, early_d19, lately_d20, early_d20, lately_d21, early_d21
        , lately_d22, early_d22, lately_d23, early_d23, lately_d24, early_d24, lately_d25, early_d25, lately_d26, early_d26, lately_d27
        , early_d27, lately_d28, early_d28, lately_d29, early_d29, lately_d30, early_d30, lately_d31, early_d31, total_lately, total_early
        , total_forget_att, lately_up_10, lately_in_10, early_up_5, early_in_5
        , crt_by)
        select thr_rpt_lately_early_SEQ.NEXTVAL
         , thr_emp_pk, work_mon, lately_d1, early_d1, lately_d2, early_d2, lately_d3, early_d3, lately_d4, early_d4, lately_d5
        , early_d5, lately_d6, early_d6, lately_d7, early_d7, lately_d8, early_d8, lately_d9, early_d9, lately_d10, early_d10
        , lately_d11, early_d11, lately_d12, early_d12, lately_d13, early_d13, lately_d14, early_d14, lately_d15, early_d15, lately_d16
        , early_d16, lately_d17, early_d17, lately_d18, early_d18, lately_d19, early_d19, lately_d20, early_d20, lately_d21, early_d21
        , lately_d22, early_d22, lately_d23, early_d23, lately_d24, early_d24, lately_d25, early_d25, lately_d26, early_d26, lately_d27
        , early_d27, lately_d28, early_d28, lately_d29, early_d29, lately_d30, early_d30, lately_d31, early_d31, total_lately, total_early
        , total_forget_att, lately_up_10, lately_in_10, early_up_5, early_in_5,p_user
        from 
        (select a.thr_emp_pk, substr(p_from, 1, 6) work_mon
            ,sum(case when a.work_dt = l_from_dt then nvl(a.lately, 0) else 0 end) as lately_d1
            ,sum(case when a.work_dt = l_from_dt then nvl(a.early, 0) else 0 end) as early_d1
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 1, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d2
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 1, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d2
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 2, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d3
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 2, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d3
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 3, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d4
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 3, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d4
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 4, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d5
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 4, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d5
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 5, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d6
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 5, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d6
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 6, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d7
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 6, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d7
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 7, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d8
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 7, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d8
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 8, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d9
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 8, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d9
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 9, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d10
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 9, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d10
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 10, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d11
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 10, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d11
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 11, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d12
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 11, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d12
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 12, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d13
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 12, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d13
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 13, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d14
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 13, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d14
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 14, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d15
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 14, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d15
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 15, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d16
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 15, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d16
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 16, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d17
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 16, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d17
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 17, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d18
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 17, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d18
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 18, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d19
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 18, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d19
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 19, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d20
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 19, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d20
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 20, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d21
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 20, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d21
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 21, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d22
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 21, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d22
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 22, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d23
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 22, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d23
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 23, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d24
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 23, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d24
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 24, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d25
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 24, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d25
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 25, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d26
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 25, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d26
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 26, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d27
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 26, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d27
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 27, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d28
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 27, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d28
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 28, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d29
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 28, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d29
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 29, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d30
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 29, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d30
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 30, 'yyyymmdd') then nvl(a.lately, 0) else 0 end) as lately_d31
            ,sum(case when a.work_dt = to_char(to_date(l_from_dt, 'yyyymmdd') + 30, 'yyyymmdd') then nvl(a.early, 0) else 0 end)  as early_d31
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.lately, 0) > 0 then 1 else 0 end) as total_lately
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.early, 0) > 0 then 1 else 0 end) as total_early
            ,sum(case when a.work_dt between p_from and p_to and nvl(A.REASON_TYPE , 0) = 5 then 1 else 0 end) as total_forget_att
--            ,  null lately_up_10
--            ,  null lately_in_10
--            ,  null early_up_5
--            ,  null early_in_5
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.lately, 0) > 10 then 1 else 0 end) as lately_up_10
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.lately, 0) > 0 and nvl(a.lately, 0) < 11  then 1 else 0 end) as lately_in_10
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.early, 0) > 5 then 1 else 0 end) as early_up_5
            ,sum(case when a.work_dt between p_from and p_to and nvl(a.early, 0) > 0 and nvl(a.early, 0) < 6 then 1 else 0 end) as early_in_5
            from thr_work_date a, thr_employee e
            where a.del_if=0 and e.del_if=0
            and a.thr_emp_pk = e.pk
            and a.work_dt between l_from_dt and l_to_dt
            and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
            and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
           and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
            group by a.thr_emp_pk) t;
        
        
       open p_rtn_value for
       select 
            to_char(to_date(p_from, 'yyyymmdd'), 'mm/yyyy') mon_dt,
              to_char(to_date(p_to, 'yyyymmdd'), 'dd/mm/yyyy') to_dt ,
              e.emp_id,
              e.full_name,
              (select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = e.pos_type),
              nullif(t.lately_d1, 0),
              nullif(t.early_d1, 0),
              nullif(t.lately_d2, 0),
              nullif(t.early_d2, 0),
              nullif(t.lately_d3, 0),
              nullif(t.early_d3, 0),
              nullif(t.lately_d4, 0),
              nullif(t.early_d4, 0),
              nullif(t.lately_d5, 0),
              nullif(t.early_d5, 0),
              nullif(t.lately_d6, 0),
              nullif(t.early_d6, 0),
              nullif(t.lately_d7, 0),
              nullif(t.early_d7, 0),
              nullif(t.lately_d8, 0),
              nullif(t.early_d8, 0),
              nullif(t.lately_d9, 0),
              nullif(t.early_d9, 0),
              nullif(t.lately_d10, 0),
              nullif(t.early_d10, 0),
              nullif(t.lately_d11, 0),
              nullif(t.early_d11, 0),
              nullif(t.lately_d12, 0),
              nullif(t.early_d12, 0),
              nullif(t.lately_d13, 0),
              nullif(t.early_d13, 0),
              nullif(t.lately_d14, 0),
              nullif(t.early_d14, 0),
              nullif(t.lately_d15, 0),
              nullif(t.early_d15, 0),
              nullif(t.lately_d16, 0),
              nullif(t.early_d16, 0),
              nullif(t.lately_d17, 0),
              nullif(t.early_d17, 0),
              nullif(t.lately_d18, 0),
              nullif(t.early_d18, 0),
              nullif(t.lately_d19, 0),
              nullif(t.early_d19, 0),
              nullif(t.lately_d20, 0),
              nullif(t.early_d20, 0),
              nullif(t.lately_d21, 0),
              nullif(t.early_d21, 0),
              nullif(t.lately_d22, 0),
              nullif(t.early_d22, 0),
              nullif(t.lately_d23, 0),
              nullif(t.early_d23, 0),
              nullif(t.lately_d24, 0),
              nullif(t.early_d24, 0),
              nullif(t.lately_d25, 0),
              nullif(t.early_d25, 0),
              nullif(t.lately_d26, 0),
              nullif(t.early_d26, 0),
              nullif(t.lately_d27, 0),
              nullif(t.early_d27, 0),
              nullif(t.lately_d28, 0),
              nullif(t.early_d28, 0),
              nullif(t.lately_d29, 0),
              nullif(t.early_d29, 0),
              nullif(t.lately_d30, 0),
              nullif(t.early_d30, 0),
              nullif(t.lately_d31, 0),
              nullif(t.early_d31, 0),
              t.total_lately,
              t.lately_up_10,
              t.lately_in_10,
              t.total_early,
              t.early_up_5,
              t.early_in_5,
              t.total_forget_att
       from thr_employee e, thr_rpt_lately_early t
       where e.del_if=0
       and e.pk = t.thr_emp_pk
       and (nvl(t.total_lately, 0) > 0
            or nvl(t.total_early, 0) > 0 
            or nvl(t.total_forget_att, 0) > 0)
       and t.crt_by = p_user ;

   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01600_4;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_rpt_hrti01600_4
(  p_user       varchar2,
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions    varchar2,
   p_absence_type varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    l_from_dt varchar2(8);
    l_to_dt varchar2(8);
begin
       
       open p_rtn_value for
       select to_char(to_date(p_from, 'yyyymmdd'), 'dd/mm/yyyy')
            , to_char(to_date(p_to, 'yyyymmdd'), 'dd/mm/yyyy')
            , e.emp_id
            , e.full_name
            , o.org_nm
            , (select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = e.pos_type)
            , w.workgroup_nm
            , count(*) as numbergroup
            from ( select a.thr_emp_pk, a.thr_wg_pk
                    from thr_wg_sch_detail a
                    where a.del_if=0 
                    and a.work_dt between p_from and p_to
                    group by a.thr_emp_pk, a.thr_wg_pk ) t
               , thr_employee e, tco_org o, thr_work_group w
            where e.del_if=0 and o.del_if=0 and w.del_if=0
            and w.pk = e.thr_wg_pk
            and e.tco_org_pk = o.pk
            and e.pk = t.thr_emp_pk
            and (p_employee is null 
                         or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                         or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                         or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
            and e.tco_org_pk in (
                                      select     g.pk
                                            from tco_org g
                                           where g.del_if = 0
                                      start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                      connect by prior g.pk = g.p_pk)
            group by t.thr_emp_pk, e.emp_id, e.full_name, e.pos_type, o.org_nm, w.workgroup_nm
            having count(*) > 1;
        

   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01600_5;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_rpt_hrti01600_5
(  p_user       varchar2,
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions    varchar2,
   p_absence_type varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
    l_times_abs     number;
    l_resign_num    number;
    l_work_dt_2     varchar2(8);
    l_work_dt_3     varchar2(8);
    l_check_wd      number;
    l_from          varchar2(8);
BEGIN
       
    l_from := to_char(to_date(p_to, 'yyyymmdd'), 'yyyymm')||'01';
    
    select max(decode(nvl(a.num_4,0),0,-1,0))
    into l_resign_num 
    from vhr_hr_code a
    where a.id='HR0006' 
    and a.code='11' 
    and  nvl(tco_company_pk,99)= 99;
       
       delete thr_hp_rpt_absence a
       where a.crt_by = p_user;
        
       for l_cur in (select a.thr_emp_pk, a.work_dt 
                       from thr_work_date a, thr_employee e
                        where a.del_if=0 and e.del_if=0
                        and a.thr_emp_pk = e.pk
                        and a.work_dt between l_from and p_to
                        and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                        and a.reason_type is null
                        and a.hol_type is null
                        and A.TIME_IN is null 
                        and a.time_out is null
                        order by a.work_dt asc)
            loop 
            
                    select min(a.work_dt) into l_work_dt_2
                    from thr_work_date a
                    where a.del_if=0
                    and a.work_dt > l_cur.work_dt
                    and a.work_dt between l_from and p_to
                    and a.thr_emp_pk = l_cur.thr_emp_pk;
                    
                    
                    select min(a.work_dt) into l_work_dt_3
                    from thr_work_date a
                    where a.del_if=0
                    and a.work_dt > l_work_dt_2
                    and a.work_dt between l_from and p_to
                    and a.thr_emp_pk = l_cur.thr_emp_pk;
                    
                    select count(b.thr_emp_pk) times_abs
                    into l_times_abs
                    from thr_work_date b, thr_employee e
                    where b.del_if=0 and e.del_if=0
                    and b.thr_emp_pk = e.pk
                    and b.thr_emp_pk = l_cur.thr_emp_pk
                    and b.work_dt > l_cur.work_dt
                    and b.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                    and b.work_dt between l_work_dt_2 and l_work_dt_3
                    and B.work_dt between l_from and p_to
                    and b.reason_type is null
                    and b.hol_type is null                    
                    and b.TIME_IN is null 
                    and b.time_out is null;
                    

                    
                    if nvl(l_times_abs, 0) = 2  then
                    
                        insert into thr_hp_rpt_absence(pk, thr_emp_pk, work_dt, crt_by, crt_dt, del_if)
                        select thr_hp_rpt_absence_seq.nextval, l_cur.thr_emp_pk, l_cur.work_dt, p_user, sysdate, 0
                        from dual
                        where not exists (select 1 from thr_hp_rpt_absence s
                                            where s.del_if=0
                                            and s.thr_emp_pk = l_cur.thr_emp_pk
                                            and s.crt_by = p_user )
                        ;
                    
                    end if;
                    
                  select max(a.thr_emp_pk) into l_check_wd
                    from thr_work_date a, thr_employee e
                    where a.del_if=0 and e.del_if=0
                    and a.thr_emp_pk = e.pk
                    and a.work_dt between l_cur.work_dt and p_to
                    and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                    and (a.time_in is not null or a.time_out is not null)
                    and a.thr_emp_pk = l_cur.thr_emp_pk;
                    
                    if l_check_wd is not null then
                    
                        delete thr_hp_rpt_absence a
                        where a.del_if=0
                        and a.crt_by = p_user
                        and a.thr_emp_pk = l_cur.thr_emp_pk;
                    
                    end if;
                    
            end loop;

       open p_rtn_value for
       select to_char(to_date(l_from, 'yyyymmdd'), 'dd/mm/yyyy')
            , to_char(to_date(p_to, 'yyyymmdd'), 'dd/mm/yyyy')
            , e.emp_id
            , e.full_name
            , o.org_nm
            , (select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = e.pos_type)
            , to_char(to_date(t.work_dt, 'yyyymmdd'), 'dd/mm/yyyy')
            from thr_hp_rpt_absence t, thr_employee e, tco_org o
            where e.del_if=0 and o.del_if=0 and t.del_if=0
            and t.thr_emp_pk = e.pk
            and e.tco_org_pk = o.pk
             and (p_employee is null 
                         or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                         or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                         or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
            and e.tco_org_pk in (
                                      select     g.pk
                                            from tco_org g
                                           where g.del_if = 0
                                      start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                      connect by prior g.pk = g.p_pk)
            and t.crt_by = p_user;
            
        

   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01600_6;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_rpt_hrti01600_6
(  p_lang       varchar2,
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions    varchar2,
   p_absence_type varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
       open p_rtn_value for
       select to_char(to_date(p_from, 'yyyymmdd'), 'dd/mm/yyyy') from_dt,
              to_char(to_date(p_to, 'yyyymmdd'), 'dd/mm/yyyy') to_dt ,
              a.emp_id,
              e.full_name,
              o.org_nm,
              S.DESCRIPTION  ,
              a.time_in,
              case when a.time_in is not null 
                        and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi')
                        then 'Đi muộn'
--                   when a.time_in is null then 'Không chấm công' 
                   when a.time_in is null then '' 
                   when nvl(a.auto_manu_yn, 'N') = 'Y' then 'Có giờ tự động và giờ chấm'
                   when a.time_in is not null and w.absence_type is not null then 'Đã cập nhật vắng'
                   else '' end as dimuon,
              hr_sf_get_round_time( A.LATELY, 'IN'),
              a.time_out,
            
              case when a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
                        then 'Về sớm'
                   when a.time_out is null then '' 
                   when nvl(a.auto_manu_yn, 'N') = 'Y' then 'Có giờ tự động và giờ chấm'
                   when a.time_out is not null and w.absence_type is not null then 'Đã cập nhật vắng'
                   else '' end as vesom,
               hr_sf_get_round_time( A.EARLY, 'OUT')
--              case when (to_date(a.time_out , 'hh24:mi') - to_date(a.shift_end , 'hh24:mi')) *24*60 >=30 
--                    then round((to_date(a.time_out , 'hh24:mi') - to_date(a.shift_end , 'hh24:mi')) *24, 2)  
--                   else null end  as tangcachieu,  
--                null as ykienxacnhan,
--              case when (to_date(a.shift_start , 'hh24:mi') - to_date(a.time_in , 'hh24:mi')) *24*60 >=30 
--                   then round((to_date(a.shift_start , 'hh24:mi') - to_date(a.time_in , 'hh24:mi')) *24, 2)
--                  else null end as tangcasang
  
       from thr_work_date a, tco_org o, thr_work_shift s, thr_employee e, thr_absence w
       where a.del_if=0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and w.del_if(+)=0
       and a.thr_emp_pk = w.thr_emp_pk(+)
       and a.work_dt = w.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
       and a.work_dt = p_from
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') -1,'YYYYMMDD')
       and a.reason_type is null
       and ((a.hol_type is null  and (nvl(a.lately, 0) > 0 
                                    or nvl(a.early, 0) > 0
                                    or a.time_out is null or a.time_in is null ))
            or (a.hol_type is not null and nvl(a.shift_sunday_yn, 'N') = 'N' 
                                       and (nvl(a.lately, 0) > 0 
                                            or nvl(a.early, 0) > 0
                                            or a.time_out is null 
                                            or a.time_in is null )   
                                       and (a.thr_emp_pk, a.work_dt) in (select r.thr_emp_pk, r.work_dt from thr_daily_ot_reg r
                                                                        where r.del_if=0
                                                                            and r.work_dt = a.work_dt
                                                                            and r.thr_emp_pk = a.thr_emp_pk
                                                                            ))
           or (a.hol_type is not null and nvl(a.shift_sunday_yn, 'N') = 'Y' 
                                       and (nvl(a.lately, 0) > 0 
                                            or nvl(a.early, 0) > 0
                                            or a.time_out is null 
                                            or a.time_in is null )) 
           or (a.hol_type is not null  and ((nvl(a.lately, 0) > 0 and a.time_in is not null)
                                                or (nvl(a.early, 0) > 0) and a.time_out is not null)
                                                or (a.time_in is not null and a.time_out is null)
                                                or (a.time_out is not null and a.time_in is null))
           or  nvl(a.auto_manu_yn , 'N') = 'Y'     
           or (to_date(a.shift_start , 'hh24:mi') - to_date(a.time_in , 'hh24:mi')) *24*60 >=30 
           or (to_date(a.time_out , 'hh24:mi') - to_date(a.shift_end , 'hh24:mi')) *24*60 >=30
           or (a.time_in is not null and a.time_out is not null and nvl(w.absence_time, 0)> 0)
         ) 
      and not exists (select 1 from thr_absence s
                where s.del_if=0
                and s.thr_emp_pk = a.thr_emp_pk 
                and s.absence_dt = a.work_dt
                and a.time_in is null
                and a.time_out is null
                )
    and not exists (select 1 from thr_att_time_auto r
                            where r.del_if=0
                                and a.work_dt between  r.start_dt and nvl(r.end_dt, '30000101')
                                and r.thr_emp_pk = a.thr_emp_pk
                                )
    and ((a.time_in is not null 
                        and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))
       or (a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')))
         
       order by o.seq, a.work_dt, a.emp_id
       ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01600_7;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_rpt_hrti01600_7
(  p_lang       varchar2,
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions    varchar2,
   p_absence_type varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
       open p_rtn_value for
         select 
              to_char(to_date(p_from, 'yyyymmdd'), 'dd/mm/yyyy') from_dt,
              to_char(to_date(p_to, 'yyyymmdd'), 'dd/mm/yyyy') to_dt ,
              a.emp_id,
              e.full_name,
              o.org_nm,
              S.DESCRIPTION  ,
              case when a.time_in is not null 
                        and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi')
--                        then 'Đi muộn'
                          then ''
                   when a.time_in is null then 'x' 
                   when nvl(a.auto_manu_yn, 'N') = 'Y' then 'Có giờ tự động và giờ chấm'
                   else '' end as dimuon,
              case when a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
--                        then 'Về sớm'
                             then ''
                   when a.time_out is null then 'x' 
                   when nvl(a.auto_manu_yn, 'N') = 'Y' then 'Có giờ tự động và giờ chấm'
                   else '' end as vesom
        from thr_work_date a, tco_org o, thr_work_shift s, thr_employee e, thr_absence w
       where a.del_if=0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and w.del_if(+)=0
       and a.thr_emp_pk = w.thr_emp_pk(+)
       and a.work_dt = w.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
       and a.work_dt = p_from
       and(a.time_in is null or a.time_out is null)
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') -1,'YYYYMMDD')
       and a.reason_type is null
       and ((a.hol_type is null  and (nvl(a.lately, 0) > 0 
                                    or nvl(a.early, 0) > 0
                                    or a.time_out is null or a.time_in is null ))
            or (a.hol_type is not null and nvl(a.shift_sunday_yn, 'N') = 'N' 
                                       and (nvl(a.lately, 0) > 0 
                                            or nvl(a.early, 0) > 0
                                            or a.time_out is null 
                                            or a.time_in is null )   
                                       and (a.thr_emp_pk, a.work_dt) in (select r.thr_emp_pk, r.work_dt from thr_daily_ot_reg r
                                                                        where r.del_if=0
                                                                            and r.work_dt = a.work_dt
                                                                            and r.thr_emp_pk = a.thr_emp_pk
                                                                            ))
           or (a.hol_type is not null and nvl(a.shift_sunday_yn, 'N') = 'Y' 
                                       and (nvl(a.lately, 0) > 0 
                                            or nvl(a.early, 0) > 0
                                            or a.time_out is null 
                                            or a.time_in is null )) 
           or (a.hol_type is not null  and ((nvl(a.lately, 0) > 0 and a.time_in is not null)
                                                or (nvl(a.early, 0) > 0) and a.time_out is not null)
                                                or (a.time_in is not null and a.time_out is null)
                                                or (a.time_out is not null and a.time_in is null))
           or  nvl(a.auto_manu_yn , 'N') = 'Y'     
           or (to_date(a.shift_start , 'hh24:mi') - to_date(a.time_in , 'hh24:mi')) *24*60 >=30 
           or (to_date(a.time_out , 'hh24:mi') - to_date(a.shift_end , 'hh24:mi')) *24*60 >=30
           or (a.time_in is not null and a.time_out is not null and nvl(w.absence_time, 0)> 0)
         ) 
      and not exists (select 1 from thr_absence s
                where s.del_if=0
                and s.thr_emp_pk = a.thr_emp_pk 
                and s.absence_dt = a.work_dt
                and a.time_in is null
                and a.time_out is null
                )
    and not exists (select 1 from thr_att_time_auto r
                            where r.del_if=0
                                and a.work_dt between  r.start_dt and nvl(r.end_dt, '30000101')
                                and r.thr_emp_pk = a.thr_emp_pk
                                )
--       and rownum <= 10

--    and not exists (select 1 from thr_att_time_auto r
--                            where r.del_if=0
--                                and a.work_dt between  r.start_dt and nvl(r.end_dt, '30000101')
--                                and r.thr_emp_pk = a.thr_emp_pk
--                                )

--///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
--        and not exists ( select 1 from thr_work_date w, thr_work_shift s
--                            where w.del_if=0 and s.del_if=0
--                            and w.thr_ws_pk = s.pk
--                            and w.hol_type is not null
--                            and nvl(s.sunday_yn, 'N') = 'N'
--                            and w.thr_emp_pk = a.thr_emp_pk
--                            and w.work_dt = a.work_dt)                               
--      or exists ( select 1 from thr_work_date w
--                    where w.del_if=0
--                    and w.thr_emp_pk = a.thr_emp_pk
--                    and w.work_dt = a.work_dt
--                    and ((to_date(w.shift_start , 'hh24:mi') - to_date(w.time_in , 'hh24:mi')) *24*60 <=30       
--                            or (to_date(w.time_out , 'hh24:mi') - to_date(w.shift_end , 'hh24:mi')) *24*60 >=30)   
--                 )             
                                                  
--       and (nvl(round(case when a.time_in is not null and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi') 
--                        then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
--                   else null end), 0) > 0
--           or nvl(round(case when a.time_out is not null and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
--                             < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
--                        then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
--                                - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60
--                   else null end), 0) > 0
--           or a.time_out is null or a.time_in is null         
--         )
       order by o.seq, a.work_dt, a.emp_id
       ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01700_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_RPT_HRTI01700_0 
(
   p_employee   varchar2,
   p_month      varchar2,
   p_tco_org_pk varchar2,
   p_nation     varchar2,
   p_sal_period varchar2,
   p_status     varchar2,
   p_rtn_value    out   sys_refcursor
) IS
 
    
BEGIN
       
       open p_rtn_value for
       select 0,
              o.org_nm,
              a.emp_id,
              e.full_name,
              (select initcap(v.code_nm) from vhr_hr_code v where v.id='HR0008' and v.code = a.pos_type ),
              nullif(a.wt1,'0'), -- col5
              nullif(a.wt2,'0'),
              nullif(a.wt3,'0'),
              nullif(a.wt4,'0'),
              nullif(a.wt5,'0'),
              nullif(a.wt6,'0'), -- col10
              nullif(a.wt7,'0'),
              nullif(a.wt8,'0'),
              nullif(a.wt9,'0'),
              nullif(a.wt10,'0'),
              nullif(a.wt11,'0'),
              nullif(a.wt12,'0'),
              nullif(a.wt13,'0'),
              nullif(a.wt14,'0'),
              nullif(a.wt15,'0'),
              nullif(a.wt16,'0'),  -- col20
              nullif(a.wt17,'0'),
              nullif(a.wt18,'0'),
              nullif(a.wt19,'0'),
              nullif(a.wt20,'0'),
              nullif(a.wt21,'0'),
              nullif(a.wt22,'0'),
              nullif(a.wt23,'0'),
              nullif(a.wt24,'0'),
              nullif(a.wt25,'0'),
              nullif(a.wt26,'0'),  -- coll30
              nullif(a.wt27,'0'),
              nullif(a.wt28,'0'),
              nullif(a.wt29,'0'),
              nullif(a.wt30,'0'),
              nullif(a.wt31,'0'),  -- col35
              nullif(a.tongcong, 0),
              nullif(a.THEMGIOTHUONG, 0),
              nullif(a.THEMGIOCHUNHAT, 0),
              nullif(a.THEMGIOLE, 0)   
       from thr_work_month a, tco_org o, thr_employee e
       where a.del_if=0 and o.del_if=0 and e.del_if=0
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.work_mon = p_month
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_nation,'ALL','ALL',e.nation )= p_nation
       and decode(p_status,'ALL','ALL',e.status )= p_status
       and a.sal_period  = p_sal_period
--       and rownum < 1500
       order by  o.seq  , a.emp_id
       ;
        
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01700_1;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_rpt_hrti01700_1 
(
   p_employee   varchar2,
   p_month      varchar2,
   p_tco_org_pk varchar2,
   p_nation     varchar2,
   p_sal_period varchar2,
   p_status     varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
       open p_rtn_value for
       select 0, 1
              , a.emp_id
              , e.full_name
              , o.org_nm
              , a.nghi_phep
              , a.nghi_viecrieng
              , nvl(a.didaotao, 0)
              , nvl(a.nvqs, 0)
              , nvl(a.vosinh, 0)
              , nvl(a.tong_n, 0) 
              , nvl(a.nghi_khongphep, 0)
              , nvl(a.nghi_tnld, 0)
              , nvl(a.nghiom_cogiay_bv, 0)
              , nvl(a.nghi_khamthai, 0)
              , nvl(a.nghi_thaisan, 0)
              , nvl(a.nghi_hieuhi_conom, 0)
              , nvl(a.tong_nghi, 0)
              , a.description
              , null
              , null
       from thr_absence_month a, tco_org o, thr_employee e
       where a.del_if=0 and o.del_if=0 and e.del_if=0
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.work_mon = p_month
       and nvl(a.tong_nghi, 0) >=3
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_nation,'ALL','ALL',e.nation )= p_nation
       and decode(p_status,'ALL','ALL',e.status )= p_status
       order by  o.seq  , a.emp_id
       ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01700_2;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_RPT_HRTI01700_2
(
   p_employee   varchar2,
   p_year      varchar2,
   p_tco_org_pk varchar2,
   p_nation     varchar2,
   p_sal_period varchar2,
   p_status     varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
       open p_rtn_value for
       select 0, 1
              , a.emp_id
              , e.full_name
              , (select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = e.pos_type)
              , o.org_nm
              , case when a.work_mon = p_year||'01' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_01
              , case when a.work_mon = p_year||'01' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_01
              , case when a.work_mon = p_year||'01' then nvl(a.didaotao, 0) else 0 end          as didaotao_01
              , case when a.work_mon = p_year||'01' then nvl(a.nvqs, 0) else 0 end              as nvqs_01
              , case when a.work_mon = p_year||'01' then nvl(a.vosinh, 0) else 0 end            as vosinh_01
              , case when a.work_mon = p_year||'01' then nvl(a.tong_n, 0) else 0 end            as tong_n_01
              , case when a.work_mon = p_year||'01' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_01
              , case when a.work_mon = p_year||'01' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_01
              , case when a.work_mon = p_year||'01' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_01
              , case when a.work_mon = p_year||'01' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_01
              , case when a.work_mon = p_year||'01' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_01
              , case when a.work_mon = p_year||'01' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_01
             
              , case when a.work_mon = p_year||'02' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_02
              , case when a.work_mon = p_year||'02' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_02
              , case when a.work_mon = p_year||'02' then nvl(a.didaotao, 0) else 0 end          as didaotao_02
              , case when a.work_mon = p_year||'02' then nvl(a.nvqs, 0) else 0 end              as nvqs_02
              , case when a.work_mon = p_year||'02' then nvl(a.vosinh, 0) else 0 end            as vosinh_02
              , case when a.work_mon = p_year||'02' then nvl(a.tong_n, 0) else 0 end            as tong_n_02
              , case when a.work_mon = p_year||'02' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_02
              , case when a.work_mon = p_year||'02' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_02
              , case when a.work_mon = p_year||'02' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_02
              , case when a.work_mon = p_year||'02' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_02
              , case when a.work_mon = p_year||'02' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_02
              , case when a.work_mon = p_year||'02' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_02
              
              , case when a.work_mon = p_year||'03' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_03
              , case when a.work_mon = p_year||'03' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_03
              , case when a.work_mon = p_year||'03' then nvl(a.didaotao, 0) else 0 end          as didaotao_03
              , case when a.work_mon = p_year||'03' then nvl(a.nvqs, 0) else 0 end              as nvqs_03
              , case when a.work_mon = p_year||'03' then nvl(a.vosinh, 0) else 0 end            as vosinh_03
              , case when a.work_mon = p_year||'03' then nvl(a.tong_n, 0) else 0 end            as tong_n_03
              , case when a.work_mon = p_year||'03' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_03
              , case when a.work_mon = p_year||'03' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_03
              , case when a.work_mon = p_year||'03' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_03
              , case when a.work_mon = p_year||'03' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_03
              , case when a.work_mon = p_year||'03' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_03
              , case when a.work_mon = p_year||'03' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_03
              
              , case when a.work_mon = p_year||'04' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_04
              , case when a.work_mon = p_year||'04' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_04
              , case when a.work_mon = p_year||'04' then nvl(a.didaotao, 0) else 0 end          as didaotao_04
              , case when a.work_mon = p_year||'04' then nvl(a.nvqs, 0) else 0 end              as nvqs_04
              , case when a.work_mon = p_year||'04' then nvl(a.vosinh, 0) else 0 end            as vosinh_04
              , case when a.work_mon = p_year||'04' then nvl(a.tong_n, 0) else 0 end            as tong_n_04
              , case when a.work_mon = p_year||'04' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_04
              , case when a.work_mon = p_year||'04' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_04
              , case when a.work_mon = p_year||'04' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_04
              , case when a.work_mon = p_year||'04' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_04
              , case when a.work_mon = p_year||'04' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_04
              , case when a.work_mon = p_year||'04' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_04
              
              , case when a.work_mon = p_year||'05' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_05
              , case when a.work_mon = p_year||'05' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_05
              , case when a.work_mon = p_year||'05' then nvl(a.didaotao, 0) else 0 end          as didaotao_05
              , case when a.work_mon = p_year||'05' then nvl(a.nvqs, 0) else 0 end              as nvqs_05
              , case when a.work_mon = p_year||'05' then nvl(a.vosinh, 0) else 0 end            as vosinh_05
              , case when a.work_mon = p_year||'05' then nvl(a.tong_n, 0) else 0 end            as tong_n_05
              , case when a.work_mon = p_year||'05' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_05
              , case when a.work_mon = p_year||'05' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_05
              , case when a.work_mon = p_year||'05' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_05
              , case when a.work_mon = p_year||'05' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_05
              , case when a.work_mon = p_year||'05' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_05
              , case when a.work_mon = p_year||'05' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_05
              
              , case when a.work_mon = p_year||'06' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_06
              , case when a.work_mon = p_year||'06' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_06
              , case when a.work_mon = p_year||'06' then nvl(a.didaotao, 0) else 0 end          as didaotao_06
              , case when a.work_mon = p_year||'06' then nvl(a.nvqs, 0) else 0 end              as nvqs_06
              , case when a.work_mon = p_year||'06' then nvl(a.vosinh, 0) else 0 end            as vosinh_06
              , case when a.work_mon = p_year||'06' then nvl(a.tong_n, 0) else 0 end            as tong_n_06
              , case when a.work_mon = p_year||'06' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_06
              , case when a.work_mon = p_year||'06' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_06
              , case when a.work_mon = p_year||'06' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_06
              , case when a.work_mon = p_year||'06' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_06
              , case when a.work_mon = p_year||'06' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_06
              , case when a.work_mon = p_year||'06' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_06
              
              , case when a.work_mon = p_year||'07' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_07
              , case when a.work_mon = p_year||'07' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_07
              , case when a.work_mon = p_year||'07' then nvl(a.didaotao, 0) else 0 end          as didaotao_07
              , case when a.work_mon = p_year||'07' then nvl(a.nvqs, 0) else 0 end              as nvqs_07
              , case when a.work_mon = p_year||'07' then nvl(a.vosinh, 0) else 0 end            as vosinh_07
              , case when a.work_mon = p_year||'07' then nvl(a.tong_n, 0) else 0 end            as tong_n_07
              , case when a.work_mon = p_year||'07' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_07
              , case when a.work_mon = p_year||'07' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_07
              , case when a.work_mon = p_year||'07' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_07
              , case when a.work_mon = p_year||'07' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_07
              , case when a.work_mon = p_year||'07' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_07
              , case when a.work_mon = p_year||'07' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_07
              
              , case when a.work_mon = p_year||'08' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_08
              , case when a.work_mon = p_year||'08' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_08
              , case when a.work_mon = p_year||'08' then nvl(a.didaotao, 0) else 0 end          as didaotao_08
              , case when a.work_mon = p_year||'08' then nvl(a.nvqs, 0) else 0 end              as nvqs_08
              , case when a.work_mon = p_year||'08' then nvl(a.vosinh, 0) else 0 end            as vosinh_08
              , case when a.work_mon = p_year||'08' then nvl(a.tong_n, 0) else 0 end            as tong_n_08
              , case when a.work_mon = p_year||'08' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_08
              , case when a.work_mon = p_year||'08' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_08
              , case when a.work_mon = p_year||'08' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_08
              , case when a.work_mon = p_year||'08' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_08
              , case when a.work_mon = p_year||'08' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_08
              , case when a.work_mon = p_year||'08' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_08
              
              , case when a.work_mon = p_year||'09' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_09
              , case when a.work_mon = p_year||'09' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_09
              , case when a.work_mon = p_year||'09' then nvl(a.didaotao, 0) else 0 end          as didaotao_09
              , case when a.work_mon = p_year||'09' then nvl(a.nvqs, 0) else 0 end              as nvqs_09
              , case when a.work_mon = p_year||'09' then nvl(a.vosinh, 0) else 0 end            as vosinh_09
              , case when a.work_mon = p_year||'09' then nvl(a.tong_n, 0) else 0 end            as tong_n_09
              , case when a.work_mon = p_year||'09' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_09
              , case when a.work_mon = p_year||'09' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_09
              , case when a.work_mon = p_year||'09' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_09
              , case when a.work_mon = p_year||'09' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_09
              , case when a.work_mon = p_year||'09' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_09
              , case when a.work_mon = p_year||'09' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_09
              
              , case when a.work_mon = p_year||'10' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_10
              , case when a.work_mon = p_year||'10' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_10
              , case when a.work_mon = p_year||'10' then nvl(a.didaotao, 0) else 0 end          as didaotao_10
              , case when a.work_mon = p_year||'10' then nvl(a.nvqs, 0) else 0 end              as nvqs_10
              , case when a.work_mon = p_year||'10' then nvl(a.vosinh, 0) else 0 end            as vosinh_10
              , case when a.work_mon = p_year||'10' then nvl(a.tong_n, 0) else 0 end            as tong_n_10
              , case when a.work_mon = p_year||'10' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_10
              , case when a.work_mon = p_year||'10' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_10
              , case when a.work_mon = p_year||'10' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_10
              , case when a.work_mon = p_year||'10' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_10
              , case when a.work_mon = p_year||'10' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_10
              , case when a.work_mon = p_year||'10' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_10
              
              , case when a.work_mon = p_year||'11' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_11
              , case when a.work_mon = p_year||'11' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_11
              , case when a.work_mon = p_year||'11' then nvl(a.didaotao, 0) else 0 end          as didaotao_11
              , case when a.work_mon = p_year||'11' then nvl(a.nvqs, 0) else 0 end              as nvqs_11
              , case when a.work_mon = p_year||'11' then nvl(a.vosinh, 0) else 0 end            as vosinh_11
              , case when a.work_mon = p_year||'11' then nvl(a.tong_n, 0) else 0 end            as tong_n_11
              , case when a.work_mon = p_year||'11' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_11
              , case when a.work_mon = p_year||'11' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_11
              , case when a.work_mon = p_year||'11' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_11
              , case when a.work_mon = p_year||'11' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_11
              , case when a.work_mon = p_year||'11' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_11
              , case when a.work_mon = p_year||'11' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_11
              
              , case when a.work_mon = p_year||'12' then nvl(a.nghi_phep, 0) else 0 end         as nghi_phep_12
              , case when a.work_mon = p_year||'12' then nvl(a.nghi_viecrieng, 0) else 0 end    as nghi_viecrieng_12
              , case when a.work_mon = p_year||'12' then nvl(a.didaotao, 0) else 0 end          as didaotao_12
              , case when a.work_mon = p_year||'12' then nvl(a.nvqs, 0) else 0 end              as nvqs_12
              , case when a.work_mon = p_year||'12' then nvl(a.vosinh, 0) else 0 end            as vosinh_12
              , case when a.work_mon = p_year||'12' then nvl(a.tong_n, 0) else 0 end            as tong_n_12
              , case when a.work_mon = p_year||'12' then nvl(a.nghi_khongphep, 0) else 0 end    as nghi_khongphep_12
              , case when a.work_mon = p_year||'12' then nvl(a.nghi_tnld, 0) else 0 end         as nghi_tnld_12
              , case when a.work_mon = p_year||'12' then nvl(a.nghiom_cogiay_bv, 0) else 0 end  as nghiom_cogiay_bv_12
              , case when a.work_mon = p_year||'12' then nvl(a.nghi_khamthai, 0) else 0 end     as nghi_khamthai_12
              , case when a.work_mon = p_year||'12' then nvl(a.nghi_thaisan, 0) else 0 end      as nghi_thaisan_12
              , case when a.work_mon = p_year||'12' then nvl(a.nghi_hieuhi_conom, 0) else 0 end as nghi_hieuhi_conom_12
              
              , 0, 0, 0, 0 , 0, 0, 0, 0
              
              , nvl(t.nghi_phep, 0)          as nghi_phep
              , nvl(t.nghi_viecrieng, 0)     as nghi_viecrieng
              , nvl(t.didaotao, 0)           as didaotao
              , nvl(t.nvqs, 0)               as nvqs
              , nvl(t.vosinh, 0)             as vosinh
              , nvl(t.tong_n, 0)             as tong_n
              , nvl(t.nghi_khongphep, 0)     as nghi_khongphep
              , nvl(t.nghi_tnld, 0)          as nghi_tnld
              , nvl(t.nghiom_cogiay_bv, 0)   as nghiom_cogiay_bv
              , nvl(t.nghi_khamthai, 0)      as nghi_khamthai
              , nvl(t.nghi_thaisan, 0)       as nghi_thaisan
              , nvl(t.nghi_hieuhi_conom, 0)  as nghi_hieuhi_conom
              , nvl(t.tong_nghi, 0)          as tong_nghi
       from thr_absence_month a, tco_org o, thr_employee e
            ,(select s.thr_emp_pk
              , sum(nvl(s.nghi_phep, 0))         as nghi_phep
              , sum(nvl(s.nghi_viecrieng, 0))    as nghi_viecrieng
              , sum(nvl(s.didaotao, 0))          as didaotao
              , sum(nvl(s.nvqs, 0))              as nvqs
              , sum(nvl(s.vosinh, 0))            as vosinh
              , sum(nvl(s.tong_n, 0))            as tong_n
              , sum(nvl(s.nghi_khongphep, 0))    as nghi_khongphep
              , sum(nvl(s.nghi_tnld, 0))         as nghi_tnld
              , sum(nvl(s.nghiom_cogiay_bv, 0))  as nghiom_cogiay_bv
              , sum(nvl(s.nghi_khamthai, 0))     as nghi_khamthai
              , sum(nvl(s.nghi_thaisan, 0))      as nghi_thaisan
              , sum(nvl(s.nghi_hieuhi_conom, 0)) as nghi_hieuhi_conom
              , sum(nvl(s.tong_nghi, 0))         as tong_nghi
                from thr_absence_month s
                where s.del_if=0
                and substr(S.WORK_MON, 1, 4) = p_year
                group by s.thr_emp_pk ) t
       where a.del_if=0 and o.del_if=0 and e.del_if=0
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_emp_pk = t.thr_emp_pk
       and substr(a.work_mon, 1, 4) =  p_year
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_nation,'ALL','ALL',e.nation )= p_nation
       and decode(p_status,'ALL','ALL',e.status )= p_status
       order by  o.seq  , a.emp_id
       ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI01700_3;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_RPT_HRTI01700_3
(
   p_employee   varchar2,
   p_work_mon   varchar2,
   p_tco_org_pk varchar2,
   p_nation     varchar2,
   p_sal_period varchar2,
   p_status     varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
      open p_rtn_value for
       select to_char(to_date(p_work_mon, 'yyyymm'), 'mm/yyyy') work_mon,
             1,
              e.emp_id,
              e.full_name,
              (select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = e.pos_type),
              nvl(t.lately_d1, 0),
              nvl(t.early_d1, 0),
              nvl(t.lately_d2, 0),
              nvl(t.early_d2, 0),
              nvl(t.lately_d3, 0),
              nvl(t.early_d3, 0),
              nvl(t.lately_d4, 0),
              nvl(t.early_d4, 0),
              nvl(t.lately_d5, 0),
              nvl(t.early_d5, 0),
              nvl(t.lately_d6, 0),
              nvl(t.early_d6, 0),
              nvl(t.lately_d7, 0),
              nvl(t.early_d7, 0),
              nvl(t.lately_d8, 0),
              nvl(t.early_d8, 0),
              nvl(t.lately_d9, 0),
              nvl(t.early_d9, 0),
              nvl(t.lately_d10, 0),
              nvl(t.early_d10, 0),
              nvl(t.lately_d11, 0),
              nvl(t.early_d11, 0),
              nvl(t.lately_d12, 0),
              nvl(t.early_d12, 0),
              nvl(t.lately_d13, 0),
              nvl(t.early_d13, 0),
              nvl(t.lately_d14, 0),
              nvl(t.early_d14, 0),
              nvl(t.lately_d15, 0),
              nvl(t.early_d15, 0),
              nvl(t.lately_d16, 0),
              nvl(t.early_d16, 0),
              nvl(t.lately_d17, 0),
              nvl(t.early_d17, 0),
              nvl(t.lately_d18, 0),
              nvl(t.early_d18, 0),
              nvl(t.lately_d19, 0),
              nvl(t.early_d19, 0),
              nvl(t.lately_d20, 0),
              nvl(t.early_d20, 0),
              nvl(t.lately_d21, 0),
              nvl(t.early_d21, 0),
              nvl(t.lately_d22, 0),
              nvl(t.early_d22, 0),
              nvl(t.lately_d23, 0),
              nvl(t.early_d23, 0),
              nvl(t.lately_d24, 0),
              nvl(t.early_d24, 0),
              nvl(t.lately_d25, 0),
              nvl(t.early_d25, 0),
              nvl(t.lately_d26, 0),
              nvl(t.early_d26, 0),
              nvl(t.lately_d27, 0),
              nvl(t.early_d27, 0),
              nvl(t.lately_d28, 0),
              nvl(t.early_d28, 0),
              nvl(t.lately_d29, 0),
              nvl(t.early_d29, 0),
              nvl(t.lately_d30, 0),
              nvl(t.early_d30, 0),
              nvl(t.lately_d31, 0),
              nvl(t.early_d31, 0),
              nvl(t.total_lately, 0),
              nvl(t.lately_up_10, 0),
              nvl(t.lately_in_10, 0),
              nvl(t.total_early, 0),
              nvl(t.early_up_5, 0),
              nvl(t.early_in_5, 0),
              nvl(t.total_forget_att, 0)
       from thr_mon_lately_early t, tco_org c, thr_employee e
       where t.del_if=0 and c.del_if=0 and e.del_if=0
       and t.thr_emp_pk = e.pk
       and e.tco_org_pk = c.pk
       and t.work_mon = p_work_mon
       and (nvl(t.total_lately, 0) > 0
            or nvl(t.total_early, 0) > 0 
            or nvl(t.total_forget_att, 0) > 0)
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and e.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_nation,'ALL','ALL',e.nation )= p_nation
       and decode(p_status,'ALL','ALL',e.status )= p_status
       order by c.seq, e.emp_id, e.full_name
      ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_RPT_HRTI02100_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_RPT_HRTI02100_0
(      p_lang       varchar2,
       p_employee   varchar2,
       p_from       varchar2,
       p_to         varchar2,
       p_tco_org_pk varchar2,
       p_thr_ws_pk  varchar2,
       p_nation     varchar2,
       p_conditions varchar2,
       p_abs_type   varchar2,
   p_rtn_value    out   sys_refcursor
) is
    l_resign_num number;
   
begin

if p_conditions <> '10' then
     
    select max(decode(nvl(a.num_4,0),0,-1,0))
    into l_resign_num 
    from vhr_hr_code a
    where a.id='HR0006' 
    and a.code='11' 
    and  nvl(tco_company_pk,99)= 99;
    
       open p_rtn_value for
      
       select 0,1
        , o.org_nm, e.emp_id, e.full_name, to_char(to_date(B.WORK_DT,'yyyymmdd'),'dd/mm/yyyy')
        , a.time_in, a.time_out, a.mid_time_in, a.mid_time_out, b.time_in, b.time_out, b.mid_time_in, b.mid_time_out
        , 'Ca ' || s.shift || ' - ' || s.start_time || ' - ' || s.end_time
        , (case when b.auto_manu_yn is null and (b.time_in is not null or b.time_out is not null) then (case when a.time_in is null and a.time_out is null then 'Thiếu tín hiệu vào - ra'
                                                                                when  a.time_in is null then 'Thiếu tín hiều vào'
                                                                                when  a.time_out is null then 'Thiếu tín hiệu ra'
                                                                                else null end)
                when b.auto_manu_yn is null and (b.time_in is null and b.time_out is null) then (case when a.time_in is not null or a.time_out is not null then 'Thiếu tín hiệu vân tay'
                                                                                else null end)
            else null end)
        , null
       from thr_work_date_inout a, thr_work_date b, tco_org o, thr_work_shift s, thr_employee e, thr_absence c
       where a.del_if(+)=0 and b.del_if = 0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and c.del_if(+)=0 
       and B.THR_EMP_PK = A.THR_EMP_PK(+)
       and B.WORK_DT = A.WORK_DT(+)
       and a.thr_emp_pk = c.thr_emp_pk(+)
       and a.work_dt = c.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
--       and b.auto_manu_yn is null
       and b.work_dt between p_from and p_to 
       and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
       and b.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and (p_conditions ='ALL'
           or (p_conditions = '1' and a.time_in is null)
           or (p_conditions = '2' and a.time_out is null)
           or (p_conditions = '3' and a.time_in is not null 
                                  and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))
           or (p_conditions = '4' and a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi'))
            or (p_conditions ='5' and exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
             or (p_conditions ='6' and not exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
           or (p_conditions = '7' and exists (select 1 from thr_work_date_inout f, thr_absence k
                                                where f.del_if =0 and k.del_if=0
                                                and f.thr_emp_pk = k.thr_emp_pk
                                                and f.work_dt = k.absence_dt
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = a.work_dt
                                                and nvl(f.wt, 0) > 0 
                                                and nvl(k.absence_time, 0) > 0
                                                ))
           or (p_conditions = '8' and  nvl(a.ot, 0) <> nvl(a.ot_xn, 0))
           or (p_conditions = '9' and  nvl(a.auto_manu_yn , 'N') = 'Y' )  
           or (p_conditions = '11' and( a.time_in is null 
                                   or a.time_out is null))                                
           )
       and (p_abs_type = 'ALL'
           or c.absence_type = p_abs_type)
        order by o.seq, a.work_dt, a.emp_id;
  
  end if; 
    
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_SEL_HRTI00100_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_SEL_HRTI00100_0 (
   p_company_pk       VARCHAR2,
   p_rtn_value    OUT SYS_REFCURSOR)
IS
   /******************************************************************************
      NAME:
      PURPOSE:

      REVISIONS:
      Ver        Date        Author           Description
      ---------  ----------  ---------------  ------------------------------------
      1.0        9/25/2007   Ho Thi Thu Hien       1. Created this function.

   ******************************************************************************/
   l_rtn_cur   SYS_REFCURSOR;
BEGIN
   OPEN l_rtn_cur FOR
        SELECT PK,
               SHIFT,
               TRIM (START_TIME),
               TRIM (END_TIME),
               WT,
               OT,
               NT,
               A.START_MEAL1,
               A.END_MEAL1,
               A.MEAL1_INTERVAL,
               A.START_MEAL2,
               A.END_MEAL2,
               A.MEAL2_INTERVAL,
               A.START_OT,
               A.START_NT,
               DECODE (A.USE_YN, 'Y', -1, ''),
               A.description,
               A.DURING_DAY,
               NVL (A.WT_PLUS, 0),
               a.max_ot,
               NVL (a.wt_plus_ty_le, 'N'),
               A.TCO_COMPANY_PK,
               NVL (A.OT_C_YN, 'N'),
               null,
               a.mm_mid, -- so phut de xac dinh gio vao ra cua giua gio
               a.sunday_yn , -- ghi nhan ca co bat buoc lam ngay chu nhat
               note
          FROM THR_WORK_SHIFT A
         WHERE     A.DEL_IF = 0
               AND NVL (tco_company_pk, p_company_pk) = p_company_pk
      ORDER BY SHIFT;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
/

DROP PROCEDURE HPDQ.HP_HR_SEL_HRTI01600_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_SEL_HRTI01600_0 
(
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions varchar2,
   p_abs_type   varchar2,
   p_rtn_value    out   sys_refcursor
) IS
 
   l_resign_num number;
    
BEGIN
  if p_conditions <> '10' then
     
    select max(decode(nvl(a.num_4,0),0,-1,0))
    into l_resign_num 
    from vhr_hr_code a
    where a.id='HR0006' 
    and a.code='11' 
    and  nvl(tco_company_pk,99)= 99;
    
       open p_rtn_value for
       select rownum, t.*
       from (
       select a.pk,
              a.thr_emp_pk,
              a.emp_id,
              e.full_name,
              o.org_nm,
              s.pk as thr_ws_pk,
              decode(a.hol_type, 'HOL', 'Holiday', 'SUN', 'Sunday', ''),
              a.work_dt,
              a.date_in,
--              a.time_in,
              (case when a.time_in is null and a.time_out is not null then 'X' else a.time_in end) as time_in,
              a.date_out,
--              a.time_out,
              (case when a.time_out is null and a.time_in is not null then 'X' else a.time_out end) as time_out,
              nullif(a.wt, 0),
              nullif(a.ot, 0),
              nullif(a.ot_xn, 0),
              nullif(a.nt, 0),
              nullif(a.ont, 0),
              a.mid_time_out,
              a.mid_time_in,
              nullif(a.mid_wt, 0),
              c.absence_type,
              nullif(c.absence_time, 0),
              a.reason_type,
              a.mod_byhand_yn,
              a.mod_by ||decode(a.mod_by, null, null, ' * ') ||a.mod_dt, 
              nullif(a.wt_rate, 0),
              nullif(a.ot_rate, 0),
              nullif(a.nt_rate, 0), 
              nullif(a.ont_rate,0),
              c.company_pay_yn,
              nullif(c.company_pay_rate, 0),
              a.lately as lately_minute,
              a.early as early_minute,
              decode(a.auto_manu_yn, null, 'N', 'Y')
       from thr_work_date a, tco_org o, thr_work_shift s, thr_employee e, thr_absence c
       where a.del_if=0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and c.del_if(+)=0 
       and a.thr_emp_pk = c.thr_emp_pk(+)
       and a.work_dt = c.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
       and a.work_dt between p_from and p_to 
       and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and (p_conditions ='ALL'
           or (p_conditions = '1' and a.time_in is null)
           or (p_conditions = '2' and a.time_out is null)
           or (p_conditions = '3' and a.time_in is not null 
                                  and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))
           or (p_conditions = '4' and a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi'))
            or (p_conditions ='5' and exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
             or (p_conditions ='6' and not exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
           or (p_conditions = '7' and exists (select 1 from thr_work_date f, thr_absence k
                                                where f.del_if =0 and k.del_if=0
                                                and f.thr_emp_pk = k.thr_emp_pk
                                                and f.work_dt = k.absence_dt
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = a.work_dt
                                                and nvl(f.wt, 0) > 0 
                                                and nvl(k.absence_time, 0) > 0
                                                ))
           or (p_conditions = '8' and  nvl(a.ot, 0) <> nvl(a.ot_xn, 0))
           or (p_conditions = '9' and  nvl(a.auto_manu_yn , 'N') = 'Y' )  
           or (p_conditions = '11' and( a.time_in is null 
                                   or a.time_out is null))                                
           )
       and (p_abs_type = 'ALL'
           or c.absence_type = p_abs_type)
        order by o.seq, a.work_dt, a.emp_id) t;
  else
    --  DS vi pham bien ban cham cong
        open p_rtn_value for
       select rownum, t.*
       from (
       select a.pk,
              a.thr_emp_pk,
              a.emp_id,
              e.full_name,
              o.org_nm,
              s.pk as thr_ws_pk,
              decode(a.hol_type, 'HOL', 'Holiday', 'SUN', 'Sunday', ''),
              a.work_dt,
              a.date_in,
              (case when a.time_in is null and a.time_out is not null then 'X' else a.time_in end) as time_in,
              a.date_out,
              (case when a.time_out is null and a.time_in is not null then 'X' else a.time_out end) as time_out,
              nullif(a.wt, 0),
              nullif(a.ot, 0),
              nullif(a.ot_xn, 0),
              nullif(a.nt, 0),
              nullif(a.ont, 0),
              a.mid_time_out,
              a.mid_time_in,
              nullif(a.mid_wt, 0),
              c.absence_type,
              nullif(c.absence_time, 0),
              a.reason_type,
              a.mod_byhand_yn,
              a.mod_by ||decode(a.mod_by, null, null, ' * ') ||a.mod_dt, 
              nullif(a.wt_rate, 0),
              nullif(a.ot_rate, 0),
              nullif(a.nt_rate, 0), 
              nullif(a.ont_rate,0),
              c.company_pay_yn,
              nullif(c.company_pay_rate, 0),
              a.lately as lately_minute,
              a.early as early_minute,
              decode(a.auto_manu_yn, null, 'N', 'Y')
       from thr_work_date a, tco_org o, thr_work_shift s, thr_employee e, thr_absence c
       where a.del_if=0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and c.del_if(+)=0
       and a.thr_emp_pk = c.thr_emp_pk(+)
       and a.work_dt = c.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
       and a.work_dt = p_from
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') -1,'YYYYMMDD')
       and a.reason_type is null
       and ((a.hol_type is null  and (nvl(a.lately, 0) > 0 
                                    or nvl(a.early, 0) > 0
                                    or a.time_out is null or a.time_in is null ))
            or (a.hol_type is not null and nvl(a.shift_sunday_yn, 'N') = 'N' 
                                       and (nvl(a.lately, 0) > 0 
                                            or nvl(a.early, 0) > 0
                                            or a.time_out is null 
                                            or a.time_in is null )   
                                       and (a.thr_emp_pk, a.work_dt) in (select r.thr_emp_pk, r.work_dt from thr_daily_ot_reg r
                                                                        where r.del_if=0
                                                                            and r.work_dt = a.work_dt
                                                                            and r.thr_emp_pk = a.thr_emp_pk
                                                                            ))
           or (a.hol_type is not null and nvl(a.shift_sunday_yn, 'N') = 'Y' 
                                       and (nvl(a.lately, 0) > 0 
                                            or nvl(a.early, 0) > 0
                                            or a.time_out is null 
                                            or a.time_in is null )) 
           or (a.hol_type is not null  and ((nvl(a.lately, 0) > 0 and a.time_in is not null)
                                                or (nvl(a.early, 0) > 0) and a.time_out is not null)
                                                or (a.time_in is not null and a.time_out is null)
                                                or (a.time_out is not null and a.time_in is null))
           or  nvl(a.auto_manu_yn , 'N') = 'Y'     
           or (to_date(a.shift_start , 'hh24:mi') - to_date(a.time_in , 'hh24:mi')) *24*60 >=30 
           or (to_date(a.time_out , 'hh24:mi') - to_date(a.shift_end , 'hh24:mi')) *24*60 >=30
           or (a.time_in is not null and a.time_out is not null and nvl(c.absence_time, 0)> 0)
         ) 
      and not exists (select 1 from thr_absence s
                where s.del_if=0
                and s.thr_emp_pk = a.thr_emp_pk 
                and s.absence_dt = a.work_dt
                and a.time_in is null
                and a.time_out is null
                )
    and not exists (select 1 from thr_att_time_auto r
                            where r.del_if=0
                                and a.work_dt between  r.start_dt and nvl(r.end_dt, '30000101')
                                and r.thr_emp_pk = a.thr_emp_pk
                                )
       order by o.seq, a.work_dt, a.emp_id) t; 
             
  end if;      
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.HP_HR_SEL_HRTI01700_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_SEL_HRTI01700_0 
(
   p_employee   varchar2,
   p_month      varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_sal_period varchar2,
   p_status     varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
       open p_rtn_value for
       select rownum, t.*
       from (select  --a.pk,
              o.org_nm,
              a.emp_id,
              e.full_name,
              o.org_nm as org_name,
              (select initcap(v.code_nm) from vhr_hr_code v where v.id='HR0008' and v.code = a.pos_type ) as position,
              (select initcap(v.code_nm) from vhr_hr_code v where v.id='HR0010' and v.code = a.job_type ) as job,
              a.work_mon,
              nullif(a.wt_in_month, 0),
              nullif(a.wt1,'0'),
              nullif(a.wt2,'0'),
              nullif(a.wt3,'0'),
              nullif(a.wt4,'0'),
              nullif(a.wt5,'0'),
              nullif(a.wt6,'0'),
              nullif(a.wt7,'0'),
              nullif(a.wt8,'0'),
              nullif(a.wt9,'0'),
              nullif(a.wt10,'0'),
              nullif(a.wt11,'0'),
              nullif(a.wt12,'0'),
              nullif(a.wt13,'0'),
              nullif(a.wt14,'0'),
              nullif(a.wt15,'0'),
              nullif(a.wt16,'0'),
              nullif(a.wt17,'0'),
              nullif(a.wt18,'0'),
              nullif(a.wt19,'0'),
              nullif(a.wt20,'0'),
              nullif(a.wt21,'0'),
              nullif(a.wt22,'0'),
              nullif(a.wt23,'0'),
              nullif(a.wt24,'0'),
              nullif(a.wt25,'0'),
              nullif(a.wt26,'0'),
              nullif(a.wt27,'0'),
              nullif(a.wt28,'0'),
              nullif(a.wt29,'0'),
              nullif(a.wt30,'0'),
              nullif(a.wt31,'0'),
              nullif(a.TONGCONG, 0),
              nullif(a.THEMGIOTHUONG, 0),
              nullif(a.THEMGIOCHUNHAT , 0),
              nullif(a.THEMGIOLE, 0),
              nullif(a.total_abs_npay, 0),
              nullif(a.total_ot, 0) as ot_15,
              nullif(nvl(a.total_st, 0) + nvl(a.total_ost, 0), 0) as ot_20,
              nullif(nvl(a.total_ht, 0) + nvl(a.total_oht, 0), 0) as ot_30,
              nullif(nvl(a.total_nt30, 0) + nvl(a.total_nt60, 0) + nvl(a.total_nt90, 0), 0) as nt,
              nullif(nvl(a.total_nt45, 0) , 0) as nt2,
              nullif(nvl(a.total_wt, 0)  + nvl(a.total_abs_pay, 0), 0) as total_days,
              a.d1_type, a.d2_type, a.d3_type, a.d4_type, a.d5_type, a.d6_type, a.d7_type, a.d8_type, a.d9_type, a.d10_type,
              a.d11_type, a.d12_type, a.d13_type, a.d14_type, a.d15_type, a.d16_type, a.d17_type, a.d18_type, a.d19_type, a.d20_type,
              a.d21_type, a.d22_type, a.d23_type, a.d24_type, a.d25_type, a.d26_type, a.d27_type, a.d28_type, a.d29_type, a.d30_type, a.d31_type
       from thr_work_month a, tco_org o, thr_employee e
       where a.del_if=0 and o.del_if=0 and e.del_if=0 
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.work_mon = p_month
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_nation,'ALL','ALL',e.nation )= p_nation
       and decode(p_status,'ALL','ALL',e.status )= p_status
       and a.sal_period  = p_sal_period
       order by a.work_mon, o.seq , a.emp_id) t
       ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_SEL_HRTI02100_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_SEL_HRTI02100_0 
(
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions varchar2,
   p_abs_type   varchar2,
   p_rtn_value    out   sys_refcursor
) IS
 
   l_resign_num number;
    
BEGIN
  if p_conditions <> '10' then
     
    select max(decode(nvl(a.num_4,0),0,-1,0))
    into l_resign_num 
    from vhr_hr_code a
    where a.id='HR0006' 
    and a.code='11' 
    and  nvl(tco_company_pk,99)= 99;
    
       open p_rtn_value for
       select rownum, t.*
       from (
       select a.pk,
              a.thr_emp_pk,
              a.emp_id,
              e.full_name,
              o.org_nm,
              s.pk as thr_ws_pk,
              decode(a.hol_type, 'HOL', 'Holiday', 'SUN', 'Sunday', ''),
              a.work_dt,
              a.date_in,
--              a.time_in,
              (case when a.time_in is null and a.time_out is not null then 'X' else a.time_in end) as time_in,
              a.date_out,
--              a.time_out,
              (case when a.time_out is null and a.time_in is not null then 'X' else a.time_out end) as time_out,
              nullif(a.wt, 0),
              nullif(a.ot, 0),
              nullif(a.ot_xn, 0),
              nullif(a.nt, 0),
              nullif(a.ont, 0),
              a.mid_time_out,
              a.mid_time_in,
              nullif(a.mid_wt, 0),
              c.absence_type,
              nullif(c.absence_time, 0),
              a.reason_type,
              a.mod_byhand_yn,
              a.mod_by ||decode(a.mod_by, null, null, ' * ') ||a.mod_dt, 
              nullif(a.wt_rate, 0),
              nullif(a.ot_rate, 0),
              nullif(a.nt_rate, 0), 
              nullif(a.ont_rate,0),
              c.company_pay_yn,
              nullif(c.company_pay_rate, 0),
              a.lately as lately_minute,
              a.early as early_minute,
              decode(a.auto_manu_yn, null, 'N', 'Y')
       from thr_work_date_inout a, tco_org o, thr_work_shift s, thr_employee e, thr_absence c
       where a.del_if=0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and c.del_if(+)=0 
       and a.thr_emp_pk = c.thr_emp_pk(+)
       and a.work_dt = c.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
       and a.work_dt between p_from and p_to 
       and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and (p_conditions ='ALL'
           or (p_conditions = '1' and a.time_in is null)
           or (p_conditions = '2' and a.time_out is null)
           or (p_conditions = '3' and a.time_in is not null 
                                  and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))
           or (p_conditions = '4' and a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi'))
            or (p_conditions ='5' and exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
             or (p_conditions ='6' and not exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
           or (p_conditions = '7' and exists (select 1 from thr_work_date_inout f, thr_absence k
                                                where f.del_if =0 and k.del_if=0
                                                and f.thr_emp_pk = k.thr_emp_pk
                                                and f.work_dt = k.absence_dt
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = a.work_dt
                                                and nvl(f.wt, 0) > 0 
                                                and nvl(k.absence_time, 0) > 0
                                                ))
           or (p_conditions = '8' and  nvl(a.ot, 0) <> nvl(a.ot_xn, 0))
           or (p_conditions = '9' and  nvl(a.auto_manu_yn , 'N') = 'Y' )  
           or (p_conditions = '11' and( a.time_in is null 
                                   or a.time_out is null))                                
           )
       and (p_abs_type = 'ALL'
           or c.absence_type = p_abs_type)
        order by o.seq, a.work_dt, a.emp_id) t;
  
  end if;      
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.HP_HR_UPD_HRTI00100_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_UPD_HRTI00100_0
                            (
                                 p_action            varchar2
                                ,p_pk               number
                                ,p_shift            varchar2
                                ,p_start_time       varchar2
                                ,p_end_time         varchar2
                                ,p_wt               number
                                ,p_ot               number
                                ,p_nt               number
                                ,p_start_meal1      varchar2
                                ,p_end_meal1        varchar2
                                ,p_meal1_interval   number
                                ,p_start_meal2     varchar2
                                ,p_end_meal2       varchar2
                                ,p_meal2_interval  number
                                ,p_start_ot         varchar2
                                ,p_start_nt         varchar2
                                ,p_use_yn           number
                                ,p_description      varchar2
                                ,p_during_day       number
                                ,p_wt_plus          number
                                ,p_max_ot           number
                                ,p_wt_ty_le         varchar2
                                ,p_company_pk         varchar2
                                ,p_ot_c_yn          VARCHAR2 
                                ,p_max_c_ot         varchar2 
                                ,p_minute_mid       varchar2
                                ,p_sunday_yn        varchar2
                                ,p_note             varchar2          
                                ,p_crt_by           varchar2
                               -- ,p_rtn_pk     out   varchar2
                            ) IS
l_cnt_shift NUMBER;
l_exp1       exception;
l_flag_exist boolean:=FALSE;
l_cur_rec number;
l_cur sys_refcursor;
/******************************************************************************
   NAME:       sp_work_shift
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/12/2008          1. Created this procedure.

******************************************************************************/

BEGIN
    if p_action = 'INSERT'then
    
        IF NVL(p_during_day,1)>1 THEN
            IF p_start_time<=p_end_time THEN
                Raise_application_error(-20007, 'Start time and End time invalid');
            END IF;
        ELSE
            IF p_start_time>=p_end_time THEN
                Raise_application_error(-20007, 'Start time and End time invalid');
            END IF;    
        END IF;    
    
       insert into THR_WORK_SHIFT(PK,START_TIME,END_TIME,WT,OT,NT,SHIFT,DEL_IF,start_meal1,end_meal1,start_meal2
                ,end_meal2,DESCRIPTION,START_OT,START_NT,meal1_interval,meal2_interval,CRT_BY,CRT_DT
                ,USE_YN,DURING_DAY,WT_PLUS,max_ot,wt_plus_ty_le,tco_company_pk, OT_C_YN,note, mm_mid 
                ,sunday_yn)
       values (THR_WORK_SHIFT_SEQ.NextVal,p_start_time,p_end_time,p_wt,p_ot,p_nt,p_shift,0,p_start_meal1
                ,p_end_meal1,p_start_meal2,p_end_meal2,p_shift||' - '||p_start_time||'-'||p_end_time
                ,p_start_ot,p_start_nt,p_meal1_interval,p_meal2_interval
                ,p_crt_by,sysdate,decode(p_use_yn,-1,'Y','N'),NVL(p_during_day,1)
                ,p_wt_plus,p_max_ot,upper(p_wt_ty_le),p_company_pk, UPPER(NVL(p_ot_c_yn,'N')),p_note, p_minute_mid
                ,decode(p_sunday_yn,-1,'Y','N')
                );
                
                
                
     elsif p_action='UPDATE' then
        
        IF NVL(p_during_day,1)>1 THEN
            IF p_start_time<=p_end_time THEN
                Raise_application_error(-20007, 'Start time and End time invalid');
            END IF;
        ELSE
            IF p_start_time>=p_end_time THEN
                Raise_application_error(-20007, 'Start time and End time invalid');
            END IF;    
        END IF;    
     
        UPDATE  THR_WORK_SHIFT
        SET  START_TIME     = p_start_time ,
             END_TIME       = p_end_time,
             WT             = p_wt,
             OT             = p_ot,
             NT             = p_nt,
             SHIFT          = p_shift,
             START_OT       = p_start_ot,
             START_NT       = p_start_nt,
             description    = p_shift||' - '||p_start_time||'-'||p_end_time, --p_description,
             start_meal1    =p_start_meal1,
             end_meal1      = p_end_meal1,
             start_meal2   = p_start_meal2,
             end_meal2     = p_end_meal2,
             meal1_interval = p_meal1_interval,
             meal2_interval= p_meal2_interval,
             USE_YN         =decode(p_use_yn,-1,'Y','N'),
             DURING_DAY     =p_during_day,
             WT_PLUS        =p_wt_plus,
             max_ot         =p_max_ot,
             wt_plus_ty_le=upper(p_wt_ty_le),
             OT_C_YN     = UPPER(NVL(p_ot_c_yn,'N')),
             mm_mid     = p_minute_mid,
             sunday_yn = decode(p_sunday_yn,-1,'Y','N'),
             MOD_BY = p_crt_by,
             MOD_DT = sysdate
             ,note=p_note
        WHERE PK = p_pk;

    else

        open l_cur for
        select 1 from THR_WG_SCH_DETAIL g
        where g.del_if=0 and g.thr_ws_pk=p_pk;
        fetch l_cur into l_cur_rec;
        l_flag_exist:=l_cur%FOUND;

        IF l_flag_exist=FALSE THEN
            update thr_work_shift a
            set a.del_if=a.pk
            where pk=p_pk;
        ELSE
             RAISE l_exp1;
        END IF;
       end if;

   EXCEPTION
     when l_exp1 then
        Raise_application_error(-20007, 'already have employee'||sqlerrm);
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.HP_HR_UPD_HRTI01600_0;

CREATE OR REPLACE PROCEDURE HPDQ.HP_HR_UPD_HRTI01600_0 (
   p_action      varchar2,
   p_thr_wd_pk   varchar2,
   p_thr_emp_pk  varchar2,
   p_emp_id      varchar2,
   p_emp_name    varchar2,
   p_org_name    varchar2,
   p_shift       varchar2,
   p_day_type    varchar2,
   p_work_dt     varchar2,
   p_date_in     varchar2,
   t_time_in     varchar2,
   p_date_out    varchar2,
   t_time_out    varchar2,
   p_wt          varchar2,
   p_ot          varchar2,
   p_ot_xn       varchar2,
   p_nt          varchar2,
   p_ont         varchar2,
   p_mid_time_out varchar2,
   p_mid_time_in  varchar2,
   p_mid_wt       varchar2,
   p_absence_type varchar2,
   p_absence_time varchar2,
   p_reason_type varchar2,
   p_mod_by      varchar2,
   p_mod_dt      varchar2,
   p_wt_rate     varchar2,
   p_ot_rate     varchar2,
   p_nt_rate     varchar2,
   p_ont_rate    varchar2,
   p_abs_pay_yn  varchar2,
   p_abs_rate    varchar2,
   p_lately_minute  varchar2,
   p_early_minute   varchar2,
   p_crt_by varchar2

) 
IS
   l_kind_ot varchar2(10):='02';
   l_mod_wt_yn  varchar2(1):='N';
   l_mod_abs_yn varchar2(1):='N';
   
   l_date_in  varchar2(8);
   l_time_in  varchar2(5);
   l_date_out varchar2(8);
   l_time_out varchar2(5);
   l_wt       varchar2(10);
   l_ot       varchar2(10);
   l_ot_xn    varchar2(10);
   l_nt       varchar2(10);
   l_ont      varchar2(10);
   l_shift_time varchar2(2);
   l_hol_type varchar2(10);
   l_days_shift number;
   l_tco_company_pk  number;
   
   l_wt_rate         number;
   l_ot_rate         number;
   l_nt30_rate       number;
   l_nt45_rate       number;
   l_nt60_rate       number;
   l_nt90_rate       number;
   l_ht_rate         number;
   l_ost_rate        number;
   l_oht_rate        number;
   l_st_rate         number;
   l_total_wt_abs    number;
   
   l_absence_type   varchar2(10);
   l_absence_time   varchar2(10);
   l_company_pay_yn varchar2(1);
   l_company_pay_rate number;
   l_insurance_pay_yn varchar2(1);
   l_insurance_pay_rate number ;
   l_short_nm       varchar2(50);
   
   g_date_in varchar2(8);
   g_date_out varchar2(8);
   
   l_mid_time_out       varchar2(5);
   l_mid_time_in        varchar2(5);
   l_mid_wt             number;
   
   p_time_in        varchar2(5);
   p_time_out       varchar2(5);
   l_reason_type    varchar2(10);
   l_count_qcc      number;
BEGIN
      
    
    
    if t_time_in = 'X' then 
        p_time_in := null;
    else 
        p_time_in := t_time_in ;   
    end if;
    
    if t_time_out = 'X' then 
        p_time_out := null;
    else 
        p_time_out := t_time_out ;   
    end if;
    
    select nvl(max(e.tco_company_pk), 99) 
      into l_tco_company_pk from thr_employee e
      where e.del_if=0
      and e.pk = p_thr_emp_pk;
    
     select  sum(decode(c.code,'01',c.num_1,0)) as wt
            ,sum(decode(c.code,'02',c.num_1,0)) as ot
            ,sum(decode(c.code,'03',c.num_1,0)) as nt30
            ,sum(decode(c.code,'04',c.num_1,0)) as nt45
            ,sum(decode(c.code,'05',c.num_1,0)) as nt60
            ,sum(decode(c.code,'06',c.num_1,0)) as nt90
            ,sum(decode(c.code,'07',c.num_1,0)) as ht
            ,sum(decode(c.code,'08',c.num_1,0)) as ost
            ,sum(decode(c.code,'09',c.num_1,0)) as oht
            ,sum(decode(c.code,'10',c.num_1,0)) as st
             into l_wt_rate,l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate,l_oht_rate,l_st_rate
             from thr_code_detail c,thr_code_master d
             where c.del_if=0 and d.del_if=0 and c.thr_code_master_pk=d.pk
             and d.id='HR0028' and nvl(d.use_yn,'N')='Y'
             and (nvl(to_char(c.tco_company_pk),l_tco_company_pk) = l_tco_company_pk );

    select a.date_in
        , a.time_in
        , a.date_out
        , a.time_out
        , a.wt
        , a.ot
        , a.ot_xn
        , a.nt
        , a.ont
        , a.mid_time_out
        , a.mid_time_in
        , a.mid_wt
        , b.absence_type
        , b.absence_time
        , nvl(a.shift_time, 8)
        , a.hol_type
        , a.days_shift
        , a.reason_type
    into l_date_in
        , l_time_in
        , l_date_out
        , l_time_out
        , l_wt
        , l_ot
        , l_ot_xn
        , l_nt
        , l_ont 
        , l_mid_time_out
        , l_mid_time_in
        , l_mid_wt
        , l_absence_type
        , l_absence_time
        , l_shift_time
        , l_hol_type
        , l_days_shift
        , l_reason_type
    from thr_work_date a, thr_absence b
    where a.del_if=0 and b.del_if(+)=0
    and a.thr_emp_pk = b.thr_emp_pk(+)
    and a.work_dt = b.absence_dt(+)
    and a.pk = p_thr_wd_pk;
    
    if nvl(l_date_in, ' ') <> nvl(p_date_in, ' ') or nvl(l_time_in, ' ') <> nvl(p_time_in, ' ')  
       or nvl(l_date_out, ' ') <> nvl(p_date_out, ' ') or nvl(l_time_out, ' ') <> nvl(p_time_out, ' ')
       or nvl(l_wt, 0) <> nvl(p_wt, 0) or nvl(l_ot, 0) <> nvl(p_ot, 0)
       or nvl(l_nt, 0) <> nvl(p_nt, 0) or nvl(l_ont, 0) <> nvl(p_ont, 0) 
       or nvl(l_ot_xn, 0) <> nvl(p_ot_xn, 0)
       or nvl(l_mid_time_out, 0) <> nvl(p_mid_time_out, 0)
       or nvl(l_mid_time_in, 0) <> nvl(p_mid_time_in, 0)
       or nvl(l_mid_wt, 0) <> nvl(p_mid_wt, 0)
--       or nvl(l_reason_type, ' ') <> nvl(p_reason_type, ' ')
       then
        l_mod_wt_yn:='Y';  
    end if;
    
    if nvl(l_absence_type, ' ') <> nvl(p_absence_type, ' ') 
        or nvl(l_absence_time, 0) <> nvl(p_absence_time, 0) then
        l_mod_abs_yn:='Y';
    end if;
    
   if p_action = 'UPDATE' then           
                      
        select Sum(Case  when A.REASON_TYPE = '5'  then 1           
                         when A.REASON_TYPE = '13' then 2 
                           else 0 
                   end)                     
                   + (Case when nvl(p_reason_type, '') ='5' then 1
                           when nvl(p_reason_type, '') ='13' then 1
                          else 0
                      end)             
            into l_count_qcc
            from thr_work_date a
            where a.del_if=0
            and a.reason_type in('5', '13') -- quen cham cong
            and substr(A.WORK_DT, 1, 6) = substr(p_work_dt, 1, 6)
            and a.thr_emp_pk = p_thr_emp_pk;
            
             if nvl(p_wt, 0) <> nvl(l_wt, 0) 
                and (nvl(p_reason_type, '') ='5' or nvl(p_reason_type, '') ='13') then
                 
                 if nvl(l_count_qcc, 0) >= 3 then 
                 
                    raise_application_error(-20009, 'BẠN KHÔNG THỂ THAY ĐỔI GIỜ CÔNG VÌ ĐÃ CÓ 2 LÝ DO QUÊN CHẤM CÔNG TRONG THÁNG !');
                end if;
                
            end if;
            
        
        --  Update REASON_TYPE  
       update thr_work_date a
           set a.reason_type = p_reason_type
              ,a.mod_byhand_yn = 'Y'
              ,a.remark = 'UPDATE REASON_TYPE'
              ,a.mod_by = p_crt_by
              ,a.mod_dt = sysdate
        where a.del_if=0
          and a.pk = p_thr_wd_pk;
    
       if  l_mod_wt_yn = 'Y' then                     
                        
             if nvl(p_wt, 0) <> nvl(l_wt, 0) and p_reason_type is null then
            
                raise_application_error(-20009, 'BẠN KHÔNG THỂ THAY ĐỔI GIỜ CÔNG VÌ CHƯA CÓ LÝ DO !');
                
            end if;
            
           
       
            if  p_wt is null then --Auto data
                
               if nvl(l_days_shift, 1) = 1 then 
                    g_date_in:= nvl(p_date_in, p_work_dt);
                    g_date_out:= nvl(p_date_out, p_work_dt);
               else
                    g_date_in:= nvl(p_date_in, p_work_dt);
                    g_date_out:= nvl(p_date_out, to_char(to_date(p_work_dt, 'yyyymmdd')+1, 'yyyymmdd'));
               end if;
            
                update thr_work_date a
                set a.date_in = g_date_in
                   ,a.time_in = p_time_in
                   ,a.date_out = g_date_out
                   ,a.time_out = p_time_out
                   ,a.mid_time_out = p_mid_time_out
                   ,a.mid_time_in = p_mid_time_in
                   ,a.mid_wt = p_mid_wt
                   ,a.wt = hr_sf_get_wt_com(g_date_in||p_time_in, g_date_out||p_time_out,a.thr_ws_pk,a.work_dt, nvl(a.tco_company_pk, 99) )
                   ,a.ot = case when a.ot_yn = 'Y' then hr_sf_get_ot_com(a.start_ot, g_date_out||p_time_out , a.thr_ws_pk, a.work_dt,l_kind_ot, nvl(a.tco_company_pk, 99))
                                else 0 end
                   ,a.mod_byhand_yn = 'Y'
                   ,a.mod_by = p_crt_by
                   ,a.mod_dt = sysdate
                   ,a.remark = l_mod_wt_yn
                where a.del_if=0
                and a.pk = p_thr_wd_pk;
                
                update thr_work_date a
                set a.nt = hr_sf_get_nt1_com(a.start_nt,g_date_out||p_time_out, a.thr_ws_pk, a.work_dt, g_date_in||p_time_in, nvl(a.tco_company_pk, 99))
                   ,a.ont= case when a.ot_yn = 'Y' then hr_sf_get_nt2_com(a.start_nt,g_date_out||p_time_out, a.thr_ws_pk, a.work_dt, g_date_in||p_time_in, nvl(a.tco_company_pk, 99))
                                else 0 end
                   ,a.mod_byhand_yn = 'Y'
                   ,a.mod_by = p_crt_by
                   ,a.mod_dt = sysdate
                   ,a.remark = l_mod_wt_yn
                where a.del_if=0
                and a.time_in is not null
                and a.time_out is not null
                and a.pk = p_thr_wd_pk;
            
            else  --Input data
                update thr_work_date a
                set a.date_in = p_date_in
                   ,a.time_in = p_time_in
                   ,a.date_out = p_date_out
                   ,a.time_out = p_time_out
                   ,a.wt = p_wt
                   ,a.ot = p_ot
                   ,a.ot_xn = p_ot_xn
                   ,a.nt = p_nt
                   ,a.ont= p_ont
                   ,a.mid_time_out = p_mid_time_out
                   ,a.mid_time_in = p_mid_time_in
                   ,a.mid_wt = p_mid_wt
                   ,a.mod_byhand_yn = 'Y'
                   ,a.mod_by = p_crt_by
                   ,a.mod_dt = sysdate
                   ,a.remark = l_mod_wt_yn
                where a.del_if=0
                and a.pk = p_thr_wd_pk;
            end if;
            
            -- tinh gio wt rate, ot rate, nt rate
            update thr_work_date a
            set a.wt_rate = case when nvl(a.wt, 0) > 0 then decode(a.hol_type, 'SUN', l_st_rate, 'HOL', l_ht_rate, l_wt_rate) else 0 end
               ,a.ot_rate = case when nvl(a.ot, 0) > 0 then decode(a.hol_type, 'SUN', l_ost_rate, 'HOL', l_oht_rate, l_ot_rate) else 0 end
               ,a.nt_rate = case when nvl(a.nt, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt30_rate) else 0 end
               ,a.ont_rate = case when nvl(a.ont, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt45_rate) else 0 end
               ,a.wd = round(nvl(a.wt, 0)/ nvl(a.shift_time, 8), 2)
            where a.del_if=0
            and a.pk = p_thr_wd_pk;
            
            
            -- cho nhung nguoi trong che do  
             update thr_work_date a 
                set a.wt =nvl((select 
                                   decode(max(l.reg_type),'01',
                                            case when hr_sf_get_wt_com(to_char(to_date(a.date_in||a.time_in,'yyyymmdd HH24:MI')-max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date in 
                                                 ,a.date_out||a.time_out--date out 
                                                 ,a.thr_ws_pk,a.work_dt,l_tco_company_pk)>max(nvl(w.wt,0)+nvl(w.wt_plus,0)) then max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                            else hr_sf_get_wt_com(to_char(to_date(a.date_in||a.time_in,'yyyymmdd HH24:MI')-max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date in 
                                                 ,a.date_out||a.time_out--date out 
                                                 ,a.thr_ws_pk,a.work_dt,l_tco_company_pk)
                                            end,        
                                           '03',
                                            case when hr_sf_get_wt_com(a.date_in||a.time_in--date in 
                                                 ,to_char(to_date(a.date_out||a.time_out,'yyyymmdd HH24:MI')+max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date out 
                                                 ,a.thr_ws_pk,a.work_dt,l_tco_company_pk) >max(nvl(w.wt,0)+nvl(w.wt_plus,0)) then max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                            else hr_sf_get_wt_com(a.date_in||a.time_in--date in 
                                                 ,to_char(to_date(a.date_out||a.time_out,'yyyymmdd HH24:MI')+max(nvl(l.reg_hours,0))/24,'yyyymmddHH24:MI')--date out 
                                                 ,a.thr_ws_pk,a.work_dt,l_tco_company_pk)
                                            end,
                                            '04', 
                                            case when hr_sf_get_wt_com(a.date_in||a.time_in,a.date_out||a.time_out,a.thr_ws_pk,a.work_dt,l_tco_company_pk)+max(nvl(l.reg_hours,0))>max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                                 then max(nvl(w.wt,0)+nvl(w.wt_plus,0)) 
                                            else hr_sf_get_wt_com(a.date_in||a.time_in,a.date_out||a.time_out, a.thr_ws_pk, a.work_dt,l_tco_company_pk)
                                                 +max(nvl(l.reg_hours,0))
                                            end,0) as wt                                                                                                     
                                    from thr_regulation l, thr_work_shift w
                                    where l.del_if=0 and l.thr_emp_pk= a.thr_emp_pk
                                    and w.del_if=0
                                    and w.pk = a.thr_ws_pk
                                    and a.work_dt between l.start_dt and l.end_dt
                                    group by l.thr_emp_pk),0)
                    , a.remark = 'UPDATE WT WITH REGULATION'
                where a.del_if=0
                and a.hol_type is null
                and a.thr_emp_pk in (select d.thr_emp_pk
                                             from thr_regulation d where d.del_if = 0
                                             and d.thr_emp_pk=a.thr_emp_pk
                                             group by d.thr_emp_pk
                                             having max(d.start_dt)<= a.work_dt and max(d.end_dt)>= a.work_dt)
                and a.pk = p_thr_wd_pk;
            
            
            --HPDQ
             update thr_work_date a
                set (A.LATELY, A.EARLY)  = (select round(case when a.time_in is not null and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi') 
                                                            then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                            else null end)
                                                ,round(case when a.time_out is not null and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                                                < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
                                                             then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                    - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60
                                                             else null end)
                                            from thr_work_shift s
                                            where s.del_if=0
                                            and s.pk = a.thr_ws_pk)  
                where a.del_if=0
                and a.pk = p_thr_wd_pk
                and a.thr_ws_pk not in (28, 50);
            
             update thr_work_date a
                set (A.LATELY, A.EARLY)  = (select round(case when a.time_in is not null and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi') 
                                                           then (case when a.time_in between S.START_MEAL1 and S.END_MEAL1 
                                                                     then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                                           - (to_date(a.work_dt || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_meal1, 'yyyymmddhh24:mi'))*24*60
                                                                     when a.time_in > s.end_meal1 
                                                                     then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                                            - (to_date(a.work_dt || s.end_meal1, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_meal1, 'yyyymmddhh24:mi'))*24*60
                                                                     else (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                                                                     end)
                                                    else null end) as lately
                                        ,round(case when a.time_out is not null and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                                        < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
                                                     then (case when a.time_out between S.START_MEAL1 and S.END_MEAL1 
                                                                then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                        - to_date(a.date_out || s.end_meal1 , 'yyyymmddhh24:mi'))*24*60
                                                                when a.time_out < s.start_meal1
                                                                then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                        - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60
                                                                    - (to_date(a.work_dt || s.end_meal1, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_meal1, 'yyyymmddhh24:mi'))*24*60
                                                                else (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                                                        - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60       
                                                                end)
                                                     else null end) as early
                                    from thr_work_shift s
                                    where s.del_if=0
                                    and s.pk = a.thr_ws_pk)  
                where a.del_if=0
                and a.pk = p_thr_wd_pk
                and a.thr_ws_pk in (28, 50);
           
        end if;
        
        
        if l_mod_abs_yn = 'Y' then --and l_hol_type is null then
           
            if p_absence_type is not null then
            
               select max(decode(nvl(v.num_1,0), 0, 'N', 'Y')), max(nvl(v.num_1, 0))   
                    , max(decode(nvl(v.num_2,0), 0, 'N', 'Y')), max(nvl(v.num_2, 0))
                    , max(v.char_1)  
               into l_company_pay_yn, l_company_pay_rate, l_insurance_pay_yn, l_insurance_pay_rate, l_short_nm
               from vhr_hr_code v where v.id='HR0003' and v.code = p_absence_type;
               
                 -- co roi thi update
                  update thr_absence a
                    set a.absence_type = p_absence_type
                    , a.absence_time = case when p_absence_type is not null and p_absence_time is null
                                            then nvl(l_shift_time, 8) - nvl(l_wt, 0) else to_number(nvl(p_absence_time, 0)) end
                    , a.company_pay_yn = l_company_pay_yn
                    , a.company_pay_rate = l_company_pay_rate
                    , a.insurance_pay_yn = l_insurance_pay_yn
                    , a.insurance_pay_rate = l_insurance_pay_rate
                    , a.short_nm = l_short_nm
                    , a.mod_by = p_crt_by
                    , a.mod_dt = sysdate
                    , a.remark = 'UPDATE FROM WORKING DAILY FORM'
                   where a.del_if=0
                   and a.thr_emp_pk = p_thr_emp_pk
                   and a.absence_dt = p_work_dt;
               
                 -- chua co data thi insert
                 insert into thr_absence(pk, thr_absence_period_pk, thr_emp_pk, thr_wg_pk, thr_ws_pk, absence_type, absence_time
                                     , company_pay_yn, company_pay_rate, insurance_pay_yn, insurance_pay_rate
                                     , absence_dt, start_time, end_time, del_if, crt_dt, crt_by, remark, description
                                     , reg_type, from_dt,to_dt, short_nm, week_no)  
                 select thr_absence_seq.nextval, null, a.pk, a.thr_wg_pk, p_shift, p_absence_type, nvl(p_absence_time
                                    , case when p_absence_type is not null and p_absence_time is null
                                            then nvl(l_shift_time, 8) - nvl(l_wt, 0) else to_number(nvl(p_absence_time, 0)) end)
                                    ,l_company_pay_yn, l_company_pay_rate, l_insurance_pay_yn, l_insurance_pay_rate
                                    , p_work_dt, null, null, 0, sysdate, p_crt_by, 'INSERT FROM WORKING DAILY FORM', null
                                    , 1, p_work_dt, p_work_dt, l_short_nm, HR_F_GET_WEEKS(p_work_dt)
                 from thr_employee a
                 where a.del_if=0
                 and a.pk =p_thr_emp_pk
                 and a.pk not in (select b.thr_emp_pk from thr_absence b where b.del_if=0
                                    and b.absence_dt = p_work_dt
                                    and b.thr_emp_pk = p_thr_emp_pk);    
             
            end if;
            
        end if;       
     
        
        update thr_absence a
        set A.DEL_IF = a.pk
        , A.MOD_BY = p_crt_by
        , A.MOD_DT = sysdate
        , A.REMARK = 'DELETE AUTO FROM WORKING DAILY'
        where a.del_if=0
        and a.absence_dt = p_work_dt
        and a.thr_emp_pk = p_thr_emp_pk
        and a.absence_type = '13' -- no scan 
        and a.thr_emp_pk in (select w.thr_emp_pk  from thr_work_date w
                                where w.del_if=0
                                and w.pk = p_thr_wd_pk
                                and w.time_in is not null or w.time_out is not null );
        
        
        --kiem tra du lieu wt + absence
        select max(nvl(a.wt, 0) + nvl(b.absence_time, 0))
        into l_total_wt_abs 
        from thr_work_date a, thr_absence b
        where a.del_if=0 and b.del_if(+) = 0
        and a.thr_emp_pk = b.thr_emp_pk(+)
        and a.work_dt = b.absence_dt(+)
        and a.pk = p_thr_wd_pk;
        
        if nvl(l_total_wt_abs, 0) > nvl(l_shift_time, 0) then
            raise_application_error(-20009, 'GIỜ WT VÀ GIỜ VẮNG KHÔNG THỂ VƯỢT GIỜ CA LÀM VIỆC!');
        end if;
        
       
        
   elsif p_action = 'DELETE' then
   
       update thr_work_date a
        set a.del_if = a.pk
        ,a.remark  = 'DELETE BY WORKING DAILY'
        ,a.mod_by = p_crt_by
        ,a.mod_dt = sysdate
        where a.del_if=0
        and a.pk = p_thr_wd_pk;  
        
    
   end if;
      
      
EXCEPTION
    
    WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20002,SQLERRM);
      ROLLBACK WORK;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00200_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00200_0 
( p_from varchar2,
p_to varchar2,
p_company_pk varchar2,
p_ctrl varchar2, p_dat out varchar2)IS
tmpVar NUMBER;

lnvI               Number  := 0  ;
lnvDays               Number  := 0  ;
lnvPK               Number  := 0  ;
lDvDate            DATE;
lSvDate            VARCHAR2(8);
rSvRet             VARCHAR2(100):='';

BEGIN
   tmpVar := 0;
tmpVar:=to_date(p_to,'yyyymmdd') -to_date(p_from,'yyyymmdd');
if tmpVar > 0 then
  FOR lnvI IN 0..tmpVar LOOP


       lDvDate := TO_DATE(p_from,'YYYYMMDD') + lnvI;
       lSvDate := TO_CHAR(lDvDate,'YYYYMMDD');

       BEGIN

       INSERT INTO thr_CALENDAR (PK,     CAR_DATE, DAY_TYPE,   DEL_IF, CRT_BY, CRT_DT, hol_type,tco_company_pk )
       select thr_CALENDAR_seq.nextval, lSvDate,  to_char(lDvDate,'D'),    0,  'GEN',SYSDATE
        , case when to_char(lDvDate,'D') ='1' then 'SUN'
            else ''
          end as hol_type,p_company_pk
       from dual
       where lSvDate not in(select a.CAR_DATE from thr_CALENDAR a where a.del_if=0
                    and a.tco_company_pk=p_company_pk);

       EXCEPTION
         WHEN NO_DATA_FOUND THEN
             rSvRet := '-11' ;
          WHEN OTHERS THEN
             rSvRet := '-21'||TO_CHAR(lnvI)||TO_CHAR(lnvDays)||RTRIM(SUBSTR(SQLERRM,10,90)) || '[' || TO_CHAR(SQLCODE) || ']';

       END;

--      EXECUTE IMMEDIATE lsvSql;

        rSvRet := TO_CHAR(lDvDate,'YYYYMMDD')||'  '||TO_CHAR(lnvI);

    END LOOP;


end if;
  select max( a.car_date )into p_dat from thr_CALENDAR a 
  where a.del_if=0
  and a.tco_company_pk=p_company_pk;

   EXCEPTION
     WHEN NO_DATA_FOUND THEN
       NULL;
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00300_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_pro_hrti00300_0 (
   p_company_pk         varchar2, 
   p_thr_wg_pk               varchar2,
   p_thr_ws_pk              varchar2,
   p_from                   varchar2,
   p_to                     varchar2,
   p_flag                   varchar2,
   p_crt_by                varchar2
   ,p_result   out     number
)
is
  --  p_result varchar2(50);
   l_count         number;
l_flag_exist boolean:=false;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;

begin

/* 1 cong ty co nhieu chu ky ?/
    open l_cur for
        SELECT 1 FROM THR_CLOSE A
        WHERE A.DEL_IF=0 AND NVL(A.CLOSE_YN,'N')='Y'
        and A.TCO_COMPANY_PK=p_company_pk
        AND (p_from BETWEEN A.FROM_DT AND A.TO_DT
                OR p_to BETWEEN A.FROM_DT AND A.TO_DT);

         FETCH l_cur INTO l_cur_rec;
          l_flag_exist := l_cur%FOUND;
        CLOSE l_cur;
        IF l_flag_exist=TRUE THEN
            p_result:=-1;
            raise l_check;
        END IF;
*/

    if p_flag='MANUAL' then

    insert into thr_wg_sch_master
            (pk, thr_wg_pk, thr_ws_pk, work_dt, day_type, hol_type, remark, del_if, crt_by, crt_dt)
            select thr_wg_sch_master_seq.nextval,d.thr_wg_pk,d.shift, d.work_dt, day_type,hol_type, p_flag,0, p_crt_by, sysdate
                  from (select b.car_date as work_dt,c.pk as thr_wg_pk,a.pk as shift,b.day_type,b.hol_type
                         from thr_work_shift a,thr_calendar b,thr_work_group c
                       where a.del_if = 0 and b.del_if=0 and c.del_if=0
                       and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,c.pk)=p_thr_wg_pk
                       and a.pk = p_thr_ws_pk
                       and b.tco_company_pk=c.tco_company_pk
                       and b.tco_company_pk=p_company_pk
                       and b.car_date between p_from and p_to
                       and c.pk not in (select e.thr_wg_pk from thr_wg_sch_master e where e.del_if=0 and e.work_dt=b.car_date and e.thr_wg_pk=c.pk)
                       ) d;
    elsif p_flag='AUTO' then
    
            insert into thr_wg_sch_master
            (pk, thr_wg_pk, thr_ws_pk, work_dt, remark, day_type, hol_type, del_if, crt_by, crt_dt)
            select thr_wg_sch_master_seq.nextval,grp.work_group_pk,grp.shift_pk, cl.car_date,p_flag,cl.day_type,cl.hol_type, 0, p_crt_by, sysdate
           from (select a.pk as work_group_pk, b.thr_ws_pk as shift_pk
                  from thr_work_group a, thr_wg_sch_master b
                 where a.del_if = 0 and b.del_if = 0
                   and a.pk = b.thr_wg_pk
                   and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,a.pk)=p_thr_wg_pk
                and b.work_dt = (select max(c.work_dt)
                                        from thr_wg_sch_master c
                                       where c.del_if = 0
                                         and c.thr_wg_pk = a.pk)
               )grp, thr_work_shift d,thr_calendar cl
        where grp.shift_pk = d.pk
        and cl.car_date between p_from and p_to
        and d.tco_company_pk=cl.tco_company_pk
        and cl.tco_company_pk=p_company_pk
        and grp.work_group_pk not in(select e.thr_wg_pk from thr_wg_sch_master e 
                                                    where e.del_if=0 and e.work_dt=cl.car_date
                                                    and e.thr_wg_pk=grp.work_group_pk);
    elsif p_flag='DEL' then
    
        open l_cur for
            select 1 from thr_wg_sch_master a,thr_wg_sch_detail b,thr_work_group c 
                                    where a.del_if=0 and b.del_if=0 and c.del_if=0
                                    and a.work_dt=b.work_dt and a.thr_wg_pk=c.pk
                                    and a.pk=b.thr_wg_master_pk
                                    and a.work_dt between p_from and p_to
                                    and c.tco_company_pk=p_company_pk
                                    and (nvl(b.close_yn,'N')='Y' or nvl(b.close_m_yn,'N')='Y' or nvl(b.approve_yn,'N')='Y')
                                    and rownum=1;
                                    

            fetch l_cur into l_cur_rec;
            l_flag_exist:=l_cur%found;
            close l_cur;
            
            if l_flag_exist=false then --CHUA APPROVE HOAC CHUA DONG
    
                update thr_wg_sch_master a
                set a.del_if = a.pk
                    ,a.mod_by = p_crt_by || '-DEL'
                    ,a.mod_dt = sysdate
                where a.del_if=0 and a.work_dt between p_from and p_to
                and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,a.thr_wg_pk)=p_thr_wg_pk
                and a.thr_wg_pk in(select w.pk from thr_work_group w where w.del_if=0 and w.tco_company_pk=p_company_pk);    
    
--                DELETE THR_WG_SCH_MASTER A
--                WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN p_from AND p_to
--                AND DECODE(p_thr_wg_pk,'ALL',p_thr_wg_pk,A.THR_WG_PK)=p_thr_wg_pk
--                AND A.THR_WG_PK IN(SELECT W.PK FROM THR_WORK_GROUP W WHERE W.DEL_IF=0 AND W.TCO_COMPANY_PK=p_company_pk);
                
             end if;

    end if;

    -- DETAIL
     if p_flag='DEL' then
        
        update thr_wg_sch_detail d
        set d.del_if = d.pk
            ,d.mod_by = p_crt_by || '-DEL'
            ,d.mod_dt = sysdate
        where d.del_if=0 and d.work_dt between p_from and p_to
        and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,d.thr_wg_pk)=p_thr_wg_pk
        and d.thr_emp_pk in(select e.pk from thr_employee e where e.del_if=0 and e.tco_company_pk=p_company_pk)
        and nvl(d.close_yn,'N')<>'Y' and  nvl(d.close_m_yn,'N')<>'Y'
        and nvl(d.approve_yn,'N')='N';
        
        
        delete thr_wg_sch_detail d
        where d.del_if=0 and d.work_dt between p_from and p_to
        and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,d.thr_wg_pk)=p_thr_wg_pk
        and d.thr_emp_pk in(select e.pk from thr_employee e where e.del_if=0 and e.tco_company_pk=p_company_pk)
        and nvl(d.close_yn,'N')<>'Y' and  nvl(d.close_m_yn,'N')<>'Y'
        and nvl(d.approve_yn,'N')='N';

     elsif p_flag='MANUAL' then
     
            insert into thr_wg_sch_detail
            (pk, thr_wg_master_pk, tco_org_pk, thr_wg_pk, thr_ws_pk, thr_emp_pk, work_dt, remark
                ,day_type, hol_type, del_if, crt_by, crt_dt, duty_yn, salary_type)
            select thr_wg_sch_detail_seq.nextval, a.pk as thr_wg_master_pk, b.tco_org_pk, c.pk as thr_group_pk
            ,a.thr_ws_pk as thr_ws_pk,b.pk as thr_emp_pk,a.work_dt,p_flag,a.day_type,a.hol_type,0,p_crt_by,sysdate,'N', nvl(b.salary_type, '01')
            from thr_wg_sch_master a,thr_employee b,thr_work_group c
            where a.del_if=0 and b.del_if=0 and c.del_if=0
            and b.thr_wg_pk=c.pk and a.thr_wg_pk=c.pk
            and a.work_dt between p_from and p_to
            and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,c.pk)=p_thr_wg_pk
            and c.tco_company_pk=p_company_pk
            and b.pk not in(select g.thr_emp_pk from thr_wg_sch_detail g where g.del_if=0 and g.work_dt=a.work_dt
                            and g.thr_emp_pk=b.pk)
            and b.join_dt<=a.work_dt
            and (b.left_dt is null or b.left_dt>a.work_dt);


     elsif p_flag='AUTO' then

            insert into thr_wg_sch_detail
            (pk, thr_wg_master_pk, tco_org_pk, thr_wg_pk, thr_ws_pk, thr_emp_pk, work_dt,
            remark,day_type,hol_type, del_if, crt_by, crt_dt,duty_yn, salary_type)
            select thr_wg_sch_detail_seq.nextval as pk
                 , g.pk as gw_master_pk, a.tco_org_pk, f.grp_pk, f.ws, a.pk, g.work_dt
                 ,'AUTO',g.day_type, g.hol_type, '0',p_crt_by,sysdate,'N', nvl(a.salary_type, '01')
            from thr_employee a, (select b.thr_wg_pk as grp_pk, b.thr_emp_pk as emp_pk, b.thr_ws_pk as ws
                                    from thr_wg_sch_detail b
                                    where b.del_if=0
                                    and b.work_dt=(select max(e.work_dt)
                                                    from thr_wg_sch_detail e
                                                    where e.del_if=0
                                                    and e.thr_emp_pk=b.thr_emp_pk 
                                                    group by e.thr_emp_pk)
                                    --group by b.THR_wg_PK, b.THR_EMP_PK,b.THR_WS_PK
                                  ) f, thr_wg_sch_master g
            where a.del_if=0
            and g.del_if=0
            and f.emp_pk=a.pk
            and g.thr_wg_pk=f.grp_pk
            and a.join_dt<=g.work_dt
            and (a.left_dt is null or a.left_dt>g.work_dt)
            and a.tco_company_pk=p_company_pk
            and a.pk not in (select h.thr_emp_pk from thr_wg_sch_detail h where h.del_if=0 and h.work_dt=g.work_dt
                            and a.pk=h.thr_emp_pk)
            and g.work_dt between p_from and p_to ;

     end if;



    p_result:=0;

exception
   when l_check then
        p_result:=-1;
        raise_application_error(-20019, sqlerrm);
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      rollback work;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00301_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_pro_hrti00301_0 (
   p_company_pk         varchar2, 
   p_thr_wg_pk               varchar2,
   p_thr_ws_pk              varchar2,
   p_from                   varchar2,
   p_to                     varchar2,
   p_flag                   varchar2,
   p_crt_by                varchar2
   ,p_result   out     number
)
is
  --  p_result varchar2(50);
   l_count         number;
l_flag_exist boolean:=false;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;

begin

/* 1 cong ty co nhieu chu ky ?/
    open l_cur for
        SELECT 1 FROM THR_CLOSE A
        WHERE A.DEL_IF=0 AND NVL(A.CLOSE_YN,'N')='Y'
        and A.TCO_COMPANY_PK=p_company_pk
        AND (p_from BETWEEN A.FROM_DT AND A.TO_DT
                OR p_to BETWEEN A.FROM_DT AND A.TO_DT);

         FETCH l_cur INTO l_cur_rec;
          l_flag_exist := l_cur%FOUND;
        CLOSE l_cur;
        IF l_flag_exist=TRUE THEN
            p_result:=-1;
            raise l_check;
        END IF;
*/

    if p_flag='MANUAL' then

    insert into thr_wg_sch_master
            (pk, thr_wg_pk, thr_ws_pk, work_dt, day_type, hol_type, remark, del_if, crt_by, crt_dt)
            select thr_wg_sch_master_seq.nextval,d.thr_wg_pk,d.shift, d.work_dt, day_type,hol_type, p_flag,0, p_crt_by, sysdate
                  from (select b.car_date as work_dt,c.pk as thr_wg_pk,a.pk as shift,b.day_type,b.hol_type
                         from thr_work_shift a,thr_calendar b,thr_work_group c
                       where a.del_if = 0 and b.del_if=0 and c.del_if=0
                       and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,c.pk)=p_thr_wg_pk
                       and a.pk = p_thr_ws_pk
                       and b.tco_company_pk=c.tco_company_pk
                       and b.tco_company_pk=p_company_pk
                       and b.car_date between p_from and p_to
                       and c.pk not in (select e.thr_wg_pk from thr_wg_sch_master e where e.del_if=0 and e.work_dt=b.car_date and e.thr_wg_pk=c.pk)
                       ) d;
    elsif p_flag='AUTO' then
    
            insert into thr_wg_sch_master
            (pk, thr_wg_pk, thr_ws_pk, work_dt, remark, day_type, hol_type, del_if, crt_by, crt_dt)
            select thr_wg_sch_master_seq.nextval,grp.work_group_pk,grp.shift_pk, cl.car_date,p_flag,cl.day_type,cl.hol_type, 0, p_crt_by, sysdate
           from (select a.pk as work_group_pk, b.thr_ws_pk as shift_pk
                  from thr_work_group a, thr_wg_sch_master b
                 where a.del_if = 0 and b.del_if = 0
                   and a.pk = b.thr_wg_pk
                   and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,a.pk)=p_thr_wg_pk
                and b.work_dt = (select max(c.work_dt)
                                        from thr_wg_sch_master c
                                       where c.del_if = 0
                                         and c.thr_wg_pk = a.pk)
               )grp, thr_work_shift d,thr_calendar cl
        where grp.shift_pk = d.pk
        and cl.car_date between p_from and p_to
        and d.tco_company_pk=cl.tco_company_pk
        and cl.tco_company_pk=p_company_pk
        and grp.work_group_pk not in(select e.thr_wg_pk from thr_wg_sch_master e 
                                                    where e.del_if=0 and e.work_dt=cl.car_date
                                                    and e.thr_wg_pk=grp.work_group_pk);
    elsif p_flag='DEL' then
    
        open l_cur for
            select 1 from thr_wg_sch_master a,thr_wg_sch_detail b,thr_work_group c 
                                    where a.del_if=0 and b.del_if=0 and c.del_if=0
                                    and a.work_dt=b.work_dt and a.thr_wg_pk=c.pk
                                    and a.pk=b.thr_wg_master_pk
                                    and a.work_dt between p_from and p_to
                                    and c.tco_company_pk=p_company_pk
                                    and (nvl(b.close_yn,'N')='Y' or nvl(b.close_m_yn,'N')='Y' or nvl(b.approve_yn,'N')='Y')
                                    and rownum=1;
                                    

            fetch l_cur into l_cur_rec;
            l_flag_exist:=l_cur%found;
            close l_cur;
            
            if l_flag_exist=false then --CHUA APPROVE HOAC CHUA DONG
    
                update thr_wg_sch_master a
                set a.del_if = a.pk
                    ,a.mod_by = p_crt_by || '-DEL'
                    ,a.mod_dt = sysdate
                where a.del_if=0 and a.work_dt between p_from and p_to
                and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,a.thr_wg_pk)=p_thr_wg_pk
                and a.thr_wg_pk in(select w.pk from thr_work_group w where w.del_if=0 and w.tco_company_pk=p_company_pk);    
    
--                DELETE THR_WG_SCH_MASTER A
--                WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN p_from AND p_to
--                AND DECODE(p_thr_wg_pk,'ALL',p_thr_wg_pk,A.THR_WG_PK)=p_thr_wg_pk
--                AND A.THR_WG_PK IN(SELECT W.PK FROM THR_WORK_GROUP W WHERE W.DEL_IF=0 AND W.TCO_COMPANY_PK=p_company_pk);
                
             end if;

    end if;

    -- DETAIL
     if p_flag='DEL' then
        
        update thr_wg_sch_detail d
        set d.del_if = d.pk
            ,d.mod_by = p_crt_by || '-DEL'
            ,d.mod_dt = sysdate
        where d.del_if=0 and d.work_dt between p_from and p_to
        and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,d.thr_wg_pk)=p_thr_wg_pk
--        and d.thr_emp_pk in(select e.pk from thr_employee e where e.del_if=0 and e.tco_company_pk=p_company_pk)
        and nvl(d.close_yn,'N')<>'Y' and  nvl(d.close_m_yn,'N')<>'Y'
        and nvl(d.approve_yn,'N')='N';
        
        
        delete thr_wg_sch_detail d
        where d.del_if=0 and d.work_dt between p_from and p_to
        and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,d.thr_wg_pk)=p_thr_wg_pk
--        and d.thr_emp_pk in(select e.pk from thr_employee e where e.del_if=0 and e.tco_company_pk=p_company_pk)
        and nvl(d.close_yn,'N')<>'Y' and  nvl(d.close_m_yn,'N')<>'Y'
        and nvl(d.approve_yn,'N')='N';

     elsif p_flag='MANUAL' then
     
            insert into thr_wg_sch_detail
            (pk, thr_wg_master_pk, tco_org_pk, thr_wg_pk, thr_ws_pk, thr_emp_pk, work_dt, remark
                ,day_type, hol_type, del_if, crt_by, crt_dt, duty_yn, salary_type)
            select thr_wg_sch_detail_seq.nextval, a.pk as thr_wg_master_pk, b.tco_org_pk, c.pk as thr_group_pk
            ,a.thr_ws_pk as thr_ws_pk,b.pk as thr_emp_pk,a.work_dt,p_flag,a.day_type,a.hol_type,0,p_crt_by,sysdate,'N', nvl(b.salary_type, '01')
            from thr_wg_sch_master a,thr_employee b,thr_work_group c
            where a.del_if=0 and b.del_if=0 and c.del_if=0
            and b.thr_wg_pk=c.pk and a.thr_wg_pk=c.pk
            and a.work_dt between p_from and p_to
            and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,c.pk)=p_thr_wg_pk
            and c.tco_company_pk=p_company_pk
            and b.pk not in(select g.thr_emp_pk from thr_wg_sch_detail g where g.del_if=0 and g.work_dt=a.work_dt
                            and g.thr_emp_pk=b.pk)
            and b.join_dt<=a.work_dt
            and (b.left_dt is null or b.left_dt>a.work_dt);


     elsif p_flag='AUTO' then

            insert into thr_wg_sch_detail
            (pk, thr_wg_master_pk, tco_org_pk, thr_wg_pk, thr_ws_pk, thr_emp_pk, work_dt,
            remark,day_type,hol_type, del_if, crt_by, crt_dt,duty_yn, salary_type)
            select thr_wg_sch_detail_seq.nextval as pk
                 , g.pk as gw_master_pk, a.tco_org_pk, f.grp_pk, f.ws, a.pk, g.work_dt
                 ,'AUTO',g.day_type, g.hol_type, '0',p_crt_by,sysdate,'N', nvl(a.salary_type, '01')
            from thr_employee a, (select b.thr_wg_pk as grp_pk, b.thr_emp_pk as emp_pk, b.thr_ws_pk as ws
                                    from thr_wg_sch_detail b
                                    where b.del_if=0
                                    and b.work_dt=(select max(e.work_dt)
                                                    from thr_wg_sch_detail e
                                                    where e.del_if=0
                                                    and e.thr_emp_pk=b.thr_emp_pk 
                                                    group by e.thr_emp_pk)
                                    --group by b.THR_wg_PK, b.THR_EMP_PK,b.THR_WS_PK
                                  ) f, thr_wg_sch_master g
            where a.del_if=0
            and g.del_if=0
            and f.emp_pk=a.pk
            and g.thr_wg_pk=f.grp_pk
            and a.join_dt<=g.work_dt
            and (a.left_dt is null or a.left_dt>g.work_dt)
            and a.tco_company_pk=p_company_pk
            and a.pk not in (select h.thr_emp_pk from thr_wg_sch_detail h where h.del_if=0 and h.work_dt=g.work_dt
                            and a.pk=h.thr_emp_pk)
            and g.work_dt between p_from and p_to ;

     end if;



    p_result:=1;

exception
   when l_check then
        p_result:=-1;
        raise_application_error(-20019, sqlerrm);
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      rollback work;
end ;
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00301_1;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_pro_hrti00301_1 (
   p_company_pk             varchar2, 
   p_thr_wg_pk              varchar2,
   p_thr_ws_pk              varchar2,
   p_from                   varchar2,
   p_to                     varchar2,
   p_flag                   varchar2,
   p_crt_by                 varchar2,
   p_result   out     number
)
is
  
   l_thr_emp_pk         number;
   l_cur sys_refcursor;
   l_cur_rec            number;
   l_flag_exist         boolean:=false;

begin


   select max(a.thr_emp_pk) into l_thr_emp_pk 
   from thr_work_date a
   where a.del_if=0
   and a.work_dt between p_from and p_to
   and (to_char(a.thr_wg_pk) = p_thr_wg_pk
        or p_thr_wg_pk = 'ALL');

    if l_thr_emp_pk is not null then
        raise_application_error(-20009, 'CAN NOT DELETE, WORKING DAILY HAVE DATA');
    end if;
    
    
    update thr_wg_sch_detail d
        set d.del_if = d.pk
            ,d.mod_by = p_crt_by || '-DEL'
            ,d.mod_dt = sysdate
        where d.del_if=0 
        and d.work_dt between p_from and p_to
        and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,d.thr_wg_pk)=p_thr_wg_pk
--        and d.thr_emp_pk in(select e.pk from thr_employee e where e.del_if=0 and e.tco_company_pk=p_company_pk)
        and nvl(d.close_yn,'N')<>'Y' and  nvl(d.close_m_yn,'N')<>'Y'
        and nvl(d.approve_yn,'N')='N';


    open l_cur for
            select 1 from thr_wg_sch_master a,thr_wg_sch_detail b,thr_work_group c 
                                    where a.del_if=0 and b.del_if=0 and c.del_if=0
                                    and a.work_dt=b.work_dt and a.thr_wg_pk=c.pk
                                    and a.pk=b.thr_wg_master_pk
                                    and a.work_dt between p_from and p_to
                                    and c.tco_company_pk=p_company_pk
                                    and (nvl(b.close_yn,'N')='Y' or nvl(b.close_m_yn,'N')='Y' or nvl(b.approve_yn,'N')='Y')
                                    and rownum=1;
                                    

            fetch l_cur into l_cur_rec;
            l_flag_exist:=l_cur%found;
            close l_cur;
            
            if l_flag_exist=false then --CHUA APPROVE HOAC CHUA DONG
    
                update thr_wg_sch_master a
                set a.del_if = a.pk
                    ,a.mod_by = p_crt_by || '-DEL'
                    ,a.mod_dt = sysdate
                where a.del_if=0 and a.work_dt between p_from and p_to
                and decode(p_thr_wg_pk,'ALL',p_thr_wg_pk,a.thr_wg_pk)=p_thr_wg_pk
                and a.thr_wg_pk in(select w.pk from thr_work_group w where w.del_if=0 and w.tco_company_pk=p_company_pk);    
    
                
             end if;

    p_result:=1;

exception
  
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      rollback work;
end ;
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00500_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00500_0(
    p_company_pk    IN  VARCHAR2,
    p_work_mon      IN  VARCHAR2,
    p_period        IN    VARCHAR2,    -- YYYYMMDD
    p_crt_by                VARCHAR2,
    p_from        OUT VARCHAR2,      
    p_to        OUT VARCHAR2,
    p_num       OUT NUMBER,
    p_flag       OUT varchar2
) IS
AN_SYS_ERROR_MSG        VARCHAR2(100);

l_flag_exist boolean:=FALSE;
l_check     exception;
l_cur_rec number;
l_cur sys_refcursor;
l_string varchar2(2000):='';
l_pro varchar2(200):='';
    

--******************************************
  -- Modify by    : huynh truong
  -- Modify date  : 24/03/2005
--******************************************

BEGIN
    open l_cur for
    SELECT nvl(a.CLOSE_YN,'N') FROM THR_CLOSE A
    WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon
     AND A.ID='01'
     AND nvl(A.TCO_COMPANY_PK, p_company_pk) = p_company_pk  ;
     
     FETCH l_cur INTO p_flag;
      l_flag_exist := l_cur%FOUND;
    CLOSE l_cur;
    
    IF l_flag_exist=FALSE OR p_period='02' THEN
        if l_flag_exist=FALSE then
            p_flag:='N';
        end if;    
        
        select p_work_mon||'01',to_char(last_day(to_date(p_work_mon,'yyyymm')),'yyyymmdd') into p_from,p_to 
        from dual;
    else     
        SELECT A.FROM_DT,A.TO_DT INTO p_from,p_to
        FROM THR_CLOSE A
        WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon
        AND A.ID='01'
        AND nvl(A.TCO_COMPANY_PK, p_company_pk) = p_company_pk;
    END IF;
    
    select count(*) INTO p_num
    from thr_CALENDAR a
    where a.del_if=0 and a.car_date between p_from and p_to
    AND nvl(A.TCO_COMPANY_PK, p_company_pk) = p_company_pk;


    EXCEPTION
    WHEN  OTHERS                  THEN
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20002, ':ERROR... '||SQLERRM );
END  ST_HR_PRO_HRTI00500_0;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00500_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00500_1 (
   p_mon               varchar2,
   p_from                   varchar2,
   p_to                     varchar2,
   p_crt_by                varchar2,
   p_result   out     number
)
is

   l_count         number;
l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;
default_shift number(5):=1;

begin

    select nvl(a.num_5,1) into default_shift
    from vhr_hr_code a where a.id='HR0028' and a.code='01';
    
    --insert master 
    INSERT INTO THR_WG_SCH_MASTER
    (PK, THR_WG_PK, THR_WS_PK, WORK_DT, DAY_TYPE, HOL_TYPE, REMARK, DEL_IF, CRT_BY, CRT_DT)
    SELECT THR_WG_SCH_MASTER_SEQ.NEXTVAL,D.THR_WG_PK,D.SHIFT, D.WORK_DT, DAY_TYPE,HOL_TYPE,NULL,0, p_crt_by, SYSDATE
          FROM (SELECT B.CAR_DATE AS WORK_DT,C.PK AS THR_WG_PK,A.PK AS SHIFT,B.DAY_TYPE,B.HOL_TYPE
                 FROM THR_WORK_SHIFT A, THR_CALENDAR B,THR_WORK_GROUP C
               WHERE A.DEL_IF = 0 AND B.DEL_IF=0 AND C.DEL_IF=0
               AND A.shift=default_shift
               AND B.CAR_DATE BETWEEN p_from AND p_to
               AND C.PK NOT IN (SELECT E.THR_WG_PK FROM THR_WG_SCH_MASTER E WHERE E.DEL_IF=0 AND E.WORK_DT=B.CAR_DATE)
               ) D;
    
    -- insert detail 
    INSERT INTO THR_WG_SCH_DETAIL
            (PK, THR_WG_MASTER_PK, THR_WG_PK, THR_WS_PK, THR_EMP_PK, WORK_DT, REMARK,DAY_TYPE,HOL_TYPE, DEL_IF, CRT_BY, CRT_DT)
            SELECT THR_WG_SCH_DETAIL_SEQ.NEXTVAL,A.PK AS THR_WG_MASTER_PK,C.PK AS THR_GROUP_PK
            ,A.THR_WS_PK AS THR_WS_PK,B.PK AS THR_EMP_PK,A.WORK_DT,null,A.DAY_TYPE,A.HOL_TYPE,0,p_crt_by,SYSDATE
            FROM THR_WG_SCH_MASTER A,THR_EMPLOYEE B,THR_WORK_GROUP C
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0
            AND B.THR_WG_PK=C.PK AND A.THR_WG_PK=C.PK
            AND A.WORK_DT between p_from and p_to
            AND B.PK NOT IN(SELECT G.THR_EMP_PK FROM THR_WG_SCH_DETAIL G WHERE G.DEL_IF=0 AND G.WORK_DT=A.WORK_DT
                            and g.thr_emp_pk=b.pk)
            AND B.JOIN_DT<=A.WORK_DT
            AND (B.LEFT_DT IS NULL OR B.LEFT_DT>A.WORK_DT);           

    p_result:=0;

exception
   WHEN l_check THEN
        p_result:=-1;
        Raise_application_error(-20019, sqlerrm);
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      ROLLBACK WORK;
end ST_HR_PRO_HRTI00500_1;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00500_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00500_3 (
   p_thr_emp_pk         varchar2,
   p_mon                varchar2,
   p_from               varchar2,
   p_to                 varchar2,
   p_crt_by             varchar2,
   p_result   out     number
)
is

   l_count         number;
l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;
default_shift number(5):=1;

begin

    select nvl(a.num_5,1) into default_shift
    from vhr_hr_code a where a.id='HR0028' and a.code='01';
    
--    --insert master 
--    INSERT INTO THR_WG_SCH_MASTER
--    (PK, THR_WG_PK, THR_WS_PK, WORK_DT, DAY_TYPE, HOL_TYPE, REMARK, DEL_IF, CRT_BY, CRT_DT)
--    SELECT THR_WG_SCH_MASTER_SEQ.NEXTVAL,D.THR_WG_PK,D.SHIFT, D.WORK_DT, DAY_TYPE,HOL_TYPE,NULL,0, p_crt_by, SYSDATE
--          FROM (SELECT B.CAR_DATE AS WORK_DT,C.PK AS THR_WG_PK,A.PK AS SHIFT,B.DAY_TYPE,B.HOL_TYPE
--                 FROM THR_WORK_SHIFT A, THR_CALENDAR B,THR_WORK_GROUP C
--               WHERE A.DEL_IF = 0 AND B.DEL_IF=0 AND C.DEL_IF=0
--               AND A.shift=default_shift
--               AND B.TCO_COMPANY_PK = 99
--               AND B.CAR_DATE BETWEEN p_from AND p_to
--               AND C.PK NOT IN (SELECT E.THR_WG_PK FROM THR_WG_SCH_MASTER E WHERE E.DEL_IF=0 AND E.WORK_DT=B.CAR_DATE)
--               ) D;
    
    -- insert detail 
    INSERT INTO THR_WG_SCH_DETAIL
            (PK, THR_WG_MASTER_PK, THR_WG_PK, THR_WS_PK, THR_EMP_PK, WORK_DT, REMARK,DAY_TYPE,HOL_TYPE, DEL_IF, CRT_BY, CRT_DT)
            SELECT THR_WG_SCH_DETAIL_SEQ.NEXTVAL,A.PK AS THR_WG_MASTER_PK,C.PK AS THR_GROUP_PK
            ,A.THR_WS_PK AS THR_WS_PK,B.PK AS THR_EMP_PK,A.WORK_DT,null,A.DAY_TYPE,A.HOL_TYPE,0,p_crt_by,SYSDATE
            FROM THR_WG_SCH_MASTER A,THR_EMPLOYEE B,THR_WORK_GROUP C
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0
            AND B.THR_WG_PK=C.PK AND A.THR_WG_PK=C.PK
            AND A.WORK_DT between p_from and p_to
            AND B.PK NOT IN(SELECT G.THR_EMP_PK FROM THR_WG_SCH_DETAIL G WHERE G.DEL_IF=0 AND G.WORK_DT=A.WORK_DT
                            and g.thr_emp_pk=b.pk)
            AND B.JOIN_DT<=A.WORK_DT
            AND (B.LEFT_DT IS NULL OR B.LEFT_DT>A.WORK_DT)
            and b.pk = p_thr_emp_pk
            ;           

    p_result:=0;

exception
   WHEN l_check THEN
        p_result:=-1;
        Raise_application_error(-20019, sqlerrm);
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      ROLLBACK WORK;
end ST_HR_PRO_HRTI00500_3;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_0 (
   p_work_dt                varchar2,
   p_tco_org_pk             varchar2,
   p_tco_company_pk         varchar2,
   p_emp_id                 varchar2,
   p_crt_by                 varchar2,
   p_result   out           number
)
is

   l_wt_rate         number;
    l_error         varchar2(2):='';
    
    l_cur sys_refcursor;
    l_flag_exist boolean :=false;
    
    l_tmp number:=0;
    p_thr_emp_pk number;

begin

    if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;

       l_error:='00';
       OPEN l_cur FOR
       SELECT 1 FROM THR_EMPLOYEE E
       WHERE E.DEL_IF=0 
       AND E.TCO_ORG_PK IN (SELECT     G.PK
                                    FROM TCO_ORG G
                                    WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
       AND (nvl(TO_CHAR(E.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')                                      
       AND hr_sf_check_month_close(p_work_dt,e.SAL_PERIOD,e.tco_company_pk )='Y'
       AND E.PK=NVL(p_thr_emp_pk,E.PK)
       AND ROWNUM=1;
       
        FETCH l_cur INTO l_tmp;
        l_flag_exist:=l_cur%FOUND;
        CLOSE l_cur;
        
        IF l_flag_exist=FALSE THEN --DA DONG 
       
     
                    SELECT C.NUM_1 INTO l_wt_rate
                    FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
                    WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
                    AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y' AND C.CODE='01'
                    AND (nvl(TO_CHAR(c.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                    ;

                --XOA NHUNG NGUOI SAI CA OR SAI HOL TYPE
                l_error:='01';
                UPDATE THR_TIME_MACHINE M
                SET M.DEL_IF=M.PK
                          ,M.MOD_BY= p_crt_by
                          ,M.REMARK='WRONG SHIFT'
                          ,M.MOD_DT=SYSDATE
              WHERE     M.DEL_IF=0
                    AND M.THR_EMP_PK IN(SELECT T.THR_EMP_PK FROM THR_WG_SCH_DETAIL T
                                            WHERE T.DEL_IF=0 AND T.THR_EMP_PK=M.THR_EMP_PK
                                            AND T.WORK_DT =M.WORK_DT
                                            AND T.WORK_DT=p_work_dt
                                            AND (T.THR_WS_PK<>M.THR_WS_PK OR NVL(T.HOL_TYPE,'NOR')<>NVL(M.HOL_TYPE,'NOR'))
                                            )
                           AND M.WORK_DT=p_work_dt
                           AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                         AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
              AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
              and (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
              AND NVL(M.APPROVE_YN,'N')='N'
              AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
              
              

                l_error:='02';
                UPDATE THR_EXTRA_TIME M
                SET M.DEL_IF=M.PK
                          ,M.MOD_BY= p_crt_by
                          ,M.REMARK='WRONG SHIFT'
                          ,M.MOD_DT=SYSDATE
              WHERE  M.DEL_IF=0
                    AND M.THR_EMP_PK IN(SELECT T.THR_EMP_PK FROM THR_WG_SCH_DETAIL T
                                            WHERE T.DEL_IF=0 AND T.THR_EMP_PK=M.THR_EMP_PK
                                            AND T.WORK_DT =M.WORK_DT
                                            AND T.WORK_DT=p_work_dt
                                            AND (T.THR_WS_PK<>M.THR_WS_PK OR NVL(T.HOL_TYPE,'NOR')<>NVL(M.HOL_TYPE,'NOR'))
                                            )
                           AND M.WORK_DT=p_work_dt
                           AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                        AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                            WHERE E.DEL_IF=0 
                                            AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                FROM TCO_ORG G
                                                                WHERE G.DEL_IF = 0
                                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                        AND E.PK=M.THR_EMP_PK)
              AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
              AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
              AND NVL(M.APPROVE_YN,'N')='N'
              AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
              
              

            --DELETE NEU OUT VA IN IS NULL
                l_error:='03';
                DELETE THR_TIME_MACHINE M
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                AND M.TIME_IN IS NULL AND M.TIME_OUT IS NULL
                AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                            WHERE E.DEL_IF=0 
                                            AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                FROM TCO_ORG G
                                                                WHERE G.DEL_IF = 0
                                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                                    AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                

            -- CA NGAY
                l_error:='04';
                INSERT INTO THR_TIME_MACHINE
                (PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN, TIME_OUT, PAY_RATE
                , DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_BYHAND_YN,MOD_AUTO_YN,DAY_TYPE,HOL_TYPE, TCO_COMPANY_PK,ID_NUM)
                SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,WT.EMP_PK,WT.GROUP_PK,p_work_dt,WT.W_SHIFT,
                    WT.TIME_IN,WT.TIME_OUT,l_wt_rate,0,sysdate,p_crt_by,p_work_dt,p_work_dt,'N','N'
                    ,WT.DAY_TYPE,WT.HOL_TYPE, WT.TCO_COMPANY_PK,WT.ID_NUM
                FROM(
                SELECT B.PK AS EMP_PK,B.ID_NUM ID_NUM, MAX(B.THR_WG_PK) AS GROUP_PK,MAX(C.THR_WS_PK) AS W_SHIFT
                 ,MIN(A.TIME) AS TIME_IN
               ,(CASE WHEN MAX(A.TIME)<MAX(E.START_TIME) THEN NULL ELSE MAX(A.TIME) END) AS TIME_OUT
                 ,MAX(C.DAY_TYPE) AS DAY_TYPE
                 ,MAX(C.HOL_TYPE) AS HOL_TYPE
                 ,MAX(B.TCO_COMPANY_PK) AS TCO_COMPANY_PK
                  FROM THR_TIME_TEMP A, THR_EMPLOYEE B, THR_WG_SCH_DETAIL C, THR_WORK_SHIFT E
                 WHERE B.DEL_IF = 0 AND B.DEL_IF=0
                   AND C.DEL_IF = 0 AND E.DEL_IF = 0       
                   AND A.ID = B.ID_NUM
                   AND B.PK = C.THR_EMP_PK AND C.THR_WS_PK = E.PK
                   AND E.START_TIME <= E.END_TIME --BAO GOM CA 07:00-07:00
                   AND C.WORK_DT = A.WORK_DT
                   AND A.WORK_DT = p_work_dt
                   AND B.PK NOT IN (SELECT M.THR_EMP_PK FROM THR_TIME_MACHINE M WHERE M.DEL_IF = 0 
                                        AND M.WORK_DT =  p_work_dt AND M.THR_EMP_PK=B.PK)
                   AND B.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                   AND (nvl(TO_CHAR(B.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                   AND NVL(C.APPROVE_YN,'N')='N'
                   AND B.PK=NVL(p_thr_emp_pk,B.PK)
                GROUP BY B.PK,B.ID_NUM)WT;


                UPDATE THR_TIME_MACHINE M
                SET M.TIME_IN=(SELECT MIN(B.TIME)
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                            WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0
                                            AND C.ID_NUM = B.ID AND C.PK = D.THR_EMP_PK
                                              AND D.THR_WS_PK = E.PK AND D.WORK_DT=p_work_dt
                                              AND M.THR_EMP_PK = C.PK
                                              AND B.WORK_DT = D.WORK_DT
                                              AND M.TIME_IN IS NULL
                                              )
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                    AND M.THR_EMP_PK = (SELECT C.PK
                                      FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                     WHERE C.DEL_IF = 0 AND M.THR_EMP_PK = C.PK
                                            AND B.ID = C.ID_NUM
                                            AND B.WORK_DT = p_work_dt
                                       GROUP BY C.PK)
                 AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                AND M.DATE_IN=p_work_dt
                AND M.THR_WS_PK IN (SELECT D.PK
                                       FROM THR_WORK_SHIFT D
                                      WHERE D.DEL_IF = 0 AND D.PK=M.THR_WS_PK
                                        AND D.START_TIME <= D.END_TIME
                                        AND TO_NUMBER(SUBSTR(D.START_TIME,1,2))> 2
                                        AND (nvl(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                AND M.TIME_IN IS NULL
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);


            --LAY LAI GIO IN hop ly
            l_error:='05';
                UPDATE THR_TIME_MACHINE M
                SET M.TIME_IN=(SELECT MIN(B.TIME)
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                            WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0
                                            AND C.ID_NUM = B.ID AND C.PK = D.THR_EMP_PK
                                              AND D.THR_WS_PK = E.PK AND D.WORK_DT=p_work_dt
                                              AND M.THR_EMP_PK = C.PK
                                              AND ABS(TO_NUMBER(SUBSTR(B.TIME,1,2))-TO_NUMBER(SUBSTR(E.START_TIME,1,2)))<=4
                                              AND B.WORK_DT = D.WORK_DT
                                              AND M.TIME_IN IS NOT NULL
                                              AND B.TIME>M.TIME_IN
                                              )
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                AND NVL(M.MOD_BYHAND_YN,'N')<>'Y' AND NVL(M.MOD_AUTO_YN,'N')<>'Y' 
                    AND M.THR_EMP_PK = (SELECT C.PK
                                      FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                     WHERE C.DEL_IF = 0 AND M.THR_EMP_PK = C.PK
                                            AND B.ID = C.ID_NUM
                                            AND B.WORK_DT = p_work_dt
                                       GROUP BY C.PK)
                AND M.DATE_IN=p_work_dt
                AND M.THR_EMP_PK IN (SELECT E.PK
                                       FROM THR_WORK_SHIFT D,THR_EMPLOYEE E,THR_WG_SCH_DETAIL G
                                      WHERE D.DEL_IF = 0 AND E.DEL_IF=0 AND G.DEL_IF=0
                                             AND E.PK=G.THR_EMP_PK
                                             AND G.WORK_DT=p_work_dt
                                             AND M.THR_EMP_PK=E.PK
                                             AND G.THR_WS_PK=D.PK AND D.START_TIME <= D.END_TIME
                                        AND ABS(TO_NUMBER(SUBSTR(D.START_TIME,1,2))-TO_NUMBER(SUBSTR(M.TIME_IN,1,2)))>6
                                        AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                     )
                AND M.TIME_IN IS NOT NULL
                AND NVL(M.CLOSE_YN,'N')<>'Y'
                AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

            --LAY LAI GIO OUT TRONG NGAY, TRUONG HOP PROCESS SOM
            l_error:='07';
                UPDATE THR_TIME_MACHINE M
                SET M.TIME_OUT=(SELECT MAX(B.TIME)
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                            WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0
                                            AND C.ID_NUM = B.ID AND C.PK = D.THR_EMP_PK
                                              AND D.THR_WS_PK = E.PK AND D.WORK_DT=B.WORK_DT
                                              AND M.THR_EMP_PK = C.PK AND M.WORK_DT=D.WORK_DT
                                              AND TO_NUMBER(SUBSTR(B.TIME,1,2))*60+TO_NUMBER(SUBSTR(B.TIME,4,2))>=TO_NUMBER(SUBSTR(E.START_TIME,1,2))*60+TO_NUMBER(SUBSTR(E.START_TIME,4,2))+60
                                              AND B.WORK_DT = p_work_dt
                                              )
                    ,M.DATE_OUT=p_work_dt
                    ,M.REMARK='07'
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                AND NVL(M.MOD_BYHAND_YN,'N')<>'Y' AND (NVL(M.MOD_AUTO_YN,'N')<>'Y' OR M.TIME_OUT IS NULL)
                 AND (M.TIME_OUT IS NULL
                                    OR NVL(M.TIME_OUT,' ')=NVL(M.TIME_OUT_ORG,' '))
                    AND M.TIME_IN IS NOT NULL
                    AND M.THR_EMP_PK = (SELECT C.PK
                                      FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                     WHERE C.DEL_IF = 0 AND M.THR_EMP_PK = C.PK
                                            AND B.ID = C.ID_NUM
                                            AND B.WORK_DT = p_work_dt
                                       GROUP BY C.PK)
                     AND M.THR_WS_PK = (SELECT D.PK
                                       FROM THR_WORK_SHIFT D
                                      WHERE D.DEL_IF = 0 AND D.PK=M.THR_WS_PK
                                        AND D.START_TIME <= D.END_TIME
                                        AND (nvl(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                 AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
                l_error:='10'; --lay gio out cua ngay hom sau
                UPDATE THR_TIME_MACHINE M
                           SET M.TIME_OUT = (SELECT MIN(B.TIME)
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                            WHERE C.DEL_IF=0 AND C.ID_NUM = B.ID
                                              AND M.THR_EMP_PK = C.PK
                                              AND TO_NUMBER(SUBSTR(B.TIME,1,2))<(SELECT TO_NUMBER(SUBSTR(E.START_TIME,1,2))-2
                                                                FROM THR_WORK_SHIFT E,THR_WG_SCH_DETAIL F
                                                                WHERE E.DEL_IF=0 AND F.DEL_IF=0 AND F.THR_WS_PK=E.PK
                                                                AND F.THR_EMP_PK=C.PK AND F.WORK_DT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD'))
                                              AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                              AND B.TIME IS NOT NULL
                                              )
                               ,M.DATE_OUT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                         WHERE M.DEL_IF = 0 AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                           AND M.WORK_DT = p_work_dt
                           AND M.TIME_OUT IS NULL
                           AND M.TIME_IN IS NOT NULL
                           AND M.THR_EMP_PK = (SELECT C.PK
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                            WHERE B.ID = C.ID_NUM
                                              AND C.DEL_IF = 0 AND M.THR_EMP_PK = C.PK
                                              AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                              GROUP BY C.PK)
                            AND M.THR_WS_PK = (SELECT D.PK
                                              FROM THR_WORK_SHIFT D
                                             WHERE D.DEL_IF = 0
                                               AND M.THR_WS_PK = D.PK
                                               AND D.START_TIME < D.END_TIME
                                               AND TO_NUMBER(SUBSTR(D.START_TIME,1,2))>8
                                               AND (NVL(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                            AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
                l_error:='08';--loc du lieu
                UPDATE THR_TIME_MACHINE M
                SET M.TIME_OUT=NULL
                    ,M.DATE_OUT=NULL
                    ,M.REMARK='IN-OUT SMALLER 30 - 1'
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                 AND M.TIME_IN IS NOT NULL AND M.TIME_OUT IS NOT NULL
                 AND NVL(M.DATE_IN,'0')=NVL(M.DATE_OUT,'1')
                AND hr_F_Check_In_Out(M.TIME_IN,M.TIME_OUT,30) =0
                AND M.DATE_OUT||M.TIME_OUT<(SELECT DECODE(NVL(S.DURING_DAY,1),1,M.WORK_DT||S.END_TIME,TO_CHAR(TO_DATE(M.WORK_DT,'YYYYMMDD'),'YYYYMMDD')||S.END_TIME)
                                                                        FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND S.PK=M.THR_WS_PK
                                                                            AND (NVL(TO_CHAR(S.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
               AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

                l_error:='09';--loc du lieu
                UPDATE THR_TIME_MACHINE M
                SET M.TIME_IN=NULL
                    ,M.DATE_IN=NULL
                    ,M.REMARK='OUT-IN SMALLER 30 -2 '
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                 AND M.TIME_IN IS NOT NULL AND M.TIME_OUT IS NOT NULL
                AND hr_F_Check_In_Out(M.TIME_IN,M.TIME_OUT,30) =0
                AND NVL(M.DATE_IN,'0')=NVL(M.DATE_OUT,'1')
                AND M.DATE_OUT||M.TIME_OUT>=(SELECT DECODE(NVL(S.DURING_DAY,1),1,M.WORK_DT||S.END_TIME,TO_CHAR(TO_DATE(M.WORK_DT,'YYYYMMDD'),'YYYYMMDD')||S.END_TIME)
                                                                        FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND S.PK=M.THR_WS_PK
                                                                            AND (NVL(TO_CHAR(S.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
                
                p_result:=0;
         else
            p_result:=1;
         end if;           


    
--exception
--   when others   then
--      p_result:=-1;
--      raise_application_error (-20002,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_1 (
   p_work_dt               varchar2,
   p_tco_org_pk            varchar2,
   p_tco_company_pk        varchar2,
   p_emp_id                varchar2,
   p_crt_by                varchar2,
   p_result   out          number
)
is

   l_wt_rate         number;
   l_error         varchar2(2):='';
   l_month_close varchar2(1):='';
   l_cur sys_refcursor;
    l_flag_exist boolean :=false;
    l_string varchar2(2000):='';
    l_pro varchar2(2000):='';
    l_tco_org_pk number:=0;
    p_thr_emp_pk number;
begin
    
    if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;
 
        SELECT C.NUM_1 INTO l_wt_rate
            FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
            WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
            AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y' AND C.CODE='01'
            AND (NVL(TO_CHAR(C.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL');


    -- CA DEM
        l_error:='01';--VAO 1 RA 2
        INSERT INTO THR_TIME_MACHINE
        (PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN, TIME_OUT, PAY_RATE
        , DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_BYHAND_YN,MOD_AUTO_YN,DAY_TYPE,HOL_TYPE, TCO_COMPANY_PK,ID_NUM)
        SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,WT.THR_EMP_PK,WT.GROUP_PK,p_work_dt,WT.W_SHIFT,
            WT.TIME_IN,WT.TIME_OUT,l_wt_rate,0,sysdate,p_crt_by,p_work_dt,TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD'),'N','N'
            ,WT.DAY_TYPE,WT.HOL_TYPE, WT.TCO_COMPANY_PK,WT.ID_NUM
       FROM (
             SELECT B.PK AS THR_EMP_PK, D.THR_WG_PK AS GROUP_PK,F.PK AS W_SHIFT
                 ,(SELECT MIN(M.TIME)
                    FROM THR_TIME_TEMP M
                     WHERE M.ID = B.ID_NUM
                        AND TO_NUMBER(SUBSTR(M.TIME,1,2))>=TO_NUMBER(SUBSTR(F.START_TIME,1,2))-4
                        AND M.WORK_DT = p_work_dt) AS TIME_IN
                ,(SELECT MAX(A.TIME)
                     FROM THR_TIME_TEMP A
                    WHERE A.ID = B.ID_NUM
                      AND TO_NUMBER(SUBSTR(A.TIME,1,2))<TO_NUMBER(SUBSTR(F.END_TIME,1,2))+5
                                  AND TO_NUMBER(SUBSTR(A.TIME,1,2))>TO_NUMBER(SUBSTR(F.END_TIME,1,2))-5
                      AND A.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD') ) AS TIME_OUT
                ,D.DAY_TYPE AS DAY_TYPE
                ,D.HOL_TYPE AS HOL_TYPE
                ,B.TCO_COMPANY_PK,B.ID_NUM ID_NUM
                FROM THR_EMPLOYEE B, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT F
             WHERE B.DEL_IF = 0 AND D.DEL_IF = 0 AND F.DEL_IF = 0
                AND B.PK = D.THR_EMP_PK AND D.WORK_DT = p_work_dt
               AND D.THR_WS_PK = F.PK
               AND B.PK NOT IN (SELECT G.THR_EMP_PK FROM THR_TIME_MACHINE G WHERE G.DEL_IF = 0 AND G.WORK_DT= p_work_dt and g.thr_emp_pk=b.pk )
               AND B.ID_NUM IN (SELECT H.ID
                                                  FROM THR_TIME_TEMP H
                                                  WHERE  H.WORK_DT BETWEEN p_work_dt AND TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                                  and h.id=b.id_num
                                                  group by h.id )
              AND F.START_TIME > F.END_TIME
              AND B.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
              AND (NVL(TO_CHAR(B.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
              AND NVL(D.APPROVE_YN,'N')='N'
              AND B.PK=NVL(p_thr_emp_pk,B.PK)
              ORDER BY B.ID_NUM)WT;

        -- VAO NGAY 1 RA NGAY 1
        l_error:='02';
        UPDATE THR_TIME_MACHINE M
                   SET M.TIME_OUT = (SELECT DECODE(hr_F_Check_In_Out(MAX(E.START_TIME),MAX(B.TIME),30),0,'',MAX(B.TIME))
                                     FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                    WHERE C.DEL_IF = 0 AND D.DEL_IF = 0 AND E.DEL_IF=0 AND B.ID = C.ID_NUM
                                      AND C.PK = D.THR_EMP_PK
                                      AND M.THR_EMP_PK = C.PK AND D.THR_WS_PK = E.PK
                                      AND D.WORK_DT=p_work_dt
                                      AND B.WORK_DT = p_work_dt
                                      AND B.TIME > E.START_TIME     --phai lon hon gio bat dau ca lam viec
                                      )
                       ,M.DATE_OUT=p_work_dt
                       ,M.REMARK = '2_02_1'
                 WHERE M.DEL_IF = 0 AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                   AND M.WORK_DT = p_work_dt
                   AND M.TIME_OUT IS  NULL
                   AND M.TIME_IN IS NOT NULL
                   AND M.THR_EMP_PK = (SELECT C.PK
                                     FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                    WHERE C.DEL_IF = 0 AND B.ID = C.ID_NUM
                                      AND M.THR_EMP_PK = C.PK
                                      AND B.WORK_DT = p_work_dt
                                      GROUP BY C.PK)
                    AND M.THR_WS_PK = (SELECT D.PK
                                      FROM THR_WORK_SHIFT D
                                     WHERE D.DEL_IF = 0
                                       AND M.THR_WS_PK = D.PK
                                       AND D.START_TIME > D.END_TIME
                                       AND (NVL(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
    -- VAO NGAY 1 RA NGAY 2
        l_error:='02';
        UPDATE THR_TIME_MACHINE M
                   SET M.TIME_OUT = (SELECT MAX(B.TIME)
                                     FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                    WHERE C.DEL_IF = 0 AND D.DEL_IF = 0 AND E.DEL_IF=0 AND B.ID = C.ID_NUM
                                      AND C.PK = D.THR_EMP_PK
                                      AND M.THR_EMP_PK = C.PK AND D.THR_WS_PK = E.PK
                                      AND D.WORK_DT=p_work_dt
                                      AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                      AND TO_NUMBER(SUBSTR(B.TIME,1,2))<=TO_NUMBER(SUBSTR(E.END_TIME,1,2))+8
                                      AND TO_NUMBER(SUBSTR(B.TIME,1,2))>TO_NUMBER(SUBSTR(E.END_TIME,1,2))-5
                                      )
                       ,M.DATE_OUT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                       ,M.REMARK = '2_02'
                 WHERE M.DEL_IF = 0 AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                   AND M.WORK_DT = p_work_dt
                   AND M.TIME_OUT IS  NULL
                   AND M.TIME_IN IS NOT NULL
                   AND M.THR_EMP_PK = (SELECT C.PK
                                     FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                    WHERE C.DEL_IF = 0 AND B.ID = C.ID_NUM
                                      AND M.THR_EMP_PK = C.PK
                                      AND B.WORK_DT = p_work_dt
                                      GROUP BY C.PK)
                    AND M.THR_WS_PK = (SELECT D.PK
                                      FROM THR_WORK_SHIFT D
                                     WHERE D.DEL_IF = 0
                                       AND M.THR_WS_PK = D.PK
                                       AND D.START_TIME > D.END_TIME
                                       )
                 AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y'AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);


    
                
    -- VAO NGAY 2 RA NGAY 2
    l_error:='03';
        UPDATE THR_TIME_MACHINE M
          SET M.TIME_IN = (SELECT DECODE(hr_F_Check_In_Out2(MAX(E.START_TIME),MIN(B.TIME),6),0,'',MIN(B.TIME))
                         FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                        WHERE C.DEL_IF = 0 AND D.DEL_IF=0 AND E.DEL_IF=0
                          AND B.ID = C.ID_NUM AND C.PK = D.THR_EMP_PK
                          AND  M.THR_EMP_PK = C.PK AND D.THR_WS_PK = E.PK
                          AND D.WORK_DT=p_work_dt
                          AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                          )
            ,M.DATE_IN=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
            ,M.REMARK = '2_03'
        WHERE M.DEL_IF = 0 AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
          AND M.WORK_DT = p_work_dt
          AND M.TIME_OUT IS NOT NULL
          AND M.TIME_IN IS  NULL
          AND M.THR_EMP_PK = (SELECT C.PK
                            FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                        WHERE C.DEL_IF=0 AND B.ID = C.ID_NUM
                          AND M.THR_EMP_PK = C.PK
                          AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                          GROUP BY C.PK)
        AND M.THR_WS_PK = (SELECT D.PK
                             FROM THR_WORK_SHIFT D
                            WHERE D.DEL_IF = 0
                                AND M.THR_WS_PK = D.PK
                                AND D.START_TIME > D.END_TIME
                                )
        AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);


            
    --xoa trong truong hop khong co gio in va ca cua ngay ke tiep la ca ngay 
    UPDATE THR_TIME_MACHINE M
            SET  M.DEL_IF=M.PK
                ,M.REMARK='KO CO GIO IN VA CA NGAY KE TIEP LA CA NGAY'
            WHERE M.del_if=0 AND M.WORK_DT=p_work_dt
                  AND M.TIME_IN IS NULL
                  AND M.THR_EMP_PK IN(SELECT G.THR_EMP_PK FROM THR_WG_SCH_DETAIL G,THR_WORK_SHIFT S   -- ca cua ngay ke tiep la ca ngay 
                                        WHERE G.DEL_IF=0 AND S.DEL_IF=0 AND G.THR_WS_PK=S.PK 
                                        AND G.WORK_DT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                        AND S.START_TIME<S.END_TIME
                                    AND G.THR_EMP_PK=M.THR_EMP_PK)
                 AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
                  and M.hol_type is not null
                  AND M.THR_WS_PK IN(SELECT S.PK FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND S.START_TIME>S.END_TIME 
                                                        AND S.PK=M.THR_WS_PK
                                                        AND (NVL(TO_CHAR(S.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))                  
            AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
            AND NVL(M.APPROVE_YN,'N')='N'
            AND NVL(M.MOD_BYHAND_YN,'N') = 'N'
            AND NVL(M.MOD_AUTO_YN,'N') = 'N'
            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
            

    --GIO IN HOM NAY TRUNG  VOI GIO OUT HOM QUA=> LAY LAI GIO IN 1 LAN NUA
            UPDATE THR_TIME_MACHINE M
            SET  M.TIME_IN=(SELECT MIN(N.TIME) 
                                FROM THR_TIME_TEMP N,THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 AND E.ID_NUM=N.ID 
                                      AND N.WORK_DT=p_work_dt
                                AND N.TIME>M.TIME_IN
                                AND E.PK=M.THR_EMP_PK
                                AND N.WORK_DT=M.WORK_DT
                                AND N.TIME<'12:00')
                ,M.DATE_IN=p_work_dt
                ,M.REMARK='TRUNG VOI GIO OUT NGAY TRUOC'
            WHERE M.del_if=0 AND M.WORK_DT=p_work_dt
                  AND M.TIME_IN IS NOT NULL
                  AND M.TIME_IN IN(SELECT NVL(T.TIME_OUT,' ') FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                    AND T.WORK_DT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')-1,'YYYYMMDD')
                                    AND T.THR_EMP_PK=M.THR_EMP_PK)
                 AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
            AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
            AND NVL(M.APPROVE_YN,'N')='N'
            AND NVL(M.MOD_BYHAND_YN,'N') = 'N'
            AND NVL(M.MOD_AUTO_YN,'N') = 'N'
            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
            
                    --loc du lieu lai 1 lan nua
            UPDATE THR_TIME_MACHINE M
            SET M.TIME_OUT=NULL
                ,M.REMARK = 'TIME_OUT NULL'
            WHERE M.del_if=0 AND M.WORK_DT=p_work_dt
                  AND M.TIME_IN IS NOT NULL
                  AND M.TIME_OUT IS NOT NULL
                  AND  hr_F_Check_In_Out(M.TIME_IN,M.TIME_OUT,30) =0
                  AND NVL(M.DATE_IN,'0')=NVL(M.DATE_OUT,'1')
                  AND M.THR_WS_PK = (SELECT D.PK
                             FROM THR_WORK_SHIFT D
                            WHERE D.DEL_IF = 0
                                AND M.THR_WS_PK = D.PK
                                AND D.START_TIME > D.END_TIME
                                AND (NVL(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                  AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
            AND NVL(M.CLOSE_YN,'N')<>'Y'  AND NVL(M.CLOSE_M_YN,'N')<>'Y'
            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
            AND NVL(M.APPROVE_YN,'N')='N'
            AND NVL(M.MOD_BYHAND_YN,'N') = 'N'
            AND NVL(M.MOD_AUTO_YN,'N') = 'N'
            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

          

 
    p_result:=0;

--exception
--   when others   then
--      p_result:=-1;
--      raise_application_error (-20002,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_2 (
   p_work_dt               varchar2,
   P_TCO_ORG_PK            varchar2,
   p_tco_company_pk        varchar2,
   p_emp_id                varchar2,
   p_crt_by                varchar2,
   p_result   out          number
)
is

   l_wt_rate         number;
   l_error         varchar2(2):='';
    l_month_close varchar2(1):='';
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_pro varchar(200);
    l_string varchar(200);
    l_tco_org_pk number:=0;
    l_wt_add    number;
    l_wt_condition1 number;
    l_wt_condition2 number;
    p_thr_emp_pk number;
begin
    
    if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;
     
         l_error:='01';
         --added: 12-06-2015 : truong
                 select nvl(max(NVL(A.NUM_1,0)),0),nvl(max(NVL(A.NUM_2,0)),0),nvl(max(NVL(A.NUM_3,0)),99)
                 INTO l_wt_add,l_wt_condition1 ,l_wt_condition2
                 FROM THR_CODE_DETAIL A WHERE A.DEL_IF=0 AND A.USE_YN='Y' AND A.MASTER_ID='HR0208' AND A.CODE='01'; 
         
        --XAC DINH TEMP OUT 1
         
        UPDATE THR_TIME_MACHINE M
        SET M.TEMP_OUT=HR_GET_MID_TIME(M.DATE_IN,M.TIME_IN,M.DATE_OUT,M.TIME_OUT,M.ID_NUM)
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y' 
        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = p_work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        
        --XAC DINH TEMP IN 1 
         
        UPDATE THR_TIME_MACHINE M
        SET M.TEMP_IN=HR_GET_MID_TIME((CASE WHEN M.TEMP_OUT>M.TIME_IN THEN M.DATE_IN ELSE TO_CHAR(TO_DATE(M.DATE_IN,'YYYYMMDD')+1,'YYYYMMDD') END) 
                                        ,M.TEMP_OUT,M.DATE_OUT,M.TIME_OUT,M.ID_NUM)
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
        AND M.TIME_IN IS NOT NULL
        AND M.TEMP_OUT IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = p_work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        
        --XAC DINH TEMP OUT 2 NEU CO 
         
        UPDATE THR_TIME_MACHINE M
        SET M.TEMP_OUT2=HR_GET_MID_TIME((CASE WHEN M.TEMP_IN>M.TIME_IN THEN M.DATE_IN ELSE TO_CHAR(TO_DATE(M.DATE_IN,'YYYYMMDD')+1,'YYYYMMDD') END) 
                                        ,M.TEMP_IN,M.DATE_OUT,M.TIME_OUT,M.ID_NUM)
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
        AND M.TIME_IN IS NOT NULL
        AND M.TEMP_OUT IS NOT NULL
        AND M.TEMP_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = p_work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

        --XAC DINH TEMP IN 2 NEU CO 
         
        UPDATE THR_TIME_MACHINE M
        SET M.TEMP_IN2=HR_GET_MID_TIME((CASE WHEN M.TEMP_OUT2>M.TIME_IN THEN M.DATE_IN ELSE TO_CHAR(TO_DATE(M.DATE_IN,'YYYYMMDD')+1,'YYYYMMDD') END) 
                                        ,M.TEMP_OUT2,M.DATE_OUT,M.TIME_OUT,M.ID_NUM)
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
        AND M.TIME_IN IS NOT NULL
        AND M.TEMP_OUT IS NOT NULL
        AND M.TEMP_IN IS NOT NULL
        AND M.TEMP_OUT2 IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = p_work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);        
        
         

        UPDATE THR_TIME_MACHINE M
        SET M.WORK_TIME = 0
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = p_work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.HOL_TYPE IS NOT NULL --NGAY NGHI
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        --tinh cho dang temp in,out
        UPDATE THR_TIME_MACHINE M
        SET M.TEMP_HT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'HT')
            ,M.TEMP_OT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'OT')
            ,M.TEMP_NT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'NT')
            ,M.TEMP_NT2=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'NT2')
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = p_work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.HOL_TYPE IS NOT NULL --NGAY NGHI
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        --ngay thuong
        UPDATE THR_TIME_MACHINE M
        SET M.TEMP_WT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'WT')
            ,M.TEMP_OT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'OT')
            ,M.TEMP_NT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'NT')
            ,M.TEMP_NT2=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'NT2')
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = p_work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.HOL_TYPE IS NULL --NGAY THUONG
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);



       UPDATE THR_TIME_MACHINE M
       SET M.WORK_TIME = HR_SF_GET_WT_COM(M.DATE_IN||M.TIME_IN,M.DATE_OUT||M.TIME_OUT,M.THR_WS_PK,M.WORK_DT,p_tco_company_pk)
       WHERE M.DEL_IF = 0
       AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
       AND M.TIME_IN IS NOT NULL
       AND M.TIME_OUT IS NOT NULL
       AND M.WORK_DT = p_work_dt
       and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND M.THR_EMP_PK not  IN (SELECT D.THR_EMP_PK
                                    FROM THR_REGULATION D WHERE D.DEL_IF = 0
                                    AND D.THR_EMP_PK=M.THR_EMP_PK
                                    GROUP BY D.THR_EMP_PK
                                    HAVING MAX(D.START_DT)<=p_work_dt AND MAX(D.END_DT)>=p_work_dt)
        AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

        l_error:='02';
        
        UPDATE THR_TIME_MACHINE M -- cho nhung nguoi trong che do
        SET M.WORK_TIME =NVL((SELECT 
                           decode(max(l.reg_type),'01',
                                    case when hr_SF_GET_WT_COM(to_char(to_date(M.date_in||M.time_in,'yyyymmdd HH24:MI')-max(nvl(l.REG_HOURS,0))/24,'yyyymmddHH24:MI')--date in 
                                         ,M.date_out||M.time_out--date out 
                                         ,M.thr_ws_pk,M.work_dt,p_tco_company_pk)>max(nvl(w.WT,0)+nvl(w.wt_plus,0)) then max(nvl(w.WT,0)+nvl(w.wt_plus,0)) 
                                    else hr_SF_GET_WT_COM(to_char(to_date(M.date_in||M.time_in,'yyyymmdd HH24:MI')-max(nvl(l.REG_HOURS,0))/24,'yyyymmddHH24:MI')--date in 
                                         ,M.date_out||M.time_out--date out 
                                         ,M.thr_ws_pk,M.work_dt,p_tco_company_pk)
                                    end,        
                                   '03',
                                    case when hr_SF_GET_WT_COM(M.date_in||M.time_in--date in 
                                         ,to_char(to_date(M.date_out||M.time_out,'yyyymmdd HH24:MI')+max(nvl(l.REG_HOURS,0))/24,'yyyymmddHH24:MI')--date out 
                                         ,M.thr_ws_pk,M.work_dt,p_tco_company_pk) >max(nvl(w.WT,0)+nvl(w.wt_plus,0)) then max(nvl(w.WT,0)+nvl(w.wt_plus,0)) 
                                    else hr_SF_GET_WT_COM(M.date_in||M.time_in--date in 
                                         ,to_char(to_date(M.date_out||M.time_out,'yyyymmdd HH24:MI')+max(nvl(l.REG_HOURS,0))/24,'yyyymmddHH24:MI')--date out 
                                         ,M.thr_ws_pk,M.work_dt,p_tco_company_pk)
                                    end,
                                    '04', 
                                    case when hr_SF_GET_WT_COM(M.date_in||M.time_in,M.date_out||M.time_out,M.thr_ws_pk,M.work_dt,p_tco_company_pk)+max(nvl(l.REG_HOURS,0))>max(nvl(w.WT,0)+nvl(w.wt_plus,0)) 
                                         then max(nvl(w.WT,0)+nvl(w.wt_plus,0)) 
                                    else hr_SF_GET_WT_COM(M.date_in||M.time_in,M.date_out||M.time_out,M.thr_ws_pk,M.work_dt,p_tco_company_pk)
                                         +max(nvl(l.REG_HOURS,0))
                                    end,0) as wt                                                                                                     
                            FROM THR_REGULATION L, thr_work_shift w
                            WHERE L.DEL_IF=0 AND L.THR_EMP_PK=M.thr_emp_pk
                            and w.DEL_IF=0
                            and w.PK=M.thr_ws_pk
                            and M.work_dt between L.START_DT and L.END_DT
                            GROUP BY L.THR_EMP_PK),0)
        WHERE M.DEL_IF = 0
        AND M.WORK_DT = p_work_dt
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.THR_EMP_PK IN (SELECT D.THR_EMP_PK
                                     FROM THR_REGULATION D WHERE D.DEL_IF = 0
                                     AND D.THR_EMP_PK=M.THR_EMP_PK
                                     GROUP BY D.THR_EMP_PK
                                     HAVING MAX(D.START_DT)<=p_work_dt AND MAX(D.END_DT)>=p_work_dt)
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        --truong hop dac biet che do ra ve vao gio nghi trua 
        
        UPDATE THR_TIME_MACHINE M -- cho nhung nguoi trong che do
        SET M.WORK_TIME =NVL((SELECT hr_SF_GET_WT_COM(M.date_in||M.time_in,M.date_out||M.time_out,M.thr_ws_pk,M.work_dt,p_tco_company_pk)
                                         +max(nvl(l.REG_HOURS,0))
                            FROM THR_REGULATION L, thr_work_shift w
                            WHERE L.DEL_IF=0 AND L.THR_EMP_PK=M.thr_emp_pk
                            and w.DEL_IF=0
                            and w.PK=M.thr_ws_pk
                            GROUP BY L.THR_EMP_PK
                            HAVING MAX(L.START_DT)<=M.work_dt
                            AND MAX(L.END_DT)>=M.work_dt),0)
        WHERE M.DEL_IF = 0
        AND M.WORK_DT = p_work_dt
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.THR_EMP_PK IN (SELECT D.THR_EMP_PK
                                     FROM THR_REGULATION D WHERE D.DEL_IF = 0
                                     AND D.THR_EMP_PK=M.THR_EMP_PK AND D.REG_TYPE='03'
                                     GROUP BY D.THR_EMP_PK
                                     HAVING MAX(D.START_DT)<=p_work_dt AND MAX(D.END_DT)>=p_work_dt)
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' and  NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND M.HOL_TYPE IS NULL
        AND M.THR_WS_PK IN(SELECT W.PK FROM THR_WORK_SHIFT W WHERE W.DEL_IF=0 AND W.PK=M.THR_WS_PK
                                AND M.TIME_OUT<W.END_MEAL1
                                AND (NVL(TO_CHAR(W.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        
        
        --truong hop neu ko lam du 7h thi ko tinh them gio duoc huong
        
        UPDATE THR_TIME_MACHINE M -- cho nhung nguoi trong che do
        SET M.WORK_TIME =(case when nvl(m.work_time,0)-1>0 then nvl(m.work_time,0)-1 else 0 end)  
        WHERE M.DEL_IF = 0
        AND M.WORK_DT = p_work_dt
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.THR_EMP_PK IN (SELECT D.THR_EMP_PK
                                     FROM THR_REGULATION D WHERE D.DEL_IF = 0
                                     AND D.THR_EMP_PK=M.THR_EMP_PK
                                     GROUP BY D.THR_EMP_PK
                                     HAVING MAX(D.START_DT)<=p_work_dt AND MAX(D.END_DT)>=p_work_dt)
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND nvl(m.work_time,0)<8
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        
        --tru gio temp out-in
        
        UPDATE THR_TIME_MACHINE M
        SET M.WORK_TIME=(CASE WHEN NVL(M.WORK_TIME,0)-NVL(M.TEMP_WT,0)>0 THEN NVL(M.WORK_TIME,0)-NVL(M.TEMP_WT,0) ELSE 0 END) 
        WHERE M.DEL_IF = 0
        AND M.WORK_DT = p_work_dt
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.TEMP_OUT IS NOT NULL
        AND M.TEMP_IN IS NOT NULL
        AND NVL(M.TEMP_WT,0)>0
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
         IF l_wt_add <>0 THEN --trong truong hop lam ko du gio va co ap dung code 0208
         
            --cap nhat wt add them theo dieu kien duoc dinh nghia trong code HR0208
            UPDATE THR_TIME_MACHINE M
            SET M.WORK_TIME=(CASE WHEN NVL(M.WORK_TIME,0) >=l_wt_condition1 AND NVL(M.WORK_TIME,0)<=l_wt_condition2
                                 THEN NVL(M.WORK_TIME,0)+l_wt_add ELSE M.WORK_TIME END)
            WHERE M.DEL_IF = 0
            AND M.WORK_DT = p_work_dt
            AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
            AND NVL(M.WORK_TIME,0)>0
            and M.THR_EMP_PK in (select pk from thr_employee e 
                                    where  E.DEL_IF=0
                                    AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK) 
                                    and E.PK=M.THR_EMP_PK
                                    )
            AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
            AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
            AND NVL(M.APPROVE_YN,'N')='N'
            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK)
            AND M.THR_WS_PK IN(SELECT S.PK FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND NVL(S.WT_PLUS,0)<>0);
            
        END IF;    
        
        
          -- DELETE  NEU GIO CONG SAI DE INSERT KIEU VANG   
        UPDATE THR_TIME_MACHINE M
        SET M.DEL_IF= M.PK
        WHERE M.DEL_IF=0 AND M.WORK_DT = p_work_dt
            AND M.TIME_IN IS NULL
            AND M.TIME_OUT IS NULL
            AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
            and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
            AND NVL(M.CLOSE_YN,'N')<>'Y' and  NVL(M.CLOSE_M_YN,'N')<>'Y'
            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
            AND NVL(M.APPROVE_YN,'N')='N'
            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
       
/*
   l_error:='04'; -- XU LY VANG MAT
   
                 INSERT INTO THR_ABSENCE  --AUTO INSERT ABSENT LIST NON SCAN CARD 
                 (PK, THR_EMP_PK, THR_WG_PK, THR_WS_PK,ABSENCE_TYPE,ABSENCE_DT, ABSENCE_TIME
                 , COMPANY_PAY_YN, COMPANY_PAY_RATE
                 , REMARK, DEL_IF, CRT_DT, CRT_BY, TCO_COMPANY_PK)
                SELECT THR_ABSENCE_SEQ.NEXTVAL,A.PK,B.THR_WG_PK,B.THR_WS_PK,'13',p_work_dt,(CASE WHEN NVL(S.WT,0)+NVL(S.WT_PLUS,0)>8 THEN 8 ELSE NVL(S.WT,0)+NVL(S.WT_PLUS,0) END)
                       ,'N',0,'INS FROM PROCESS', 0, SYSDATE, p_crt_by, A.TCO_COMPANY_PK
                  FROM THR_EMPLOYEE A, THR_WG_SCH_DETAIL B, THR_WORK_SHIFT S
                 WHERE A.DEL_IF = 0
                   AND B.DEL_IF = 0
                   AND S.DEL_IF = 0
                   and hr_sf_check_month_close(p_work_dt,a.sal_period, a.tco_company_pk)<>'Y'
                   AND A.PK = B.THR_EMP_PK AND B.THR_WS_PK=S.PK
                   AND B.WORK_DT=p_work_dt
                   AND A.JOIN_DT <= p_work_dt
                   AND (A.LEFT_DT>p_work_dt OR A.LEFT_DT IS NULL)
                   AND TO_CHAR(TO_DATE(p_work_dt||S.START_TIME,'YYYYMMDDHH24:MI'),'YYYYMMDDHH24:MI')<TO_CHAR(SYSDATE,'YYYYMMDDHH24:MI')
                   AND A.PK NOT IN (SELECT C.THR_EMP_PK
                                          FROM THR_TIME_MACHINE C
                                         WHERE C.DEL_IF = 0
                                           AND C.WORK_DT = p_work_dt and c.thr_emp_pk=a.pk
                                           AND (C.TIME_IN IS NOT NULL OR C.TIME_OUT IS NOT NULL)
                                           )
                   AND A.PK NOT IN (SELECT E.THR_EMP_PK
                                      FROM THR_ABSENCE E
                                     WHERE E.DEL_IF = 0
                                       AND E.ABSENCE_DT = p_work_dt and e.thr_emp_pk=a.pk)
                   AND A.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                  AND B.HOL_TYPE IS NULL  --NGAY BINH THUONG
                  AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                  AND NVL(B.APPROVE_YN,'N')='N'
                  AND A.PK=NVL(p_thr_emp_pk,A.PK);

        INSERT INTO THR_ABSENCE  --AUTO INSERT ABSENT LIST 
                         (PK, THR_EMP_PK, THR_WG_PK, THR_WS_PK,ABSENCE_TYPE,ABSENCE_DT, ABSENCE_TIME
                         , COMPANY_PAY_YN, COMPANY_PAY_RATE
                         , REMARK, DEL_IF, CRT_DT, CRT_BY, TCO_COMPANY_PK)
        SELECT THR_ABSENCE_SEQ.NEXTVAL,A.PK,A.THR_WG_PK,NULL,'17',p_work_dt,8
                               ,'N',0,'INS FROM PROCESS', 0, SYSDATE, p_crt_by, A.TCO_COMPANY_PK
                          FROM THR_EMPLOYEE A,THR_CALENDAR C
                         WHERE A.DEL_IF = 0 
                           AND C.DEL_IF=0
                           AND C.CAR_DATE=p_work_dt
                           and hr_sf_check_month_close(p_work_dt,a.sal_period, a.tco_company_pk)<>'Y'
                           AND C.HOL_TYPE IS NULL
                           AND A.JOIN_DT <= p_work_dt
                           AND (A.LEFT_DT>p_work_dt OR A.LEFT_DT IS NULL)
                           AND A.PK NOT IN (SELECT C.THR_EMP_PK
                                                  FROM THR_TIME_MACHINE C
                                                 WHERE C.DEL_IF = 0
                                                   AND C.WORK_DT = p_work_dt
                                                   and c.thr_emp_pk=a.pk)
                           AND A.PK NOT IN (SELECT E.THR_EMP_PK
                                              FROM THR_ABSENCE E
                                             WHERE E.DEL_IF = 0
                                               AND E.ABSENCE_DT = p_work_dt
                                               and e.thr_emp_pk=a.pk)
                         AND A.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                         AND (NVL(TO_CHAR(C.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                         AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                          AND A.PK NOT IN (SELECT B.THR_EMP_PK FROM THR_WG_SCH_DETAIL B WHERE B.DEL_IF=0 
                                                            AND B.WORK_DT=p_work_dt and b.thr_emp_pk=a.pk)
                        AND A.PK=NVL(p_thr_emp_pk,A.PK);                                                            


      --ABSENCE TYPE LA SO 

      DELETE THR_ABSENCE A
         WHERE A.DEL_IF = 0
           AND A.ABSENCE_DT = p_work_dt AND A.ABSENCE_TYPE  in ('13')
           AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK
                              FROM THR_TIME_MACHINE B,THR_EMPLOYEE E
                             WHERE B.DEL_IF = 0 AND E.DEL_IF=0 AND B.THR_EMP_PK=E.PK
                               AND B.WORK_DT = p_work_dt and e.pk=a.thr_emp_pk
                               AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                              )
     AND NVL(A.CLOSE_YN,'N')<>'Y'and  NVL(A.CLOSE_M_YN,'N')<>'Y'
     AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
     AND NVL(A.APPROVE_YN,'N')='N'
     AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);


     DELETE THR_ABSENCE A
         WHERE A.DEL_IF = 0
           AND A.ABSENCE_DT = p_work_dt AND A.ABSENCE_TYPE  in ('17')
           AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK
                              FROM THR_TIME_MACHINE B,THR_EMPLOYEE E
                             WHERE B.DEL_IF = 0 AND E.DEL_IF=0 AND B.THR_EMP_PK=E.PK
                               AND B.WORK_DT = p_work_dt and e.pk=a.thr_emp_pk
                               AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                               )
     AND NVL(A.CLOSE_YN,'N')<>'Y'
     AND A.THR_WS_PK IS NULL
     AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
     AND NVL(A.APPROVE_YN,'N')='N'
     AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);
     
    DELETE THR_ABSENCE A
         WHERE A.DEL_IF = 0
           AND A.ABSENCE_DT = p_work_dt
           AND A.THR_EMP_PK IN (SELECT PK FROM THR_EMPLOYEE B WHERE B.DEL_IF=0
                                                AND B.STATUS='R' AND B.LEFT_DT <=p_work_dt and b.pk=a.thr_emp_pk
                                                AND B.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                                )
        AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
        AND A.THR_ABSENCE_REG_PK IS NULL
        AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(A.APPROVE_YN,'N')='N'
        AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);

        DELETE THR_ABSENCE A
         WHERE A.DEL_IF = 0
           AND A.ABSENCE_DT = p_work_dt
           AND A.THR_EMP_PK IN (SELECT G.THR_EMP_PK FROM THR_WG_SCH_DETAIL G, thr_employee e 
                                            WHERE G.DEL_IF=0 AND G.HOL_TYPE IS NOT NULL and E.DEL_IF=0 and e.pk=G.THR_EMP_PK
                                            AND G.WORK_DT=A.ABSENCE_DT AND G.THR_EMP_PK=A.THR_EMP_PK
                                            AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                                            )
        AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
        AND A.THR_ABSENCE_REG_PK IS NULL
        AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(A.APPROVE_YN,'N')='N'
        AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);        
*/

l_error:='05'; --LUU LAI GIO GOC
    UPDATE THR_TIME_MACHINE C
    SET C.TIME_IN_ORG=C.TIME_IN
        ,C.TIME_OUT_ORG=C.TIME_OUT
        ,C.DATE_IN=(CASE WHEN C.TIME_IN IS NULL THEN NULL
                            ELSE C.DATE_IN END)
        ,C.DATE_OUT=(CASE WHEN C.TIME_OUT IS NULL THEN NULL
                            ELSE C.DATE_OUT END)
    WHERE C.DEL_IF=0 AND C.WORK_DT=p_work_dt
    and C.THR_EMP_PK in (select pk from thr_employee e 
                            where E.DEL_IF=0
                            AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             and E.PK=C.THR_EMP_PK)
    AND NVL(C.CLOSE_YN,'N')<>'Y' and  NVL(C.CLOSE_M_YN,'N')<>'Y'
    AND (NVL(TO_CHAR(C.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
    AND C.THR_EMP_PK=NVL(p_thr_emp_pk,C.THR_EMP_PK);
        
                                  


    p_result:=0;

--exception
--   when others   then
--      p_result:=-1;
--      raise_application_error (-20002,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_3(
   p_work_dt               varchar2,
   P_TCO_ORG_PK            varchar2,
   p_tco_company_pk        varchar2,
   p_emp_id                varchar2,
   p_crt_by                varchar2,
   p_result   out          number
)
is

   l_ot_rate         number;
   l_nt30_rate         number;
   l_nt45_rate         number;
   l_nt60_rate         number;
   l_nt90_rate         number;
   l_ht_rate         number;
   l_ost_rate         number;
   l_oht_rate         number;
   l_st_rate         number;

   l_day_type       varchar2(5):='';
   l_error         varchar2(2):='';

   l_month_close varchar2(1):='';
   l_kind_ot    varchar2(2):='';
    l_pro varchar(200);
    l_string varchar(200);
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_ot_plus number;
    l_ot_limit number;
    l_ot_allow_yn   varchar2(1):='';
    F_LAG_NT2  VARCHAR2(1):='N';
    l_tco_org_pk number:=0;
    p_thr_emp_pk number;
begin

    if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;

    select HR_F_FIND_STORE_COM('HR_pro_10020001_4_v4',p_tco_company_pk)  into l_pro from dual;
     
    IF l_pro<>'0' THEN --CO SU DUNG PROCEDURE RIENG
        l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6); end;' ;
        execute  immediate l_string using in  p_work_dt,in P_TCO_ORG_PK,in p_tco_company_pk,IN p_thr_emp_pk,in p_crt_by,out p_result ;

    ELSE    
    
        l_error:='01';
        SELECT V.CODE INTO l_kind_ot FROM VHR_HR_CODE V WHERE V.ID='HR0038'
        AND (NVL(TO_CHAR(V.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'); --KIEM TRA XEM SU DUNG LOAI TINH OT NAO               
        
        select nvl(d.CHAR_2,'N') INTO l_ot_allow_yn ---Kiem tra xem co tinh tang ca cho WT Allow hay ko -- 
        from thr_code_master m, thr_code_detail d
        where d.DEL_IF=0
        and m.DEL_IF=0
        and m.pk=d.THR_CODE_MASTER_PK
        and d.CODE='02'
        and m.ID='HR0038'
        AND (NVL(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL');

        --DELETE GIO TANG CA NEU CO
        DELETE THR_EXTRA_TIME A
        WHERE A.DEL_IF=0 AND  A.WORK_DT=p_work_dt AND NVL(A.MOD_BYHAND_YN,'N')<>'Y'
         AND A.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=A.THR_EMP_PK)
        AND NVL(A.CLOSE_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(A.APPROVE_YN,'N')='N'
        AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);

       l_error:='02';
       BEGIN
             SELECT
             SUM(DECODE(C.CODE,'02',C.NUM_1,0)) AS OT
            ,SUM(DECODE(C.CODE,'03',C.NUM_1,0)) AS NT30
            ,SUM(DECODE(C.CODE,'04',C.NUM_1,0)) AS NT45
            ,SUM(DECODE(C.CODE,'05',C.NUM_1,0)) AS NT60
            ,SUM(DECODE(C.CODE,'06',C.NUM_1,0)) AS NT90
            ,SUM(DECODE(C.CODE,'07',C.NUM_1,0)) AS HT
            ,SUM(DECODE(C.CODE,'08',C.NUM_1,0)) AS OST
            ,SUM(DECODE(C.CODE,'09',C.NUM_1,0)) AS OHT
            ,SUM(DECODE(C.CODE,'10',C.NUM_1,0)) AS ST
             INTO l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate,l_oht_rate,l_st_rate
             FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
             WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
             AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y'
             AND (NVL(TO_CHAR(C.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL');

                    --NGAY NGHI
                    INSERT INTO THR_EXTRA_TIME
                    (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                    , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                    , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
                    ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                    )
                    SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'HT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                           ,(CASE WHEN hr_SF_GET_WT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,p_tco_company_pk)
                            - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'HT')>0 
                            THEN 
                                hr_SF_GET_WT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,p_tco_company_pk)
                                - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'HT')
                            ELSE 0 END) AS HT
                           ,DECODE(B.HOL_TYPE,'HOL',l_ht_rate,l_st_rate)
                           ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                           ,B.TEMP_HT
                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                       AND B.HOL_TYPE IS NOT NULL
                       AND hr_SF_GET_WT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,p_tco_company_pk)>0
                       AND B.TIME_OUT IS NOT NULL
                       AND B.TIME_IN IS NOT NULL
                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='HT'
                                            and d.thr_emp_pk=a.pk)
                       AND NVL(A.OT_YN,'Y')='Y'
                       AND A.TCO_ORG_PK IN (SELECT     G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                       AND B.WORK_DT = p_work_dt
                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                       AND NVL(B.APPROVE_YN,'N')='N'
                       AND A.PK=NVL(p_thr_emp_pk,A.PK);

                INSERT INTO THR_EXTRA_TIME
                    (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                    , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                    , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
                    ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                    )
                    SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                           ,(CASE WHEN HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                               + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                               - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
                               >0
                               THEN 
                                    HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                               + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                               - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
                            ELSE 0 END) AS OT
                           ,(CASE WHEN NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_oht_rate
                                  ELSE l_ost_rate END) AS RATE
                           ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                           ,B.TEMP_OT
                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                       AND B.HOL_TYPE IS NOT NULL
                       AND B.TIME_OUT IS NOT NULL
                       AND B.TIME_IN IS NOT NULL
                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                                and d.thr_emp_pk=a.pk)
                       AND NVL(A.OT_YN,'Y')='Y'
                       AND HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                           + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                            >0
                       AND A.TCO_ORG_PK IN (SELECT     G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                       AND B.WORK_DT = p_work_dt
                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                       AND NVL(B.APPROVE_YN,'N')='N'
                       AND A.PK=NVL(p_thr_emp_pk,A.PK);

                    -- NT
                   INSERT INTO THR_EXTRA_TIME
                    (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                    , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                    , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
                    ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                    )
                    SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                           ,(CASE WHEN hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                    + hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT')>0
                           THEN  
                                hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                +hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT')
                                ELSE 0 END) AS HT
                           ,(CASE WHEN  NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_nt90_rate ELSE l_nt60_rate END )
                           ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,b.DATE_OUT, A.TCO_COMPANY_PK
                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                           ,B.TEMP_NT
                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                       AND B.HOL_TYPE IS NOT NULL
                       AND hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                    +hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)>0
                       AND B.TIME_OUT IS NOT NULL
                       AND B.TIME_IN IS NOT NULL
                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                        and d.thr_emp_pk=a.pk)
                       AND NVL(A.OT_YN,'Y')='Y'
                       AND A.TCO_ORG_PK IN (SELECT     G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                       AND B.WORK_DT = p_work_dt
                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                       AND NVL(B.APPROVE_YN,'N')='N'
                       AND A.PK=NVL(p_thr_emp_pk,A.PK);

               --NGAY THUONG
                       INSERT INTO THR_EXTRA_TIME
                    (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                    , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                    , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
                    ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                    )
                    SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT                      
                             ,(CASE WHEN (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                     WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                     ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                          + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                               END)- HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
                               >0
                               THEN  
                                    (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                     WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                     ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                          + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                               END)- HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
                               ELSE 0 END) AS OT
                           ,l_ot_rate
                           ,C.START_OT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                           ,B.TEMP_OT
                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C,                  
                      (SELECT R.THR_EMP_PK, decode(r.REG_TYPE,'03',nvl(R.REG_HOURS,0),0) as reg_hour, 1 AS FLAG
                              , decode(r.REG_TYPE,'04',1,0) as reg_04
                        FROM THR_REGULATION R 
                        WHERE R.DEL_IF=0 AND p_work_dt BETWEEN R.START_DT AND R.END_DT
                           AND R.THR_EMP_PK=NVL(p_thr_emp_pk,R.THR_EMP_PK)
                            AND (NVL(TO_CHAR(R.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')) allow      
                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK    
                       and b.THR_EMP_PK = allow.thr_emp_pk(+) 
                       AND (CASE WHEN (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                     WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                     ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                          + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                               END)- HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
                               >0
                               THEN  
                                    (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                     WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                     ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                          + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                               END)- HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
                               ELSE 0 END)>0
                       AND B.TIME_OUT IS NOT NULL
                       AND B.TIME_IN IS NOT NULL
                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                                and d.thr_emp_pk=a.pk)
                       AND NVL(A.OT_YN,'Y')='Y'
                       AND A.TCO_ORG_PK IN (SELECT     G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                       AND B.HOL_TYPE IS NULL
                       AND B.WORK_DT = p_work_dt  --NGAY THUONG
                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                       AND NVL(B.APPROVE_YN,'N')='N'
                       AND A.PK=NVL(p_thr_emp_pk,A.PK);
                       
                           -- NT 
                     INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                    ,(CASE WHEN hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk) 
                                        - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT')>0 
                                     THEN hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk) 
                                        - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT')
                                     ELSE 0 END) AS NT
                                  ,l_nt30_rate
                                ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
                                ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                ,B.TEMP_NT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.HOL_TYPE IS NULL
                               AND hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                        and d.thr_emp_pk=a.pk)
                               --AND NVL(A.OT_YN,'Y')='Y'
                               AND A.TCO_ORG_PK IN (SELECT     G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                               AND B.WORK_DT = p_work_dt --NGAY THUONG
                               AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                               AND NVL(B.APPROVE_YN,'N')='N'
                               AND A.PK=NVL(p_thr_emp_pk,A.PK);
                                      
                           -- NT 2
                   INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                   SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT2', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                           ,(CASE WHEN hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                           - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT2')>0
                           THEN hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                           - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT2')
                           ELSE 0 END) AS NT2
                           ,l_nt45_rate
                           ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                           ,B.TEMP_NT2
                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                       AND B.WORK_DT = p_work_dt
                       AND hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)>0
                       AND B.TIME_OUT IS NOT NULL
                       AND B.TIME_IN IS NOT NULL
                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT2'
                                            and d.thr_emp_pk=a.pk)
                       AND NVL(A.OT_YN,'Y')='Y'
                       AND A.TCO_ORG_PK IN (SELECT     G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                       AND B.HOL_TYPE IS NULL --NGAY THUONG
                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                       AND NVL(B.APPROVE_YN,'N')='N'
                       AND A.PK=NVL(p_thr_emp_pk,A.PK);
                        
                          


           
        END;                   
        
    END IF;
    
    p_result:=0;

--exception
--   when others   then
--      p_result:=-1;
--      raise_application_error (-20002,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_4;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_4 (
   p_work_dt               varchar2,
   p_factory               varchar2,
   p_emp_id                varchar2,
   p_crt_by                varchar2,
   p_result   out     number
)
is
   l_error         varchar2(2):='';
   
   l_pro varchar(200);
    l_string varchar(200);
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    p_thr_emp_pk number;
begin

   if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;
    
   select HR_F_FIND_STORE_FUNC('sp_pro_process_5',p_factory)  into l_pro from dual;
     
IF l_pro<>'0' THEN --CO SU DUNG PROCEDURE RIENG
    l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5); end;' ;
    execute  immediate l_string using in  p_work_dt,in p_factory,IN p_thr_emp_pk,in p_crt_by,out p_result ;    

 ELSE
 
    DELETE THR_TERMINAL_DATA M
    WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
    AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
    
    INSERT INTO THR_TERMINAL_DATA
    (PK, WORK_DT, THR_EMP_PK, EMP_ID, ID_NUM, TIME1, TIME2, TIME3, TIME4, TIME5, TIME6, TIME7, TIME8, TIME9, TIME10
    , TIME11, TIME12, TIME13, TIME14, TIME15, TIME16, TIME17, TIME18, TIME19, TIME20, CRT_BY, CRT_DT, DEL_IF)
    SELECT THR_TERMINAL_DATA_seq.nextval,p_work_dt,HR.PK,HR.EMP_ID,HR.ID_NUM,HR.C1,HR.C2,HR.C3,HR.C4,HR.C5,HR.C6,HR.C7
    ,HR.C8,HR.C9,HR.C10,HR.C11,HR.C12,HR.C13,HR.C14,HR.C15,HR.C16,HR.C17,HR.C18,HR.C19,HR.C20,p_crt_by,sysdate,0 
    FROM(
    SELECT a.pk,a.emp_id,a.id_num,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 1)) C1,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 2)) C2,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 3)) C3,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 4)) C4,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 5)) C5,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 6)) C6,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 7)) C7,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 8)) C8,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 9)) C9,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 10)) C10,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 11)) C11,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 12)) C12,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 13)) C13,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 14)) C14,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 15)) C15,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 16)) C16,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 17)) C17,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 18)) C18,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 19)) C19,
               max(HR_F_TIME_SEQ (p_work_dt, A.ID_NUM, 20)) C20
              FROM thr_employee a, thr_time_temp f
             WHERE A.DEL_IF = 0 
                AND A.ID_NUM = F.ID
                AND F.WORK_DT = p_work_dt
                AND A.PK=NVL(p_thr_emp_pk,A.PK)
                group by a.pk,a.emp_id,a.id_num) HR;
                


    p_result:=0;

  END IF;
  
--exception
--   when others   then
--      p_result:=-1;
--      raise_application_error (-20002,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_5;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_5 (
   p_from_dt                varchar2,
   p_to_dt                  varchar2,
   P_TCO_ORG_PK             varchar2,
   p_tco_company_pk         varchar,
   p_emp_id                 varchar2,
   p_crt_by                 varchar2,
   p_result   out           number
)
is

   l_error         varchar2(2):='';
   l_month_close varchar2(1):='';
    l_tco_org_pk number:=0;
   p_thr_emp_pk number;
begin

    if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;    
   
    --DELETE VANG NEU CO
    UPDATE THR_ABSENCE A
    SET A.DEL_IF = A.PK
        ,A.MOD_BY = p_crt_by || ' Delete time control'
        ,A.MOD_DT = sysdate
    WHERE A.DEL_IF=0 AND A.ABSENCE_DT between p_from_dt and p_to_dt
    AND NVL(A.CLOSE_YN,'N')<>'Y'
    AND ( A.ABSENCE_TYPE in('13','22','23') --KO QUET THE 
            OR (A.ABSENCE_TYPE='17' AND A.THR_WS_PK IS NULL) -- NGHI ABSENCE SCHEDULE HE THONG TU INSERT 
        )    
     and nvl(A.CLOSE_YN,'N')<>'Y' and nvl(A.CLOSE_M_YN,'N')<>'Y'   
     AND A.THR_ABSENCE_REG_PK IS NULL --SHORT TIME 
     AND A.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=A.THR_EMP_PK)
    AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
    AND NVL(A.APPROVE_YN,'N')='N'
    AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);   
    
    DELETE THR_ABSENCE A
    WHERE A.ABSENCE_DT between p_from_dt and p_to_dt
    AND NVL(A.CLOSE_YN,'N')<>'Y'
    AND ( A.ABSENCE_TYPE in('13','22','23') --KO QUET THE 
            OR (A.ABSENCE_TYPE='17' AND A.THR_WS_PK IS NULL) -- NGHI ABSENCE SCHEDULE HE THONG TU INSERT 
        )    
     and nvl(A.CLOSE_YN,'N')<>'Y' and nvl(A.CLOSE_M_YN,'N')<>'Y'   
     AND A.THR_ABSENCE_REG_PK IS NULL --SHORT TIME 
     AND A.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=A.THR_EMP_PK)
    AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
    AND NVL(A.APPROVE_YN,'N')='N'
    AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);                             
     
    
    UPDATE THR_TIME_MACHINE A
    SET A.DEL_IF = A.PK
        ,A.MOD_BY = p_crt_by || '-delete time control'
        ,A.MOD_DT = sysdate
    WHERE A.DEL_IF=0 AND A.WORK_DT between p_from_dt and p_to_dt
    AND NVL(A.MOD_BYHAND_YN,'N')<>'Y'
    AND NVL(A.MOD_AUTO_YN,'N')<>'Y' --SUA BANG TAY NHUNG TINH TU DONG
     and nvl(A.CLOSE_YN,'N')<>'Y' and nvl(A.CLOSE_M_YN,'N')<>'Y'
     AND A.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=A.THR_EMP_PK)
    AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
    AND NVL(A.APPROVE_YN,'N')='N'
    AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);
    
    
    DELETE THR_TIME_MACHINE A
    WHERE A.WORK_DT between p_from_dt and p_to_dt
    AND NVL(A.MOD_BYHAND_YN,'N')<>'Y'
    AND NVL(A.MOD_AUTO_YN,'N')<>'Y' --SUA BANG TAY NHUNG TINH TU DONG
     and nvl(A.CLOSE_YN,'N')<>'Y' and nvl(A.CLOSE_M_YN,'N')<>'Y'
     AND A.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=A.THR_EMP_PK)
    AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
    AND NVL(A.APPROVE_YN,'N')='N'
    AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);                            

    --DELETE GIO TANG CA NEU CO
    UPDATE THR_EXTRA_TIME A
    SET A.DEL_IF = A.PK
        ,A.MOD_BY = p_crt_by || '-delete time control'
        ,A.MOD_DT = sysdate
    WHERE A.DEL_IF=0 AND  A.WORK_DT between p_from_dt and p_to_dt
    AND A.THR_EMP_PK NOT IN(SELECT B.THR_EMP_PK FROM THR_TIME_MACHINE B WHERE B.DEL_IF=0 AND B.WORK_DT=a.work_dt)
    AND A.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=A.THR_EMP_PK)
    AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')                             
     and nvl(A.CLOSE_YN,'N')<>'Y' and nvl(A.CLOSE_M_YN,'N')<>'Y'
     AND NVL(A.APPROVE_YN,'N')='N'
     AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);

    
    
    DELETE THR_EXTRA_TIME A
    WHERE A.WORK_DT between p_from_dt and p_to_dt
    AND A.THR_EMP_PK NOT IN(SELECT B.THR_EMP_PK FROM THR_TIME_MACHINE B WHERE B.DEL_IF=0 AND B.WORK_DT=a.work_dt)
    AND A.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=A.THR_EMP_PK)
    AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')                             
     and nvl(A.CLOSE_YN,'N')<>'Y' and nvl(A.CLOSE_M_YN,'N')<>'Y'
     AND NVL(A.APPROVE_YN,'N')='N'
     AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);


    p_result:=0;

--exception
--   when others   then
--      p_result:=-2;
--      raise_application_error (-20019,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_6;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_6(
   p_from_dt               varchar2,
   p_to_dt               varchar2,
   P_TCO_ORG_PK              varchar2,
   p_company_pk varchar,
   p_thr_emp_pk     varchar2,
   p_crt_by                varchar2,
   p_result   out     number
)
is

   l_wt_rate         number;
    l_error         varchar2(2):='';
    l_month_close varchar2(1):='';
    l_cur sys_refcursor;
    l_flag_exist boolean :=false;
    l_string varchar2(2000):='';
    l_pro varchar2(2000):='';
    l_tco_org_pk number:=0;
    
begin

    
    l_error:='00';
    
        
  SELECT C.NUM_1 INTO l_wt_rate
        FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
        WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
        AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y' AND C.CODE='01';

    --XOA NHUNG NGUOI SAI CA OR SAI HOL TYPE
    l_error:='01';
    UPDATE THR_TIME_MACHINE M
    SET M.DEL_IF=M.PK
              ,M.MOD_BY= p_crt_by
              ,M.REMARK='WRONG SHIFT'
              ,M.MOD_DT=SYSDATE
  WHERE     M.DEL_IF=0
        AND M.THR_EMP_PK IN(SELECT T.THR_EMP_PK FROM THR_WG_SCH_DETAIL T
                                WHERE T.DEL_IF=0 AND T.THR_EMP_PK=M.THR_EMP_PK
                                AND T.WORK_DT =M.WORK_DT
                                AND (T.THR_WS_PK<>M.THR_WS_PK OR NVL(T.HOL_TYPE,'NOR')<>NVL(M.HOL_TYPE,'NOR'))
                                )
               AND M.WORK_DT between p_from_dt and p_to_dt
               AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
               AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=M.THR_EMP_PK)
  AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
  AND NVL(M.APPROVE_YN,'N')='N'
  AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

    l_error:='02';
    UPDATE THR_EXTRA_TIME M
    SET M.DEL_IF=M.PK
              ,M.MOD_BY= p_crt_by
              ,M.REMARK='WRONG SHIFT'
              ,M.MOD_DT=SYSDATE
  WHERE  M.DEL_IF=0
        AND M.THR_EMP_PK IN(SELECT T.THR_EMP_PK FROM THR_WG_SCH_DETAIL T
                                WHERE T.DEL_IF=0 AND T.THR_EMP_PK=M.THR_EMP_PK
                                AND T.WORK_DT =M.WORK_DT
                                AND (T.THR_WS_PK<>M.THR_WS_PK OR NVL(T.HOL_TYPE,'NOR')<>NVL(M.HOL_TYPE,'NOR'))
                                )
               AND M.WORK_DT between p_from_dt and p_to_dt
               AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=M.THR_EMP_PK)
  AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
  AND NVL(M.APPROVE_YN,'N')='N'
  AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);


-- CA NGAY
    l_error:='04';
    INSERT INTO THR_TIME_MACHINE
    (PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN, TIME_OUT, PAY_RATE
    , DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_BYHAND_YN,MOD_AUTO_YN,DAY_TYPE,HOL_TYPE,WORK_TIME)
    SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,WT.EMP_PK,WT.GROUP_PK,wt.WORK_DT,WT.W_SHIFT,
        WT.TIME_IN,WT.TIME_OUT,l_wt_rate,0,sysdate,p_crt_by,wt.WORK_DT,wt.WORK_DT,'N','N'
        ,WT.DAY_TYPE,WT.HOL_TYPE,WT.WORK_TIME
    FROM(
    SELECT B.PK AS EMP_PK, B.THR_WG_PK AS GROUP_PK,C.THR_WS_PK AS W_SHIFT
     ,E.START_TIME AS TIME_IN
     ,E.END_TIME AS TIME_OUT
     ,C.DAY_TYPE AS DAY_TYPE
     ,C.HOL_TYPE AS HOL_TYPE
     ,E.WT AS WORK_TIME,c.work_dt
      FROM  THR_EMPLOYEE B, THR_WG_SCH_DETAIL C, THR_WORK_SHIFT E
     WHERE B.DEL_IF = 0 AND B.DEL_IF=0
       AND C.DEL_IF = 0 AND E.DEL_IF = 0
       and hr_sf_check_month_close(c.WORK_DT ,b.SAL_PERIOD,b.tco_company_pk )<>'Y'
       AND B.PK = C.THR_EMP_PK AND C.THR_WS_PK = E.PK
       AND E.START_TIME < E.END_TIME
       AND C.WORK_DT between p_from_dt and p_to_dt
       and b.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
       AND B.PK NOT IN (SELECT M.THR_EMP_PK FROM THR_TIME_MACHINE M WHERE M.DEL_IF = 0 
                            AND M.WORK_DT =  C.WORK_DT AND M.THR_EMP_PK=B.PK)
       AND B.PK NOT IN (SELECT AB.THR_EMP_PK FROM THR_ABSENCE AB WHERE AB.DEL_IF=0 AND AB.ABSENCE_DT=C.WORK_DT AND B.PK=AB.THR_EMP_PK
                        AND AB.ABSENCE_TYPE NOT IN ('13') )
       AND C.HOL_TYPE IS NULL 
       AND B.PK=NVL(p_thr_emp_pk,B.PK)                
    )WT;


--CA DEM
     INSERT INTO THR_TIME_MACHINE
    (PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN, TIME_OUT, PAY_RATE
    , DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_BYHAND_YN,MOD_AUTO_YN,DAY_TYPE,HOL_TYPE,WORK_TIME)
    SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,WT.THR_EMP_PK,WT.GROUP_PK,wt.WORK_DT,WT.W_SHIFT,
        WT.TIME_IN,WT.TIME_OUT,l_wt_rate,0,sysdate,p_crt_by,wt.WORK_DT,TO_CHAR(TO_DATE(wt.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),'N','N'
        ,WT.DAY_TYPE,WT.HOL_TYPE,WT.WORK_TIME
   FROM (
         SELECT B.PK AS THR_EMP_PK, D.THR_WG_PK AS GROUP_PK,F.PK AS W_SHIFT
             ,F.START_TIME AS TIME_IN
             ,F.END_TIME AS TIME_OUT
            ,D.DAY_TYPE AS DAY_TYPE
            ,D.HOL_TYPE AS HOL_TYPE
            ,F.WT AS WORK_TIME,d.WORK_DT work_dt
            FROM THR_EMPLOYEE B, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT F
         WHERE B.DEL_IF = 0 AND D.DEL_IF = 0 AND F.DEL_IF = 0
            AND B.PK = D.THR_EMP_PK AND D.WORK_DT between p_from_dt and p_to_dt
            and b.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
            and hr_sf_check_month_close(d.WORK_DT ,b.SAL_PERIOD,b.tco_company_pk )<>'Y'
           AND D.THR_WS_PK = F.PK
           AND B.PK NOT IN (SELECT G.THR_EMP_PK FROM THR_TIME_MACHINE G WHERE G.DEL_IF = 0 AND G.WORK_DT= d.WORK_DT and g.thr_emp_pk=b.pk )
           AND B.PK NOT IN (SELECT AB.THR_EMP_PK FROM THR_ABSENCE AB WHERE AB.DEL_IF=0 AND AB.ABSENCE_DT=d.WORK_DT AND B.PK=AB.THR_EMP_PK
                        AND AB.ABSENCE_TYPE <>'13' )
           AND F.START_TIME >= F.END_TIME
          AND D.HOL_TYPE IS NULL
          AND B.PK=NVL(p_thr_emp_pk,B.PK) 
          ORDER BY B.ID_NUM)WT;
          

--delete du lieu vang 
        DELETE THR_ABSENCE A
         WHERE A.DEL_IF = 0
           AND A.ABSENCE_DT between p_from_dt and p_to_dt AND A.ABSENCE_TYPE  in ('13','17')
           AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK
                              FROM THR_TIME_MACHINE B,THR_EMPLOYEE E
                             WHERE B.DEL_IF = 0 AND E.DEL_IF=0 AND B.THR_EMP_PK=E.PK
                               and e.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                               AND B.WORK_DT = A.ABSENCE_DT and e.pk=a.thr_emp_pk
                              )
     AND NVL(A.CLOSE_YN,'N')<>'Y'and  NVL(A.CLOSE_M_YN,'N')<>'Y'
     AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK); 
     
        DELETE THR_ABSENCE A
         WHERE A.DEL_IF = 0
           AND A.ABSENCE_DT between p_from_dt and p_to_dt
           AND A.THR_EMP_PK IN (SELECT PK FROM THR_EMPLOYEE B WHERE B.DEL_IF=0
                                                AND B.STATUS='R' AND B.LEFT_DT <=A.ABSENCE_DT and b.pk=a.thr_emp_pk
                                                and b.TCO_ORG_PK IN (SELECT     G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                                )
                     
        AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
        AND A.THR_ABSENCE_REG_PK IS NULL
        AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);
        
        
        DELETE THR_ABSENCE A
         WHERE A.DEL_IF = 0
           AND A.ABSENCE_DT between p_from_dt and p_to_dt
           AND  A.THR_EMP_PK IN (SELECT G.THR_EMP_PK 
                                            FROM THR_WG_SCH_DETAIL G, thr_employee e                                             
                                            WHERE G.DEL_IF=0 AND G.HOL_TYPE IS NOT NULL
                                            and E.DEL_IF=0
                                            and E.PK=G.THR_EMP_PK
                                            and e.TCO_ORG_PK IN (SELECT     G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                            AND G.WORK_DT=A.ABSENCE_DT AND G.THR_EMP_PK=A.THR_EMP_PK)
                                               
        AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
        AND A.THR_ABSENCE_REG_PK IS NULL
        AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);
        
        
    p_result:=0;
exception
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      ROLLBACK WORK;
end ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_7;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_7(
   p_from_dt               varchar2,
   p_to_dt               varchar2,
   P_TCO_ORG_PK               varchar2,
   p_company_pk varchar,
   p_thr_emp_pk     varchar2,
   p_crt_by                varchar2,
   p_result   out     number
)
is

   l_ot_rate         number;
   l_nt30_rate         number;
   l_nt45_rate         number;
   l_nt60_rate         number;
   l_nt90_rate         number;
   l_ht_rate         number;
   l_ost_rate         number;
   l_oht_rate         number;
   l_st_rate         number;

   l_day_type       varchar2(5):='';
   l_error         varchar2(2):='';

   l_month_close varchar2(1):='';
   l_kind_ot    varchar2(2):='';
    l_pro varchar(200);
    l_string varchar(200);
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_ot_plus number;
    l_ot_limit number;
    l_ot_allow_yn   varchar2(1):='';
    F_LAG_NT2  VARCHAR2(1):='N';
    l_tco_org_pk number:=0;
    
begin
    

    l_error:='01';
    SELECT V.CODE INTO l_kind_ot FROM VHR_HR_CODE V WHERE V.ID='HR0038'; --KIEM TRA XEM SU DUNG LOAI TINH OT NAO               
    
    select nvl(d.CHAR_2,'N') INTO l_ot_allow_yn ---Kiem tra xem co tinh tang ca cho WT Allow hay ko -- 
    from thr_code_master m, thr_code_detail d
    where d.DEL_IF=0
    and m.DEL_IF=0
    and m.pk=d.THR_CODE_MASTER_PK
    and d.CODE='02'
    and m.ID='HR0038';

    --DELETE GIO TANG CA NEU CO
    DELETE THR_EXTRA_TIME A
    WHERE A.DEL_IF=0 AND  A.WORK_DT between p_from_dt and p_to_dt
    AND NVL(A.MOD_BYHAND_YN,'N')<>'Y'
     AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK
                              FROM THR_TIME_MACHINE B,THR_EMPLOYEE E
                              WHERE B.DEL_IF = 0 AND E.DEL_IF=0 AND B.THR_EMP_PK=E.PK
                               and e.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                               AND E.PK=a.THR_EMP_PK)
    AND NVL(A.CLOSE_YN,'N')<>'Y'
    AND NVL(A.APPROVE_YN,'N')='N'
    AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);
    

   l_error:='02';
   BEGIN
         SELECT
         SUM(DECODE(C.CODE,'02',C.NUM_1,0)) AS OT
        ,SUM(DECODE(C.CODE,'03',C.NUM_1,0)) AS NT30
        ,SUM(DECODE(C.CODE,'04',C.NUM_1,0)) AS NT45
        ,SUM(DECODE(C.CODE,'05',C.NUM_1,0)) AS NT60
        ,SUM(DECODE(C.CODE,'06',C.NUM_1,0)) AS NT90
        ,SUM(DECODE(C.CODE,'07',C.NUM_1,0)) AS HT
        ,SUM(DECODE(C.CODE,'08',C.NUM_1,0)) AS OST
        ,SUM(DECODE(C.CODE,'09',C.NUM_1,0)) AS OHT
        ,SUM(DECODE(C.CODE,'10',C.NUM_1,0)) AS ST
         INTO l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate,l_oht_rate,l_st_rate
         FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
         WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
         AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y';

                --NGAY NGHI
                INSERT INTO THR_EXTRA_TIME
                (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE)
                SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'HT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                       ,hr_SF_GET_WT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,p_company_pk) AS HT
                       ,DECODE(B.HOL_TYPE,'HOL',l_ht_rate,l_st_rate)
                       ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE
                  FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                 WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                   AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                   AND B.HOL_TYPE IS NOT NULL
                   and a.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                   and hr_sf_check_month_close(b.WORK_DT ,a.SAL_PERIOD,a.tco_company_pk )<>'Y'
                   AND hr_SF_GET_WT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,p_company_pk)>0
                   AND B.TIME_OUT IS NOT NULL
                   AND B.TIME_IN IS NOT NULL
                   AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                     WHERE D.DEL_IF = 0 AND D.WORK_DT = B.WORK_DT AND D.OT_TYPE='HT'
                                        and d.thr_emp_pk=a.pk)
                   AND NVL(A.OT_YN,'Y')='Y'
                   AND B.WORK_DT between p_from_dt and p_to_dt
                   AND NVL(B.APPROVE_YN,'N')='N'
                   AND A.PK=NVL(p_thr_emp_pk,A.PK);

  INSERT INTO THR_EXTRA_TIME
                (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE)
                SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                       ,hr_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_company_pk) AS OT
                       ,(CASE WHEN NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_oht_rate
                              ELSE l_ost_rate END) AS RATE
                       ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE
                  FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                 WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                   AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                   and a.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                   and hr_sf_check_month_close(b.WORK_DT ,a.SAL_PERIOD,a.tco_company_pk )<>'Y'
                   AND B.HOL_TYPE IS NOT NULL
                   AND B.TIME_OUT IS NOT NULL
                   AND B.TIME_IN IS NOT NULL
                   AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                     WHERE D.DEL_IF = 0 AND D.WORK_DT = B.WORK_DT AND D.OT_TYPE='OT'
                                            and d.thr_emp_pk=a.pk)
                   AND NVL(A.OT_YN,'Y')='Y'
                   AND hr_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_company_pk)>0
                   AND B.WORK_DT between p_from_dt and p_to_dt
                   AND NVL(B.APPROVE_YN,'N')='N'
                   AND A.PK=NVL(p_thr_emp_pk,A.PK);

                -- NT
               INSERT INTO THR_EXTRA_TIME
                (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE)
                SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                       ,hr_SF_GET_NT_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_company_pk) AS HT
                       ,(CASE WHEN  NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_nt90_rate ELSE l_nt60_rate END )
                       ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE
                  FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                 WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                   AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                   and a.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                   and hr_sf_check_month_close(b.WORK_DT ,a.SAL_PERIOD,a.tco_company_pk )<>'Y'
                   AND B.HOL_TYPE IS NOT NULL
                   AND hr_SF_GET_NT_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_company_pk)>0
                   AND B.TIME_OUT IS NOT NULL
                   AND B.TIME_IN IS NOT NULL
                   AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                     WHERE D.DEL_IF = 0 AND D.WORK_DT = B.WORK_DT AND D.OT_TYPE='NT'
                                                    and d.thr_emp_pk=a.pk)
                   AND NVL(A.OT_YN,'Y')='Y'
                   AND B.WORK_DT between p_from_dt and p_to_dt
                   AND NVL(B.APPROVE_YN,'N')='N'
                   AND A.PK=NVL(p_thr_emp_pk,A.PK);

           --NGAY THUONG
                   INSERT INTO THR_EXTRA_TIME
                (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE)
                SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT                      
                         ,hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_company_pk) OT
                       ,l_ot_rate
                       ,C.START_OT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE
                  FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C                
                 WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                   AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK  
                   and a.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                   and hr_sf_check_month_close(b.WORK_DT ,a.SAL_PERIOD,a.tco_company_pk )<>'Y'                 
                   AND hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_company_pk)>0
                   AND B.TIME_OUT IS NOT NULL
                   AND B.TIME_IN IS NOT NULL
                   AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                     WHERE D.DEL_IF = 0 AND D.WORK_DT = B.WORK_DT AND D.OT_TYPE='OT'
                                            and d.thr_emp_pk=a.pk)
                   AND NVL(A.OT_YN,'Y')='Y'
                   AND B.HOL_TYPE IS NULL
                   AND B.WORK_DT between p_from_dt and p_to_dt
                   AND NVL(B.APPROVE_YN,'N')='N'
                   AND A.PK=NVL(p_thr_emp_pk,A.PK);
                   
     
        SELECT NVL(A.char_3,'N')  INTO F_LAG_NT2
        FROM VHR_HR_CODE A
        WHERE A.ID='HR0031';
        
             IF  F_LAG_NT2='N'  THEN --KO SU DUNG 2 LOAI NT                    
                          -- NT 
                       INSERT INTO THR_EXTRA_TIME
                        (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                        , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                        , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE)
                        SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                               ,hr_SF_GET_NT_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_company_pk) AS NT
                               ,(CASE WHEN C.DURING_DAY=1 THEN l_nt45_rate ELSE l_nt30_rate END )
                               ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE
                          FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                         WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                           AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                           and a.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                           and hr_sf_check_month_close(b.WORK_DT ,a.SAL_PERIOD,a.tco_company_pk )<>'Y'
                           AND B.HOL_TYPE IS NULL
                           AND hr_SF_GET_NT_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_company_pk)>0
                           AND B.TIME_OUT IS NOT NULL
                           AND B.TIME_IN IS NOT NULL
                           AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                             WHERE D.DEL_IF = 0 AND D.WORK_DT = B.WORK_DT AND D.OT_TYPE='NT'
                                                    and d.thr_emp_pk=a.pk)
                           AND NVL(A.OT_YN,'Y')='Y'
                           AND B.WORK_DT  between p_from_dt and p_to_dt
                           AND NVL(B.APPROVE_YN,'N')='N'
                           AND A.PK=NVL(p_thr_emp_pk,A.PK);
            ELSE
                       -- NT 
                 INSERT INTO THR_EXTRA_TIME
                        (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                        , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                        , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE)
                        SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                ,hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_company_pk) AS NT
                              ,l_nt30_rate
                            ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE
                          FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                         WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                          and a.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                         and hr_sf_check_month_close(b.WORK_DT ,a.SAL_PERIOD,a.tco_company_pk )<>'Y'
                           AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                           AND B.HOL_TYPE IS NULL
                           AND hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_company_pk)>0
                           AND B.TIME_OUT IS NOT NULL
                           AND B.TIME_IN IS NOT NULL
                           AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                             WHERE D.DEL_IF = 0 AND D.WORK_DT = B.WORK_DT AND D.OT_TYPE='NT'
                                                    and d.thr_emp_pk=a.pk)
                           AND B.WORK_DT between p_from_dt and p_to_dt
                           AND NVL(B.APPROVE_YN,'N')='N'
                           AND A.PK=NVL(p_thr_emp_pk,A.PK);
                                  
                       -- NT 2
               INSERT INTO THR_EXTRA_TIME
                        (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                        , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                        , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE)
               SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT2', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                       ,hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_company_pk) AS NT
                       ,l_nt45_rate
                       ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE
                  FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                 WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                   AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                   and a.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                   and hr_sf_check_month_close(b.WORK_DT ,a.SAL_PERIOD,a.tco_company_pk )<>'Y'
                   AND B.WORK_DT between p_from_dt and p_to_dt
                   AND hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_company_pk)>0
                   AND B.TIME_OUT IS NOT NULL
                   AND B.TIME_IN IS NOT NULL
                   AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                     WHERE D.DEL_IF = 0 AND D.WORK_DT = b.WORK_DT AND D.OT_TYPE='NT2'
                                        and d.thr_emp_pk=a.pk)
                   AND NVL(A.OT_YN,'Y')='Y'
                   AND B.HOL_TYPE IS NULL --NGAY THUONG
                   AND NVL(B.APPROVE_YN,'N')='N'
                   AND A.PK=NVL(p_thr_emp_pk,A.PK);
                    
            END IF;                   


      
        END;                   
                   

    p_result:=0;

exception
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      ROLLBACK WORK;
end ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_V2_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_v2_0 (
   p_work_dt                varchar2,
   p_tco_org_pk             varchar2,
   p_tco_company_pk         varchar2,
   p_emp_id                 varchar2,
   p_crt_by                 varchar2,
   p_result   out           number
)
is

   l_wt_rate         number;
    l_error         varchar2(2):='';
    
    l_cur sys_refcursor;
    l_flag_exist boolean :=false;
    
    l_tmp number:=0;
    p_thr_emp_pk number;

begin

    if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;

       l_error:='00';
       OPEN l_cur FOR
       SELECT 1 FROM THR_EMPLOYEE E
       WHERE E.DEL_IF=0 
       AND E.TCO_ORG_PK IN (SELECT     G.PK
                                    FROM TCO_ORG G
                                    WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
       AND (nvl(TO_CHAR(E.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')                                      
       AND hr_sf_check_month_close(p_work_dt,e.SAL_PERIOD,e.tco_company_pk )='Y'
       AND E.PK=NVL(p_thr_emp_pk,E.PK)
       AND ROWNUM=1;
       
        FETCH l_cur INTO l_tmp;
        l_flag_exist:=l_cur%FOUND;
        CLOSE l_cur;
        
        IF l_flag_exist=FALSE THEN --DA DONG 
       
     
                    SELECT C.NUM_1 INTO l_wt_rate
                    FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
                    WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
                    AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y' AND C.CODE='01'
                    AND (nvl(TO_CHAR(c.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                    ;

                --XOA NHUNG NGUOI SAI CA OR SAI HOL TYPE
                l_error:='01';
--                UPDATE THR_TIME_MACHINE M
--                SET M.DEL_IF=M.PK
--                          ,M.MOD_BY= p_crt_by
--                          ,M.REMARK='WRONG SHIFT'
--                          ,M.MOD_DT=SYSDATE
--              WHERE     M.DEL_IF=0
--                    AND M.THR_EMP_PK IN(SELECT T.THR_EMP_PK FROM THR_WG_SCH_DETAIL T
--                                            WHERE T.DEL_IF=0 AND T.THR_EMP_PK=M.THR_EMP_PK
--                                            AND T.WORK_DT =M.WORK_DT
--                                            AND T.WORK_DT=p_work_dt
--                                            AND (T.THR_WS_PK<>M.THR_WS_PK OR NVL(T.HOL_TYPE,'NOR')<>NVL(M.HOL_TYPE,'NOR'))
--                                            )
--                           AND M.WORK_DT=p_work_dt
--                           AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
--                         AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
--                                WHERE E.DEL_IF=0 
--                                AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK)
--                                AND E.PK=M.THR_EMP_PK)
--              AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
--              and (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--              AND NVL(M.APPROVE_YN,'N')='N'
--              AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
--              
--               
--                l_error:='02';
--                UPDATE THR_EXTRA_TIME M
--                SET M.DEL_IF=M.PK
--                          ,M.MOD_BY= p_crt_by
--                          ,M.REMARK='WRONG SHIFT'
--                          ,M.MOD_DT=SYSDATE
--              WHERE  M.DEL_IF=0
--                    AND M.THR_EMP_PK IN(SELECT T.THR_EMP_PK FROM THR_WG_SCH_DETAIL T
--                                            WHERE T.DEL_IF=0 AND T.THR_EMP_PK=M.THR_EMP_PK
--                                            AND T.WORK_DT =M.WORK_DT
--                                            AND T.WORK_DT=p_work_dt
--                                            AND (T.THR_WS_PK<>M.THR_WS_PK OR NVL(T.HOL_TYPE,'NOR')<>NVL(M.HOL_TYPE,'NOR'))
--                                            )
--                           AND M.WORK_DT=p_work_dt
--                           AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
--                        AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
--                                            WHERE E.DEL_IF=0 
--                                            AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                                                FROM TCO_ORG G
--                                                                WHERE G.DEL_IF = 0
--                                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                                                  CONNECT BY PRIOR G.PK = G.P_PK)
--                        AND E.PK=M.THR_EMP_PK)
--              AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
--              AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--              AND NVL(M.APPROVE_YN,'N')='N'
--              AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
              
              UPDATE THR_ATT_ABSENCE M
                SET M.DEL_IF=M.PK
                      ,M.MOD_BY= p_crt_by
                      ,M.REMARK='WRONG SHIFT'
                      ,M.MOD_DT=SYSDATE
              WHERE     M.DEL_IF=0
                    AND M.THR_EMP_PK IN(SELECT T.THR_EMP_PK FROM THR_WG_SCH_DETAIL T
                                            WHERE T.DEL_IF=0 AND T.THR_EMP_PK=M.THR_EMP_PK
                                            AND T.WORK_DT =M.WORK_DT
                                            AND T.WORK_DT=p_work_dt
                                            AND (T.THR_WS_PK<>M.THR_WS_PK OR NVL(T.HOL_TYPE,'NOR')<>NVL(M.HOL_TYPE,'NOR'))
                                            )
                     AND M.WORK_DT=p_work_dt
                     AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                     AND M.ABSENCE_TYPE IS NULL     --XOA KHI KHONG CO VANG
                     AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                                WHERE E.DEL_IF=0 
                                                    AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                FROM TCO_ORG G
                                                                WHERE G.DEL_IF = 0
                                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                                                    AND E.PK=M.THR_EMP_PK)
                      AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                      and (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                      AND NVL(M.APPROVE_YN,'N')='N'
                      AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
              

            --DELETE NEU OUT VA IN IS NULL
                l_error:='03';
--                DELETE THR_TIME_MACHINE M
--                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
--                AND M.TIME_IN IS NULL AND M.TIME_OUT IS NULL
--                AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
--                                            WHERE E.DEL_IF=0 
--                                            AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                                                FROM TCO_ORG G
--                                                                WHERE G.DEL_IF = 0
--                                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                                                  CONNECT BY PRIOR G.PK = G.P_PK)
--                                    AND E.PK=M.THR_EMP_PK)
--                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
--                AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--                AND NVL(M.APPROVE_YN,'N')='N'
--                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
                DELETE THR_ATT_ABSENCE M
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                AND M.TIME_IN IS NULL AND M.TIME_OUT IS NULL AND M.ABSENCE_TYPE IS NULL 
                AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                            WHERE E.DEL_IF=0 
                                            AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                FROM TCO_ORG G
                                                                WHERE G.DEL_IF = 0
                                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                                    AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

            -- CA NGAY
                l_error:='04';
--                INSERT INTO THR_TIME_MACHINE
--                (PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN, TIME_OUT, PAY_RATE
--                , DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_BYHAND_YN,MOD_AUTO_YN,DAY_TYPE,HOL_TYPE, TCO_COMPANY_PK,ID_NUM)
--                SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,WT.EMP_PK,WT.GROUP_PK,p_work_dt,WT.W_SHIFT,
--                    WT.TIME_IN,WT.TIME_OUT,l_wt_rate,0,sysdate,p_crt_by,p_work_dt,p_work_dt,'N','N'
--                    ,WT.DAY_TYPE,WT.HOL_TYPE, WT.TCO_COMPANY_PK,WT.ID_NUM
--                FROM(
--                SELECT B.PK AS EMP_PK,B.ID_NUM ID_NUM, MAX(B.THR_WG_PK) AS GROUP_PK,MAX(C.THR_WS_PK) AS W_SHIFT
--                 ,MIN(A.TIME) AS TIME_IN
--               ,(CASE WHEN MAX(A.TIME)<MAX(E.START_TIME) THEN NULL ELSE MAX(A.TIME) END) AS TIME_OUT
--                 ,MAX(C.DAY_TYPE) AS DAY_TYPE
--                 ,MAX(C.HOL_TYPE) AS HOL_TYPE
--                 ,MAX(B.TCO_COMPANY_PK) AS TCO_COMPANY_PK
--                  FROM THR_TIME_TEMP A, THR_EMPLOYEE B, THR_WG_SCH_DETAIL C, THR_WORK_SHIFT E
--                 WHERE B.DEL_IF = 0 AND B.DEL_IF=0
--                   AND C.DEL_IF = 0 AND E.DEL_IF = 0       
--                   AND A.ID = B.ID_NUM
--                   AND B.PK = C.THR_EMP_PK AND C.THR_WS_PK = E.PK
--                   AND E.START_TIME <= E.END_TIME --BAO GOM CA 07:00-07:00
--                   AND C.WORK_DT = A.WORK_DT
--                   AND A.WORK_DT = p_work_dt
--                   AND B.PK NOT IN (SELECT M.THR_EMP_PK FROM THR_TIME_MACHINE M WHERE M.DEL_IF = 0 
--                                        AND M.WORK_DT =  p_work_dt AND M.THR_EMP_PK=B.PK)
--                   AND B.TCO_ORG_PK IN (SELECT     G.PK
--                                        FROM TCO_ORG G
--                                        WHERE G.DEL_IF = 0
--                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                          CONNECT BY PRIOR G.PK = G.P_PK)
--                   AND (nvl(TO_CHAR(B.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--                   AND NVL(C.APPROVE_YN,'N')='N'
--                   AND B.PK=NVL(p_thr_emp_pk,B.PK)
--                GROUP BY B.PK,B.ID_NUM)WT;
                
                --INSERT NHUNG NGUOI CO TRONG LICH LAM VIEC
                INSERT INTO THR_ATT_ABSENCE
                (PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK
                , DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_BYHAND_YN,MOD_AUTO_YN,DAY_TYPE,HOL_TYPE, TCO_COMPANY_PK,ID_NUM)
                SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,WT.EMP_PK,WT.GROUP_PK,p_work_dt,WT.W_SHIFT
                    ,0,sysdate,p_crt_by,p_work_dt,p_work_dt,'N','N'
                    ,WT.DAY_TYPE,WT.HOL_TYPE, WT.TCO_COMPANY_PK,WT.ID_NUM
                FROM(
                SELECT B.PK AS EMP_PK,B.ID_NUM ID_NUM, MAX(B.THR_WG_PK) AS GROUP_PK,MAX(C.THR_WS_PK) AS W_SHIFT
                 ,MAX(C.DAY_TYPE) AS DAY_TYPE
                 ,MAX(C.HOL_TYPE) AS HOL_TYPE
                 ,MAX(B.TCO_COMPANY_PK) AS TCO_COMPANY_PK
                  FROM THR_EMPLOYEE B, THR_WG_SCH_DETAIL C
                 WHERE B.DEL_IF = 0 
                   AND C.DEL_IF = 0        
                   AND B.PK = C.THR_EMP_PK
                   AND C.WORK_DT = p_work_dt
                   AND B.PK NOT IN (SELECT M.THR_EMP_PK FROM THR_ATT_ABSENCE M WHERE M.DEL_IF = 0 
                                        AND M.WORK_DT =  p_work_dt AND M.THR_EMP_PK=B.PK)
                   AND B.TCO_ORG_PK IN (SELECT     G.PK
                                        FROM TCO_ORG G
                                        WHERE G.DEL_IF = 0
                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                          CONNECT BY PRIOR G.PK = G.P_PK)
                   AND (nvl(TO_CHAR(B.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                   AND NVL(C.APPROVE_YN,'N')='N'
                   AND B.PK=NVL(p_thr_emp_pk,B.PK)
                GROUP BY B.PK,B.ID_NUM)WT;

                --UPDATE THONG TIN IN-OUT CHO CA NGAY
                UPDATE THR_ATT_ABSENCE M
                SET (M.TIME_IN,M.TIME_OUT,M.WT_RATE) 
                        = (SELECT MIN(A.TIME) AS TIME_IN
                                ,(CASE WHEN MAX(A.TIME)<MAX(E.START_TIME) THEN NULL ELSE MAX(A.TIME) END) AS TIME_OUT
                                ,l_wt_rate
                              FROM THR_TIME_TEMP A, THR_EMPLOYEE B, THR_WG_SCH_DETAIL C, THR_WORK_SHIFT E
                             WHERE B.DEL_IF = 0 AND B.DEL_IF=0
                               AND C.DEL_IF = 0 AND E.DEL_IF = 0       
                               AND A.ID = B.ID_NUM
                               AND B.PK = C.THR_EMP_PK AND C.THR_WS_PK = E.PK
                               AND E.START_TIME <= E.END_TIME --BAO GOM CA 07:00-07:00
                               AND C.WORK_DT = A.WORK_DT
                               AND A.WORK_DT = p_work_dt
                               AND B.PK=M.THR_EMP_PK
                            GROUP BY B.PK,B.ID_NUM)
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                    AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                    AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                    AND M.THR_WS_PK IN (SELECT D.PK
                                           FROM THR_WORK_SHIFT D
                                          WHERE D.DEL_IF = 0 AND D.PK=M.THR_WS_PK
                                            AND D.START_TIME <= D.END_TIME
                                            AND (nvl(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))                        
                    AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                    AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                    AND NVL(M.APPROVE_YN,'N')='N'
                    AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

                --UPDATE LAI GIO IN CHO DUNG
                UPDATE THR_ATT_ABSENCE M
                SET M.TIME_IN=(SELECT MIN(B.TIME)
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                            WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0
                                            AND C.ID_NUM = B.ID AND C.PK = D.THR_EMP_PK
                                              AND D.THR_WS_PK = E.PK AND D.WORK_DT=p_work_dt
                                              AND M.THR_EMP_PK = C.PK
                                              AND B.WORK_DT = D.WORK_DT)
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                    AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                    AND M.THR_EMP_PK = (SELECT C.PK
                                      FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                     WHERE C.DEL_IF = 0 AND M.THR_EMP_PK = C.PK
                                            AND B.ID = C.ID_NUM
                                            AND B.WORK_DT = p_work_dt
                                       GROUP BY C.PK)
                     AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                             AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                            FROM TCO_ORG G
                                                            WHERE G.DEL_IF = 0
                                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                            AND E.PK=M.THR_EMP_PK)
                    AND M.DATE_IN=p_work_dt
                    AND M.THR_WS_PK IN (SELECT D.PK
                                           FROM THR_WORK_SHIFT D
                                          WHERE D.DEL_IF = 0 AND D.PK=M.THR_WS_PK
                                            AND D.START_TIME <= D.END_TIME
                                            AND TO_NUMBER(SUBSTR(D.START_TIME,1,2))> 2
                                            AND (nvl(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                    AND M.TIME_IN IS NULL
                    AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                    AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                    AND NVL(M.APPROVE_YN,'N')='N'
                    AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);


            --LAY LAI GIO IN hop ly
            l_error:='05';
                UPDATE THR_ATT_ABSENCE M
                SET M.TIME_IN=(SELECT MIN(B.TIME)
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                            WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0
                                            AND C.ID_NUM = B.ID AND C.PK = D.THR_EMP_PK
                                              AND D.THR_WS_PK = E.PK AND D.WORK_DT=p_work_dt
                                              AND M.THR_EMP_PK = C.PK
                                              AND ABS(TO_NUMBER(SUBSTR(B.TIME,1,2))-TO_NUMBER(SUBSTR(E.START_TIME,1,2)))<=4
                                              AND B.WORK_DT = D.WORK_DT
                                              AND M.TIME_IN IS NOT NULL
                                              AND B.TIME>M.TIME_IN
                                              )
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                AND NVL(M.MOD_BYHAND_YN,'N')<>'Y' AND NVL(M.MOD_AUTO_YN,'N')<>'Y' 
                    AND M.THR_EMP_PK = (SELECT C.PK
                                      FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                     WHERE C.DEL_IF = 0 AND M.THR_EMP_PK = C.PK
                                            AND B.ID = C.ID_NUM
                                            AND B.WORK_DT = p_work_dt
                                       GROUP BY C.PK)
                AND M.DATE_IN=p_work_dt
                AND M.THR_EMP_PK IN (SELECT E.PK
                                       FROM THR_WORK_SHIFT D,THR_EMPLOYEE E,THR_WG_SCH_DETAIL G
                                      WHERE D.DEL_IF = 0 AND E.DEL_IF=0 AND G.DEL_IF=0
                                             AND E.PK=G.THR_EMP_PK
                                             AND G.WORK_DT=p_work_dt
                                             AND M.THR_EMP_PK=E.PK
                                             AND G.THR_WS_PK=D.PK AND D.START_TIME <= D.END_TIME
                                        AND ABS(TO_NUMBER(SUBSTR(D.START_TIME,1,2))-TO_NUMBER(SUBSTR(M.TIME_IN,1,2)))>6
                                        AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                     )
                AND M.TIME_IN IS NOT NULL
                AND NVL(M.CLOSE_YN,'N')<>'Y'
                AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (nvl(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

            --LAY LAI GIO OUT TRONG NGAY, TRUONG HOP PROCESS SOM
            l_error:='07';
                UPDATE THR_ATT_ABSENCE M
                SET M.TIME_OUT=(SELECT MAX(B.TIME)
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                            WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0
                                            AND C.ID_NUM = B.ID AND C.PK = D.THR_EMP_PK
                                              AND D.THR_WS_PK = E.PK AND D.WORK_DT=B.WORK_DT
                                              AND M.THR_EMP_PK = C.PK AND M.WORK_DT=D.WORK_DT
                                              AND TO_NUMBER(SUBSTR(B.TIME,1,2))*60+TO_NUMBER(SUBSTR(B.TIME,4,2))>=TO_NUMBER(SUBSTR(E.START_TIME,1,2))*60+TO_NUMBER(SUBSTR(E.START_TIME,4,2))+60
                                              AND B.WORK_DT = p_work_dt
                                              )
                    ,M.DATE_OUT=p_work_dt
                    ,M.REMARK='07'
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                AND NVL(M.MOD_BYHAND_YN,'N')<>'Y' AND (NVL(M.MOD_AUTO_YN,'N')<>'Y' OR M.TIME_OUT IS NULL)
                 AND (M.TIME_OUT IS NULL
                                    OR NVL(M.TIME_OUT,' ')=NVL(M.TIME_OUT_ORG,' '))
                    AND M.TIME_IN IS NOT NULL
                    AND M.THR_EMP_PK = (SELECT C.PK
                                      FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                     WHERE C.DEL_IF = 0 AND M.THR_EMP_PK = C.PK
                                            AND B.ID = C.ID_NUM
                                            AND B.WORK_DT = p_work_dt
                                       GROUP BY C.PK)
                     AND M.THR_WS_PK = (SELECT D.PK
                                       FROM THR_WORK_SHIFT D
                                      WHERE D.DEL_IF = 0 AND D.PK=M.THR_WS_PK
                                        AND D.START_TIME <= D.END_TIME
                                        AND (nvl(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                 AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
                l_error:='10'; --lay gio out cua ngay hom sau
                UPDATE THR_ATT_ABSENCE M
                           SET M.TIME_OUT = (SELECT MIN(B.TIME)
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                            WHERE C.DEL_IF=0 AND C.ID_NUM = B.ID
                                              AND M.THR_EMP_PK = C.PK
                                              AND TO_NUMBER(SUBSTR(B.TIME,1,2))<(SELECT TO_NUMBER(SUBSTR(E.START_TIME,1,2))-2
                                                                FROM THR_WORK_SHIFT E,THR_WG_SCH_DETAIL F
                                                                WHERE E.DEL_IF=0 AND F.DEL_IF=0 AND F.THR_WS_PK=E.PK
                                                                AND F.THR_EMP_PK=C.PK AND F.WORK_DT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD'))
                                              AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                              AND B.TIME IS NOT NULL
                                              )
                               ,M.DATE_OUT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                         WHERE M.DEL_IF = 0 AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                           AND M.WORK_DT = p_work_dt
                           AND M.TIME_OUT IS NULL
                           AND M.TIME_IN IS NOT NULL
                           AND M.THR_EMP_PK = (SELECT C.PK
                                             FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                            WHERE B.ID = C.ID_NUM
                                              AND C.DEL_IF = 0 AND M.THR_EMP_PK = C.PK
                                              AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                              GROUP BY C.PK)
                            AND M.THR_WS_PK = (SELECT D.PK
                                              FROM THR_WORK_SHIFT D
                                             WHERE D.DEL_IF = 0
                                               AND M.THR_WS_PK = D.PK
                                               AND D.START_TIME < D.END_TIME
                                               AND TO_NUMBER(SUBSTR(D.START_TIME,1,2))>8
                                               AND (NVL(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                            AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
                l_error:='08';--loc du lieu
                UPDATE THR_ATT_ABSENCE M
                SET M.TIME_OUT=NULL
                    ,M.DATE_OUT=NULL
                    ,M.REMARK='IN-OUT SMALLER 30 - 1'
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                 AND M.TIME_IN IS NOT NULL AND M.TIME_OUT IS NOT NULL
                 AND NVL(M.DATE_IN,'0')=NVL(M.DATE_OUT,'1')
                AND hr_F_Check_In_Out(M.TIME_IN,M.TIME_OUT,30) =0
                AND M.DATE_OUT||M.TIME_OUT<(SELECT DECODE(NVL(S.DURING_DAY,1),1,M.WORK_DT||S.END_TIME,TO_CHAR(TO_DATE(M.WORK_DT,'YYYYMMDD'),'YYYYMMDD')||S.END_TIME)
                                                                        FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND S.PK=M.THR_WS_PK
                                                                            AND (NVL(TO_CHAR(S.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
               AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

                l_error:='09';--loc du lieu
                UPDATE THR_ATT_ABSENCE M
                SET M.TIME_IN=NULL
                    ,M.DATE_IN=NULL
                    ,M.REMARK='OUT-IN SMALLER 30 -2 '
                WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt
                 AND M.TIME_IN IS NOT NULL AND M.TIME_OUT IS NOT NULL
                AND hr_F_Check_In_Out(M.TIME_IN,M.TIME_OUT,30) =0
                AND NVL(M.DATE_IN,'0')=NVL(M.DATE_OUT,'1')
                AND M.DATE_OUT||M.TIME_OUT>=(SELECT DECODE(NVL(S.DURING_DAY,1),1,M.WORK_DT||S.END_TIME,TO_CHAR(TO_DATE(M.WORK_DT,'YYYYMMDD'),'YYYYMMDD')||S.END_TIME)
                                                                        FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND S.PK=M.THR_WS_PK
                                                                            AND (NVL(TO_CHAR(S.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 
                                                         AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                        FROM TCO_ORG G
                                                        WHERE G.DEL_IF = 0
                                                          START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                          CONNECT BY PRIOR G.PK = G.P_PK)
                                        AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
                
                p_result:=0;
         else
            p_result:=1;
         end if;           


    
--exception
--   when others   then
--      p_result:=-1;
--      raise_application_error (-20002,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_V2_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_v2_1 (
   p_work_dt               varchar2,
   p_tco_org_pk            varchar2,
   p_tco_company_pk        varchar2,
   p_emp_id                varchar2,
   p_crt_by                varchar2,
   p_result   out          number
)
is

   l_wt_rate         number;
   l_error         varchar2(2):='';
   l_month_close varchar2(1):='';
   l_cur sys_refcursor;
    l_flag_exist boolean :=false;
    l_string varchar2(2000):='';
    l_pro varchar2(2000):='';
    l_tco_org_pk number:=0;
    p_thr_emp_pk number;
begin
    
    if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;
 
        SELECT C.NUM_1 INTO l_wt_rate
            FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
            WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
            AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y' AND C.CODE='01'
            AND (NVL(TO_CHAR(C.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL');


    -- CA DEM
        l_error:='01';--VAO 1 RA 2
--        INSERT INTO THR_ATT_ABSENCE
--        (PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN, TIME_OUT, WT_RATE
--        , DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_BYHAND_YN,MOD_AUTO_YN,DAY_TYPE,HOL_TYPE, TCO_COMPANY_PK,ID_NUM)
--        SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,WT.THR_EMP_PK,WT.GROUP_PK,p_work_dt,WT.W_SHIFT,
--            WT.TIME_IN,WT.TIME_OUT,l_wt_rate,0,sysdate,p_crt_by,p_work_dt,TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD'),'N','N'
--            ,WT.DAY_TYPE,WT.HOL_TYPE, WT.TCO_COMPANY_PK,WT.ID_NUM
--       FROM (
--             SELECT B.PK AS THR_EMP_PK, D.THR_WG_PK AS GROUP_PK,F.PK AS W_SHIFT
--                 ,(SELECT MIN(M.TIME)
--                    FROM THR_TIME_TEMP M
--                     WHERE M.ID = B.ID_NUM
--                        AND TO_NUMBER(SUBSTR(M.TIME,1,2))>=TO_NUMBER(SUBSTR(F.START_TIME,1,2))-4
--                        AND M.WORK_DT = p_work_dt) AS TIME_IN
--                ,(SELECT MAX(A.TIME)
--                     FROM THR_TIME_TEMP A
--                    WHERE A.ID = B.ID_NUM
--                      AND TO_NUMBER(SUBSTR(A.TIME,1,2))<TO_NUMBER(SUBSTR(F.END_TIME,1,2))+5
--                                  AND TO_NUMBER(SUBSTR(A.TIME,1,2))>TO_NUMBER(SUBSTR(F.END_TIME,1,2))-5
--                      AND A.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD') ) AS TIME_OUT
--                ,D.DAY_TYPE AS DAY_TYPE
--                ,D.HOL_TYPE AS HOL_TYPE
--                ,B.TCO_COMPANY_PK,B.ID_NUM ID_NUM
--                FROM THR_EMPLOYEE B, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT F
--             WHERE B.DEL_IF = 0 AND D.DEL_IF = 0 AND F.DEL_IF = 0
--                AND B.PK = D.THR_EMP_PK AND D.WORK_DT = p_work_dt
--               AND D.THR_WS_PK = F.PK
--               AND B.PK NOT IN (SELECT G.THR_EMP_PK FROM THR_ATT_ABSENCE G WHERE G.DEL_IF = 0 AND G.WORK_DT= p_work_dt and g.thr_emp_pk=b.pk )
--               AND B.ID_NUM IN (SELECT H.ID
--                                                  FROM THR_TIME_TEMP H
--                                                  WHERE  H.WORK_DT BETWEEN p_work_dt AND TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
--                                                  and h.id=b.id_num
--                                                  group by h.id )
--              AND F.START_TIME > F.END_TIME
--              AND B.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK)
--              AND (NVL(TO_CHAR(B.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--              AND NVL(D.APPROVE_YN,'N')='N'
--              AND B.PK=NVL(p_thr_emp_pk,B.PK)
--              ORDER BY B.ID_NUM)WT;

        UPDATE THR_ATT_ABSENCE M
        SET (M.TIME_IN,M.TIME_OUT,M.WT_RATE) 
                = (SELECT (SELECT MIN(M.TIME)
                            FROM THR_TIME_TEMP M
                             WHERE M.ID = B.ID_NUM
                                AND TO_NUMBER(SUBSTR(M.TIME,1,2))>=TO_NUMBER(SUBSTR(F.START_TIME,1,2))-4
                                AND M.WORK_DT = p_work_dt) AS TIME_IN
                        ,(SELECT MAX(A.TIME)
                             FROM THR_TIME_TEMP A
                            WHERE A.ID = B.ID_NUM
                              AND TO_NUMBER(SUBSTR(A.TIME,1,2))<TO_NUMBER(SUBSTR(F.END_TIME,1,2))+5
                                          AND TO_NUMBER(SUBSTR(A.TIME,1,2))>TO_NUMBER(SUBSTR(F.END_TIME,1,2))-5
                              AND A.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD') ) AS TIME_OUT
                        ,l_wt_rate
                    FROM THR_EMPLOYEE B, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT F
                 WHERE B.DEL_IF = 0 AND D.DEL_IF = 0 AND F.DEL_IF = 0
                    AND B.PK = D.THR_EMP_PK AND D.WORK_DT = p_work_dt
                   AND D.THR_WS_PK = F.PK
                  AND F.START_TIME > F.END_TIME
                  AND NVL(D.APPROVE_YN,'N')='N'
                  AND B.PK=M.THR_EMP_PK
                 )
        WHERE M.DEL_IF = 0 AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
               AND M.WORK_DT = p_work_dt
               AND M.TIME_OUT IS  NULL
               AND M.TIME_IN IS NOT NULL
               AND M.THR_EMP_PK = (SELECT C.PK
                                 FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                WHERE C.DEL_IF = 0 AND B.ID = C.ID_NUM
                                  AND M.THR_EMP_PK = C.PK
                                  AND B.WORK_DT = p_work_dt
                                  GROUP BY C.PK)
                AND M.THR_WS_PK = (SELECT D.PK
                                  FROM THR_WORK_SHIFT D
                                 WHERE D.DEL_IF = 0
                                   AND M.THR_WS_PK = D.PK
                                   AND D.START_TIME > D.END_TIME
                                   AND (NVL(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK)   ;       


        -- VAO NGAY 1 RA NGAY 1
        l_error:='02';
        UPDATE THR_ATT_ABSENCE M
                   SET M.TIME_OUT = (SELECT DECODE(hr_F_Check_In_Out(MAX(E.START_TIME),MAX(B.TIME),30),0,'',MAX(B.TIME))
                                     FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                    WHERE C.DEL_IF = 0 AND D.DEL_IF = 0 AND E.DEL_IF=0 AND B.ID = C.ID_NUM
                                      AND C.PK = D.THR_EMP_PK
                                      AND M.THR_EMP_PK = C.PK AND D.THR_WS_PK = E.PK
                                      AND D.WORK_DT=p_work_dt
                                      AND B.WORK_DT = p_work_dt
                                      AND B.TIME > E.START_TIME     --phai lon hon gio bat dau ca lam viec
                                      )
                       ,M.DATE_OUT=p_work_dt
                       ,M.REMARK = '2_02_1'
                 WHERE M.DEL_IF = 0 AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                   AND M.WORK_DT = p_work_dt
                   AND M.TIME_OUT IS  NULL
                   AND M.TIME_IN IS NOT NULL
                   AND M.THR_EMP_PK = (SELECT C.PK
                                     FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                    WHERE C.DEL_IF = 0 AND B.ID = C.ID_NUM
                                      AND M.THR_EMP_PK = C.PK
                                      AND B.WORK_DT = p_work_dt
                                      GROUP BY C.PK)
                    AND M.THR_WS_PK = (SELECT D.PK
                                      FROM THR_WORK_SHIFT D
                                     WHERE D.DEL_IF = 0
                                       AND M.THR_WS_PK = D.PK
                                       AND D.START_TIME > D.END_TIME
                                       AND (NVL(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
    -- VAO NGAY 1 RA NGAY 2
        l_error:='02';
        UPDATE THR_ATT_ABSENCE M
                   SET M.TIME_OUT = (SELECT MAX(B.TIME)
                                     FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                                    WHERE C.DEL_IF = 0 AND D.DEL_IF = 0 AND E.DEL_IF=0 AND B.ID = C.ID_NUM
                                      AND C.PK = D.THR_EMP_PK
                                      AND M.THR_EMP_PK = C.PK AND D.THR_WS_PK = E.PK
                                      AND D.WORK_DT=p_work_dt
                                      AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                      AND TO_NUMBER(SUBSTR(B.TIME,1,2))<=TO_NUMBER(SUBSTR(E.END_TIME,1,2))+8
                                      AND TO_NUMBER(SUBSTR(B.TIME,1,2))>TO_NUMBER(SUBSTR(E.END_TIME,1,2))-5
                                      )
                       ,M.DATE_OUT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                       ,M.REMARK = '2_02'
                 WHERE M.DEL_IF = 0 AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                   AND M.WORK_DT = p_work_dt
                   AND M.TIME_OUT IS  NULL
                   AND M.TIME_IN IS NOT NULL
                   AND M.THR_EMP_PK = (SELECT C.PK
                                     FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                                    WHERE C.DEL_IF = 0 AND B.ID = C.ID_NUM
                                      AND M.THR_EMP_PK = C.PK
                                      AND B.WORK_DT = p_work_dt
                                      GROUP BY C.PK)
                    AND M.THR_WS_PK = (SELECT D.PK
                                      FROM THR_WORK_SHIFT D
                                     WHERE D.DEL_IF = 0
                                       AND M.THR_WS_PK = D.PK
                                       AND D.START_TIME > D.END_TIME
                                       )
                 AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
                AND NVL(M.CLOSE_YN,'N')<>'Y'AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);


    
                
    -- VAO NGAY 2 RA NGAY 2
    l_error:='03';
        UPDATE THR_ATT_ABSENCE M
          SET M.TIME_IN = (SELECT DECODE(hr_F_Check_In_Out2(MAX(E.START_TIME),MIN(B.TIME),6),0,'',MIN(B.TIME))
                         FROM THR_TIME_TEMP B, THR_EMPLOYEE C, THR_WG_SCH_DETAIL D, THR_WORK_SHIFT E
                        WHERE C.DEL_IF = 0 AND D.DEL_IF=0 AND E.DEL_IF=0
                          AND B.ID = C.ID_NUM AND C.PK = D.THR_EMP_PK
                          AND  M.THR_EMP_PK = C.PK AND D.THR_WS_PK = E.PK
                          AND D.WORK_DT=p_work_dt
                          AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                          )
            ,M.DATE_IN=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
            ,M.REMARK = '2_03'
        WHERE M.DEL_IF = 0 AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
          AND M.WORK_DT = p_work_dt
          AND M.TIME_OUT IS NOT NULL
          AND M.TIME_IN IS  NULL
          AND M.THR_EMP_PK = (SELECT C.PK
                            FROM THR_TIME_TEMP B, THR_EMPLOYEE C
                        WHERE C.DEL_IF=0 AND B.ID = C.ID_NUM
                          AND M.THR_EMP_PK = C.PK
                          AND B.WORK_DT = TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                          GROUP BY C.PK)
        AND M.THR_WS_PK = (SELECT D.PK
                             FROM THR_WORK_SHIFT D
                            WHERE D.DEL_IF = 0
                                AND M.THR_WS_PK = D.PK
                                AND D.START_TIME > D.END_TIME
                                )
        AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);


            
    --xoa trong truong hop khong co gio in va ca cua ngay ke tiep la ca ngay 
    UPDATE THR_ATT_ABSENCE M
            SET  M.DEL_IF=M.PK
                ,M.REMARK='KO CO GIO IN VA CA NGAY KE TIEP LA CA NGAY'
            WHERE M.del_if=0 AND M.WORK_DT=p_work_dt
                  AND M.TIME_IN IS NULL
                  AND M.THR_EMP_PK IN(SELECT G.THR_EMP_PK FROM THR_WG_SCH_DETAIL G,THR_WORK_SHIFT S   -- ca cua ngay ke tiep la ca ngay 
                                        WHERE G.DEL_IF=0 AND S.DEL_IF=0 AND G.THR_WS_PK=S.PK 
                                        AND G.WORK_DT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                        AND S.START_TIME<S.END_TIME
                                    AND G.THR_EMP_PK=M.THR_EMP_PK)
                 AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
                  and M.hol_type is not null
                  AND M.THR_WS_PK IN(SELECT S.PK FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND S.START_TIME>S.END_TIME 
                                                        AND S.PK=M.THR_WS_PK
                                                        AND (NVL(TO_CHAR(S.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))                  
            AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
            AND NVL(M.APPROVE_YN,'N')='N'
            AND NVL(M.MOD_BYHAND_YN,'N') = 'N'
            AND NVL(M.MOD_AUTO_YN,'N') = 'N'
            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
            

    --GIO IN HOM NAY TRUNG  VOI GIO OUT HOM QUA=> LAY LAI GIO IN 1 LAN NUA
            UPDATE THR_ATT_ABSENCE M
            SET  M.TIME_IN=(SELECT MIN(N.TIME) 
                                FROM THR_TIME_TEMP N,THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 AND E.ID_NUM=N.ID 
                                      AND N.WORK_DT=p_work_dt
                                AND N.TIME>M.TIME_IN
                                AND E.PK=M.THR_EMP_PK
                                AND N.WORK_DT=M.WORK_DT
                                AND N.TIME<'12:00')
                ,M.DATE_IN=p_work_dt
                ,M.REMARK='TRUNG VOI GIO OUT NGAY TRUOC'
            WHERE M.del_if=0 AND M.WORK_DT=p_work_dt
                  AND M.TIME_IN IS NOT NULL
                  AND M.TIME_IN IN(SELECT NVL(T.TIME_OUT,' ') FROM THR_ATT_ABSENCE T WHERE T.DEL_IF=0
                                    AND T.WORK_DT=TO_CHAR(TO_DATE(p_work_dt,'YYYYMMDD')-1,'YYYYMMDD')
                                    AND T.THR_EMP_PK=M.THR_EMP_PK)
                 AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
            AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
            AND NVL(M.APPROVE_YN,'N')='N'
            AND NVL(M.MOD_BYHAND_YN,'N') = 'N'
            AND NVL(M.MOD_AUTO_YN,'N') = 'N'
            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
            
                    --loc du lieu lai 1 lan nua
            UPDATE THR_ATT_ABSENCE M
            SET M.TIME_OUT=NULL
                ,M.REMARK = 'TIME_OUT NULL'
            WHERE M.del_if=0 AND M.WORK_DT=p_work_dt
                  AND M.TIME_IN IS NOT NULL
                  AND M.TIME_OUT IS NOT NULL
                  AND  hr_F_Check_In_Out(M.TIME_IN,M.TIME_OUT,30) =0
                  AND NVL(M.DATE_IN,'0')=NVL(M.DATE_OUT,'1')
                  AND M.THR_WS_PK = (SELECT D.PK
                             FROM THR_WORK_SHIFT D
                            WHERE D.DEL_IF = 0
                                AND M.THR_WS_PK = D.PK
                                AND D.START_TIME > D.END_TIME
                                AND (NVL(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
                  AND M.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                                WHERE E.DEL_IF=0 
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK)
                                AND E.PK=M.THR_EMP_PK)
            AND NVL(M.CLOSE_YN,'N')<>'Y'  AND NVL(M.CLOSE_M_YN,'N')<>'Y'
            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
            AND NVL(M.APPROVE_YN,'N')='N'
            AND NVL(M.MOD_BYHAND_YN,'N') = 'N'
            AND NVL(M.MOD_AUTO_YN,'N') = 'N'
            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

          

 
    p_result:=0;

--exception
--   when others   then
--      p_result:=-1;
--      raise_application_error (-20002,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_V2_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_V2_2 (
   p_work_dt               varchar2,
   P_TCO_ORG_PK            varchar2,
   p_tco_company_pk        varchar2,
   p_emp_id                varchar2,
   p_crt_by                varchar2,
   p_result   out          number
)
is

   l_wt_rate         number;
   l_error         varchar2(2):='';
    l_month_close varchar2(1):='';
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_pro varchar(200);
    l_string varchar(200);
    l_tco_org_pk number:=0;
    l_wt_add    number;
    l_wt_condition1 number;
    l_wt_condition2 number;
    p_thr_emp_pk number;
begin
    
    if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;
     
         l_error:='01';
         --added: 12-06-2015 : truong
                 select nvl(max(NVL(A.NUM_1,0)),0),nvl(max(NVL(A.NUM_2,0)),0),nvl(max(NVL(A.NUM_3,0)),99)
                 INTO l_wt_add,l_wt_condition1 ,l_wt_condition2
                 FROM THR_CODE_DETAIL A WHERE A.DEL_IF=0 AND A.USE_YN='Y' AND A.MASTER_ID='HR0208' AND A.CODE='01'; 
         
        --XAC DINH TEMP OUT 1
         
--        UPDATE THR_ATT_ABSENCE M
--        SET M.TEMP_OUT=HR_GET_MID_TIME(M.DATE_IN,M.TIME_IN,M.DATE_OUT,M.TIME_OUT,M.ID_NUM)
--        WHERE M.DEL_IF = 0
--        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y' 
--        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
--        AND M.TIME_IN IS NOT NULL
--        AND M.TIME_OUT IS NOT NULL
--        AND M.WORK_DT = p_work_dt
--        and M.THR_EMP_PK in (select pk from thr_employee e 
--                                where  E.DEL_IF=0
--                                AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK) 
--                                and E.PK=M.THR_EMP_PK
--                                )
--        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
--        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--        AND NVL(M.APPROVE_YN,'N')='N'
--        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
--        
--        
--        --XAC DINH TEMP IN 1 
--         
--        UPDATE THR_ATT_ABSENCE M
--        SET M.TEMP_IN=HR_GET_MID_TIME((CASE WHEN M.TEMP_OUT>M.TIME_IN THEN M.DATE_IN ELSE TO_CHAR(TO_DATE(M.DATE_IN,'YYYYMMDD')+1,'YYYYMMDD') END) 
--                                        ,M.TEMP_OUT,M.DATE_OUT,M.TIME_OUT,M.ID_NUM)
--        WHERE M.DEL_IF = 0
--        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
--        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
--        AND M.TIME_IN IS NOT NULL
--        AND M.TEMP_OUT IS NOT NULL
--        AND M.TIME_OUT IS NOT NULL
--        AND M.WORK_DT = p_work_dt
--        and M.THR_EMP_PK in (select pk from thr_employee e 
--                                where  E.DEL_IF=0
--                                AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK) 
--                                and E.PK=M.THR_EMP_PK
--                                )
--        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
--        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--        AND NVL(M.APPROVE_YN,'N')='N'
--        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
--        
--        
--        --XAC DINH TEMP OUT 2 NEU CO 
--         
--        UPDATE THR_ATT_ABSENCE M
--        SET M.TEMP_OUT2=HR_GET_MID_TIME((CASE WHEN M.TEMP_IN>M.TIME_IN THEN M.DATE_IN ELSE TO_CHAR(TO_DATE(M.DATE_IN,'YYYYMMDD')+1,'YYYYMMDD') END) 
--                                        ,M.TEMP_IN,M.DATE_OUT,M.TIME_OUT,M.ID_NUM)
--        WHERE M.DEL_IF = 0
--        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
--        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
--        AND M.TIME_IN IS NOT NULL
--        AND M.TEMP_OUT IS NOT NULL
--        AND M.TEMP_IN IS NOT NULL
--        AND M.TIME_OUT IS NOT NULL
--        AND M.WORK_DT = p_work_dt
--        and M.THR_EMP_PK in (select pk from thr_employee e 
--                                where  E.DEL_IF=0
--                                AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK) 
--                                and E.PK=M.THR_EMP_PK
--                                )
--        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
--        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--        AND NVL(M.APPROVE_YN,'N')='N'
--        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
--
--        --XAC DINH TEMP IN 2 NEU CO 
--         
--        UPDATE THR_ATT_ABSENCE M
--        SET M.TEMP_IN2=HR_GET_MID_TIME((CASE WHEN M.TEMP_OUT2>M.TIME_IN THEN M.DATE_IN ELSE TO_CHAR(TO_DATE(M.DATE_IN,'YYYYMMDD')+1,'YYYYMMDD') END) 
--                                        ,M.TEMP_OUT2,M.DATE_OUT,M.TIME_OUT,M.ID_NUM)
--        WHERE M.DEL_IF = 0
--        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
--        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
--        AND M.TIME_IN IS NOT NULL
--        AND M.TEMP_OUT IS NOT NULL
--        AND M.TEMP_IN IS NOT NULL
--        AND M.TEMP_OUT2 IS NOT NULL
--        AND M.TIME_OUT IS NOT NULL
--        AND M.WORK_DT = p_work_dt
--        and M.THR_EMP_PK in (select pk from thr_employee e 
--                                where  E.DEL_IF=0
--                                AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK) 
--                                and E.PK=M.THR_EMP_PK
--                                )
--        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
--        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--        AND NVL(M.APPROVE_YN,'N')='N'
--        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);        
        
         

        UPDATE THR_ATT_ABSENCE M
        SET M.WT = 0
        WHERE M.DEL_IF = 0
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.WORK_DT = p_work_dt
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.HOL_TYPE IS NOT NULL --NGAY NGHI
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        --tinh cho dang temp in,out
--        UPDATE THR_ATT_ABSENCE M
--        SET M.TEMP_HT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'HT')
--            ,M.TEMP_OT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'OT')
--            ,M.TEMP_NT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'NT')
--            ,M.TEMP_NT2=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'NT2')
--        WHERE M.DEL_IF = 0
--        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
--        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
--        AND M.TIME_IN IS NOT NULL
--        AND M.TIME_OUT IS NOT NULL
--        AND M.WORK_DT = p_work_dt
--        and M.THR_EMP_PK in (select pk from thr_employee e 
--                                where  E.DEL_IF=0
--                                AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK) 
--                                and E.PK=M.THR_EMP_PK
--                                )
--        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
--        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--        AND NVL(M.APPROVE_YN,'N')='N'
--        AND M.HOL_TYPE IS NOT NULL --NGAY NGHI
--        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
--        
--        --ngay thuong
--        UPDATE THR_ATT_ABSENCE M
--        SET M.TEMP_WT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'WT')
--            ,M.TEMP_OT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'OT')
--            ,M.TEMP_NT=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'NT')
--            ,M.TEMP_NT2=HR_GET_TEMP_HOUR_V4(p_tco_company_pk,M.TIME_IN,M.TEMP_OUT,M.TEMP_IN,M.TEMP_OUT2,M.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,M.THR_WS_PK,M.WORK_DT,'NT2')
--        WHERE M.DEL_IF = 0
--        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
--        AND NVL(M.MOD_AUTO_YN,'N')<>'Y' --co sua roi ko lay gio nua
--        AND M.TIME_IN IS NOT NULL
--        AND M.TIME_OUT IS NOT NULL
--        AND M.WORK_DT = p_work_dt
--        and M.THR_EMP_PK in (select pk from thr_employee e 
--                                where  E.DEL_IF=0
--                                AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK) 
--                                and E.PK=M.THR_EMP_PK
--                                )
--        AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
--        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--        AND NVL(M.APPROVE_YN,'N')='N'
--        AND M.HOL_TYPE IS NULL --NGAY THUONG
--        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);



       UPDATE THR_ATT_ABSENCE M
       SET M.WT = HR_SF_GET_WT_COM(M.DATE_IN||M.TIME_IN,M.DATE_OUT||M.TIME_OUT,M.THR_WS_PK,M.WORK_DT,p_tco_company_pk)
       WHERE M.DEL_IF = 0
       AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
       AND M.TIME_IN IS NOT NULL
       AND M.TIME_OUT IS NOT NULL
       AND M.WORK_DT = p_work_dt
       and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND M.THR_EMP_PK not  IN (SELECT D.THR_EMP_PK
                                    FROM THR_REGULATION D WHERE D.DEL_IF = 0
                                    AND D.THR_EMP_PK=M.THR_EMP_PK
                                    GROUP BY D.THR_EMP_PK
                                    HAVING MAX(D.START_DT)<=p_work_dt AND MAX(D.END_DT)>=p_work_dt)
        AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);

        l_error:='02';
        
        UPDATE THR_ATT_ABSENCE M -- cho nhung nguoi trong che do
        SET M.WT =NVL((SELECT 
                           decode(max(l.reg_type),'01',
                                    case when hr_SF_GET_WT_COM(to_char(to_date(M.date_in||M.time_in,'yyyymmdd HH24:MI')-max(nvl(l.REG_HOURS,0))/24,'yyyymmddHH24:MI')--date in 
                                         ,M.date_out||M.time_out--date out 
                                         ,M.thr_ws_pk,M.work_dt,p_tco_company_pk)>max(nvl(w.WT,0)+nvl(w.wt_plus,0)) then max(nvl(w.WT,0)+nvl(w.wt_plus,0)) 
                                    else hr_SF_GET_WT_COM(to_char(to_date(M.date_in||M.time_in,'yyyymmdd HH24:MI')-max(nvl(l.REG_HOURS,0))/24,'yyyymmddHH24:MI')--date in 
                                         ,M.date_out||M.time_out--date out 
                                         ,M.thr_ws_pk,M.work_dt,p_tco_company_pk)
                                    end,        
                                   '03',
                                    case when hr_SF_GET_WT_COM(M.date_in||M.time_in--date in 
                                         ,to_char(to_date(M.date_out||M.time_out,'yyyymmdd HH24:MI')+max(nvl(l.REG_HOURS,0))/24,'yyyymmddHH24:MI')--date out 
                                         ,M.thr_ws_pk,M.work_dt,p_tco_company_pk) >max(nvl(w.WT,0)+nvl(w.wt_plus,0)) then max(nvl(w.WT,0)+nvl(w.wt_plus,0)) 
                                    else hr_SF_GET_WT_COM(M.date_in||M.time_in--date in 
                                         ,to_char(to_date(M.date_out||M.time_out,'yyyymmdd HH24:MI')+max(nvl(l.REG_HOURS,0))/24,'yyyymmddHH24:MI')--date out 
                                         ,M.thr_ws_pk,M.work_dt,p_tco_company_pk)
                                    end,
                                    '04', 
                                    case when hr_SF_GET_WT_COM(M.date_in||M.time_in,M.date_out||M.time_out,M.thr_ws_pk,M.work_dt,p_tco_company_pk)+max(nvl(l.REG_HOURS,0))>max(nvl(w.WT,0)+nvl(w.wt_plus,0)) 
                                         then max(nvl(w.WT,0)+nvl(w.wt_plus,0)) 
                                    else hr_SF_GET_WT_COM(M.date_in||M.time_in,M.date_out||M.time_out,M.thr_ws_pk,M.work_dt,p_tco_company_pk)
                                         +max(nvl(l.REG_HOURS,0))
                                    end,0) as wt                                                                                                     
                            FROM THR_REGULATION L, thr_work_shift w
                            WHERE L.DEL_IF=0 AND L.THR_EMP_PK=M.thr_emp_pk
                            and w.DEL_IF=0
                            and w.PK=M.thr_ws_pk
                            and M.work_dt between L.START_DT and L.END_DT
                            GROUP BY L.THR_EMP_PK),0)
        WHERE M.DEL_IF = 0
        AND M.WORK_DT = p_work_dt
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.THR_EMP_PK IN (SELECT D.THR_EMP_PK
                                     FROM THR_REGULATION D WHERE D.DEL_IF = 0
                                     AND D.THR_EMP_PK=M.THR_EMP_PK
                                     GROUP BY D.THR_EMP_PK
                                     HAVING MAX(D.START_DT)<=p_work_dt AND MAX(D.END_DT)>=p_work_dt)
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        --truong hop dac biet che do ra ve vao gio nghi trua 
        
        UPDATE THR_ATT_ABSENCE M -- cho nhung nguoi trong che do
        SET M.WT =NVL((SELECT hr_SF_GET_WT_COM(M.date_in||M.time_in,M.date_out||M.time_out,M.thr_ws_pk,M.work_dt,p_tco_company_pk)
                                         +max(nvl(l.REG_HOURS,0))
                            FROM THR_REGULATION L, thr_work_shift w
                            WHERE L.DEL_IF=0 AND L.THR_EMP_PK=M.thr_emp_pk
                            and w.DEL_IF=0
                            and w.PK=M.thr_ws_pk
                            GROUP BY L.THR_EMP_PK
                            HAVING MAX(L.START_DT)<=M.work_dt
                            AND MAX(L.END_DT)>=M.work_dt),0)
        WHERE M.DEL_IF = 0
        AND M.WORK_DT = p_work_dt
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.THR_EMP_PK IN (SELECT D.THR_EMP_PK
                                     FROM THR_REGULATION D WHERE D.DEL_IF = 0
                                     AND D.THR_EMP_PK=M.THR_EMP_PK AND D.REG_TYPE='03'
                                     GROUP BY D.THR_EMP_PK
                                     HAVING MAX(D.START_DT)<=p_work_dt AND MAX(D.END_DT)>=p_work_dt)
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' and  NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND M.HOL_TYPE IS NULL
        AND M.THR_WS_PK IN(SELECT W.PK FROM THR_WORK_SHIFT W WHERE W.DEL_IF=0 AND W.PK=M.THR_WS_PK
                                AND M.TIME_OUT<W.END_MEAL1
                                AND (NVL(TO_CHAR(W.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'))
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        
        
        --truong hop neu ko lam du 7h thi ko tinh them gio duoc huong
        
        UPDATE THR_ATT_ABSENCE M -- cho nhung nguoi trong che do
        SET M.WT =(case when nvl(M.WT,0)-1>0 then nvl(M.WT,0)-1 else 0 end)  
        WHERE M.DEL_IF = 0
        AND M.WORK_DT = p_work_dt
        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
        AND M.TIME_IN IS NOT NULL
        AND M.TIME_OUT IS NOT NULL
        AND M.THR_EMP_PK IN (SELECT D.THR_EMP_PK
                                     FROM THR_REGULATION D WHERE D.DEL_IF = 0
                                     AND D.THR_EMP_PK=M.THR_EMP_PK
                                     GROUP BY D.THR_EMP_PK
                                     HAVING MAX(D.START_DT)<=p_work_dt AND MAX(D.END_DT)>=p_work_dt)
        and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
        AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
        AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND nvl(M.WT,0)<8
        AND NVL(M.APPROVE_YN,'N')='N'
        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
        
        --tru gio temp out-in
        
--        UPDATE THR_ATT_ABSENCE M
--        SET M.WT=(CASE WHEN NVL(M.WT,0)-NVL(M.TEMP_WT,0)>0 THEN NVL(M.WT,0)-NVL(M.TEMP_WT,0) ELSE 0 END) 
--        WHERE M.DEL_IF = 0
--        AND M.WORK_DT = p_work_dt
--        AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
--        AND M.TIME_IN IS NOT NULL
--        AND M.TIME_OUT IS NOT NULL
--        AND M.TEMP_OUT IS NOT NULL
--        AND M.TEMP_IN IS NOT NULL
--        AND NVL(M.TEMP_WT,0)>0
--        and M.THR_EMP_PK in (select pk from thr_employee e 
--                                where  E.DEL_IF=0
--                                AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK) 
--                                and E.PK=M.THR_EMP_PK
--                                )
--        AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
--        AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
--        AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--        AND NVL(M.APPROVE_YN,'N')='N'
--        AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        
         IF l_wt_add <>0 THEN --trong truong hop lam ko du gio va co ap dung code 0208
         
            --cap nhat wt add them theo dieu kien duoc dinh nghia trong code HR0208
            UPDATE THR_ATT_ABSENCE M
            SET M.WT=(CASE WHEN NVL(M.WT,0) >=l_wt_condition1 AND NVL(M.WT,0)<=l_wt_condition2
                                 THEN NVL(M.WT,0)+l_wt_add ELSE M.WT END)
            WHERE M.DEL_IF = 0
            AND M.WORK_DT = p_work_dt
            AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
            AND NVL(M.WT,0)>0
            and M.THR_EMP_PK in (select pk from thr_employee e 
                                    where  E.DEL_IF=0
                                    AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK) 
                                    and E.PK=M.THR_EMP_PK
                                    )
            AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
            AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
            AND NVL(M.APPROVE_YN,'N')='N'
            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK)
            AND M.THR_WS_PK IN(SELECT S.PK FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND NVL(S.WT_PLUS,0)<>0);
            
        END IF;    
        
        
--          -- DELETE  NEU GIO CONG SAI DE INSERT KIEU VANG   
--        UPDATE THR_ATT_ABSENCE M
--        SET M.DEL_IF= M.PK
--        WHERE M.DEL_IF=0 AND M.WORK_DT = p_work_dt
--            AND M.TIME_IN IS NULL
--            AND M.TIME_OUT IS NULL
--            AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
--            and M.THR_EMP_PK in (select pk from thr_employee e 
--                                where  E.DEL_IF=0
--                                AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK) 
--                                and E.PK=M.THR_EMP_PK
--                                )
--            AND NVL(M.CLOSE_YN,'N')<>'Y' and  NVL(M.CLOSE_M_YN,'N')<>'Y'
--            AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--            AND NVL(M.APPROVE_YN,'N')='N'
--            AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
        

   l_error:='04'; -- XU LY VANG MAT
            UPDATE THR_ATT_ABSENCE M --AUTO INSERT ABSENT LIST NON SCAN CARD
            SET  M.ABSENCE_TYPE = '13'
                ,M.ABSENCE_TIME = 8 
            WHERE M.DEL_IF = 0
                AND M.WORK_DT = p_work_dt
                AND NVL(M.MOD_BYHAND_YN,'N')<>'Y'
                AND M.TIME_IN IS NULL AND M.TIME_OUT IS NULL
                and M.THR_EMP_PK in (select pk from thr_employee e 
                                        where  E.DEL_IF=0
                                        AND E.TCO_ORG_PK IN (SELECT  G.PK
                                                    FROM TCO_ORG G
                                                    WHERE G.DEL_IF = 0
                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                      CONNECT BY PRIOR G.PK = G.P_PK) 
                                        and E.PK=M.THR_EMP_PK
                                        )
                AND NVL(M.CLOSE_YN,'N')<>'Y' and NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND M.HOL_TYPE IS NULL --NGAY BINH THUONG
                AND (NVL(TO_CHAR(M.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK);
                
--                 INSERT INTO THR_ATT_ABSENCE  --AUTO INSERT ABSENT LIST NON SCAN CARD 
--                 (PK, THR_EMP_PK, THR_WG_PK, THR_WS_PK,ABSENCE_TYPE,WORK_DT, ABSENCE_TIME
--                 , COMPANY_PAY_YN, COMPANY_PAY_RATE
--                 , REMARK, DEL_IF, CRT_DT, CRT_BY, TCO_COMPANY_PK)
--                SELECT THR_ABSENCE_SEQ.NEXTVAL,A.PK,B.THR_WG_PK,B.THR_WS_PK,'13',p_work_dt,(CASE WHEN NVL(S.WT,0)+NVL(S.WT_PLUS,0)>8 THEN 8 ELSE NVL(S.WT,0)+NVL(S.WT_PLUS,0) END)
--                       ,'N',0,'INS FROM PROCESS', 0, SYSDATE, p_crt_by, A.TCO_COMPANY_PK
--                  FROM THR_EMPLOYEE A, THR_WG_SCH_DETAIL B, THR_WORK_SHIFT S
--                 WHERE A.DEL_IF = 0
--                   AND B.DEL_IF = 0
--                   AND S.DEL_IF = 0
--                   and hr_sf_check_month_close(p_work_dt,a.sal_period, a.tco_company_pk)<>'Y'
--                   AND A.PK = B.THR_EMP_PK AND B.THR_WS_PK=S.PK
--                   AND B.WORK_DT=p_work_dt
--                   AND A.JOIN_DT <= p_work_dt
--                   AND (A.LEFT_DT>p_work_dt OR A.LEFT_DT IS NULL)
--                   AND TO_CHAR(TO_DATE(p_work_dt||S.START_TIME,'YYYYMMDDHH24:MI'),'YYYYMMDDHH24:MI')<TO_CHAR(SYSDATE,'YYYYMMDDHH24:MI')
--                   AND A.PK NOT IN (SELECT C.THR_EMP_PK
--                                          FROM THR_ATT_ABSENCE C
--                                         WHERE C.DEL_IF = 0
--                                           AND C.WORK_DT = p_work_dt and c.thr_emp_pk=a.pk
--                                           AND (C.TIME_IN IS NOT NULL OR C.TIME_OUT IS NOT NULL)
--                                           )
--                   
--                   AND A.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK) 
--                  AND B.HOL_TYPE IS NULL  --NGAY BINH THUONG
--                  AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--                  AND NVL(B.APPROVE_YN,'N')='N'
--                  AND A.PK=NVL(p_thr_emp_pk,A.PK);
--
--        INSERT INTO THR_ATT_ABSENCE  --AUTO INSERT ABSENT LIST 
--                         (PK, THR_EMP_PK, THR_WG_PK, THR_WS_PK,ABSENCE_TYPE,WORK_DT, ABSENCE_TIME
--                         , COMPANY_PAY_YN, COMPANY_PAY_RATE
--                         , REMARK, DEL_IF, CRT_DT, CRT_BY, TCO_COMPANY_PK)
--        SELECT THR_ABSENCE_SEQ.NEXTVAL,A.PK,A.THR_WG_PK,NULL,'17',p_work_dt,8
--                               ,'N',0,'INS FROM PROCESS', 0, SYSDATE, p_crt_by, A.TCO_COMPANY_PK
--                          FROM THR_EMPLOYEE A,THR_CALENDAR C
--                         WHERE A.DEL_IF = 0 
--                           AND C.DEL_IF=0
--                           AND C.CAR_DATE=p_work_dt
--                           and hr_sf_check_month_close(p_work_dt,a.sal_period, a.tco_company_pk)<>'Y'
--                           AND C.HOL_TYPE IS NULL
--                           AND A.JOIN_DT <= p_work_dt
--                           AND (A.LEFT_DT>p_work_dt OR A.LEFT_DT IS NULL)
--                           AND A.PK NOT IN (SELECT C.THR_EMP_PK
--                                                  FROM THR_ATT_ABSENCE C
--                                                 WHERE C.DEL_IF = 0
--                                                   AND C.WORK_DT = p_work_dt
--                                                   and c.thr_emp_pk=a.pk)
--                          
--                         AND A.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK)
--                         AND (NVL(TO_CHAR(C.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--                         AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--                          AND A.PK NOT IN (SELECT B.THR_EMP_PK FROM THR_WG_SCH_DETAIL B WHERE B.DEL_IF=0 
--                                                            AND B.WORK_DT=p_work_dt and b.thr_emp_pk=a.pk)
--                        AND A.PK=NVL(p_thr_emp_pk,A.PK);                                                            


      --ABSENCE TYPE LA SO 
--
--      DELETE THR_ABSENCE A
--         WHERE A.DEL_IF = 0
--           AND A.ABSENCE_DT = p_work_dt AND A.ABSENCE_TYPE  in ('13')
--           AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK
--                              FROM THR_TIME_MACHINE B,THR_EMPLOYEE E
--                             WHERE B.DEL_IF = 0 AND E.DEL_IF=0 AND B.THR_EMP_PK=E.PK
--                               AND B.WORK_DT = p_work_dt and e.pk=a.thr_emp_pk
--                               AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK)
--                              )
--     AND NVL(A.CLOSE_YN,'N')<>'Y'and  NVL(A.CLOSE_M_YN,'N')<>'Y'
--     AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--     AND NVL(A.APPROVE_YN,'N')='N'
--     AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);
--
--
--     DELETE THR_ABSENCE A
--         WHERE A.DEL_IF = 0
--           AND A.ABSENCE_DT = p_work_dt AND A.ABSENCE_TYPE  in ('17')
--           AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK
--                              FROM THR_TIME_MACHINE B,THR_EMPLOYEE E
--                             WHERE B.DEL_IF = 0 AND E.DEL_IF=0 AND B.THR_EMP_PK=E.PK
--                               AND B.WORK_DT = p_work_dt and e.pk=a.thr_emp_pk
--                               AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                            FROM TCO_ORG G
--                                            WHERE G.DEL_IF = 0
--                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                              CONNECT BY PRIOR G.PK = G.P_PK)
--                               )
--     AND NVL(A.CLOSE_YN,'N')<>'Y'
--     AND A.THR_WS_PK IS NULL
--     AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--     AND NVL(A.APPROVE_YN,'N')='N'
--     AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);
     
--    DELETE THR_ABSENCE A
--         WHERE A.DEL_IF = 0
--           AND A.ABSENCE_DT = p_work_dt
--           AND A.THR_EMP_PK IN (SELECT PK FROM THR_EMPLOYEE B WHERE B.DEL_IF=0
--                                                AND B.STATUS='R' AND B.LEFT_DT <=p_work_dt and b.pk=a.thr_emp_pk
--                                                AND B.TCO_ORG_PK IN (SELECT     G.PK
--                                                                    FROM TCO_ORG G
--                                                                    WHERE G.DEL_IF = 0
--                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
--                                )
--        AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
--        AND A.THR_ABSENCE_REG_PK IS NULL
--        AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--        AND NVL(A.APPROVE_YN,'N')='N'
--        AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);
--
--        DELETE THR_ABSENCE A
--         WHERE A.DEL_IF = 0
--           AND A.ABSENCE_DT = p_work_dt
--           AND A.THR_EMP_PK IN (SELECT G.THR_EMP_PK FROM THR_WG_SCH_DETAIL G, thr_employee e 
--                                            WHERE G.DEL_IF=0 AND G.HOL_TYPE IS NOT NULL and E.DEL_IF=0 and e.pk=G.THR_EMP_PK
--                                            AND G.WORK_DT=A.ABSENCE_DT AND G.THR_EMP_PK=A.THR_EMP_PK
--                                            AND E.TCO_ORG_PK IN (SELECT     G.PK
--                                                                    FROM TCO_ORG G
--                                                                    WHERE G.DEL_IF = 0
--                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
--                                            )
--        AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
--        AND A.THR_ABSENCE_REG_PK IS NULL
--        AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--        AND NVL(A.APPROVE_YN,'N')='N'
--        AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);        


l_error:='05'; --LUU LAI GIO GOC
    UPDATE THR_ATT_ABSENCE C
    SET C.TIME_IN_ORG=C.TIME_IN
        ,C.TIME_OUT_ORG=C.TIME_OUT
        ,C.DATE_IN=(CASE WHEN C.TIME_IN IS NULL THEN NULL
                            ELSE C.DATE_IN END)
        ,C.DATE_OUT=(CASE WHEN C.TIME_OUT IS NULL THEN NULL
                            ELSE C.DATE_OUT END)
    WHERE C.DEL_IF=0 AND C.WORK_DT=p_work_dt
    and C.THR_EMP_PK in (select pk from thr_employee e 
                            where E.DEL_IF=0
                            AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             and E.PK=C.THR_EMP_PK)
    AND NVL(C.CLOSE_YN,'N')<>'Y' and  NVL(C.CLOSE_M_YN,'N')<>'Y'
    AND (NVL(TO_CHAR(C.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
    AND C.THR_EMP_PK=NVL(p_thr_emp_pk,C.THR_EMP_PK);
        
                                  


    p_result:=0;

--exception
--   when others   then
--      p_result:=-1;
--      raise_application_error (-20002,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_V2_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00600_V2_3(
   p_work_dt               varchar2,
   P_TCO_ORG_PK            varchar2,
   p_tco_company_pk        varchar2,
   p_emp_id                varchar2,
   p_crt_by                varchar2,
   p_result   out          number
)
is

   l_ot_rate         number;
   l_nt30_rate         number;
   l_nt45_rate         number;
   l_nt45_2_rate         number;
   l_nt60_rate         number;
   l_nt90_rate         number;
   l_ht_rate         number;
   l_ost_rate         number;
   l_oht_rate         number;
   l_st_rate         number;
   l_nost_rate         number;
   l_noht_rate         number;

   l_day_type       varchar2(5):='';
   l_error         varchar2(2):='';

   l_month_close varchar2(1):='';
   l_kind_ot    varchar2(2):='';
    l_pro varchar(200);
    l_string varchar(200);
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_ot_plus number;
    l_ot_limit number;
    l_ot_allow_yn   varchar2(1):='';
    F_LAG_NT2  VARCHAR2(1):='N';
    l_tco_org_pk number:=0;
    p_thr_emp_pk number;
begin

    if p_emp_id is not null then
       
          select max(a.pk) into p_thr_emp_pk 
          from thr_employee a
           where a.del_if=0
           and upper(a.emp_id) = upper(p_emp_id);
           
           if p_thr_emp_pk is null then
             p_result:=-1;
             raise_application_error(-20019, 'MÃ NHÂN VIÊN NÀY KHÔNG TÌM THẤY TRONG HỆ THỐNG');
           end if;
    else 
          p_thr_emp_pk := null;
    end if;

    select HR_F_FIND_STORE_COM('ST_HR_PRO_HRTI00600_V2_3',p_tco_company_pk)  into l_pro from dual;
     
    IF l_pro<>'0' THEN --CO SU DUNG PROCEDURE RIENG
        l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6); end;' ;
        execute  immediate l_string using in  p_work_dt,in P_TCO_ORG_PK,in p_tco_company_pk,IN p_thr_emp_pk,in p_crt_by,out p_result ;

    ELSE    
    
        l_error:='01';
        SELECT V.CODE INTO l_kind_ot FROM VHR_HR_CODE V WHERE V.ID='HR0038'
        AND (NVL(TO_CHAR(V.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL'); --KIEM TRA XEM SU DUNG LOAI TINH OT NAO               
        
        select nvl(d.CHAR_2,'N') INTO l_ot_allow_yn ---Kiem tra xem co tinh tang ca cho WT Allow hay ko -- 
        from thr_code_master m, thr_code_detail d
        where d.DEL_IF=0
        and m.DEL_IF=0
        and m.pk=d.THR_CODE_MASTER_PK
        and d.CODE='02'
        and m.ID='HR0038'
        AND (NVL(TO_CHAR(D.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL');

        --DELETE GIO TANG CA NEU CO
        DELETE THR_EXTRA_TIME A
        WHERE A.DEL_IF=0 AND  A.WORK_DT=p_work_dt AND NVL(A.MOD_BYHAND_YN,'N')<>'Y'
         AND A.THR_EMP_PK IN(SELECT E.PK FROM THR_EMPLOYEE E 
                            WHERE E.DEL_IF=0 AND E.TCO_ORG_PK IN (SELECT     G.PK
                                                                    FROM TCO_ORG G
                                                                    WHERE G.DEL_IF = 0
                                                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                                      CONNECT BY PRIOR G.PK = G.P_PK)
                             AND E.PK=A.THR_EMP_PK)
        AND NVL(A.CLOSE_YN,'N')<>'Y'
        AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
        AND NVL(A.APPROVE_YN,'N')='N'
        AND A.THR_EMP_PK=NVL(p_thr_emp_pk,A.THR_EMP_PK);

       l_error:='02';
       BEGIN
             SELECT
             SUM(DECODE(C.CODE,'02',C.NUM_1,0)) AS OT
            ,SUM(DECODE(C.CODE,'03',C.NUM_1,0)) AS NT30
            ,SUM(DECODE(C.CODE,'04',C.NUM_1,0)) AS NT45
            ,SUM(DECODE(C.CODE,'05',C.NUM_1,0)) AS NT60
            ,SUM(DECODE(C.CODE,'06',C.NUM_1,0)) AS NT90
            ,SUM(DECODE(C.CODE,'07',C.NUM_1,0)) AS HT
            ,SUM(DECODE(C.CODE,'08',C.NUM_1,0)) AS OST
            ,SUM(DECODE(C.CODE,'09',C.NUM_1,0)) AS OHT
            ,SUM(DECODE(C.CODE,'10',C.NUM_1,0)) AS ST
            ,SUM(DECODE(C.CODE,'11',C.NUM_1,0)) AS NOST
            ,SUM(DECODE(C.CODE,'12',C.NUM_1,0)) AS NOHT
            ,SUM(DECODE(C.CODE,'13',C.NUM_1,0)) AS NT45_2
             INTO l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate,l_oht_rate,l_st_rate,l_nost_rate,l_noht_rate,l_nt45_2_rate
             FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
             WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
             AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y'
             AND (NVL(TO_CHAR(C.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL');

             --update thong tin ngay le
             UPDATE THR_ATT_ABSENCE M
             SET (M.WT,M.ST, M.ST_RATE,M.NST, M.NST_RATE,M.OST, M.OST_RATE,M.NOST, M.NOST_RATE
                    ,M.HT, M.HT_RATE,M.NHT, M.NHT_RATE,M.OHT, M.OHT_RATE, M.NOHT, M.NOHT_RATE
                    ,M.MOD_BYHAND_YN) 
                = (SELECT 0, CASE WHEN NVL(M.HOL_TYPE,' ') = 'SUN' THEN
                                 (CASE WHEN hr_SF_GET_WT_COM(M.DATE_IN||M.TIME_IN,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,p_tco_company_pk) >0 THEN 
                                            hr_SF_GET_WT_COM(M.DATE_IN||M.TIME_IN,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,p_tco_company_pk)
                                        ELSE 0 END)
                                ELSE 0 END AS ST
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'SUN' THEN l_st_rate ELSE 0 END AS ST_RATE    
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'SUN' THEN 
                                    (CASE WHEN hr_SF_GET_NT1_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                             + hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk) >0
                                        THEN  
                                            hr_SF_GET_NT1_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                            + hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                        ELSE 0 END) ELSE 0 END AS NST
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'SUN' THEN l_nt60_rate ELSE 0 END AS NST_RATE
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'SUN' THEN 
                                    (CASE WHEN HR_SF_GET_OT_COM(C.START_OT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                               + HR_GET_C_OT_V4(M.DATE_IN||M.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)>0
                                           THEN 
                                                HR_SF_GET_OT_COM(C.START_OT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                                + HR_GET_C_OT_V4(M.DATE_IN||M.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                           ELSE 0 END) 
                                ELSE 0 END AS OST
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'SUN' THEN l_ost_rate ELSE 0 END AS OST_RATE
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'SUN' THEN 
                                    (CASE WHEN hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                               + HR_SF_GET_C_NT2_COM(M.DATE_IN||M.TIME_IN,C.PK,M.WORK_DT,p_tco_company_pk) > 0
                                           THEN  
                                                hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                                + HR_SF_GET_C_NT2_COM(M.DATE_IN||M.TIME_IN,C.PK,M.WORK_DT,p_tco_company_pk)
                                            ELSE 0 END)
                                 ELSE 0 END AS NOST
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'SUN' THEN l_nost_rate ELSE 0 END AS NOST_RATE
                          ------------------------------------------------------------------------------------------- 
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'HOL' THEN
                                 (CASE WHEN hr_SF_GET_WT_COM(M.DATE_IN||M.TIME_IN,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,p_tco_company_pk) >0 THEN 
                                            hr_SF_GET_WT_COM(M.DATE_IN||M.TIME_IN,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,p_tco_company_pk)
                                        ELSE 0 END)
                                ELSE 0 END AS HT
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'HOL' THEN l_ht_rate ELSE 0 END AS HT_RATE    
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'HOL' THEN 
                                    (CASE WHEN hr_SF_GET_NT1_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                             + hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk) >0
                                        THEN  
                                            hr_SF_GET_NT1_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                            + hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                        ELSE 0 END) ELSE 0 END AS NHT
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'HOL' THEN l_nt90_rate ELSE 0 END AS NHT_RATE
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'HOL' THEN 
                                    (CASE WHEN HR_SF_GET_OT_COM(C.START_OT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                               + HR_GET_C_OT_V4(M.DATE_IN||M.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)>0
                                           THEN 
                                                HR_SF_GET_OT_COM(C.START_OT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                                + HR_GET_C_OT_V4(M.DATE_IN||M.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                           ELSE 0 END) 
                                ELSE 0 END AS OHT
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'HOL' THEN l_oht_rate ELSE 0 END AS OHT_RATE
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'HOL' THEN 
                                    (CASE WHEN hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                               + HR_SF_GET_C_NT2_COM(M.DATE_IN||M.TIME_IN,C.PK,M.WORK_DT,p_tco_company_pk) > 0
                                           THEN  
                                                hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                                + HR_SF_GET_C_NT2_COM(M.DATE_IN||M.TIME_IN,C.PK,M.WORK_DT,p_tco_company_pk)
                                            ELSE 0 END)
                                 ELSE 0 END AS NOHT
                           , CASE WHEN NVL(M.HOL_TYPE,' ') = 'HOL' THEN l_noht_rate ELSE 0 END AS NOHT_RATE
                           ---------------------------------------------------------------------------------------------
                           ,'N'
                           
                      FROM THR_WORK_SHIFT C
                     WHERE C.DEL_IF = 0
                       AND M.THR_WS_PK = C.PK )    
             WHERE M.DEL_IF = 0
                AND M.TIME_OUT IS NOT NULL
                AND M.TIME_IN IS NOT NULL
                AND NVL(M.OT_YN,'Y')='Y'
                AND M.HOL_TYPE IS NOT NULL
                AND M.WORK_DT = p_work_dt
                and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK); 

            /*
                    --NGAY NGHI
                    INSERT INTO THR_EXTRA_TIME
                    (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                    , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                    , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
                    ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                    )
                    SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'HT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                           ,(CASE WHEN hr_SF_GET_WT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,p_tco_company_pk)
                            - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'HT')>0 
                            THEN 
                                hr_SF_GET_WT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,p_tco_company_pk)
                                - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'HT')
                            ELSE 0 END) AS HT
                           ,DECODE(B.HOL_TYPE,'HOL',l_ht_rate,l_st_rate)
                           ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                           ,B.TEMP_HT
                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                       AND B.HOL_TYPE IS NOT NULL
                       AND hr_SF_GET_WT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,p_tco_company_pk)>0
                       AND B.TIME_OUT IS NOT NULL
                       AND B.TIME_IN IS NOT NULL
                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='HT'
                                            and d.thr_emp_pk=a.pk)
                       AND NVL(A.OT_YN,'Y')='Y'
                       AND A.TCO_ORG_PK IN (SELECT     G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                       AND B.WORK_DT = p_work_dt
                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                       AND NVL(B.APPROVE_YN,'N')='N'
                       AND A.PK=NVL(p_thr_emp_pk,A.PK);

                INSERT INTO THR_EXTRA_TIME
                    (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                    , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                    , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
                    ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                    )
                    SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                           ,(CASE WHEN HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                               + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                               - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
                               >0
                               THEN 
                                    HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                               + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                               - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
                            ELSE 0 END) AS OT
                           ,(CASE WHEN NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_oht_rate
                                  ELSE l_ost_rate END) AS RATE
                           ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                           ,B.TEMP_OT
                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                       AND B.HOL_TYPE IS NOT NULL
                       AND B.TIME_OUT IS NOT NULL
                       AND B.TIME_IN IS NOT NULL
                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                                and d.thr_emp_pk=a.pk)
                       AND NVL(A.OT_YN,'Y')='Y'
                       AND HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
                           + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                            >0
                       AND A.TCO_ORG_PK IN (SELECT     G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                       AND B.WORK_DT = p_work_dt
                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                       AND NVL(B.APPROVE_YN,'N')='N'
                       AND A.PK=NVL(p_thr_emp_pk,A.PK);

                    -- NT
                   INSERT INTO THR_EXTRA_TIME
                    (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                    , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                    , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
                    ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                    )
                    SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                           ,(CASE WHEN hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                    + hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT')>0
                           THEN  
                                hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                +hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT')
                                ELSE 0 END) AS HT
                           ,(CASE WHEN  NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_nt90_rate ELSE l_nt60_rate END )
                           ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,b.DATE_OUT, A.TCO_COMPANY_PK
                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                           ,B.TEMP_NT
                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                       AND B.HOL_TYPE IS NOT NULL
                       AND hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
                                    +hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)>0
                       AND B.TIME_OUT IS NOT NULL
                       AND B.TIME_IN IS NOT NULL
                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                        and d.thr_emp_pk=a.pk)
                       AND NVL(A.OT_YN,'Y')='Y'
                       AND A.TCO_ORG_PK IN (SELECT     G.PK
                                                FROM TCO_ORG G
                                                WHERE G.DEL_IF = 0
                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                                  CONNECT BY PRIOR G.PK = G.P_PK)
                       AND B.WORK_DT = p_work_dt
                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
                       AND NVL(B.APPROVE_YN,'N')='N'
                       AND A.PK=NVL(p_thr_emp_pk,A.PK);
        */

            --update thong tin ngay thuong
             UPDATE THR_ATT_ABSENCE M
             SET (M.OT, M.OT_RATE,M.NT, M.NT_RATE,M.NOT1, M.NOT1_RATE, M.NOT2, M.NOT2_RATE) 
                = (SELECT  (CASE WHEN (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,M.DATE_OUT||M.TIME_OUT ,C.PK, M.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                                + HR_GET_C_OT_V4(M.DATE_IN||M.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                            WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                        ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI'),M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                            + HR_GET_C_OT_V4(M.DATE_IN||M.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                        END) > 0
                               THEN  
                                    (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,M.DATE_OUT||M.TIME_OUT ,C.PK, M.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                                + HR_GET_C_OT_V4(M.DATE_IN||M.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                          WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                        ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                    ,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,l_kind_ot,p_tco_company_pk) 
                                          + HR_GET_C_OT_V4(M.DATE_IN||M.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
                                    END)
                               ELSE 0 END) AS OT
                           , l_ot_rate AS OT_RATE  
                             
                           ,(CASE WHEN hr_SF_GET_NT1_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk) > 0 
                                  THEN hr_SF_GET_NT1_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                 ELSE 0 END) AS NT
                           ,l_nt30_rate AS NT_RATE  
                            
                           ,CASE WHEN (C.DURING_DAY=2 OR (C.DURING_DAY=1 AND C.START_NT<=C.START_OT)) THEN
                                        (CASE WHEN hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk) > 0
                                                THEN hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                            ELSE 0 END)
                                 ELSE 0 END AS NOT1
                           ,l_nt45_rate AS NOT1_RATE
                           
                           ,CASE WHEN (C.DURING_DAY=1 AND C.START_NT>C.START_OT) THEN
                                        (CASE WHEN hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk) > 0
                                                THEN hr_SF_GET_NT2_COM(C.START_NT,M.DATE_OUT||M.TIME_OUT,C.PK,M.WORK_DT,M.DATE_IN||M.TIME_IN,p_tco_company_pk)
                                            ELSE 0 END)
                                 ELSE 0 END AS NOT2
                           ,l_nt45_2_rate AS NOT2_RATE
                      FROM THR_WORK_SHIFT C,
                            (SELECT R.THR_EMP_PK, decode(r.REG_TYPE,'03',nvl(R.REG_HOURS,0),0) as reg_hour, 1 AS FLAG
                              , decode(r.REG_TYPE,'04',1,0) as reg_04
                            FROM THR_REGULATION R 
                            WHERE R.DEL_IF=0 AND p_work_dt BETWEEN R.START_DT AND R.END_DT
                               AND R.THR_EMP_PK=NVL(p_thr_emp_pk,R.THR_EMP_PK)
                                AND (NVL(TO_CHAR(R.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')) allow 
                     WHERE C.DEL_IF = 0
                       AND M.THR_WS_PK = C.PK
                       AND M.THR_EMP_PK = ALLOW.THR_EMP_PK(+) ) 
             WHERE M.DEL_IF = 0
                AND M.TIME_OUT IS NOT NULL
                AND M.TIME_IN IS NOT NULL
                AND NVL(M.OT_YN,'Y')='Y'
                AND M.HOL_TYPE IS NULL
                AND M.WORK_DT = p_work_dt
                and M.THR_EMP_PK in (select pk from thr_employee e 
                                where  E.DEL_IF=0
                                AND E.TCO_ORG_PK IN (SELECT     G.PK
                                            FROM TCO_ORG G
                                            WHERE G.DEL_IF = 0
                                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                              CONNECT BY PRIOR G.PK = G.P_PK) 
                                and E.PK=M.THR_EMP_PK
                                )
                AND NVL(M.CLOSE_YN,'N')<>'Y' AND NVL(M.CLOSE_M_YN,'N')<>'Y'
                AND NVL(M.APPROVE_YN,'N')='N'
                AND M.THR_EMP_PK=NVL(p_thr_emp_pk,M.THR_EMP_PK); 

               --NGAY THUONG
--                       INSERT INTO THR_EXTRA_TIME
--                    (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
--                    , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
--                    , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
--                    ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
--                    )
--                    SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT                      
--                             ,(CASE WHEN (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_tco_company_pk) 
--                                + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
--                                     WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
--                                     ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
--                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
--                                          + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
--                               END)- HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
--                               >0
--                               THEN  
--                                    (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_tco_company_pk) 
--                                + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
--                                     WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
--                                     ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
--                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
--                                          + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
--                               END)- HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
--                               ELSE 0 END) AS OT
--                           ,l_ot_rate
--                           ,C.START_OT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
--                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
--                           ,B.TEMP_OT
--                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C,                  
--                      (SELECT R.THR_EMP_PK, decode(r.REG_TYPE,'03',nvl(R.REG_HOURS,0),0) as reg_hour, 1 AS FLAG
--                              , decode(r.REG_TYPE,'04',1,0) as reg_04
--                        FROM THR_REGULATION R 
--                        WHERE R.DEL_IF=0 AND p_work_dt BETWEEN R.START_DT AND R.END_DT
--                           AND R.THR_EMP_PK=NVL(p_thr_emp_pk,R.THR_EMP_PK)
--                            AND (NVL(TO_CHAR(R.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')) allow      
--                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
--                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK    
--                       and b.THR_EMP_PK = allow.thr_emp_pk(+) 
--                       AND (CASE WHEN (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_tco_company_pk) 
--                                + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
--                                     WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
--                                     ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
--                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
--                                          + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
--                               END)- HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
--                               >0
--                               THEN  
--                                    (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  hr_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot,p_tco_company_pk) 
--                                + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
--                                     WHEN nvl(l_ot_allow_yn,'N')='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
--                                     ELSE hr_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
--                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot,p_tco_company_pk) 
--                                          + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, p_tco_company_pk)
--                               END)- HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'OT')
--                               ELSE 0 END)>0
--                       AND B.TIME_OUT IS NOT NULL
--                       AND B.TIME_IN IS NOT NULL
--                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
--                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
--                                                and d.thr_emp_pk=a.pk)
--                       AND NVL(A.OT_YN,'Y')='Y'
--                       AND A.TCO_ORG_PK IN (SELECT     G.PK
--                                                FROM TCO_ORG G
--                                                WHERE G.DEL_IF = 0
--                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                                  CONNECT BY PRIOR G.PK = G.P_PK)
--                       AND B.HOL_TYPE IS NULL
--                       AND B.WORK_DT = p_work_dt  --NGAY THUONG
--                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--                       AND NVL(B.APPROVE_YN,'N')='N'
--                       AND A.PK=NVL(p_thr_emp_pk,A.PK);
--                       
--                           -- NT 
--                     INSERT INTO THR_EXTRA_TIME
--                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
--                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
--                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
--                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
--                            )
--                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
--                                    ,(CASE WHEN hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk) 
--                                        - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT')>0 
--                                     THEN hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk) 
--                                        - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT')
--                                     ELSE 0 END) AS NT
--                                  ,l_nt30_rate
--                                ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
--                                ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
--                                ,B.TEMP_NT
--                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
--                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
--                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
--                               AND B.HOL_TYPE IS NULL
--                               AND hr_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)>0
--                               AND B.TIME_OUT IS NOT NULL
--                               AND B.TIME_IN IS NOT NULL
--                               AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
--                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
--                                                        and d.thr_emp_pk=a.pk)
--                               --AND NVL(A.OT_YN,'Y')='Y'
--                               AND A.TCO_ORG_PK IN (SELECT     G.PK
--                                                FROM TCO_ORG G
--                                                WHERE G.DEL_IF = 0
--                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                                  CONNECT BY PRIOR G.PK = G.P_PK)
--                               AND B.WORK_DT = p_work_dt --NGAY THUONG
--                               AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--                               AND NVL(B.APPROVE_YN,'N')='N'
--                               AND A.PK=NVL(p_thr_emp_pk,A.PK);
--                                      
--                           -- NT 2
--                   INSERT INTO THR_EXTRA_TIME
--                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
--                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
--                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,DATE_OUT, TCO_COMPANY_PK
--                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
--                            )
--                   SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT2', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
--                           ,(CASE WHEN hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
--                           - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT2')>0
--                           THEN hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)
--                           - HR_GET_TEMP_HOUR_V4(p_tco_company_pk,B.TIME_IN,B.TEMP_OUT,B.TEMP_IN,B.TEMP_OUT2,B.TEMP_IN2,NULL,NULL,NULL,NULL,NULL,B.THR_WS_PK,B.WORK_DT,'NT2')
--                           ELSE 0 END) AS NT2
--                           ,l_nt45_rate
--                           ,C.START_NT, B.TIME_OUT, 'N','Auto Entry',0,SYSDATE, p_crt_by,B.DAY_TYPE,B.HOL_TYPE,B.DATE_OUT, A.TCO_COMPANY_PK
--                           ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
--                           ,B.TEMP_NT2
--                      FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
--                     WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
--                       AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
--                       AND B.WORK_DT = p_work_dt
--                       AND hr_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN,p_tco_company_pk)>0
--                       AND B.TIME_OUT IS NOT NULL
--                       AND B.TIME_IN IS NOT NULL
--                       AND A.PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
--                                         WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT2'
--                                            and d.thr_emp_pk=a.pk)
--                       AND NVL(A.OT_YN,'Y')='Y'
--                       AND A.TCO_ORG_PK IN (SELECT     G.PK
--                                                FROM TCO_ORG G
--                                                WHERE G.DEL_IF = 0
--                                                  START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
--                                                  CONNECT BY PRIOR G.PK = G.P_PK)
--                       AND B.HOL_TYPE IS NULL --NGAY THUONG
--                       AND (NVL(TO_CHAR(A.TCO_COMPANY_PK),p_tco_company_pk) = p_tco_company_pk or p_tco_company_pk = 'ALL')
--                       AND NVL(B.APPROVE_YN,'N')='N'
--                       AND A.PK=NVL(p_thr_emp_pk,A.PK);
--                        
                          


           
        END;                   
        
    END IF;
    
    p_result:=0;

--exception
--   when others   then
--      p_result:=-1;
--      raise_application_error (-20002,sqlerrm);
--      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01000_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_pro_hrti01000_0 (
   p_no                  varchar2,
   p_emp_id              varchar2,  
   p_full_name           varchar2, 
   p_absence_date        varchar2,
   p_start_time          varchar2,  
   p_end_time            varchar2,
   p_hours               varchar2,
   p_absence_type        varchar2, 
   p_description         varchar2,
   p_1                   varchar2,
   p_2                   varchar2,
   p_3                   varchar2,
   p_4                   varchar2,
   p_5                   varchar2,
   p_sequence_dt         varchar2,
   p_crt_by              varchar2,
   p_rtn_value    out    varchar2)
is

   l_flag_exist   boolean := false;
   l_cur          sys_refcursor;
   l_pro          varchar2 (2000) := '';
   l_thr_emp_pk   number;  
   l_emp_pk       number;
   
begin
--   Check emp id in thr_employee 

    select max(e.pk) into l_thr_emp_pk
     from thr_employee e
    where e.del_if = 0 and upper(e.emp_id) = upper(trim(p_emp_id));

   
--   if l_thr_emp_pk is null --no exist emp id
--   then 
--      p_rtn_value := '3';
--      return;
--   end if;
   
   select max(a.thr_emp_pk) into l_emp_pk
   from thr_absence a
   where a.del_if=0
   and a.absence_dt = to_char(to_date(p_absence_date, 'dd/mm/yyyy'), 'yyyymmdd')
   and a.thr_emp_pk = l_thr_emp_pk;
   
   if l_emp_pk is not null then
   
      update thr_absence a
      set a.del_if = a.pk
      , a.remark = 'DELETE BY IMPORT DATA'
      , a.mod_by = p_crt_by
      , a.mod_dt = sysdate
      where a.del_if=0
      and a.absence_dt = to_char(to_date(p_absence_date, 'dd/mm/yyyy'), 'yyyymmdd')
      and a.thr_emp_pk = l_thr_emp_pk;
   
   end if;
   
--    insert date import for thr_absence
                            
   insert into thr_absence(pk, thr_emp_pk, thr_wg_pk, absence_type, short_nm, absence_time,absence_dt
                             , thr_absence_reg_pk, start_time, end_time, description, reg_type,sequence_dt
                             , del_if, crt_dt, crt_by, remark)  
   select thr_absence_seq.nextval, e.pk, e.thr_wg_pk, p_absence_type
                            , (select v.char_1 from vhr_hr_code v where v.id ='HR0003' and V.CODE = p_absence_type)
                            , nvl(p_hours, (select nvl(v.num_4, 1)*nvl(s.wt, 8) from vhr_hr_code v where v.id ='HR0003' and V.CODE = p_absence_type))
                            , to_char(to_date(p_absence_date, 'dd/mm/yyyy'), 'yyyymmdd')
                            , null,p_start_time, p_end_time, p_description, 1,p_sequence_dt
                            , 0, sysdate, p_crt_by, 'INSERT FROM IMPORT DATA'                       
   from thr_employee e, thr_wg_sch_detail b, thr_work_shift s
   where e.del_if=0  and b.del_if=0 and s.del_if=0
   and b.thr_ws_pk = s.pk
   and b.thr_emp_pk = e.pk
   and b.work_dt = to_char(to_date(p_absence_date, 'dd/mm/yyyy'), 'yyyymmdd')
   and e.pk = l_thr_emp_pk;
         
--   out message succes  

 /*    
     delete THR_IMPORT_DATA a;
 
     insert into THR_IMPORT_DATA( C1, C2, C3, C4,C5
                                 , C6, C7, C8, C9, C10,C11
                                 , C12, C13, C14, C15,C16)  
       SELECT  p_no  , p_emp_id  , p_full_name , p_absence_date  , p_start_time       
              ,p_end_time, p_hours, p_absence_type, p_description, p_1  ,p_2                 
              ,p_3  ,p_4  ,p_5 ,p_sequence_dt, p_crt_by              
     FROM DUAL;
   
   
      update thr_absence a
      set a.del_if = a.pk
      , a.remark = 'DELETE BY IMPORT DATA'
      , a.mod_by = p_crt_by
      , a.mod_dt = sysdate
      where a.del_if=0
      and (a.thr_emp_pk, a.absence_dt) in  (select e.pk, b.c4 from thr_import_data b, thr_employee e
                                            where e.del_if=0
                                            and b.c2 = e.emp_id 
                                            and a.thr_emp_pk = e.pk
                                            and to_char(to_date(b.c4, 'dd/mm/yyyy'), 'yyyymmdd') = A.ABSENCE_DT);
                    
      
 
   
   
--    insert date import for thr_absence
                            
   insert into thr_absence(pk, thr_emp_pk, thr_wg_pk, absence_type, absence_time,absence_dt
                             , thr_absence_reg_pk, start_time, end_time, description, reg_type,sequence_dt
                             , del_if, crt_dt, crt_by, remark)  
   select thr_absence_seq.nextval, e.pk, e.thr_wg_pk, a.c8, a.c7, to_char(to_date(a.c4, 'dd/mm/yyyy'), 'yyyymmdd')
                            , null,a.c5, a.c6, a.c9, 1, a.c15
                            , 0, sysdate, p_crt_by, 'INSERT FROM IMPORT DATA'                       
   from thr_employee e, thr_import_data a
   where e.del_if=0 
   and e.emp_id = a.c2;
 */
   p_rtn_value := '1';
exception
   when others
   then RAISE;
--      p_rtn_value := '0';
end;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01000_1;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_pro_hrti01000_1 (
   p_no                  varchar2,
   p_emp_id              varchar2,  
   p_full_name           varchar2, 
   p_from_dt             varchar2,  
   p_to_dt               varchar2,
   p_hours               varchar2,
   p_absence_type        varchar2, 
   p_description         varchar2,
   p_1                   varchar2,
   p_2                   varchar2,
   p_3                   varchar2,
   p_4                   varchar2,
   p_5                   varchar2,
   p_sequence_dt         varchar2,
   p_crt_by              varchar2,
   p_rtn_value    out    varchar2)
is

  
   l_from_dt       varchar2(8);
   l_to_dt         varchar2(8);
   l_thr_abs_reg_pk  number;
   l_com_rate  number;
   l_ins_rate  number;
begin
--   Check emp id in thr_employee 

   IF HR_F_CHECK_DATE_2(p_from_dt) = 1 AND HR_F_CHECK_DATE_2(p_to_dt) = 1 THEN
    
        l_from_dt := HR_F_CONVERT_DATE(p_from_dt);
        l_to_dt := HR_F_CONVERT_DATE(p_to_dt);
        
        select nvl(max(v.num_1), 0), nvl(max(v.num_2), 0) 
        into l_com_rate, l_ins_rate 
        from vhr_hr_code v 
        where v.id='HR0008' and v.code = p_absence_type;
   
       update thr_absence a
       set a.del_if= a.pk
       , a.mod_by = p_crt_by
       , a.mod_dt = sysdate
       , a.remark = 'DELETE BY IMPORT LONG ABSENCE'
       where a.del_if=0
       and a.thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0
                                and e.emp_id = p_emp_id)
       and a.absence_dt between l_from_dt and l_to_dt;
       
        select thr_absence_reg_seq.nextval into l_thr_abs_reg_pk from dual;
      

        insert into thr_absence_reg(pk, thr_emp_pk, thr_wg_pk, absence_type, start_dt, end_dt
                                    , del_if, crt_by, crt_dt, remark, sequence_dt)
         select l_thr_abs_reg_pk,  e.pk, e.thr_wg_pk, p_absence_type
                                , l_from_dt
                                , l_to_dt
                                , 0, p_crt_by, sysdate, 'AUTO INSERT FROM ABSENCE ENTRY', p_sequence_dt
         from thr_employee e
         where e.del_if=0
         and e.emp_id = p_emp_id
         and not exists (select a.thr_emp_pk from thr_absence_reg a
                            where a.del_if=0
                            and a.thr_emp_pk = e.pk
                            and a.start_dt = l_from_dt
                            and a.end_dt = l_to_dt)
         ;
                                            
         insert into thr_absence(pk, thr_absence_reg_pk, thr_emp_pk, thr_wg_pk, thr_ws_pk, absence_type, absence_time
                         , company_pay_yn, company_pay_rate, insurance_pay_yn, insurance_pay_rate
                         , absence_dt, del_if, crt_dt, crt_by, remark, description
                         , reg_type, sequence_dt, from_dt, to_dt, short_nm)  
        select thr_absence_seq.nextval, nullif(l_thr_abs_reg_pk, 0), e.pk, e.thr_wg_pk, null, p_absence_type, p_hours
                        , decode(nvl(l_com_rate, 0), 0, 'N', 'Y') , l_com_rate, decode(nvl(l_ins_rate, 0), 0, 'N', 'Y') , l_ins_rate
                        ,d.car_date, 0, sysdate, p_crt_by, 'AUTO INSERT FROM ABSENCE ENTRY', p_description
                        ,2, p_sequence_dt, l_from_dt, l_to_dt
                        , (select v.char_1 from vhr_hr_code v where v.id='HR0003' and v.code = p_absence_type) as short_nm
        from thr_employee e, thr_calendar d
        where e.del_if=0 and d.del_if=0
        and d.tco_company_pk = 99
        and d.car_date between l_from_dt and l_to_dt
        and upper(e.emp_id) = upper(p_emp_id);     
       

       p_rtn_value := '1';
       
   END IF;
exception
   when others
   then RAISE;
--      p_rtn_value := '0';
end;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_0
                                (
                                    p_month varchar2,
                                    p_org_pk varchar2,
                                    p_crt_by                varchar2,
                                    p_result   out     number,
                                    p_month_close   out     number
                                ) IS
l_flag_exist boolean:=FALSE;
   l_cur_rec number;
   l_cur sys_refcursor;
   l_month varchar(2):='';

/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN
     open l_cur for
    SELECT 1 FROM THR_ANNUAL_LEAVE C
       WHERE nvl(C.DEL_IF,1)=0
       AND nvl(C.AN_YEAR,0)=SUBSTR(p_MONTH,1,4)
       and nvl(c.CLOSE_YN,'N')='N'
        AND (   C.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =DECODE (p_org_pk,'ALL', 0,p_org_pk)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR p_org_pk = 'ALL')
       and c.STATUS='A' ;

       FETCH l_cur INTO l_cur_rec;
              l_flag_exist := l_cur%FOUND;
       CLOSE l_cur;

       IF l_flag_exist=true THEN
            p_result:=1;
       ELSE
            p_result:=0;

       END IF;
       
    
    l_month:=hr_F_FIND_HR_CODE_VALUE('HR0006','03','C1',p_org_pk);
    
       IF l_month<>'' THEN
       
                 l_month:=lpad(l_month,2,'0');
                 
               if  l_month='12' then
               
                    if hr_sf_check_month_close_2(substr(p_month,1,4)||l_month ,1,'',p_org_pk) ='Y' then
                         p_month_close:=1;
                        else
                            p_month_close:=0;
                    end if;        
               
               else
               
                     if hr_sf_check_month_close_2((substr(p_month,1,4)+1)||l_month ,1,'',p_org_pk) ='Y' then
                         p_month_close:=1;
                        else
                            p_month_close:=0;
                    end if;       
                    
           end if;      
       
       
       

       END IF;
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_1
                                (
                                    p_year varchar2,
                                    p_month varchar2,
                                    p_org_pk varchar2,
                                    p_crt_by                varchar2,
                                    p_result   out     number,
                                    p_exist_ale   out     number,
                                    p_close_ale    out  number
                                 
                                ) IS
l_flag_exist boolean:=FALSE;
   l_cur_rec number;
   l_cur sys_refcursor;
   l_month varchar(2):='';
   l_tmp varchar2(10):='';

/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN
   
     p_result:=0;
     
     l_month:=hr_F_FIND_HR_CODE_VALUE('HR0006','03','C1',p_org_pk);
     
       IF l_month<>'' THEN
            
            l_month:=lpad(l_month,2,'0');
            select substr(p_month,1,4) + decode(substr(p_month,-2),'12',decode(l_month,'12',0,1),decode(l_month,'12',-1,0))||l_month into l_tmp from dual;
                
            if hr_sf_check_month_close_2(l_tmp,1,'',p_org_pk)='Y' then
                     p_result:=1;
             else
                        p_result:=0;
            end if;            
                    
       END IF;
       
       open l_cur for
       SELECT 1 FROM thr_annual_leave C WHERE nvl(C.DEL_IF,1)=0  and nvl(c.AN_YEAR,0)=p_year and C.STATUS='A' ;
                     
        FETCH l_cur INTO l_cur_rec;
        l_flag_exist := l_cur%FOUND;
        close l_cur;     
                    
       IF l_flag_exist=false    THEN  -- ko tồn tại annual leave
            p_result:=1;
            p_exist_ale:=0;
            
       ELSE   -- tồn tại annual leave
            --check close yes/no of phep nam
           open l_cur for
           SELECT 1 FROM thr_annual_leave C WHERE nvl(C.DEL_IF,1)=0  and nvl(c.AN_YEAR,0)=p_year and C.STATUS='A' and nvl(C.CLOSE_YN,'N')='Y' ;
                         
            FETCH l_cur INTO l_cur_rec;
            l_flag_exist := l_cur%FOUND;
            close l_cur;     
                        
           IF l_flag_exist=true THEN  
                p_result:=1;    
                p_exist_ale:=1;
                p_close_ale:=1; --close
           else
                p_exist_ale:=1;
                p_close_ale:=0; --open/null
            end if;  
       END IF; 
        
       
       
           
   /*EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;*/
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_2 (
   p_month               varchar2,
   p_tco_org_pk         varchar2,
   p_flag               varchar2,
   p_crt_by                varchar2,
   p_result   out     number
)
is

    l_error         varchar2(2):='';
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_check     exception;
    l_pay_pro varchar2(2):='0';

begin
       IF p_flag='OPEN' THEN --MO
        OPEN l_cur FOR
            SELECT 1 FROM THR_ANNUAL_LEAVE A
            WHERE A.DEL_IF=0  and (A.AN_YEAR)=substr(p_month,1,4)
            and nvl(A.CLOSE_YN,'N')='N'
            AND (   a.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR p_tco_org_pk = 'ALL');
                        
        FETCH l_cur INTO l_cur_rec;
        l_flag_exist:=l_cur%FOUND;

        IF l_flag_exist=TRUE THEN

            UPDATE THR_ANNUAL_LEAVE A
            SET A.DEL_IF=A.PK
                ,A.MOD_BY=p_crt_by
                ,A.MOD_DT=SYSDATE
            WHERE A.DEL_IF=0 AND A.AN_YEAR=substr(p_month,1,4) 
            and nvl(A.CLOSE_YN,'N')='N'
            AND (   a.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR p_tco_org_pk = 'ALL');

        END IF;

    ELSE --CLOSE
            INSERT INTO THR_ANNUAL_LEAVE
            (PK, THR_EMP_PK, AN_YEAR, ALE_REAL,ALE_LAST_YEAR, USED, UNUSED, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT
            , NOV, DEC, DEL_IF, CRT_DT, CRT_BY, ALE_IN_YEAR, EMP_ID
           , TCO_ORG_PK,ORG_NM, THR_GROUP_PK, GROUP_NM
            , JOIN_DT,STATUS,FULL_NAME,ID_NUM,ALE_UNPAY,ALE_ADJUST,TOTAL_UNPAY)
            SELECT  THR_ANNUAL_LEAVE_SEQ.NEXTVAL,AL.EMP_PK,substr(p_month,1,4)
            ,(case when  nvl(al.left_dt,'30000101')> SUBSTR(p_month,1,4)||'1231' then  
                    HR_F_CAL_ALE(SUBSTR(p_month,1,4)||'12',AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(ALSUM.ALE_ADJUST,0),AL.EMP_PK)
                    else
                       HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(ALSUM.ALE_ADJUST,0),AL.EMP_PK)
                   
              end) + NVL(LAST_ALE.TOTAL_UNPAY,0)  AS ALE_REAL
            ,NVL(LAST_ALE.TOTAL_UNPAY,0) AS ALE_LAST_YEAR
            ,ALSUM.YEARSUM AS USED
            ,NVL(LAST_ALE.TOTAL_UNPAY,0)+ case when al.Left_dt is null or nvl(al.left_dt,'30000101')> SUBSTR(p_month,1,4)||'1231' then  
                    HR_F_CAL_ALE(SUBSTR(p_month,1,4)||'12',AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(ALSUM.ALE_ADJUST,0),AL.EMP_PK)
                    else
                         HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(ALSUM.ALE_ADJUST,0),AL.EMP_PK)
                 
              end
             - NVL(ALSUM.YEARSUM,0)  AS UNUSED
            ,ALSUM.MON01, ALSUM.MON02, ALSUM.MON03, ALSUM.MON04, ALSUM.MON05, ALSUM.MON06
            ,ALSUM.MON07, ALSUM.MON08, ALSUM.MON09, ALSUM.MON10, ALSUM.MON11, ALSUM.MON12,0
            ,SYSDATE,p_crt_by,AL.ANNUAL_LEAVE_DAYS_IN_YEAR,AL.EMP_ID
            ,AL.ORG_PK,AL.DEPT_NM,AL.GROUP_PK,AL.GROUP_NM,AL.JOIN_DATE,AL.STATUS,AL.FULL_NAME,AL.ID_NUM
            ,NVL(LAST_ALE.TOTAL_UNPAY,0) + case when al.Left_dt is null or nvl(al.left_dt,'30000101')> SUBSTR(p_month,1,4)||'1231' then  
                    HR_F_CAL_ALE(SUBSTR(p_month,1,4)||'12',AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(ALSUM.ALE_ADJUST,0),AL.EMP_PK)
                    else                                       
                  HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(ALSUM.ALE_ADJUST,0),AL.EMP_PK)
                      
              end
             - NVL(ALSUM.YEARSUM,0) AS ALE_UNPAY,NVL(ALSUM.ALE_ADJUST,0)
             ,NVL(LAST_ALE.TOTAL_UNPAY,0) + case when al.Left_dt is null or nvl(al.left_dt,'30000101')> SUBSTR(p_month,1,4)||'1231' then  
                    HR_F_CAL_ALE(SUBSTR(p_month,1,4)||'12',AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(ALSUM.ALE_ADJUST,0),AL.EMP_PK)
                    else                                       
                  HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(ALSUM.ALE_ADJUST,0),AL.EMP_PK)
                      
              end
             - NVL(ALSUM.YEARSUM,0) AS TOTAL_UNPAY 
          FROM
            (SELECT C.PK AS ORG_PK
                    ,C.ORG_NM AS DEPT_NM,A.EMP_ID  AS EMP_ID
                    ,A.ALE_DAY_IN_YEAR AS ANNUAL_LEAVE_DAYS_IN_YEAR
                    ,A.ALE_PLUS AS ALE_PLUS
                    ,A.JOIN_DT AS JOIN_DATE,A.PK AS EMP_PK,D.PK AS GROUP_PK
                    ,D.workGROUP_NM AS GROUP_NM
                    ,(CASE WHEN A.LEFT_DT>substr(p_month,1,4)||'1231' OR A.LEFT_DT IS NULL THEN 'A'
                            ELSE 'R' END) AS STATUS,A.FULL_NAME AS FULL_NAME,A.ID_NUM AS ID_NUM
                    ,A.LEFT_DT AS LEFT_DT
              FROM THR_EMPLOYEE A,TCO_Org C,thr_work_group d
             WHERE A.DEL_IF=0 AND C.DEL_IF=0
               AND A.TCO_org_pk=C.PK
                AND (   A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR p_tco_org_pk = 'ALL')
               and d.PK=a.thr_wg_pk
               and d.del_if=0
                 ) AL,
            (SELECT  a.thr_emp_pk emp_pk,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'01', round(a.ale_hours/8,2),0)) mon01,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'02', round(a.ale_hours/8,2),0)) mon02,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'03', round(a.ale_hours/8,2),0)) mon03,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'04', round(a.ale_hours/8,2),0)) mon04,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'05', round(a.ale_hours/8,2),0)) mon05,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'06', round(a.ale_hours/8,2),0)) mon06,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'07', round(a.ale_hours/8,2),0)) mon07,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'08', round(a.ale_hours/8,2),0)) mon08,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'09', round(a.ale_hours/8,2),0)) mon09,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'10', round(a.ale_hours/8,2),0)) mon10,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'11', round(a.ale_hours/8,2),0)) mon11,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'12', round(a.ale_hours/8,2),0)) mon12,
                         round(SUM (nvl(a.ale_hours,0)/8),2) yearsum,
                         round(SUM (nvl(a.AL_DAYS_PAID,0)),2) ale_adjust --don vi la ngay
                    FROM thr_current_ale a
                   WHERE a.del_if=0 
                     AND SUBSTR (a.work_mon, 1, 4) = SUBSTR (p_month, 1, 4)
                GROUP BY a.thr_emp_pk) alsum 
          ,(SELECT T.THR_EMP_PK,NVL(T.TOTAL_UNPAY,0) AS TOTAL_UNPAY
          FROM THR_ANNUAL_LEAVE T
          WHERE T.DEL_IF=0 AND TO_NUMBER(T.AN_YEAR)= TO_NUMBER(SUBSTR(P_MONTH,1,4)) -1
          )LAST_ALE
          WHERE AL.EMP_PK =  ALSUM.EMP_PK(+)
        AND AL.JOIN_DATE<=substr(p_month,1,4)||'1231'
        AND AL.EMP_PK=LAST_ALE.THR_EMP_PK(+)
        AND (nvl(AL.LEFT_DT,0)>substr(p_month,1,4)||'0101' OR AL.LEFT_DT IS NULL)
         AND (   AL.ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR p_tco_org_pk = 'ALL')
        and al.emp_pk not in (select v.thr_emp_pk from thr_annual_leave v where v.del_if=0 and nvl(v.resign_pay_yn,'N')='Y' and al.emp_pk =v.thr_emp_pk );--khomng tinh lai nhung nguoi da nghi va tra tie trong nam truoc
        
       
        
  update thr_annual_leave T
        set (T.ALE_PAY,T.EMPLOYEE_PAY,T.EMPLOYEE_paY_AMT,T.ALE_PAY_AMT,T.ALE_UNPAY,T.SALARY,T.TOTAL_UNPAY)
            =(select  case when r.ANNUAL_STOP>=0 then r.ANNUAL_STOP else 0  end
            ,case when r.ANNUAL_STOP < 0 then abs(r.ANNUAL_STOP)  else 0 end
            ,case when r.ANNUAL_STOP < 0 then abs(r.ANNUAL_STOP_AMT)  else 0 end
            ,r.ANNUAL_STOP_AMT,0,r.BASIC_SAL,0
              from  THR_EMPLOYEE_RESIGN r where r.del_if=0 and r.THR_EMP_PK=t.THR_EMP_PK and r.pk =(select max(u.pk) from thr_employee_resign u where u.THR_EMP_PK=r.THR_EMP_PK and u.del_if=0 ) )
        where t.del_if=0 AND TO_NUMBER(T.AN_YEAR)= TO_NUMBER(SUBSTR(P_MONTH,1,4))        
        AND (   T.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR p_tco_org_pk = 'ALL')
        and t.STATUS='R';
        
  END IF;


    p_result:=1;


exception
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      ROLLBACK WORK;
end ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_3
(p_year varchar2
,p_option varchar2
,p_tco_org_pk varchar2
,p_ctrl varchar2
,p_rtn out varchar2)
is 
l_temp sys_refcursor;
l_tmp varchar(1000):='';
flag number:=0;
begin
p_rtn:='0';

    l_tmp:=HR_F_FIND_HR_CODE_VALUE('HR0122','02','YN',p_tco_org_pk);
    
    if l_tmp<>'' then 
         p_rtn:='1';
    else      
        p_rtn:='2'; 
    end if;    
        
   select (max(nvl(m.ALE_FOR_NEXT_YEAR,0)) + max(nvl(m.BORROW_AL_NEXT_YEAR,0) )
     + max(nvl(m.ALE_PAY,0)) +  max(nvl(m.EMPLOYEE_PAY,0))) into flag 
     from thr_annual_leave m where m.del_if=0  and m.AN_YEAR=p_year--decode(nvl(p_option,0),'year',decode(substr(p_date,-2),'12',substr(p_date,1,4),substr(p_date,1,4)+1),substr(p_date,1,4)) 
     AND (   m.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR p_tco_org_pk = 'ALL');

     if flag >='1' then 
        p_rtn:=p_rtn||'1';
    else
         p_rtn:=p_rtn||'0';
       end if;
       -- 21 su dung kind2 da process | 20  kind 2 chua process  | 11 kind 1 process |10 kind 1 chua proces
end;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_4;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_4 (
   p_year               varchar2,
   p_month               varchar2
   ,p_tco_org_pk varchar2
   ,p_crt_by                varchar2,
   p_result   out     number
)
is

    l_error         varchar2(2):='';
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_ale_include_sal_yn    varchar2(2);
    l_ale_pit_rate  number:=0;
    l_sal_mon_ale   varchar(8):='';
    l_year          varchar(4);
    l_process_kind  number:=0;
    l_days  number:=0;
    l_a1 varchar2(2) :='N';
    l_a2 varchar2(2) :='N';
    l_a3 varchar2(2) :='N';
    l_a4 varchar2(2):='N';
    l_a5 varchar2(2) :='N';
    l_a6 varchar2(2) :='N';
    l_a7 varchar2(2) :='N';
    l_a8 varchar2(2) :='N';
    l_a9 varchar2(2) :='N';
    l_a10 varchar2(2) :='N';
    l_a11 varchar2(2) :='N';
    l_a12 varchar2(2) :='N';
    l_pay_pro varchar2(2) :='0'; 
    l_kind2_num number:=1;
    l_ghi_no  VARCHAR2(1):='N';
    l_tmp varchar2(1000):='';

begin
    
            
        --thay xac dinh tinh phep nam cho nam nao? trên b?ng khuc code sau
        l_error:='00';
       OPEN l_cur FOR
       SELECT A.AN_YEAR FROM THR_ANNUAL_LEAVE A
       WHERE nvl(A.DEL_IF,1)=0
       and nvl(A.AN_YEAR,0)=p_year
       and nvl(A.CLOSE_YN,'N')='N'
       AND a.TCO_ORG_PK IN (  SELECT     G.PK
                        FROM TCO_ORG G
                       WHERE G.DEL_IF = 0 
                  START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                  CONNECT BY PRIOR G.PK = G.P_PK);
             
       --end thay xac dinh tinh phep nam cho nam nao? trên b?ng khuc code sau           

        FETCH l_cur INTO l_cur_rec;
        l_flag_exist:=l_cur%FOUND;

    l_error:='05';

       IF l_flag_exist=TRUE THEN

           l_year:=l_cur_rec;
        -----xoa du lieu da process
          update thr_annual_leave a
                 set a.ALE_FOR_NEXT_YEAR=null
                ,a.BORROW_AL_NEXT_YEAR=null
                ,a.ALE_PAY=null
                ,a.EMPLOYEE_PAY=null
                ,a.EMPLOYEE_PAY_AMT=null
                ,a.ALE_PAY_AMT=null
                ,a.ALE_UNPAY=a.UNUSED
                ,a.total_unpay=0
          where del_if=0 and nvl(resign_pay_yn,'N')<>'Y' and nvl(a.status,'A')='A'
                and an_year=l_year
                and nvl(A.CLOSE_YN,'N')='N'
                AND a.TCO_ORG_PK IN (  SELECT     G.PK
                        FROM TCO_ORG G
                       WHERE G.DEL_IF = 0 
                  START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                  CONNECT BY PRIOR G.PK = G.P_PK);
        ----------------------------
        l_error:='10';
        --xac dinh cach tinh 
        l_tmp:=HR_F_FIND_HR_CODE_VALUE('HR0122','02','YN',p_tco_org_pk);
            if l_tmp is not null then
                l_process_kind:=2;
                else
                l_process_kind:=1;
            end if;    
        
          
        --xac dinh co tra phep nam con lai cho  nguoi thu viec hay khong 
         l_tmp:=HR_F_FIND_HR_CODE_VALUE('HR0122','04','YN',p_tco_org_pk);
          if l_tmp is not null then
                l_pay_pro:='1';
            else
            l_pay_pro:='0';   
            end if;    
          
        --xac dinh cach tinh 
        l_kind2_num:=nvl(HR_F_FIND_HR_CODE_VALUE('HR0122','01','N1',p_tco_org_pk),0);
                
         
          
        --xac dinh  thang luong 
                SELECT NVL(A.NUM_2,0)
                            ,(CASE WHEN A.CHAR_2='12' OR TO_NUMBER(A.CHAR_2)>'06' THEN l_year||A.CHAR_2
                                    ELSE TO_CHAR(ADD_MONTHS(TO_DATE(l_year,'YYYY'),12),'YYYY')||A.CHAR_2
                                    END) AS SAL_IN_MONTH
                            ,A.CHAR_3 INTO l_ale_pit_rate,l_sal_mon_ale,l_ale_include_sal_yn
                            FROM VHR_HR_CODE A WHERE A.ID='HR0006' AND A.CODE='03'
                            AND (A.TCO_COMPANY_PK=(select max(b.tco_company_pk) from tco_org b where b.del_if=0 and decode(p_tco_org_pk,'ALL','ALL',b.pk)=p_tco_org_pk) --XAC DINH THEO COMPANY
                                   OR A.TCO_COMPANY_PK IS NULL
                                   );

  
        ---Tinh allow 
          select MAX(AL.A1),MAX(AL.A2),MAX(AL.A3),MAX(AL.A4),MAX(AL.A5),MAX(AL.A6),MAX(AL.A7),MAX(AL.A8)
          ,MAX(AL.A9),MAX(AL.A10),MAX(AL.A11),MAX(AL.A12)          
                    into l_a1,l_a2,l_a3,l_a4,l_a5,l_a6,l_a7,l_a8,l_a9,l_a10,l_a11,l_a12
                    from (
                     SELECT  decode(a.code,'A1',NVL(A.CHAR_1,'N'))  a1
                            ,decode(a.code,'A2',NVL(A.CHAR_1,'N')) a2
                            ,decode(a.code,'A3',NVL(A.CHAR_1,'N')) a3
                            ,decode(a.code,'A4',NVL(A.CHAR_1,'N')) a4
                            ,decode(a.code,'A5',NVL(A.CHAR_1,'N')) a5
                            ,decode(a.code,'A6',NVL(A.CHAR_1,'N')) a6
                            ,decode(a.code,'A7',NVL(A.CHAR_1,'N')) a7
                            ,decode(a.code,'A8',NVL(A.CHAR_1,'N')) a8
                            ,decode(a.code,'A9',NVL(A.CHAR_1,'N')) a9
                            ,decode(a.code,'A10',NVL(A.CHAR_1,'N')) a10
                            ,decode(a.code,'A11',NVL(A.CHAR_1,'N')) a11
                            ,decode(a.code,'A12',NVL(A.CHAR_1,'N')) a12 
                            FROM VHR_HR_CODE A
                            WHERE A.ID='HR0019' 
                             AND (A.TCO_COMPANY_PK=(select max(b.tco_company_pk) from tco_org b where b.del_if=0 and decode(p_tco_org_pk,'ALL','ALL',b.pk)=p_tco_org_pk) --XAC DINH THEO COMPANY
                                   OR A.TCO_COMPANY_PK IS NULL
                                   )
                            ) AL  ;

              l_error:='15';
        --Truong hop tinh phep nam cua nam truoc do
             IF SUBSTR(p_month,-2)<>'12' THEN
        --tinh so ngay nghi den thoi diem process
                      UPDATE THR_ANNUAL_LEAVE B
                      SET B.ALE_FOR_NEXT_YEAR = (SELECT ROUND(SUM(NVL(A.ALE_HOURS,0)/8),2)
                                                FROM THR_CURRENT_ALE A
                                                WHERE SUBSTR(A.WORK_MON,1,4)=SUBSTR(p_month,1,4)
                                                    AND A.WORK_MON<=p_month
                                                    AND A.THR_EMP_PK=B.THR_EMP_PK
                                                    )
                      WHERE B.DEL_IF=0
                      AND B.AN_YEAR=l_year
                      and nvl(B.CLOSE_YN,'N')='N'
                       AND B.TCO_ORG_PK IN (  SELECT     G.PK
                        FROM TCO_ORG G
                       WHERE G.DEL_IF = 0 
                        START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                        CONNECT BY PRIOR G.PK = G.P_PK);
                        
        --muon so ngay phep nam trong nam moi tai thoi diem process  doi voi kind 2           
                    if l_process_kind =2 then
                        UPDATE THR_ANNUAL_LEAVE B
                        set b.BORROW_AL_NEXT_YEAR=
                         (select   case when e.Left_dt is null or e.left_dt >to_char(last_day(to_date(p_month,'yyyymm')),'yyyymmdd') then  
                            HR_F_CAL_ALE(p_month,e.JOIN_DT,NVL(e.ALE_DAY_IN_YEAR,0),0,e.pk)
                            else
                            HR_F_CAL_ALE_STOP(e.Left_dt,e.JOIN_DT,NVL(e.ALE_DAY_IN_YEAR,0),0,E.PK)
                        end from thr_employee e
                                                   where e.pk=b.THR_EMP_PK and e.del_if=0 and  substr(nvl(e.left_dt,'30000101'),1.4)>=substr(p_month,1,4))
                
                         WHERE B.DEL_IF=0
                          AND B.AN_YEAR=l_year and B.status='A' 
                          and nvl(B.CLOSE_YN,'N')='N'
                                AND (   B.TCO_ORG_PK IN (  SELECT     G.PK
                                        FROM TCO_ORG G
                                       WHERE G.DEL_IF = 0 
                                  START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                  CONNECT BY PRIOR G.PK = G.P_PK)
                                     OR p_tco_org_pk = 'ALL'); 
                                     
                                     
                           l_tmp:=HR_F_FIND_HR_CODE_VALUE('HR0122','02','N1',p_tco_org_pk);
                           
                           l_kind2_num:=NVL(l_tmp,0);
                          
                    else ---kind 1
                        UPDATE THR_ANNUAL_LEAVE B
                        set b.BORROW_AL_NEXT_YEAR=0
                        WHERE B.DEL_IF=0
                        AND B.AN_YEAR=l_year and B.status='A'
                        and nvl(B.CLOSE_YN,'N')='N'
                        AND B.TCO_ORG_PK IN (  SELECT     G.PK
                        FROM TCO_ORG G
                       WHERE G.DEL_IF = 0 
                        START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                        CONNECT BY PRIOR G.PK = G.P_PK);
                    end if;
      

                l_error:='20';

                -- tinh so ngay nghi muon cua nam moi 
                        IF l_kind2_num = 0 THEN --loai nay khong cho muon khi so ngay nghi da bi am--1: co bao nhieu cho muon bay nhieu--2: kieu envina
                              UPDATE THR_ANNUAL_LEAVE B
                              SET B.ALE_FOR_NEXT_YEAR=(CASE WHEN NVL(B.ALE_FOR_NEXT_YEAR,0)>case 
                                                                                                when
                                                                                                     (NVL(b.BORROW_AL_NEXT_YEAR,0)+ NVL(B.UNUSED,0))<0 
                                                                                                then
                                                                                                     0 
                                                                                                else 
                                                                                                    NVL(B.UNUSED,0)+NVL(b.BORROW_AL_NEXT_YEAR,0) 
                                                                                             end 
                                                            THEN (case      
                                                                                                when (NVL(b.BORROW_AL_NEXT_YEAR,0)+ NVL(B.UNUSED,0))<0 
                                                                                                then 0 else NVL(B.UNUSED,0)+NVL(b.BORROW_AL_NEXT_YEAR,0) 
                                                                                             end )
                                                            ELSE NVL(B.ALE_FOR_NEXT_YEAR,0)
                                                            END
                                                        ) 
                              WHERE B.DEL_IF=0
                              AND B.AN_YEAR=l_year and B.status='A'
                              and nvl(B.CLOSE_YN,'N')='N'
                              AND B.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK);
                    END IF;      

              END IF;
        ---
        l_error:='25';
              UPDATE THR_ANNUAL_LEAVE B
              SET B.ALE_PAY=0,b.employee_pay=0,employee_pay_amt=0,ale_pay_amt=0
              WHERE B.DEL_IF=0
              AND B.AN_YEAR=l_year and B.status='A'
              and nvl(B.CLOSE_YN,'N')='N'
              AND B.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK);
              
                IF l_kind2_num<>2 THEN --ko tinh cho load kind 2 nhung num_1=0

                    --tinh so ngay phep ma cong ty phai tra
                          UPDATE THR_ANNUAL_LEAVE B
                          SET B.ALE_PAY=NVL(B.UNUSED,0)+nvl(b.BORROW_AL_NEXT_YEAR,0) - NVL(B.ALE_FOR_NEXT_YEAR,0)
                          WHERE B.DEL_IF=0
                          AND B.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                          AND B.AN_YEAR=l_year and B.status='A' 
                          and nvl(B.CLOSE_YN,'N')='N'
                          and (B.thr_emp_pk not in( select e.pk from thr_employee e where e.del_if=0 and substr(e.END_PROBATION,1,6)>p_month and thr_emp_pk=e.pk )or l_pay_pro='1');
                
                ELSE -- tinh theo kieu enis vina, kind 2 ma num_1=2 
                        
                          UPDATE THR_ANNUAL_LEAVE B
                          SET B.ALE_PAY=(CASE WHEN  NVL(B.UNUSED,0)<=0 THEN NVL(B.UNUSED,0)
                                                            WHEN NVL(B.UNUSED,0)>0 AND NVL(B.ALE_FOR_NEXT_YEAR,0)>nvl(b.BORROW_AL_NEXT_YEAR,0) AND NVL(B.UNUSED,0)+nvl(b.BORROW_AL_NEXT_YEAR,0) - NVL(B.ALE_FOR_NEXT_YEAR,0)>0 THEN NVL(B.UNUSED,0)+nvl(b.BORROW_AL_NEXT_YEAR,0) - NVL(B.ALE_FOR_NEXT_YEAR,0)
                                                            WHEN NVL(B.UNUSED,0)>0 AND NVL(B.ALE_FOR_NEXT_YEAR,0)>nvl(b.BORROW_AL_NEXT_YEAR,0) AND NVL(B.UNUSED,0)+nvl(b.BORROW_AL_NEXT_YEAR,0) - NVL(B.ALE_FOR_NEXT_YEAR,0)<=0 THEN 0
                                                            ELSE NVL(B.UNUSED,0) END)
                          WHERE B.DEL_IF=0
                          AND B.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                          AND B.AN_YEAR=l_year and B.status='A' 
                          and nvl(B.CLOSE_YN,'N')='N'
                          and (B.thr_emp_pk not in( select e.pk from thr_employee e where e.del_if=0 and substr(e.END_PROBATION,1,6)>p_month and thr_emp_pk=e.pk )or l_pay_pro='1');
                            
                END IF;                   
           
        l_error:='30';
        --tinh so ngay phep ma cong nhan phai tra
              UPDATE THR_ANNUAL_LEAVE B
              SET B.employee_PAY =abs(B.ALE_PAY)
              WHERE B.DEL_IF=0
                AND B.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK)
              AND B.AN_YEAR=l_year 
              and nvl(B.CLOSE_YN,'N')='N'
              and nvl(B.ALE_PAY,0)<0 and B.status='A';

              UPDATE THR_ANNUAL_LEAVE B
              SET B.ALE_PAY =0
              WHERE B.DEL_IF=0
                AND B.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK)
              AND B.AN_YEAR=l_year 
              and nvl(B.CLOSE_YN,'N')='N'
              and nvl(B.ALE_PAY,0)<0 and B.status='A';
        
        l_error:='35';

        -- Tinh tien company pay
              UPDATE THR_ANNUAL_LEAVE A
                    SET (A.SALARY,A.ALE_PAY_AMT)=(SELECT case when substr(nvl(B.CONFIRM_DT,'000000'),1,6)<=l_sal_mon_ale 
                                                    then  (B.SALARY_LEVEL2 
                                                                + DECODE(nvl(l_a1,'N'),'Y',NVL(b.ALLOW_AMT1,0),0)
                                                                + DECODE(nvl(l_a2,'N'),'Y',NVL(b.ALLOW_AMT2,0),0)
                                                                + DECODE(nvl(l_a3,'N'),'Y',NVL(b.ALLOW_AMT3,0),0)
                                                                + DECODE(nvl(l_a4,'N'),'Y',NVL(b.ALLOW_AMT4,0),0)
                                                                + DECODE(nvl(l_a5,'N'),'Y',NVL(b.ALLOW_AMT5,0),0)
                                                                + DECODE(nvl(l_a6,'N'),'Y',NVL(b.ALLOW_AMT6,0),0)
                                                                + DECODE(nvl(l_a7,'N'),'Y',NVL(b.ALLOW_AMT7,0),0)
                                                                + DECODE(nvl(l_a8,'N'),'Y',NVL(b.ALLOW_AMT8,0),0)
                                                                + DECODE(nvl(l_a9,'N'),'Y',NVL(b.ALLOW_AMT9,0),0)
                                                                + DECODE(nvl(l_a10,'N'),'Y',NVL(b.ALLOW_AMT10,0),0)
                                                                + DECODE(nvl(l_a11,'N'),'Y',NVL(b.ALLOW_AMT11,0),0)
                                                                + DECODE(nvl(l_a12,'N'),'Y',NVL(b.ALLOW_AMT12,0),0)
                                                                )
                                                   else (B.SALARY_LEVEL1 
                                                                + DECODE(nvl(l_a1,'N'),'Y',NVL(b.ALLOW_AMT1,0),0)
                                                                + DECODE(nvl(l_a2,'N'),'Y',NVL(b.ALLOW_AMT2,0),0)
                                                                + DECODE(nvl(l_a3,'N'),'Y',NVL(b.ALLOW_AMT3,0),0)
                                                                + DECODE(nvl(l_a4,'N'),'Y',NVL(b.ALLOW_AMT4,0),0)
                                                                + DECODE(nvl(l_a5,'N'),'Y',NVL(b.ALLOW_AMT5,0),0)
                                                                + DECODE(nvl(l_a6,'N'),'Y',NVL(b.ALLOW_AMT6,0),0)
                                                                + DECODE(nvl(l_a7,'N'),'Y',NVL(b.ALLOW_AMT7,0),0)
                                                                + DECODE(nvl(l_a8,'N'),'Y',NVL(b.ALLOW_AMT8,0),0)
                                                                + DECODE(nvl(l_a9,'N'),'Y',NVL(b.ALLOW_AMT9,0),0)
                                                                + DECODE(nvl(l_a10,'N'),'Y',NVL(b.ALLOW_AMT10,0),0)
                                                                + DECODE(nvl(l_a11,'N'),'Y',NVL(b.ALLOW_AMT11,0),0)
                                                                + DECODE(nvl(l_a12,'N'),'Y',NVL(b.ALLOW_AMT12,0),0)
                                                                )
                                            
                                                                     end  
                                               ,NVL( case when substr(nvl(B.CONFIRM_DT,'000000'),1,6)<=l_sal_mon_ale 
                                                    then  (B.SALARY_LEVEL2 
                                                                + DECODE(nvl(l_a1,'N'),'Y',NVL(b.ALLOW_AMT1,0),0)
                                                                + DECODE(nvl(l_a2,'N'),'Y',NVL(b.ALLOW_AMT2,0),0)
                                                                + DECODE(nvl(l_a3,'N'),'Y',NVL(b.ALLOW_AMT3,0),0)
                                                                + DECODE(nvl(l_a4,'N'),'Y',NVL(b.ALLOW_AMT4,0),0)
                                                                + DECODE(nvl(l_a5,'N'),'Y',NVL(b.ALLOW_AMT5,0),0)
                                                                + DECODE(nvl(l_a6,'N'),'Y',NVL(b.ALLOW_AMT6,0),0)
                                                                + DECODE(nvl(l_a7,'N'),'Y',NVL(b.ALLOW_AMT7,0),0)
                                                                + DECODE(nvl(l_a8,'N'),'Y',NVL(b.ALLOW_AMT8,0),0)
                                                                + DECODE(nvl(l_a9,'N'),'Y',NVL(b.ALLOW_AMT9,0),0)
                                                                + DECODE(nvl(l_a10,'N'),'Y',NVL(b.ALLOW_AMT10,0),0)
                                                                + DECODE(nvl(l_a11,'N'),'Y',NVL(b.ALLOW_AMT11,0),0)
                                                                + DECODE(nvl(l_a12,'N'),'Y',NVL(b.ALLOW_AMT12,0),0)
                                                                )
                                                   else (B.SALARY_LEVEL1 
                                                                + DECODE(nvl(l_a1,'N'),'Y',NVL(b.ALLOW_AMT1,0),0)
                                                                + DECODE(nvl(l_a2,'N'),'Y',NVL(b.ALLOW_AMT2,0),0)
                                                                + DECODE(nvl(l_a3,'N'),'Y',NVL(b.ALLOW_AMT3,0),0)
                                                                + DECODE(nvl(l_a4,'N'),'Y',NVL(b.ALLOW_AMT4,0),0)
                                                                + DECODE(nvl(l_a5,'N'),'Y',NVL(b.ALLOW_AMT5,0),0)
                                                                + DECODE(nvl(l_a6,'N'),'Y',NVL(b.ALLOW_AMT6,0),0)
                                                                + DECODE(nvl(l_a7,'N'),'Y',NVL(b.ALLOW_AMT7,0),0)
                                                                + DECODE(nvl(l_a8,'N'),'Y',NVL(b.ALLOW_AMT8,0),0)
                                                                + DECODE(nvl(l_a9,'N'),'Y',NVL(b.ALLOW_AMT9,0),0)
                                                                + DECODE(nvl(l_a10,'N'),'Y',NVL(b.ALLOW_AMT10,0),0)
                                                                + DECODE(nvl(l_a11,'N'),'Y',NVL(b.ALLOW_AMT11,0),0)
                                                                + DECODE(nvl(l_a12,'N'),'Y',NVL(b.ALLOW_AMT12,0),0)
                                                                )
                                            
                                                                     end ,0)*nvl(l_ale_pit_rate,100)*NVL(A.ALE_PAY,0)/2600
                                                    FROM THR_SALARY_MANAGE B
                                                    WHERE B.DEL_IF=0 AND B.WORK_MON=l_sal_mon_ale
                                                    AND B.THR_EMP_PK=A.THR_EMP_PK)
              WHERE A.DEL_IF=0 AND A.AN_YEAR=l_year and A.ALE_PAY>=0 and a.status='A'
              and nvl(A.CLOSE_YN,'N')='N'
              AND A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK);
              
        l_error:='40';
        -- Tinh tien employee pay
            UPDATE THR_ANNUAL_LEAVE A
                    SET (A.SALARY,A.EMPLOYEE_PAY_AMT)=(SELECT case when substr(nvl(B.CONFIRM_DT,'000000'),1,6)<=l_sal_mon_ale 
                                                    then  (B.SALARY_LEVEL2 
                                                                + DECODE(nvl(l_a1,'N'),'Y',NVL(b.ALLOW_AMT1,0),0)
                                                                + DECODE(nvl(l_a2,'N'),'Y',NVL(b.ALLOW_AMT2,0),0)
                                                                + DECODE(nvl(l_a3,'N'),'Y',NVL(b.ALLOW_AMT3,0),0)
                                                                + DECODE(nvl(l_a4,'N'),'Y',NVL(b.ALLOW_AMT4,0),0)
                                                                + DECODE(nvl(l_a5,'N'),'Y',NVL(b.ALLOW_AMT5,0),0)
                                                                + DECODE(nvl(l_a6,'N'),'Y',NVL(b.ALLOW_AMT6,0),0)
                                                                + DECODE(nvl(l_a7,'N'),'Y',NVL(b.ALLOW_AMT7,0),0)
                                                                + DECODE(nvl(l_a8,'N'),'Y',NVL(b.ALLOW_AMT8,0),0)
                                                                + DECODE(nvl(l_a9,'N'),'Y',NVL(b.ALLOW_AMT9,0),0)
                                                                + DECODE(nvl(l_a10,'N'),'Y',NVL(b.ALLOW_AMT10,0),0)
                                                                + DECODE(nvl(l_a11,'N'),'Y',NVL(b.ALLOW_AMT11,0),0)
                                                                + DECODE(nvl(l_a12,'N'),'Y',NVL(b.ALLOW_AMT12,0),0)
                                                                )
                                                   else (B.SALARY_LEVEL1 
                                                                + DECODE(nvl(l_a1,'N'),'Y',NVL(b.ALLOW_AMT1,0),0)
                                                                + DECODE(nvl(l_a2,'N'),'Y',NVL(b.ALLOW_AMT2,0),0)
                                                                + DECODE(nvl(l_a3,'N'),'Y',NVL(b.ALLOW_AMT3,0),0)
                                                                + DECODE(nvl(l_a4,'N'),'Y',NVL(b.ALLOW_AMT4,0),0)
                                                                + DECODE(nvl(l_a5,'N'),'Y',NVL(b.ALLOW_AMT5,0),0)
                                                                + DECODE(nvl(l_a6,'N'),'Y',NVL(b.ALLOW_AMT6,0),0)
                                                                + DECODE(nvl(l_a7,'N'),'Y',NVL(b.ALLOW_AMT7,0),0)
                                                                + DECODE(nvl(l_a8,'N'),'Y',NVL(b.ALLOW_AMT8,0),0)
                                                                + DECODE(nvl(l_a9,'N'),'Y',NVL(b.ALLOW_AMT9,0),0)
                                                                + DECODE(nvl(l_a10,'N'),'Y',NVL(b.ALLOW_AMT10,0),0)
                                                                + DECODE(nvl(l_a11,'N'),'Y',NVL(b.ALLOW_AMT11,0),0)
                                                                + DECODE(nvl(l_a12,'N'),'Y',NVL(b.ALLOW_AMT12,0),0)
                                                                )
                                            
                                                                     end  ,NVL( case when substr(nvl(B.CONFIRM_DT,'000000'),1,6)<=l_sal_mon_ale 
                                                    then  (B.SALARY_LEVEL2 
                                                                + DECODE(nvl(l_a1,'N'),'Y',NVL(b.ALLOW_AMT1,0),0)
                                                                + DECODE(nvl(l_a2,'N'),'Y',NVL(b.ALLOW_AMT2,0),0)
                                                                + DECODE(nvl(l_a3,'N'),'Y',NVL(b.ALLOW_AMT3,0),0)
                                                                + DECODE(nvl(l_a4,'N'),'Y',NVL(b.ALLOW_AMT4,0),0)
                                                                + DECODE(nvl(l_a5,'N'),'Y',NVL(b.ALLOW_AMT5,0),0)
                                                                + DECODE(nvl(l_a6,'N'),'Y',NVL(b.ALLOW_AMT6,0),0)
                                                                + DECODE(nvl(l_a7,'N'),'Y',NVL(b.ALLOW_AMT7,0),0)
                                                                + DECODE(nvl(l_a8,'N'),'Y',NVL(b.ALLOW_AMT8,0),0)
                                                                + DECODE(nvl(l_a9,'N'),'Y',NVL(b.ALLOW_AMT9,0),0)
                                                                + DECODE(nvl(l_a10,'N'),'Y',NVL(b.ALLOW_AMT10,0),0)
                                                                + DECODE(nvl(l_a11,'N'),'Y',NVL(b.ALLOW_AMT11,0),0)
                                                                + DECODE(nvl(l_a12,'N'),'Y',NVL(b.ALLOW_AMT12,0),0)
                                                                )
                                                   else (B.SALARY_LEVEL1 
                                                                + DECODE(nvl(l_a1,'N'),'Y',NVL(b.ALLOW_AMT1,0),0)
                                                                + DECODE(nvl(l_a2,'N'),'Y',NVL(b.ALLOW_AMT2,0),0)
                                                                + DECODE(nvl(l_a3,'N'),'Y',NVL(b.ALLOW_AMT3,0),0)
                                                                + DECODE(nvl(l_a4,'N'),'Y',NVL(b.ALLOW_AMT4,0),0)
                                                                + DECODE(nvl(l_a5,'N'),'Y',NVL(b.ALLOW_AMT5,0),0)
                                                                + DECODE(nvl(l_a6,'N'),'Y',NVL(b.ALLOW_AMT6,0),0)
                                                                + DECODE(nvl(l_a7,'N'),'Y',NVL(b.ALLOW_AMT7,0),0)
                                                                + DECODE(nvl(l_a8,'N'),'Y',NVL(b.ALLOW_AMT8,0),0)
                                                                + DECODE(nvl(l_a9,'N'),'Y',NVL(b.ALLOW_AMT9,0),0)
                                                                + DECODE(nvl(l_a10,'N'),'Y',NVL(b.ALLOW_AMT10,0),0)
                                                                + DECODE(nvl(l_a11,'N'),'Y',NVL(b.ALLOW_AMT11,0),0)
                                                                + DECODE(nvl(l_a12,'N'),'Y',NVL(b.ALLOW_AMT12,0),0)
                                                                )
                                                                     end ,0)*NVL(A.EMPLOYEE_PAY,0)/26
                                                     FROM THR_MONTH_SALARY B
                                                    WHERE B.DEL_IF=0 AND B.WORK_MON=l_sal_mon_ale
                                                    AND B.THR_EMP_PK=A.THR_EMP_PK)
              WHERE A.DEL_IF=0 AND A.AN_YEAR=l_year and NVL( A.employee_PAY,0)>0 and A.status='A'
              and nvl(A.CLOSE_YN,'N')='N'
              AND A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK); 
              
              
         l_error:='45';
             Update  THR_ANNUAL_LEAVE A set a.ALE_PAY_AMT=-1*nvl(a.EMPLOYEE_PAY_AMT,0)
             where nvl(a.EMPLOYEE_PAY_AMT,0)>0 and a.DEL_IF=0 and A.status='A'
             and nvl(A.CLOSE_YN,'N')='N'
             AND A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK);

            UPDATE THR_ANNUAL_LEAVE A
              SET    A.ALE_PAY=0
                    ,A.ALE_PAY_AMT=0
                    ,A.Employee_PAY=0
                    ,A.Employee_PAY_AMT=0 
                   -- ,a.ALE_UNPAY=NVL(a.UNUSED,0)+nvl(a.BORROW_AL_NEXT_YEAR,0) - NVL(a.ALE_FOR_NEXT_YEAR,0)           
              WHERE A.DEL_IF=0 AND A.AN_YEAR=l_year
              and nvl(A.CLOSE_YN,'N')='N'
              AND A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK)
              AND A.THR_EMP_PK IN(SELECT B.PK FROM THR_EMPLOYEE B WHERE B.DEL_IF=0 AND NVL(B.AL_PAY_YN,'N')='N') and A.status='A';

        l_error:='50';
        -- xac dinh lai unpay cho ca hai truong hop   
          IF l_kind2_num<>2 THEN --ko tinh cho load kind 2 nhung num_1=0 
               UPDATE THR_ANNUAL_LEAVE A
                  SET   A.ALE_UNPAY=NVL(A.UNUSED,0)+ nvl(a.BORROW_AL_NEXT_YEAR,0)-nvl(a.ALE_FOR_NEXT_YEAR,0)  - NVL(a.ALE_PAY,0)+ nvl(a.employee_pay,0)
                  WHERE A.DEL_IF=0 AND A.AN_YEAR=l_year and a.status='A'
                  and nvl(A.CLOSE_YN,'N')='N'
                  AND A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK);   
                  
          ELSE
          
                UPDATE THR_ANNUAL_LEAVE B
                  SET   B.ALE_UNPAY=(CASE  WHEN  NVL(B.UNUSED,0)<=0 THEN NVL(B.UNUSED,0)
                                                            WHEN  NVL(B.UNUSED,0) >0 AND NVL(B.ALE_FOR_NEXT_YEAR,0)>nvl(b.BORROW_AL_NEXT_YEAR,0) AND NVL(B.UNUSED,0)+nvl(b.BORROW_AL_NEXT_YEAR,0) - NVL(B.ALE_FOR_NEXT_YEAR,0)>0 THEN NVL(B.ALE_FOR_NEXT_YEAR,0)-nvl(b.BORROW_AL_NEXT_YEAR,0)
                                                            WHEN  NVL(B.UNUSED,0) >0 AND NVL(B.ALE_FOR_NEXT_YEAR,0)>nvl(b.BORROW_AL_NEXT_YEAR,0) AND NVL(B.UNUSED,0)+nvl(b.BORROW_AL_NEXT_YEAR,0) - NVL(B.ALE_FOR_NEXT_YEAR,0)<=0 THEN NVL(B.UNUSED,0)
                                                            ELSE 0 END)
                         ,B.BORROW_AL_NEXT_YEAR=0
                         ,B.ALE_FOR_NEXT_YEAR=0                                   
                  WHERE B.DEL_IF=0 AND B.AN_YEAR=l_year and B.status='A'
                  and nvl(B.CLOSE_YN,'N')='N'
                  AND B.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK);
          
          END IF;        

        l_error:='55';              
                 l_tmp:=HR_F_FIND_HR_CODE_VALUE('HR0122','03','N1',p_tco_org_pk);
                 l_days:=TO_NUMBER(NVL(l_tmp,0));
                 
                 
                 l_tmp:=HR_F_FIND_HR_CODE_VALUE('HR0122','03','C1',p_tco_org_pk);
                  l_ghi_no:=NVL(l_tmp,'N');
                
                UPDATE THR_ANNUAL_LEAVE A
                SET A.EMPLOYEE_PAY=0
                      ,A.EMPLOYEE_paY_AMT=0
                WHERE A.AN_YEAR=l_year and nvl(A.EMPLOYEE_PAY,0)>0 and a.status='A'
                AND NVL(A.EMPLOYEE_PAY,0)<=l_days 
                and nvl(A.CLOSE_YN,'N')='N'
                AND A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK);    
                
                IF l_ghi_no='N' THEN  --KO GHI NO 
                        UPDATE THR_ANNUAL_LEAVE A
                      SET A.ALE_UNPAY =0
                      WHERE A.DEL_IF=0
                      AND A.AN_YEAR=l_year and nvl(A.ALE_UNPAY,0)<0 and a.status='A' 
                      and nvl(A.CLOSE_YN,'N')='N'
                      AND A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK); 
                      
                ELSE --GHI NO        
                      UPDATE THR_ANNUAL_LEAVE A
                      SET A.ALE_UNPAY =(case when abs(nvl(A.ALE_UNPAY,0))>l_days then 0 ELSE A.ALE_UNPAY END) 
                      ,A.EMPLOYEE_PAY_AMT=0
                      WHERE A.DEL_IF=0
                      AND A.AN_YEAR=l_year and nvl(A.ALE_UNPAY,0)<0 and a.status='A'
                      and nvl(A.CLOSE_YN,'N')='N'
                      AND A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK); 
                END IF;      
                              
  
         l_error:='60';               
                --up date cho nhung nguoi nghi truoc khi proces sau khi dong phep nam
                  update thr_annual_leave T
                        set (T.ALE_PAY,T.EMPLOYEE_PAY,T.EMPLOYEE_paY_AMT,T.ALE_PAY_AMT,T.ALE_UNPAY,T.SALARY,resign_pay_yn)
                            =(select  case when r.ANNUAL_STOP>=0 then r.ANNUAL_STOP else 0  end,case when r.ANNUAL_STOP < 0 then abs(r.ANNUAL_STOP)  else 0 end
                            ,case when r.ANNUAL_STOP < 0 then abs(r.ANNUAL_STOP_AMT)  else 0 end,r.ANNUAL_STOP_AMT,0,r.BASIC_SAL,'Y'
                              from  THR_EMPLOYEE_RESIGN r where r.del_if=0 and r.THR_EMP_PK=t.THR_EMP_PK and r.pk =(select max(u.pk) from thr_employee_resign u where u.THR_EMP_PK=r.THR_EMP_PK and u.del_if=0 ) )
                        where t.STATUS='A' and  t.del_if=0 
                          AND T.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        AND TO_NUMBER(T.AN_YEAR)= l_year 
                        and nvl(T.CLOSE_YN,'N')='N'
                        and  T.thr_emp_pk in (select e.pk from thr_employee e where e.pk=T.thr_emp_pk and e.del_if=0 and nvl(e.left_dt,'30000101') <=  to_char(last_day(to_date(p_month,'YYYYmm')),'yyyymmdd') and substr(nvl(e.left_dt,'30000101'),1,4)=substr(p_month,1,4));

                   --GHI NHAN CHO COT LAST YEAR CUA NAM TOI                          
                   UPDATE THR_ANNUAL_LEAVE A
                   SET A.TOTAL_UNPAY=NVL(A.ALE_UNPAY,0)+NVL(A.ALE_FOR_NEXT_YEAR,0)-NVL(A.BORROW_AL_NEXT_YEAR,0)    
                   WHERE A.DEL_IF=0
                   AND A.AN_YEAR=l_year and a.status='A' 
                   and nvl(A.CLOSE_YN,'N')='N'
                   AND A.TCO_ORG_PK IN (  SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0 
                              START WITH G.PK =(CASE WHEN p_tco_org_pk='ALL' THEN G.PK ELSE TO_NUMBER(p_tco_org_pk) END)
                              CONNECT BY PRIOR G.PK = G.P_PK); 
                        
                --Ghi nhan lai du lieu process
                UPDATE THR_ANNUAL_LEAVE A
                  SET   A.MOD_BY = p_crt_by ||'-PROCESS LENDING'
                        ,A.MOD_DT = sysdate
                        ,a.remark = p_crt_by ||'-PROCESS LENDING'
                  WHERE A.DEL_IF=0 AND A.AN_YEAR=l_year
                  and nvl(A.CLOSE_YN,'N')='N';
                  
                p_result:=0;

        ELSE
             p_result:=1;

       END IF;
        
       CLOSE l_cur;
        
exception
   when others   then
      p_result:=-1;
      raise_application_error (-20002,l_error||':-'||sqlerrm);
      ROLLBACK WORK;
end ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_5;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_5(
   p_year               varchar2,
   p_month               varchar2,
   p_tco_org_pk varchar2,
   p_crt_by                varchar2,
   p_result   out     number
)
is

    l_error         varchar2(2):='';
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_check     exception;
    l_ale_include_sal_yn    varchar2(2);
    l_ale_pit_rate  number:=0;
    l_sal_mon_ale   varchar(8):='';
    l_year          varchar(4);
    l_process_kind  number:=0;
    l_al_borrow  number:=0;
    l_days  number:=0;

begin
--xac dinh tinh phep nam cho nam nao
--    IF SUBSTR(p_month,-2)='12' THEN
--        OPEN l_cur FOR
--        SELECT A.AN_YEAR FROM THR_ANNUAL_LEAVE A
--        WHERE nvl(A.DEL_IF,1)=0
--        and nvl(A.AN_YEAR,0)=SUBSTR(p_month,1,4)
--          AND (   a.TCO_ORG_PK IN (  SELECT     G.PK
--                                    FROM TCO_ORG G
--                                   WHERE G.DEL_IF = 0 
--                              START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
--                              CONNECT BY PRIOR G.PK = G.P_PK)
--                        OR p_tco_org_pk = 'ALL');
--
--    ELSE
--        OPEN l_cur FOR
--        SELECT A.AN_YEAR FROM THR_ANNUAL_LEAVE A
--        WHERE nvl(A.DEL_IF,1)=0
--        and nvl(A.AN_YEAR,0)=TO_CHAR(ADD_MONTHS(TO_DATE(p_month,'YYYYMM'),-12),'YYYY')
--          AND (   a.TCO_ORG_PK IN (  SELECT     G.PK
--                                    FROM TCO_ORG G
--                                   WHERE G.DEL_IF = 0 
--                              START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
--                              CONNECT BY PRIOR G.PK = G.P_PK)
--                        OR p_tco_org_pk = 'ALL');
--    END IF;

    OPEN l_cur FOR
    SELECT A.AN_YEAR FROM THR_ANNUAL_LEAVE A
    WHERE nvl(A.DEL_IF,1)=0
    and nvl(A.AN_YEAR,0)=p_year
    and nvl(A.CLOSE_YN,'N')='N'
      AND (   a.TCO_ORG_PK IN (  SELECT     G.PK
                                FROM TCO_ORG G
                               WHERE G.DEL_IF = 0 
                          START WITH G.PK =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                          CONNECT BY PRIOR G.PK = G.P_PK)
                    OR p_tco_org_pk = 'ALL');

    FETCH l_cur INTO l_cur_rec;
    l_flag_exist:=l_cur%FOUND;

IF l_flag_exist=TRUE THEN

   l_year:=l_cur_rec;

    UPDATE thr_annual_leave a
       SET a.ALE_FOR_NEXT_YEAR = NULL,
           a.BORROW_AL_NEXT_YEAR = NULL,
           a.ALE_PAY = NULL,
           a.EMPLOYEE_PAY = NULL,
           a.EMPLOYEE_PAY_AMT = NULL,
           a.ALE_PAY_AMT = NULL,
           a.ALE_UNPAY = a.UNUSED,
           a.total_unpay = a.UNUSED,
           a.remark = p_crt_by || '-DEL LENDING'
     WHERE     del_if = 0
           AND NVL (resign_pay_yn, 'N') <> 'Y'
           AND NVL (a.status, 'A') = 'A'
           AND an_year = l_year
           and nvl(A.CLOSE_YN,'N')='N'
           AND (   a.TCO_ORG_PK IN
                      (    SELECT G.PK
                             FROM TCO_ORG G
                            WHERE G.DEL_IF = 0
                       START WITH G.PK =
                                     DECODE (p_tco_org_pk,
                                             'ALL', 0,
                                             p_tco_org_pk)
                       CONNECT BY PRIOR G.PK = G.P_PK)
                OR p_tco_org_pk = 'ALL');    
             
    p_result:=0;

ELSE
     p_result:=1;

END IF;
    CLOSE l_cur;


exception
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      ROLLBACK WORK;
end ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_6;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01200_6 (
   p_year               varchar2,
   p_month               varchar2,
   p_tco_org_pk         varchar2,
   p_flag               varchar2,
   p_crt_by                varchar2,
   p_result   out     number
)
is
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    
begin
          
    IF UPPER(p_flag) ='OPEN'THEN
                                                     
          UPDATE thr_annual_leave A
          SET A.CLOSE_YN='N'
             ,A.CLOSE_DT=SYSDATE
             ,A.MOD_BY=p_crt_by
             ,A.MOD_DT=SYSDATE
          WHERE nvl(A.DEL_IF,1)=0  and nvl(A.AN_YEAR,0)=p_year and A.STATUS='A' and nvl(A.CLOSE_YN,'N')='Y';
                      
    ELSE  --CLOSE
    
        UPDATE thr_annual_leave A
        SET A.CLOSE_YN='Y'
             ,A.CLOSE_DT=SYSDATE
             ,A.MOD_BY=p_crt_by
             ,A.MOD_DT=SYSDATE
        WHERE nvl(A.DEL_IF,1)=0  and nvl(A.AN_YEAR,0)=p_year and A.STATUS='A' and nvl(A.CLOSE_YN,'N')='N';
    
    END IF; 
    
              
    p_result:=1;


exception
   when others   then
      p_result:=-1;
      raise_application_error (-20002,sqlerrm);
      ROLLBACK WORK;
end ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_1(
    p_work_mon      IN  VARCHAR2,
    p_from        IN    VARCHAR2,    -- YYYYMMDD
    p_to        IN    VARCHAR2,     -- YYYYMMDD
    p_location_pk       IN VARCHAR2,
    p_SAL_PERIOD       IN VARCHAR2,
    p_crt_by                VARCHAR2,
    p_result        OUT NUMBER      -- RETURN VALUE ( NUMBER )
) IS

l_error         varchar2(2):='';
l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;
l_exp_wt     exception;
l_exp_ot     exception;
l_probation_num number(1):=0;
flag_cal_resign VARCHAR2(1):='N';

l_pro varchar2(200):='';
l_string varchar2(2000):='';
l_company_pk number:=0;
l_wt_approve_yn     varchar2(1):='N';
l_ot_approve_yn     varchar2(1):='N';
l_resign_num        number;


BEGIN
    l_error := '10';
 select o.tco_company_pk into l_company_pk
                                            from tco_org o where o.del_if=0 
                                            and  o.pk= p_location_pk;
   open l_cur for
    SELECT 1 FROM THR_CLOSE A
    WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon
    AND A.ID=p_SAL_PERIOD
    and A.TCO_COMPANY_PK=l_company_pk 
    AND NVL(A.CLOSE_YN,'N')='N';

     FETCH l_cur INTO l_cur_rec;
      l_flag_exist := l_cur%FOUND;
    CLOSE l_cur;
    IF l_flag_exist=FALSE THEN
        p_result:=-1;
        raise l_check;
    END IF;
    
    --find procedure
    OPEN l_cur FOR
    SELECT A.char_3 FROM VHR_HR_CODE A
    WHERE A.ID='HR0044' AND UPPER(A.CHAR_1)=UPPER('ST_HR_PRO_HRTI01300_1') and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;

    FETCH l_cur INTO l_pro;
    l_flag_exist:=l_cur%FOUND;
    CLOSE l_cur;

IF l_flag_exist=TRUE THEN --CO SU DUNG PROCEDURE RIENG
    l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6,:7); end;' ;
    execute  immediate l_string using in p_work_mon,in p_from,in p_to,in p_location_pk,in p_SAL_PERIOD,in p_crt_by,out p_result ;

ELSE


    select nvl(max(nvl(char_2,'N')),'N'), nvl(max(nvl(char_1,'N')),'N')--kiem tra co su dung approve OT hay khong   
    into l_wt_approve_yn, l_ot_approve_yn      
    from
    (
        select char_2, char_1
        from vhr_hr_code v
        where V.ID = 'HR0006'
        and v.code='20'
        and nvl(V.TCO_COMPANY_PK,l_company_pk) = l_company_pk
    ) ;
    
    if l_wt_approve_yn = 'Y' then
    
        OPEN l_cur FOR
        SELECT 1
        from thr_time_machine m
        where M.DEL_IF = 0
        and M.TIME_IN is not null
        and M.TIME_OUT is not null
        and M.WORK_DT between p_from and p_to 
        and nvl(M.APPROVE_STATUS,'1') in ('1','2','4')--KHONG PHAI LA TRANG THAI APPROVE 
        and rownum = 1;
            
        l_flag_exist := l_cur%FOUND;
        CLOSE l_cur;
        IF l_flag_exist=true THEN
            p_result:=-1;
            raise l_exp_wt;
        END IF;
    
    end if ;
    
    if l_ot_approve_yn = 'Y' then
    
        OPEN l_cur FOR
        SELECT 1
        from thr_extra_time t
        where t.DEL_IF = 0        
        and t.WORK_DT between p_from and p_to 
        and nvl(t.APPROVE_STATUS,'1') in ('1','2','4') --KHONG PHAI LA TRANG THAI APPROVE
        and rownum = 1;      
    
        l_flag_exist := l_cur%FOUND;
        CLOSE l_cur;
        IF l_flag_exist=true THEN
            p_result:=-1;
            raise l_exp_ot;
        END IF;
    
    end if ;

    SELECT A.NUM_3 
    INTO l_probation_num 
    FROM VHR_HR_CODE A
    WHERE A.ID='HR0002' 
    AND A.CODE='01' 
    and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    SELECT decode(nvl(A.NUM_4,0),0,-1,0)
    INTO l_resign_num 
    FROM VHR_HR_CODE A
    WHERE A.ID='HR0006' 
    AND A.CODE='11' 
    and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    

 --xac dinh xem tinh luong thoi viec chung hay rieng 
    open l_cur for
            SELECT 1 FROM THR_CLOSE A
            WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon  and A.id=p_SAL_PERIOD
            and a.TCO_COMPANY_PK=l_company_pk ;

             FETCH l_cur INTO l_cur_rec;
              l_flag_exist := l_cur%FOUND;
            CLOSE l_cur;
            
            IF l_flag_exist=TRUE THEN

              SELECT (CASE WHEN NVL(V.NUM_3,1)=1 THEN 'N' ELSE 'Y' END) INTO flag_cal_resign --Y: tinh luong thoi viec rieng
             FROM THR_CLOSE A,VHR_HR_CODE V
            WHERE A.DEL_IF=0 AND V.ID='HR0030' AND A.ID=V.CODE 
            AND A.MONTH_CLOSE=p_work_mon  and A.id=p_SAL_PERIOD
            AND a.TCO_COMPANY_PK=NVL(V.TCO_COMPANY_PK,a.TCO_COMPANY_PK)
            and a.TCO_COMPANY_PK=l_company_pk;
           
             END IF;
    
   update THR_WORK_TIME_MONTH s  
   set s.status='A',
       s.times=null,
       S.SAL_PERIOD=p_SAL_PERIOD
    where s.DEL_IF=0 and s.work_mon=p_work_mon
    and s.times is not null 
    and nvl(s.close_M_yn,'N')='N'         
    and S.TCO_ORG_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
     and   thr_emp_pk             
     in ( select e.pk from thr_employee e where e.del_if=0                                          
            AND NVL(e.LEFT_DT,'30000101') > p_to             
             and s.thr_emp_pk=e.pk and  e.SAL_PERIOD=p_SAL_PERIOD);
       

    DELETE THR_WORK_TIME_MONTH W
    WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
    AND W.TCO_ORG_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
    and W.SAL_PERIOD=p_SAL_PERIOD
    AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N' AND W.TIMES IS NULL;
    
    INSERT INTO THR_WORK_TIME_MONTH(PK, THR_EMP_PK, WORK_MON, EMP_ID, FULL_NAME, TCO_ORG_PK, THR_WG_PK, FROM_DT, TO_DT, JOB_TYPE, POS_TYPE, STATUS
    , LEFT_DT, JOIN_DT, DEL_IF, CRT_BY, CRT_DT, REMARK, CONFIRM_DT, PROBATION_STATUS, SAL_PERIOD
    , D1_L1, D1_L2, D2_L1, D2_L2, D3_L1, D3_L2, D4_L1, D4_L2, D5_L1, D5_L2, D6_L1, D6_L2, D7_L1, D7_L2, D8_L1, D8_L2, D9_L1, D9_L2, D10_L1, D10_L2
    , D11_L1, D11_L2, D12_L1, D12_L2, D13_L1, D13_L2, D14_L1, D14_L2, D15_L1, D15_L2, D16_L1, D16_L2, D17_L1, D17_L2, D18_L1, D18_L2, D19_L1, D19_L2, D20_L1, D20_L2
    , D21_L1, D21_L2, D22_L1, D22_L2, D23_L1, D23_L2, D24_L1, D24_L2, D25_L1, D25_L2, D26_L1, D26_L2, D27_L1, D27_L2, D28_L1, D28_L2, D29_L1, D29_L2, D30_L1, D30_L2
    , D31_L1, D31_L2, TOTAL_WD_L1, TOTAL_RATE_WD_L1, TOTAL_WD_L2, TOTAL_RATE_WD_L2, TOTAL_WD, TOTAL_RATE_WD
    , H1_L1, H1_L2, H2_L1, H2_L2, H3_L1, H3_L2, H4_L1, H4_L2, H5_L1, H5_L2, H6_L1, H6_L2, H7_L1, H7_L2, H8_L1, H8_L2, H9_L1, H9_L2, H10_L1, H10_L2
    , H11_L1, H11_L2, H12_L1, H12_L2, H13_L1, H13_L2, H14_L1, H14_L2, H15_L1, H15_L2, H16_L1, H16_L2, H17_L1, H17_L2, H18_L1, H18_L2, H19_L1, H19_L2, H20_L1, H20_L2
    , H21_L1, H21_L2, H22_L1, H22_L2, H23_L1, H23_L2, H24_L1, H24_L2, H25_L1, H25_L2, H26_L1, H26_L2, H27_L1, H27_L2, H28_L1, H28_L2, H29_L1, H29_L2, H30_L1, H30_L2
    , H31_L1, H31_L2
    , TOTAL_HOL_L1, TOTAL_HOL_L2, TOTAL_HOL
    )
    SELECT THR_WORK_TIME_MONTH_SEQ.NEXTVAL, E.PK, p_work_mon, E.EMP_ID, E.FULL_NAME, E.TCO_ORG_PK, E.THR_WG_PK , p_from, p_to, E.JOB_TYPE, E.POS_TYPE, E.STATUS
    , E.LEFT_DT, E.JOIN_DT, 0, p_crt_by, SYSDATE, 'PROCESS WT', NVL(M.CONFIRM_DT,E.CONFIRM_DT)
    ,(CASE WHEN TO_CHAR(TO_DATE(E.END_PROBATION,'YYYYMMDD'),'YYYYMMDD')-l_probation_num >p_to THEN '01' --probation
            WHEN TO_CHAR(TO_DATE(E.END_PROBATION,'YYYYMMDD'),'YYYYMMDD')-l_probation_num <=p_from THEN '03' --offical
            ELSE '02' END) AS PROBATION_STATUS, p_sal_period
    , Z.D1_L1, Z.D1_L2, Z.D2_L1, Z.D2_L2, Z.D3_L1, Z.D3_L2, Z.D4_L1, Z.D4_L2, Z.D5_L1, Z.D5_L2, Z.D6_L1, Z.D6_L2, Z.D7_L1, Z.D7_L2, Z.D8_L1, Z.D8_L2, Z.D9_L1, Z.D9_L2, Z.D10_L1, Z.D10_L2
    , Z.D11_L1, Z.D11_L2, Z.D12_L1, Z.D12_L2, Z.D13_L1, Z.D13_L2, Z.D14_L1, Z.D14_L2, Z.D15_L1, Z.D15_L2, Z.D16_L1, Z.D16_L2, Z.D17_L1, Z.D17_L2, Z.D18_L1, Z.D18_L2, Z.D19_L1, Z.D19_L2, Z.D20_L1, Z.D20_L2
    , Z.D21_L1, Z.D21_L2, Z.D22_L1, Z.D22_L2, Z.D23_L1, Z.D23_L2, Z.D24_L1, Z.D24_L2, Z.D25_L1, Z.D25_L2, Z.D26_L1, Z.D26_L2, Z.D27_L1, Z.D27_L2, Z.D28_L1, Z.D28_L2, Z.D29_L1, Z.D29_L2, Z.D30_L1, Z.D30_L2
    , Z.D31_L1, Z.D31_L2, Z.TOTAL_WD_L1, Z.TOTAL_RATE_WD_L1, Z.TOTAL_WD_L2, Z.TOTAL_RATE_WD_L2
    , NVL(Z.TOTAL_WD_L1, 0) + NVL(Z.TOTAL_WD_L2, 0) AS TOTAL_WD
    , NVL(Z.TOTAL_RATE_WD_L1, 0) + NVL(Z.TOTAL_RATE_WD_L2, 0) AS TOTAL_RATE_WD 
    , HOL.H1_L1, HOL.H1_L2, HOL.H2_L1, HOL.H2_L2, HOL.H3_L1, HOL.H3_L2, HOL.H4_L1, HOL.H4_L2, HOL.H5_L1, HOL.H5_L2, HOL.H6_L1, HOL.H6_L2, HOL.H7_L1, HOL.H7_L2, HOL.H8_L1, HOL.H8_L2, HOL.H9_L1, HOL.H9_L2, HOL.H10_L1, HOL.H10_L2
    , HOL.H11_L1, HOL.H11_L2, HOL.H12_L1, HOL.H12_L2, HOL.H13_L1, HOL.H13_L2, HOL.H14_L1, HOL.H14_L2, HOL.H15_L1, HOL.H15_L2, HOL.H16_L1, HOL.H16_L2, HOL.H17_L1, HOL.H17_L2, HOL.H18_L1, HOL.H18_L2, HOL.H19_L1, HOL.H19_L2, HOL.H20_L1, HOL.H20_L2
    , HOL.H21_L1, HOL.H21_L2, HOL.H22_L1, HOL.H22_L2, HOL.H23_L1, HOL.H23_L2, HOL.H24_L1, HOL.H24_L2, HOL.H25_L1, HOL.H25_L2, HOL.H26_L1, HOL.H26_L2, HOL.H27_L1, HOL.H27_L2, HOL.H28_L1, HOL.H28_L2, HOL.H29_L1, HOL.H29_L2, HOL.H30_L1, HOL.H30_L2
    , HOL.H31_L1, HOL.H31_L2
    , HOL.TOTAL_HOL_L1, HOL.TOTAL_HOL_L2, HOL.TOTAL_HOL
      FROM  (SELECT   W.THR_EMP_PK
               , SUM(W.D1_L1) AS D1_L1
               , SUM(W.D1_L2) AS D1_L2
               , SUM(W.D2_L1) AS D2_L1
               , SUM(W.D2_L2) AS D2_L2
               , SUM(W.D3_L1) AS D3_L1
               , SUM(W.D3_L2) AS D3_L2
               , SUM(W.D4_L1) AS D4_L1
               , SUM(W.D4_L2) AS D4_L2
               , SUM(W.D5_L1) AS D5_L1
               , SUM(W.D5_L2) AS D5_L2
               , SUM(W.D6_L1) AS D6_L1
               , SUM(W.D6_L2) AS D6_L2
               , SUM(W.D7_L1) AS D7_L1
               , SUM(W.D7_L2) AS D7_L2
               , SUM(W.D8_L1) AS D8_L1
               , SUM(W.D8_L2) AS D8_L2
               , SUM(W.D9_L1) AS D9_L1
               , SUM(W.D9_L2) AS D9_L2
               , SUM(W.D10_L1) AS D10_L1
               , SUM(W.D10_L2) AS D10_L2
               , SUM(W.D11_L1) AS D11_L1
               , SUM(W.D11_L2) AS D11_L2
               , SUM(W.D12_L1) AS D12_L1
               , SUM(W.D12_L2) AS D12_L2
               , SUM(W.D13_L1) AS D13_L1
               , SUM(W.D13_L2) AS D13_L2
               , SUM(W.D14_L1) AS D14_L1
               , SUM(W.D14_L2) AS D14_L2
               , SUM(W.D15_L1) AS D15_L1
               , SUM(W.D15_L2) AS D15_L2
               , SUM(W.D16_L1) AS D16_L1
               , SUM(W.D16_L2) AS D16_L2
               , SUM(W.D17_L1) AS D17_L1
               , SUM(W.D17_L2) AS D17_L2
               , SUM(W.D18_L1) AS D18_L1
               , SUM(W.D18_L2) AS D18_L2
               , SUM(W.D19_L1) AS D19_L1
               , SUM(W.D19_L2) AS D19_L2
               , SUM(W.D20_L1) AS D20_L1
               , SUM(W.D20_L2) AS D20_L2
               , SUM(W.D21_L1) AS D21_L1
               , SUM(W.D21_L2) AS D21_L2
               , SUM(W.D22_L1) AS D22_L1
               , SUM(W.D22_L2) AS D22_L2
               , SUM(W.D23_L1) AS D23_L1
               , SUM(W.D23_L2) AS D23_L2
               , SUM(W.D24_L1) AS D24_L1
               , SUM(W.D24_L2) AS D24_L2
               , SUM(W.D25_L1) AS D25_L1
               , SUM(W.D25_L2) AS D25_L2
               , SUM(W.D26_L1) AS D26_L1
               , SUM(W.D26_L2) AS D26_L2
               , SUM(W.D27_L1) AS D27_L1
               , SUM(W.D27_L2) AS D27_L2
               , SUM(W.D28_L1) AS D28_L1
               , SUM(W.D28_L2) AS D28_L2
               , SUM(W.D29_L1) AS D29_L1
               , SUM(W.D29_L2) AS D29_L2
               , SUM(W.D30_L1) AS D30_L1
               , SUM(W.D30_L2) AS D30_L2
               , SUM(W.D31_L1) AS D31_L1
               , SUM(W.D31_L2) AS D31_L2
               , SUM(W.TOTAL_WD_L1) AS TOTAL_WD_L1
               , SUM(W.TOTAL_RATE_WD_L1) AS TOTAL_RATE_WD_L1
               , SUM(W.TOTAL_WD_L2) AS TOTAL_WD_L2
               , SUM(W.TOTAL_RATE_WD_L2) AS TOTAL_RATE_WD_L2
        FROM (SELECT T.THR_EMP_PK
               ,SUM(DECODE(T.WORK_DT,p_from,NVL(T.WORK_TIME,0),0)) AS D1_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D2_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D3_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D4_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D5_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D6_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D7_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D8_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D9_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D10_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D11_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D12_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D13_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D14_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D15_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D16_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D17_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D18_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D19_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D20_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D21_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D22_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D23_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D24_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D25_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D26_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D27_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D28_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D29_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D30_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D31_L1
               , 0 AS D1_L2, 0 AS D2_L2, 0 AS D3_L2, 0 AS D4_L2, 0 AS D5_L2, 0 AS D6_L2, 0 AS D7_L2, 0 AS D8_L2, 0 AS D9_L2, 0 AS D10_L2
               , 0 AS D11_L2, 0 AS D12_L2, 0 AS D13_L2, 0 AS D14_L2, 0 AS D15_L2, 0 AS D16_L2, 0 AS D17_L2, 0 AS D18_L2, 0 AS D19_L2, 0 AS D20_L2
               , 0 AS D21_L2, 0 AS D22_L2, 0 AS D23_L2, 0 AS D24_L2, 0 AS D25_L2, 0 AS D26_L2, 0 AS D27_L2, 0 AS D28_L2, 0 AS D29_L2, 0 AS D30_L2, 0 AS D31_L2
               , SUM(NVL(T.WORK_TIME, 0)) AS TOTAL_WD_L1
               , SUM(NVL(T.WORK_TIME, 0)* NVL(T.PAY_RATE, 100)/100) AS TOTAL_RATE_WD_L1
               , 0 AS TOTAL_WD_L2, 0 AS TOTAL_RATE_WD_L2
        FROM THR_TIME_MACHINE T,THR_EMPLOYEE D, THR_SALARY_MANAGE S
        WHERE T.DEL_IF = 0 AND D.DEL_IF=0 AND S.DEL_IF(+) =0
          AND D.PK = S.THR_EMP_PK(+)
          AND S.WORK_MON(+) = p_work_mon
          AND T.THR_EMP_PK=D.PK
          AND T.WORK_DT BETWEEN p_from AND p_to
          AND NVL(S.CONFIRM_DT(+), p_from)>p_from
          AND T.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(S.CONFIRM_DT,NVL(D.CONFIRM_DT, p_from)),'YYYYMMDD')-1,'YYYYMMDD')
          AND T.WORK_DT BETWEEN d.join_dt AND  to_char(to_date(nvl(d.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd') 
          AND T.WORK_DT BETWEEN  D.JOIN_DT AND NVL(S.CONFIRM_DT,p_to)
          AND D.JOIN_DT<=p_to
          AND NVL(D.LEFT_DT,p_to)>=p_from
          and d.sal_period=p_SAL_PERIOD
          AND (D.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                         WHERE g.del_if = 0 
                                          START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                            CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_location_pk ='ALL')
        GROUP BY  T.THR_EMP_PK
      UNION ALL
        SELECT T.THR_EMP_PK
               , 0 AS D1_L1, 0 AS D2_L1, 0 AS D3_L1, 0 AS D4_L1, 0 AS D5_L1, 0 AS D6_L1, 0 AS D7_L1, 0 AS D8_L1, 0 AS D9_L1, 0 AS D10_L1
               , 0 AS D11_L1, 0 AS D12_L1, 0 AS D13_L1, 0 AS D14_L1, 0 AS D15_L1, 0 AS D16_L1, 0 AS D17_L1, 0 AS D18_L1, 0 AS D19_L1, 0 AS D20_L1
               , 0 AS D21_L1, 0 AS D22_L1, 0 AS D23_L1, 0 AS D24_L1, 0 AS D25_L1, 0 AS D26_L1, 0 AS D27_L1, 0 AS D28_L1, 0 AS D29_L1, 0 AS D30_L1, 0 AS D31_L1
               ,SUM(DECODE(T.WORK_DT,p_from,NVL(T.WORK_TIME,0),0)) AS D1_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D2_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D3_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D4_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D5_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D6_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D7_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D8_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D9_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D10_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D11_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D12_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D13_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D14_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D15_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D16_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D17_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D18_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D19_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D20_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D21_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D22_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D23_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D24_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D25_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D26_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D27_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D28_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D29_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D30_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D31_L2
               , 0 AS TOTAL_WD_L1, 0 AS TOTAL_RATE_WD_L1
               , SUM(NVL(T.WORK_TIME, 0)) AS TOTAL_WD_L2
               , SUM(NVL(T.WORK_TIME, 0)* NVL(T.PAY_RATE, 100)/100) AS TOTAL_RATE_WD_L2
        FROM THR_TIME_MACHINE T,THR_EMPLOYEE D, THR_SALARY_MANAGE S
        WHERE T.DEL_IF = 0 AND D.DEL_IF=0 AND S.DEL_IF(+) =0
          AND D.PK = S.THR_EMP_PK(+)
          AND S.WORK_MON(+) = p_work_mon
          AND T.THR_EMP_PK=D.PK
          AND T.WORK_DT BETWEEN p_from AND p_to
          AND T.WORK_DT BETWEEN D.join_dt AND TO_CHAR(TO_DATE(NVL(D.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
          AND NVL(S.CONFIRM_DT(+), p_from)<=p_to
          AND T.WORK_DT BETWEEN NVL(S.CONFIRM_DT,NVL(D.CONFIRM_DT, p_from)) AND p_to
          AND D.JOIN_DT<=p_to
          AND NVL(D.LEFT_DT,p_to)>=p_from
          and d.sal_period=p_SAL_PERIOD
          AND (D.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                     WHERE g.del_if = 0 
                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                        OR p_location_pk ='ALL')
        GROUP BY  T.THR_EMP_PK) W
    GROUP BY W.THR_EMP_PK) Z   -- WORIKING DAY.
   ,(SELECT   H.THR_EMP_PK
               , SUM(H.H1_L1) AS H1_L1
               , SUM(H.H1_L2) AS H1_L2
               , SUM(H.H2_L1) AS H2_L1
               , SUM(H.H2_L2) AS H2_L2
               , SUM(H.H3_L1) AS H3_L1
               , SUM(H.H3_L2) AS H3_L2
               , SUM(H.H4_L1) AS H4_L1
               , SUM(H.H4_L2) AS H4_L2
               , SUM(H.H5_L1) AS H5_L1
               , SUM(H.H5_L2) AS H5_L2
               , SUM(H.H6_L1) AS H6_L1
               , SUM(H.H6_L2) AS H6_L2
               , SUM(H.H7_L1) AS H7_L1
               , SUM(H.H7_L2) AS H7_L2
               , SUM(H.H8_L1) AS H8_L1
               , SUM(H.H8_L2) AS H8_L2
               , SUM(H.H9_L1) AS H9_L1
               , SUM(H.H9_L2) AS H9_L2
               , SUM(H.H10_L1) AS H10_L1
               , SUM(H.H10_L2) AS H10_L2
               , SUM(H.H11_L1) AS H11_L1
               , SUM(H.H11_L2) AS H11_L2
               , SUM(H.H12_L1) AS H12_L1
               , SUM(H.H12_L2) AS H12_L2
               , SUM(H.H13_L1) AS H13_L1
               , SUM(H.H13_L2) AS H13_L2
               , SUM(H.H14_L1) AS H14_L1
               , SUM(H.H14_L2) AS H14_L2
               , SUM(H.H15_L1) AS H15_L1
               , SUM(H.H15_L2) AS H15_L2
               , SUM(H.H16_L1) AS H16_L1
               , SUM(H.H16_L2) AS H16_L2
               , SUM(H.H17_L1) AS H17_L1
               , SUM(H.H17_L2) AS H17_L2
               , SUM(H.H18_L1) AS H18_L1
               , SUM(H.H18_L2) AS H18_L2
               , SUM(H.H19_L1) AS H19_L1
               , SUM(H.H19_L2) AS H19_L2
               , SUM(H.H20_L1) AS H20_L1
               , SUM(H.H20_L2) AS H20_L2
               , SUM(H.H21_L1) AS H21_L1
               , SUM(H.H21_L2) AS H21_L2
               , SUM(H.H22_L1) AS H22_L1
               , SUM(H.H22_L2) AS H22_L2
               , SUM(H.H23_L1) AS H23_L1
               , SUM(H.H23_L2) AS H23_L2
               , SUM(H.H24_L1) AS H24_L1
               , SUM(H.H24_L2) AS H24_L2
               , SUM(H.H25_L1) AS H25_L1
               , SUM(H.H25_L2) AS H25_L2
               , SUM(H.H26_L1) AS H26_L1
               , SUM(H.H26_L2) AS H26_L2
               , SUM(H.H27_L1) AS H27_L1
               , SUM(H.H27_L2) AS H27_L2
               , SUM(H.H28_L1) AS H28_L1
               , SUM(H.H28_L2) AS H28_L2
               , SUM(H.H29_L1) AS H29_L1
               , SUM(H.H29_L2) AS H29_L2
               , SUM(H.H30_L1) AS H30_L1
               , SUM(H.H30_L2) AS H30_L2
               , SUM(H.H31_L1) AS H31_L1
               , SUM(H.H31_L2) AS H31_L2
               , SUM(H.TOTAL_HOL_L1) AS TOTAL_HOL_L1
               , SUM(H.TOTAL_HOL_L2) AS TOTAL_HOL_L2
               , SUM(NVL(H.TOTAL_HOL_L1,0) + NVL(H.TOTAL_HOL_L2,0)) AS TOTAL_HOL
        FROM (SELECT T.THR_EMP_PK
               ,SUM(DECODE(C.ABSENCE_DT,p_from,'',DECODE(T.WORK_DT,p_from,8,0)))  AS H1_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD'),8,0)))  AS H2_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD'),8,0)))  AS H3_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD'),8,0)))  AS H4_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD'),8,0)))  AS H5_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD'),8,0)))  AS H6_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD'),8,0)))  AS H7_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD'),8,0)))  AS H8_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD'),8,0)))  AS H9_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD'),8,0)))  AS H10_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD'),8,0)))  AS H11_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD'),8,0)))  AS H12_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD'),8,0)))  AS H13_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD'),8,0)))  AS H14_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD'),8,0)))  AS H15_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD'),8,0)))  AS H16_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD'),8,0)))  AS H17_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD'),8,0)))  AS H18_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD'),8,0)))  AS H19_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD'),8,0)))  AS H20_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD'),8,0)))  AS H21_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD'),8,0)))  AS H22_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD'),8,0)))  AS H23_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD'),8,0)))  AS H24_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD'),8,0)))  AS H25_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD'),8,0)))  AS H26_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD'),8,0)))  AS H27_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD'),8,0)))  AS H28_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD'),8,0)))  AS H29_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD'),8,0)))  AS H30_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD'),8,0)))  AS H31_L1
               , 0 AS H1_L2, 0 AS H2_L2, 0 AS H3_L2, 0 AS H4_L2, 0 AS H5_L2, 0 AS H6_L2, 0 AS H7_L2, 0 AS H8_L2, 0 AS H9_L2, 0 AS H10_L2
               , 0 AS H11_L2, 0 AS H12_L2, 0 AS H13_L2, 0 AS H14_L2, 0 AS H15_L2, 0 AS H16_L2, 0 AS H17_L2, 0 AS H18_L2, 0 AS H19_L2, 0 AS H20_L2
               , 0 AS H21_L2, 0 AS H22_L2, 0 AS H23_L2, 0 AS H24_L2, 0 AS H25_L2, 0 AS H26_L2, 0 AS H27_L2, 0 AS H28_L2, 0 AS H29_L2, 0 AS H30_L2, 0 AS H31_L2
               , SUM(CASE WHEN C.ABSENCE_DT IS NULL THEN 8 ELSE 0 END) AS TOTAL_HOL_L1
               , 0 AS TOTAL_HOL_L2
        FROM THR_WG_SCH_DETAIL T,THR_EMPLOYEE D, THR_SALARY_MANAGE S,THR_ABSENCE C
        WHERE T.DEL_IF = 0 AND D.DEL_IF=0 AND S.DEL_IF(+) =0 AND C.DEL_IF(+)=0
          AND D.PK = S.THR_EMP_PK(+)
          AND S.WORK_MON(+) = p_work_mon
          AND T.THR_EMP_PK=D.PK
          AND T.THR_EMP_PK=C.THR_EMP_PK(+)
          AND T.WORK_DT=C.ABSENCE_DT(+)
          AND C.THR_ABSENCE_REG_PK(+) IS NOT NULL 
          AND T.WORK_DT BETWEEN p_from AND p_to
          AND NVL(S.CONFIRM_DT(+), p_from)>p_from
          AND T.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(S.CONFIRM_DT,NVL(D.CONFIRM_DT, p_from)),'YYYYMMDD')-1,'YYYYMMDD')
          AND T.WORK_DT BETWEEN d.join_dt AND  to_char(to_date(nvl(d.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd') 
          AND T.WORK_DT BETWEEN  D.JOIN_DT AND NVL(S.CONFIRM_DT,p_to)
          AND D.JOIN_DT<=p_to
          AND NVL(D.LEFT_DT,p_to)>=p_from
          and d.sal_period=p_SAL_PERIOD
          AND T.HOL_TYPE IS NOT NULL
          AND T.HOL_TYPE = 'HOL'
          AND (D.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                         WHERE g.del_if = 0 
                                          START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                            CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_location_pk ='ALL')
        GROUP BY  T.THR_EMP_PK
      UNION ALL
        SELECT T.THR_EMP_PK
               , 0 AS H1_L1, 0 AS H2_L1, 0 AS H3_L1, 0 AS H4_L1, 0 AS H5_L1, 0 AS H6_L1, 0 AS H7_L1, 0 AS H8_L1, 0 AS H9_L1, 0 AS H10_L1
               , 0 AS H11_L1, 0 AS H12_L1, 0 AS H13_L1, 0 AS H14_L1, 0 AS H15_L1, 0 AS H16_L1, 0 AS H17_L1, 0 AS H18_L1, 0 AS H19_L1, 0 AS H20_L1
               , 0 AS H21_L1, 0 AS H22_L1, 0 AS H23_L1, 0 AS H24_L1, 0 AS H25_L1, 0 AS H26_L1, 0 AS H27_L1, 0 AS H28_L1, 0 AS H29_L1, 0 AS H30_L1, 0 AS H31_L1
               ,SUM(DECODE(C.ABSENCE_DT,p_from,'',DECODE(T.WORK_DT,p_from,8,0)))  AS H1_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD'),8,0)))  AS H2_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD'),8,0)))  AS H3_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD'),8,0)))  AS H4_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD'),8,0)))  AS H5_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD'),8,0)))  AS H6_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD'),8,0)))  AS H7_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD'),8,0)))  AS H8_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD'),8,0)))  AS H9_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD'),8,0)))  AS H10_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD'),8,0)))  AS H11_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD'),8,0)))  AS H12_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD'),8,0)))  AS H13_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD'),8,0)))  AS H14_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD'),8,0)))  AS H15_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD'),8,0)))  AS H16_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD'),8,0)))  AS H17_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD'),8,0)))  AS H18_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD'),8,0)))  AS H19_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD'),8,0)))  AS H20_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD'),8,0)))  AS H21_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD'),8,0)))  AS H22_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD'),8,0)))  AS H23_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD'),8,0)))  AS H24_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD'),8,0)))  AS H25_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD'),8,0)))  AS H26_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD'),8,0)))  AS H27_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD'),8,0)))  AS H28_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD'),8,0)))  AS H29_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD'),8,0)))  AS H30_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD'),8,0)))  AS H31_L2
               , 0 AS TOTAL_HOL_L1
               , SUM(CASE WHEN C.ABSENCE_DT IS NULL THEN 8 ELSE 0 END) AS TOTAL_HOL_L2
        FROM THR_WG_SCH_DETAIL T,THR_EMPLOYEE D, THR_SALARY_MANAGE S,THR_ABSENCE C
        WHERE T.DEL_IF = 0 AND D.DEL_IF=0 AND S.DEL_IF(+) =0 AND C.DEL_IF(+)=0
          AND D.PK = S.THR_EMP_PK(+)
          AND S.WORK_MON(+) = p_work_mon
          AND T.THR_EMP_PK=D.PK
          AND T.THR_EMP_PK=C.THR_EMP_PK(+)
          AND T.WORK_DT=C.ABSENCE_DT(+)
          AND C.THR_ABSENCE_REG_PK(+) IS NOT NULL 
          AND T.WORK_DT BETWEEN p_from AND p_to
          AND T.WORK_DT BETWEEN D.join_dt AND TO_CHAR(TO_DATE(NVL(D.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
          AND NVL(S.CONFIRM_DT(+), p_from)<=p_to
          AND T.WORK_DT BETWEEN NVL(S.CONFIRM_DT,NVL(D.CONFIRM_DT, p_from)) AND p_to
          AND D.JOIN_DT<=p_to
          AND NVL(D.LEFT_DT,p_to)>=p_from
          and d.sal_period=p_SAL_PERIOD
          AND T.HOL_TYPE IS NOT NULL
          AND T.HOL_TYPE = 'HOL'
          AND (D.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                     WHERE g.del_if = 0 
                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                        OR p_location_pk ='ALL')
        GROUP BY  T.THR_EMP_PK) H
    GROUP BY H.THR_EMP_PK) HOL   -- HOLIDAY
   , THR_EMPLOYEE E, THR_SALARY_MANAGE M
   WHERE E.DEL_IF=0 AND M.DEL_IF(+)=0
   AND M.THR_EMP_PK(+) = E.PK
   AND M.WORK_MON(+) = p_work_mon
   AND E.PK = Z.THR_EMP_PK(+)
   AND E.PK = HOL.THR_EMP_PK(+)
   AND E.JOIN_DT <= p_to
   AND NVL(E.LEFT_DT,p_to) >= p_from
   and e.sal_period=p_SAL_PERIOD
   AND (flag_cal_resign='N' OR NVL(E.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1 ,'YYYYMMDD'))>p_to)
   AND (E.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                             WHERE g.del_if = 0
                              START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                CONNECT BY PRIOR g.pk = g.p_pk)
            OR p_location_pk ='ALL')
   AND E.PK NOT IN(SELECT X.THR_EMP_PK FROM THR_WORK_TIME_MONTH X WHERE X.DEL_IF=0 AND X.WORK_MON=p_work_mon and x.thr_emp_pk=e.pk);
 
     
       --keo tat ca nhung nguoi nghi viec tro ve active
     update  THR_WORK_TIME_MONTH s
            set s.times=null              
                ,S.SAL_PERIOD=p_SAL_PERIOD 
            where s.DEL_IF=0 and s.work_mon=p_work_mon
             and nvl(s.close_M_yn,'N')='N'             
             and S.TCO_ORG_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)          
             and S.THR_EMP_PK in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.SAL_PERIOD=p_SAL_PERIOD
                      );
       
       update  THR_SALARY_MANAGE s
            set s.times=null              
                ,S.SAL_PERIOD=p_SAL_PERIOD 
            where s.DEL_IF=0 and s.work_mon=p_work_mon
             and nvl(s.close_M_yn,'N')='N'             
             and S.TCO_ORG_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)          
             and S.THR_EMP_PK in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.SAL_PERIOD=p_SAL_PERIOD
                      );
          
          
            
           update thr_extra_month s
           set s.status='A',
               s.times=null   
               ,s.SAL_PERIOD=p_SAL_PERIOD            
            where s.DEL_IF=0 and s.work_mon=p_work_mon       
             and nvl(s.close_M_yn,'N')='N'              
             and S.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)        
             and   thr_emp_pk  in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.SAL_PERIOD=p_SAL_PERIOD
                      );           
           
           update thr_month_salary s
          set s.status='A',
               s.times=null  
                ,s.sal_period=p_SAL_PERIOD             
            where s.DEL_IF=0 and s.work_mon=p_work_mon
             and nvl(s.close_M_yn,'N')='N'             
             and S.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
             and   thr_emp_pk
             in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.SAL_PERIOD=p_SAL_PERIOD
                      );
              
           update thr_work_mon s
           set s.status='A',
               s.times=null  
                ,s.SAL_PERIOD=p_SAL_PERIOD             
            where s.DEL_IF=0 and s.work_mon=p_work_mon
            and S.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)          
             and nvl(s.close_M_yn,'N')='N'
             and   thr_emp_pk
             in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.SAL_PERIOD=p_SAL_PERIOD
                      );
            
                    
           update thr_month_allow s
           set s.times=null   
             ,s.SAL_PERIOD=p_SAL_PERIOD            
            where s.DEL_IF=0 and s.work_mon=p_work_mon
             and nvl(s.close_M_yn,'N')='N'                         
             and   thr_emp_pk
             in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.SAL_PERIOD=p_SAL_PERIOD
                      );
            
            update thr_month_summary s
              set s.status='A',
               s.times=null       
                ,s.SAL_PERIOD=p_SAL_PERIOD        
            where s.DEL_IF=0 and s.work_mon=p_work_mon
            and S.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)          
             and nvl(s.close_M_yn,'N')='N'
             and   thr_emp_pk
             in( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.SAL_PERIOD=p_SAL_PERIOD
                      );
      
                      
END IF;    
     
p_result:=0;
COMMIT;
    EXCEPTION
    WHEN l_check THEN
        p_result:=-1;
        Raise_application_error(-20019, sqlerrm);
    WHEN l_exp_wt THEN
        p_result:=-1;
        Raise_application_error(-20019, 'ERRCODE : exists WORKING_TIME is still SUBMIT or WAITING or CANCEL, Action denied! (Tồn tại giờ công chưa được APPROVE, Thao tác bị từ chối) '||SQLERRM);
    WHEN l_exp_ot THEN
        p_result:=-1;
        Raise_application_error(-20019, 'ERRCODE : exists OVER_TIME is still SUBMIT or WAITING or CANCEL, Action denied! (Tồn tại tăng ca chưa được APPROVE, Thao tác bị từ chối) '||SQLERRM);
    WHEN  OTHERS THEN
        p_result:=-1;
        RAISE_APPLICATION_ERROR(-20002, 'ERRCODE : '|| l_error||SQLERRM );
    ROLLBACK;
END  ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_2(
    p_work_mon      IN  VARCHAR2,
    p_from        IN    VARCHAR2,    -- YYYYMMDD
    p_to        IN    VARCHAR2,     -- YYYYMMDD
    p_location_pk       IN VARCHAR2,
    p_SAL_PERIOD       IN VARCHAR2,
    p_crt_by                VARCHAR2,
    p_result        OUT NUMBER      -- RETURN VALUE ( NUMBER )
) IS

l_error         varchar2(2):='';
l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;
l_probation_num number(1):=0;
flag_cal_resign VARCHAR2(1):='N';
l_pro varchar2(200):='';
l_string varchar2(2000):='';
l_company_pk number:=0;
l_resign_num        number;
F_LAG_NT2 VARCHAR(1):='N';--- CO XAI 2 LOAD NT ?
l_ot_kind       varchar(2):='';
--******************************************
  -- Create by    : huynh truong
--******************************************

BEGIN
    l_error := '10';
 select o.tco_company_pk into l_company_pk
                                            from tco_org o where o.del_if=0 
                                            and  o.pk= p_location_pk;
    open l_cur for
    SELECT 1 FROM THR_CLOSE A
    WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon
    AND A.ID=p_SAL_PERIOD
    and A.TCO_COMPANY_PK= l_company_pk
    AND NVL(A.CLOSE_YN,'N')='N';
    
     FETCH l_cur INTO l_cur_rec;
      l_flag_exist := l_cur%FOUND;
    CLOSE l_cur;
    IF l_flag_exist=FALSE THEN
        p_result:=-1;
        raise l_check;
    END IF;
--find procedure
    OPEN l_cur FOR
    SELECT A.char_3 FROM VHR_HR_CODE A
    WHERE A.ID='HR0044' AND UPPER(A.CHAR_1)=UPPER('ST_HR_PRO_HRTI01300_2')and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;

    FETCH l_cur INTO l_pro;
    l_flag_exist:=l_cur%FOUND;
    CLOSE l_cur;

IF l_flag_exist=TRUE THEN --CO SU DUNG PROCEDURE RIENG
    l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6,:7); end;' ;
    execute  immediate l_string using in p_work_mon,in p_from,in p_to,in p_location_pk,in p_SAL_PERIOD,in p_crt_by,out p_result ;

ELSE
    SELECT NVL(A.NUM_3,0) INTO l_probation_num FROM VHR_HR_CODE A
    WHERE A.ID='HR0002' AND A.CODE='01'and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    SELECT decode(nvl(A.NUM_4,0),0,-1,0)
    INTO l_resign_num 
    FROM VHR_HR_CODE A
    WHERE A.ID='HR0006' 
    AND A.CODE='11' 
    and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    OPEN l_cur FOR
        SELECT NVL(A.char_3,'N')  INTO F_LAG_NT2  --- CO XAI 2 LOAD NT ? 
        FROM VHR_HR_CODE A
        WHERE A.ID='HR0031' and  nvl(a.TCO_COMPANY_PK,l_company_pk)=l_company_pk ;

        FETCH l_cur INTO F_LAG_NT2;
        l_flag_exist:=l_cur%FOUND;
        CLOSE l_cur;

    SELECT A.CODE INTO l_ot_kind FROM VHR_HR_CODE A
        WHERE A.ID='HR0038' and  nvl(a.TCO_COMPANY_PK,l_company_pk)=l_company_pk 
         and rownum=1;

    DELETE THR_EXTRA_MONTH W
    WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
    AND W.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
    and W.SAL_PERIOD=p_SAL_PERIOD
    AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N' AND W.TIMES IS NULL;
    
    UPDATE THR_MONTH_OT_RATE
     SET DEL_IF = PK
        ,MOD_BY = p_crt_by
        ,MOD_DT = sysdate
     WHERE DEL_IF =0 
        AND WORK_MON = p_work_mon ;
        
    --insert thong tin rate de lay len report theo tung thang       19/08/2015
    INSERT INTO THR_MONTH_OT_RATE (PK, WORK_MON, WT_RATE, OT_RATE, NT_RATE, NOT_RATE, NOT_2_RATE, ST_RATE, OST_RATE, NOST_RATE
        , HT_RATE, OHT_RATE, NOHT_RATE,NST_RATE,NHT_RATE, CRT_BY, CRT_DT, DEL_IF) 
    SELECT THR_MONTH_OT_RATE_SEQ.NEXTVAL,p_work_mon, NVL(A.WT,100), NVL(A.OT,150), NVL(A.NT_RATE,30), NVL(A.NOT_RATE,50), NVL(A.NOT_2_RATE,60), NVL(A.ST,200), NVL(A.OST,200), NVL(A.NOST,70)
        , NVL(A.HT,300), NVL(A.OHT,300), NVL(A.NOHT,90), NVL(A.NST,70), NVL(A.NHT,90),p_crt_by,sysdate,0
    FROM (SELECT SUM(DECODE(C.CODE,'01',C.NUM_1,0)) AS WT
            ,SUM(DECODE(C.CODE,'02',C.NUM_1,0)) AS OT
            ,SUM(DECODE(C.CODE,'03',C.NUM_1,0)) AS NT_RATE
            ,SUM(DECODE(C.CODE,'04',C.NUM_1,0)) AS NOT_RATE
            ,SUM(DECODE(C.CODE,'13',C.NUM_1,0)) AS NOT_2_RATE
            ,SUM(DECODE(C.CODE,'10',C.NUM_1,0)) AS ST
            ,SUM(DECODE(C.CODE,'08',C.NUM_1,0)) AS OST
            ,SUM(DECODE(C.CODE,'11',C.NUM_1,0)) AS NOST
            ,SUM(DECODE(C.CODE,'07',C.NUM_1,0)) AS HT
            ,SUM(DECODE(C.CODE,'09',C.NUM_1,0)) AS OHT
            ,SUM(DECODE(C.CODE,'12',C.NUM_1,0)) AS NOHT
            ,SUM(DECODE(C.CODE,'05',C.NUM_1,0)) AS NST
            ,SUM(DECODE(C.CODE,'06',C.NUM_1,0)) AS NHT
     FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
     WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
     AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y') A;
        
    
    --xac dinh xem tinh luong thoi viec chung hay rieng 
    open l_cur for
            SELECT 1 FROM THR_CLOSE A
            WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon  and A.id=p_SAL_PERIOD
            and a.TCO_COMPANY_PK=l_company_pk ;

             FETCH l_cur INTO l_cur_rec;
              l_flag_exist := l_cur%FOUND;
            CLOSE l_cur;
            
            IF l_flag_exist=TRUE THEN

             SELECT (CASE WHEN NVL(V.NUM_3,1)=1 THEN 'N' ELSE 'Y' END) INTO flag_cal_resign --Y: tinh luong thoi viec rieng
             FROM THR_CLOSE A,VHR_HR_CODE V
            WHERE A.DEL_IF=0 AND V.ID='HR0030' AND A.ID=V.CODE 
            AND A.MONTH_CLOSE=p_work_mon  and A.id=p_SAL_PERIOD
            AND a.TCO_COMPANY_PK=NVL(V.TCO_COMPANY_PK,a.TCO_COMPANY_PK)
            and a.TCO_COMPANY_PK=l_company_pk;
           
             END IF;


    INSERT INTO THR_EXTRA_MONTH
    (PK, THR_EMP_PK, FULL_NAME, EMP_ID, THR_GROUP_PK, GROUP_NM, GROUP_FNM, GROUP_KNM
    , TCO_DEPT_PK, DEPT_NM, DEPT_FNM, DEPT_KNM, WORK_MON, FROM_DT, TO_DT, JOIN_DT
    , LEFT_DT, STATUS, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17
    , D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31
    , DEL_IF, CRT_BY, CRT_DT
    , LOCATION_DEPT_PK, TOTAL_OT, TOTAL_HT, TOTAL_NT, TOTAL_NT2, TOTAL_NT3
    , N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17, N18, N19, N20, N21
    , N22, N23, N24, N25, N26,N27, N28, N29, N30, N31
    , NT2_1, NT2_2, NT2_3, NT2_4, NT2_5, NT2_6, NT2_7, NT2_8, NT2_9, NT2_10
    , NT2_11, NT2_12, NT2_13, NT2_14, NT2_15, NT2_16, NT2_17, NT2_18, NT2_19, NT2_20
    , NT2_21, NT2_22, NT2_23, NT2_24, NT2_25, NT2_26, NT2_27, NT2_28, NT2_29, NT2_30, NT2_31
    , NT3_1, NT3_2, NT3_3, NT3_4, NT3_5, NT3_6, NT3_7, NT3_8, NT3_9, NT3_10
    , NT3_11, NT3_12, NT3_13, NT3_14, NT3_15, NT3_16, NT3_17, NT3_18, NT3_19, NT3_20
    , NT3_21, NT3_22, NT3_23, NT3_24, NT3_25, NT3_26, NT3_27, NT3_28, NT3_29, NT3_30, NT3_31
    ,PROBATION_STATUS, SAL_PERIOD
    , TOTAL_ST , TOTAL_NT45, TOTAL_NT30, TOTAL_NT60, TOTAL_NT90 )
    SELECT THR_EXTRA_MONTH_SEQ.NEXTVAL,OVT.EMP_PK, OVT.FULL_NAME, OVT.EMP_ID, OVT.GROUP_PK, OVT.WORKGROUP_NM, NULL
    , NULL, OVT.DEPT_PK,OVT.ORG_NM, OVT.ORG_FNM, OVT.ORG_LNM, p_work_mon, p_from, p_to, OVT.JOIN_DT, OVT.LEFT_DT
    , OVT.STATUS
    , OVT.D1, OVT.D2, OVT.D3, OVT.D4, OVT.D5, OVT.D6, OVT.D7, OVT.D8, OVT.D9, OVT.D10, OVT.D11, OVT.D12, OVT.D13
    , OVT.D14, OVT.D15, OVT.D16, OVT.D17, OVT.D18, OVT.D19, OVT.D20, OVT.D21, OVT.D22, OVT.D23, OVT.D24, OVT.D25
    , OVT.D26, OVT.D27, OVT.D28, OVT.D29, OVT.D30, OVT.D31
    , 0, p_crt_by, SYSDATE
    , OVT.LOCATION_DEPT_PK,OVT.TOTAL_OT, OVT.TOTAL_HT, OVT.TOTAL_NT, OVT.TOTAL_NT2, OVT.TOTAL_NT3
    , OVT.N1, OVT.N2, OVT.N3, OVT.N4, OVT.N5, OVT.N6, OVT.N7, OVT.N8
    , OVT.N9, OVT.N10, OVT.N11, OVT.N12, OVT.N13, OVT.N14, OVT.N15, OVT.N16, OVT.N17, OVT.N18, OVT.N19, OVT.N20, OVT.N21
    , OVT.N22, OVT.N23, OVT.N24, OVT.N25, OVT.N26, OVT.N27, OVT.N28, OVT.N29, OVT.N30, OVT.N31
    , OVT.N2_1, OVT.N2_2, OVT.N2_3, OVT.N2_4, OVT.N2_5, OVT.N2_6, OVT.N2_7, OVT.N2_8
    , OVT.N2_9, OVT.N2_10, OVT.N2_11, OVT.N2_12, OVT.N2_13, OVT.N2_14, OVT.N2_15, OVT.N2_16, OVT.N2_17, OVT.N2_18, OVT.N2_19, OVT.N2_20, OVT.N2_21
    , OVT.N2_22, OVT.N2_23, OVT.N2_24, OVT.N2_25, OVT.N2_26, OVT.N2_27, OVT.N2_28, OVT.N2_29, OVT.N2_30, OVT.N2_31
    , OVT.N3_1, OVT.N3_2, OVT.N3_3, OVT.N3_4, OVT.N3_5, OVT.N3_6, OVT.N3_7, OVT.N3_8
    , OVT.N3_9, OVT.N3_10, OVT.N3_11, OVT.N3_12, OVT.N3_13, OVT.N3_14, OVT.N3_15, OVT.N3_16, OVT.N3_17, OVT.N3_18, OVT.N3_19, OVT.N3_20, OVT.N3_21
    , OVT.N3_22, OVT.N3_23, OVT.N3_24, OVT.N3_25, OVT.N3_26, OVT.N3_27, OVT.N3_28, OVT.N3_29, OVT.N3_30, OVT.N3_31
    , OVT.PROBATION_STATUS
    ,p_sal_period
    ,OVT.TOTAL_ST, OVT.TOTAL_NT2, OVT.TOTAL_NT30, OVT.TOTAL_NT60, OVT.TOTAL_NT90
    
    FROM(
        SELECT A.PK AS EMP_PK,A.FULL_NAME,A.EMP_ID,B.PK AS GROUP_PK,B.WORKGROUP_NM,NULL,NULL
            ,C.PK AS DEPT_PK,C.ORG_NM,C.ORG_FNM,C.ORG_LNM
            ,A.JOIN_DT,A.LEFT_DT
            ,(CASE WHEN NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to THEN 'A'
                    ELSE 'R' END) AS STATUS
            ,(select LO.pk from TCO_ORG LO
                where LO.del_if=0 AND LO.P_PK IS NULL
                start with LO.pk =C.PK
                connect by prior  LO.p_pk=LO.pk) AS LOCATION_DEPT_PK
            ,OT.D1+OT.H1 AS D1, OT.D2+OT.H2 AS D2, OT.D3+OT.H3 AS D3
            ,OT.D4+OT.H4 AS D4, OT.D5+OT.H5 AS D5, OT.D6+OT.H6 AS D6
            ,OT.D7+OT.H7 AS D7, OT.D8+OT.H8 AS D8, OT.D9+OT.H9 AS D9
            ,OT.D10+OT.H10 AS D10, OT.D11+OT.H11 AS D11, OT.D12+OT.H12 AS D12
            ,OT.D13+OT.H13 AS D13, OT.D14+OT.H14 AS D14, OT.D15+OT.H15 AS D15
            ,OT.D16+OT.H16 AS D16, OT.D17+OT.H17 AS D17, OT.D18+OT.H18 AS D18
            ,OT.D19+OT.H19 AS D19, OT.D20+OT.H20 AS D20, OT.D21+OT.H21 AS D21
            ,OT.D22+OT.H22 AS D22, OT.D23+OT.H23 AS D23, OT.D24+OT.H24 AS D24
            ,OT.D25+OT.H25 AS D25, OT.D26+OT.H26 AS D26, OT.D27+OT.H27 AS D27
            ,OT.D28+OT.H28 AS D28, OT.D29+OT.H29 AS D29, OT.D30+OT.H30 AS D30
            , OT.D31+OT.H31 AS D31
            ,OT.N1,OT.N2,OT.N3,OT.N4,OT.N5,OT.N6,OT.N7,OT.N8,OT.N9,OT.N10
            ,OT.N11,OT.N12,OT.N13,OT.N14,OT.N15,OT.N16,OT.N17,OT.N18,OT.N19
            ,OT.N20,OT.N21,OT.N22,OT.N23,OT.N24,OT.N25,OT.N26,OT.N27,OT.N28
            ,OT.N29,OT.N30,OT.N31
            ,OT.N2_1,OT.N2_2,OT.N2_3,OT.N2_4,OT.N2_5,OT.N2_6,OT.N2_7,OT.N2_8,OT.N2_9,OT.N2_10
            ,OT.N2_11,OT.N2_12,OT.N2_13,OT.N2_14,OT.N2_15,OT.N2_16,OT.N2_17,OT.N2_18,OT.N2_19
            ,OT.N2_20,OT.N2_21,OT.N2_22,OT.N2_23,OT.N2_24,OT.N2_25,OT.N2_26,OT.N2_27,OT.N2_28
            ,OT.N2_29,OT.N2_30,OT.N2_31
            ,OT.N3_1,OT.N3_2,OT.N3_3,OT.N3_4,OT.N3_5,OT.N3_6,OT.N3_7,OT.N3_8,OT.N3_9,OT.N3_10
            ,OT.N3_11,OT.N3_12,OT.N3_13,OT.N3_14,OT.N3_15,OT.N3_16,OT.N3_17,OT.N3_18,OT.N3_19
            ,OT.N3_20,OT.N3_21,OT.N3_22,OT.N3_23,OT.N3_24,OT.N3_25,OT.N3_26,OT.N3_27,OT.N3_28
            ,OT.N3_29,OT.N3_30,OT.N3_31
            ,OT.TOTAL_OT  AS TOTAL_OT
            ,OT.TOTAL_HT as  TOTAL_HT           
            ,OT.TOTAL_NT  AS TOTAL_NT
            ,OT.TOTAL_NT2 AS TOTAL_NT2
            ,OT.TOTAL_NT3 AS TOTAL_NT3
            ,(CASE WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')-l_probation_num,'YYYYMMDD') >p_to THEN '01'
            WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')-l_probation_num,'YYYYMMDD')<=p_from THEN '03'
            ELSE '02' END) AS PROBATION_STATUS
            ,OT.TOTAL_ST,OT.TOTAL_NT30,OT.TOTAL_NT60,OT.TOTAL_NT90
    FROM(
        SELECT T.THR_EMP_PK AS EMP_PK,
           SUM(CASE WHEN T.WORK_DT=p_from AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D1
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D2
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D3
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D4
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D5
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D6
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D7
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D8
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D9
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D10
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D11
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D12
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D13
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D14
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D15
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D16
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D17
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D18
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D19
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D20
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D21
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D22
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D23
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D24
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D25
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D26
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D27
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D28
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D29
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D30
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D31
           
           ,SUM(CASE WHEN T.WORK_DT=p_from AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H1
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H2
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H3
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H4
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H5
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H6
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H7
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H8
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H9
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H10
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H11
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H12
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H13
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H14
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H15
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H16
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H17
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H18
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H19
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H20
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H21

           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H22
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H23
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H24
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H25
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H26
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H27
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H28
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H29
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H30
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H31
           
           ,SUM(CASE WHEN T.WORK_DT=p_from AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) N1
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N4
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N5
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N6
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N7
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N8
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N9
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N10
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N11
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N12
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N13
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N14
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N15
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N16
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N17
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N18
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N19
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N20
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N21
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N22
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N23
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N24
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N25
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N26
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N27
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N28
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N29
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N30
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N31
    ,SUM(CASE WHEN T.WORK_DT=p_from AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_1
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_2
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_3
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_4
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_5
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_6
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_7
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_8
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_9
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_10
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_11
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_12
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_13
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_14
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_15
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_16
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_17
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_18
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_19
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_20
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_21
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_22
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_23
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_24
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_25
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_26
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_27
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_28
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_29
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_30
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_31
    ,SUM(CASE WHEN T.WORK_DT=p_from AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_1
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_2
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_3
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_4
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_5
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_6
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_7
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_8
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_9
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_10
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_11
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_12
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_13
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_14
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_15
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_16
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_17
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_18
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_19
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_20
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_21
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_22
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_23
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_24
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_25
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_26
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_27
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_28
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_29
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_30
    ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_31
    ,SUM(CASE WHEN T.HOL_TYPE IS NULL AND T.OT_TYPE IN('OT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS TOTAL_OT
    ,SUM(CASE WHEN T.HOL_TYPE='SUN' AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS TOTAL_ST
    ,SUM(CASE WHEN T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) TOTAL_NT2
    ,SUM(CASE WHEN T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) TOTAL_NT
    ,SUM(CASE WHEN T.HOL_TYPE IS NULL AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) total_nt30
    ,SUM(CASE WHEN T.HOL_TYPE ='SUN' AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) total_nt60
    ,SUM(CASE WHEN T.HOL_TYPE ='HOL' AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) total_nt90
    ,SUM(CASE WHEN T.HOL_TYPE='HOL' AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS TOTAL_HT
    ,SUM(DECODE(T.OT_TYPE,'NT3',NVL(T.OT_TIME,0),0)) AS TOTAL_NT3
    FROM THR_EXTRA_TIME T,THR_EMPLOYEE A
    WHERE T.DEL_IF = 0 AND A.DEL_IF=0
      AND T.THR_EMP_PK=A.PK
      AND T.WORK_DT BETWEEN p_from AND p_to
      AND T.WORK_DT BETWEEN A.JOIN_DT AND NVL(to_char(to_date(A.LEFT_DT,'yyyymmdd') + l_resign_num,'yyyymmdd'),p_to)
      AND (A.LEFT_DT IS NULL OR A.LEFT_DT>p_from)      
      and a.SAL_PERIOD=p_SAL_PERIOD
      AND (A.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
    GROUP BY  T.THR_EMP_PK)OT
     , THR_EMPLOYEE A,THR_WORK_GROUP B,TCO_ORG C
    WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0
    AND A.THR_WG_PK=B.PK AND A.TCO_ORG_PK=C.PK
    AND A.PK=OT.EMP_PK(+)
     AND A.JOIN_DT <= p_to
     AND NVL(A.LEFT_DT,p_to) >= p_from
     and a.SAL_PERIOD=p_SAL_PERIOD
     AND (flag_cal_resign='N' OR NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to)
     AND (A.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
     AND A.PK NOT IN(SELECT X.THR_EMP_PK FROM THR_EXTRA_MONTH X WHERE X.DEL_IF=0 AND X.WORK_MON=p_work_mon)
     )OVT;

    -- CAP NHAT MOT SO TRUONG DU LIEU
    UPDATE THR_EXTRA_MONTH W
    SET (W.TOTAL_OT_L1, W.TOTAL_RATE_OT_L1) = (SELECT SUM(NVL(B.OT_TIME,0) + NVL(B.OT_PLUS,0)) AS TOTAL_OT_L1
                                                      ,SUM((NVL(B.OT_TIME,0) + NVL(B.OT_PLUS,0))*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OT_L1
                                                    FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                    WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                          AND A.PK=B.THR_EMP_PK
                                                          AND B.WORK_DT BETWEEN p_from AND p_to
                                                          AND B.WORK_DT BETWEEN A.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                          AND NVL(W.CONFIRM_DT,p_from)>p_from
                                                          AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                          AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                          AND A.JOIN_DT<=p_to
                                                          AND NVL(A.LEFT_DT,p_to)>=p_from
                                                          AND B.OT_TYPE='OT' AND B.HOL_TYPE IS NULL
                                                          AND A.PK=W.THR_EMP_PK
                                                          AND NVL(A.OT_YN,'Y')='Y'
                                                    GROUP BY A.PK)
       ,(W.TOTAL_OT_L2, W.TOTAL_RATE_OT_L2) = (SELECT SUM(NVL(B.OT_TIME,0) + NVL(B.OT_PLUS,0) ) AS TOTAL_OT_L2
                                                      ,SUM((NVL(B.OT_TIME,0) + NVL(B.OT_PLUS,0))*NVL(B.PAY_RATE,0)/100 ) AS TOTAL_RATE_OT_L2
                                                    FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                    WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                          AND A.PK=B.THR_EMP_PK
                                                          AND B.WORK_DT BETWEEN p_from AND p_to
                                                          AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                          AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                          AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                                          AND A.JOIN_DT<=p_to
                                                          AND NVL(A.LEFT_DT,p_to)>=p_from
                                                          AND B.OT_TYPE='OT' AND B.HOL_TYPE IS NULL
                                                          AND A.PK=W.THR_EMP_PK
                                                          AND NVL(A.OT_YN,'Y')='Y'
                                                    GROUP BY A.PK)
       ,(W.TOTAL_ST_L1, W.TOTAL_RATE_ST_L1) = (SELECT SUM(NVL(B.OT_TIME,0)+ NVL(B.OT_PLUS,0)) AS TOTAL_ST_L1
                                                      ,SUM((NVL(B.OT_TIME,0)+ NVL(B.OT_PLUS,0))*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_ST_L1
                                            FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                            WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                  AND B.THR_EMP_PK=A.PK
                                                  AND NVL(W.CONFIRM_DT,p_from)>p_from
                                                  AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                  AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                  AND A.JOIN_DT<=p_to
                                                  AND NVL(A.LEFT_DT,p_to)>=p_from
                                                  AND B.OT_TYPE IN ('HT') AND B.HOL_TYPE IS NOT NULL
                                                  AND B.HOL_TYPE='SUN'
                                                  AND W.THR_EMP_PK=A.PK
                                                  AND B.WORK_DT BETWEEN p_from AND p_to
                                                   AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                                            GROUP BY B.THR_EMP_PK)  
        ,(W.TOTAL_ST_L2, W.TOTAL_RATE_ST_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_ST_L2
                                                        ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_ST_L2
                                                    FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                    WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                          AND B.THR_EMP_PK=A.PK
                                                           AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                          AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                                          AND A.JOIN_DT<=p_to
                                                          AND NVL(A.LEFT_DT,p_to)>=p_from
                                                          AND B.OT_TYPE IN ('HT') AND B.HOL_TYPE IS NOT NULL
                                                          AND B.HOL_TYPE='SUN'
                                                          AND W.THR_EMP_PK=A.PK
                                                          AND B.WORK_DT BETWEEN p_from AND p_to
                                                           AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                    GROUP BY B.THR_EMP_PK)   
        ,(W.TOTAL_OST_L1, W.TOTAL_RATE_OST_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_OST_L1
                                                         ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OST_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND B.THR_EMP_PK=A.PK
                                                              AND NVL(W.CONFIRM_DT,p_from)>p_from
                                                              AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to)>=p_from
                                                              AND B.OT_TYPE IN ('OT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='SUN'
                                                              AND W.THR_EMP_PK=A.PK
                                                              AND B.WORK_DT BETWEEN p_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                                                        GROUP BY B.THR_EMP_PK)   
         ,(W.TOTAL_OST_L2, W.TOTAL_RATE_OST_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_OST_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OST_L2
                                                            FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                            WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                                  AND B.THR_EMP_PK=A.PK
                                                                   AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                                  AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                                                  AND A.JOIN_DT<=p_to
                                                                  AND NVL(A.LEFT_DT,p_to)>=p_from
                                                                  AND B.OT_TYPE IN ('OT') AND B.HOL_TYPE IS NOT NULL
                                                                  AND B.HOL_TYPE='SUN'
                                                                  AND W.THR_EMP_PK=A.PK
                                                                  AND B.WORK_DT BETWEEN p_from AND p_to
                                                                   AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                                                            GROUP BY B.THR_EMP_PK) 
         ,(W.TOTAL_HT_L1, W.TOTAL_RATE_HT_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_HT_L1
                                                        ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_HT_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN p_from AND p_to
                                                              AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,p_from)>p_from
                                                              AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to)>=p_from
                                                              AND B.OT_TYPE IN ('HT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='HOL'
                                                              AND A.PK=W.THR_EMP_PK
                                                        GROUP BY A.PK)  
         ,(W.TOTAL_HT_L2, W.TOTAL_RATE_HT_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_HT_L2
                                                        ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_HT_L2
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN p_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                               AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                              AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to)>=p_from
                                                              AND B.OT_TYPE IN ('HT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='HOL'
                                                              AND A.PK=W.THR_EMP_PK
                                                        GROUP BY A.PK)
         ,(W.TOTAL_OHT_L1, W.TOTAL_RATE_OHT_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_OHT_L1
                                                          ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OHT_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN p_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                             AND NVL(W.CONFIRM_DT,p_from)>p_from
                                                              AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to)>=p_from
                                                              AND B.OT_TYPE IN ('OT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='HOL'
                                                              AND A.PK=W.THR_EMP_PK
                                                        GROUP BY A.PK)   
        ,(W.TOTAL_OHT_L2, W.TOTAL_RATE_OHT_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_OHT_L2
                                                         ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OHT_L2
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN p_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                               AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                              AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to)>=p_from
                                                              AND B.OT_TYPE IN ('OT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='HOL'
                                                              AND A.PK=W.THR_EMP_PK
                                                        GROUP BY A.PK)
         ,(W.TOTAL_NT30_L1, W.TOTAL_RATE_NT30_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT30_L1
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT30_L1
                                                            FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND WS.DEL_IF=0
                                                                  AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                                  AND B.WORK_DT BETWEEN p_from AND p_to
                                                                   AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                                 AND NVL(W.CONFIRM_DT,p_from)>p_from
                                                                  AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                                  AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                                  AND A.JOIN_DT<=p_to
                                                                  AND NVL(A.LEFT_DT,p_to)>=p_from
                                                                  AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NULL
                                                                  AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',2,NVL(WS.DURING_DAY,1))
                                                                  AND A.PK=W.THR_EMP_PK
                                                                  AND NVL(A.OT_YN,'Y')='Y'
                                                            GROUP BY A.PK)   
         ,(W.TOTAL_NT30_L2, W.TOTAL_RATE_NT30_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT30_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT30_L2
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND WS.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                              AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN p_from AND p_to
                                                              AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                              AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to)>=p_from
                                                              AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NULL
                                                              AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',2,NVL(WS.DURING_DAY,1))
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK) 
         ,(W.TOTAL_NT45_L1, W.TOTAL_RATE_NT45_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT45_L1
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT45_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND WS.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                              AND B.WORK_DT BETWEEN p_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,p_from)>p_from
                                                              AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to)>=p_from
                                                              AND B.OT_TYPE =DECODE(F_LAG_NT2,'N','NT','NT2')
                                                              AND B.HOL_TYPE IS NULL
                                                              AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',1,NVL(WS.DURING_DAY,1))
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK) 
         ,(W.TOTAL_NT45_L2, W.TOTAL_RATE_NT45_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT45_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT45_L2
                                FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND W.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                      AND B.WORK_DT BETWEEN p_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                      AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to)>=p_from
                                      AND B.OT_TYPE =DECODE(F_LAG_NT2,'N','NT','NT2')
                                      AND B.HOL_TYPE IS NULL
                                      AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',1,NVL(WS.DURING_DAY,1))
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK) 
         ,(W.TOTAL_NT45_2_L1, W.TOTAL_RATE_NT45_2_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT45_2_L1
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT45_2_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND WS.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                              AND B.WORK_DT BETWEEN p_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,p_from)>p_from
                                                              AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to)>=p_from
                                                              AND B.OT_TYPE = 'NT3'
                                                              AND B.HOL_TYPE IS NULL
                                                              AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',1,NVL(WS.DURING_DAY,1))
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK) 
         ,(W.TOTAL_NT45_2_L2, W.TOTAL_RATE_NT45_2_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT45_2_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT45_2_L2
                                FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND W.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                      AND B.WORK_DT BETWEEN p_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                      AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to)>=p_from
                                      AND B.OT_TYPE = 'NT3'
                                      AND B.HOL_TYPE IS NULL
                                      AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',1,NVL(WS.DURING_DAY,1))
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK)     
         ,(W.TOTAL_NT60_L1, W.TOTAL_RATE_NT60_L1)  = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT60_L1
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT60_L1
                                FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK
                                      AND B.WORK_DT BETWEEN p_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,p_from)>p_from
                                      AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                      AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to)>=p_from
                                      AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NOT NULL
                                      AND B.HOL_TYPE='SUN'
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK)  
         ,(W.TOTAL_NT60_L2, W.TOTAL_RATE_NT60_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT60_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT60_L2
                                FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK
                                      AND B.WORK_DT BETWEEN p_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                      AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to)>=p_from
                                      AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NOT NULL
                                      AND B.HOL_TYPE='SUN'
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK) 
         ,(W.TOTAL_NT90_L1,W.TOTAL_RATE_NT90_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT90_L1
                                                          ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT90_L1
                                FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK
                                      AND B.WORK_DT BETWEEN p_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,p_from)>p_from
                                      AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                      AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to)>=p_from
                                      AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NOT NULL
                                      AND B.HOL_TYPE='HOL'
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK)  
          ,(W.TOTAL_NT90_L2, W.TOTAL_RATE_NT90_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT90_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT90_L2
                                FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK
                                      AND B.WORK_DT BETWEEN p_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                      AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to)>=p_from
                                      AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NOT NULL
                                      AND B.HOL_TYPE='HOL'
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK) 
          ,W.TOTAL_OT_TAX_L1 = (SELECT SUM(NVL(B.OT_TIME,0)+ NVL(B.OT_PLUS,0)) AS TOTAL_OT_TAX_L1
                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK
                                      AND B.WORK_DT BETWEEN p_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,p_from)>p_from
                                      AND B.WORK_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                                      AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to)>=p_from
                                      AND (B.OT_TYPE IN('OT','HT')
                                           OR B.OT_TYPE =DECODE(l_ot_kind,'02',l_ot_kind,'NT')
                                          )
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK)
          ,W.TOTAL_OT_TAX_L2 = (SELECT SUM(NVL(B.OT_TIME,0)+ NVL(B.OT_PLUS,0)) AS TOTAL_OT_TAX_L2
                                FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK
                                      AND B.WORK_DT BETWEEN p_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                      AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,p_from) AND p_to
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to)>=p_from
                                      AND (B.OT_TYPE IN('OT','HT')
                                           OR B.OT_TYPE =DECODE(l_ot_kind,'02',l_ot_kind,'NT')
                                          )
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK)           
    WHERE W.DEL_IF=0
    AND W.WORK_MON = p_work_mon
    AND NVL(W.CLOSE_YN, 'N') = 'N'
    AND (W.TCO_DEPT_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
    and W.SAL_PERIOD = p_sal_period;

END IF;
p_result:=0;
COMMIT;
    EXCEPTION
    WHEN l_check THEN
        p_result:=-1;
        Raise_application_error(-20019, sqlerrm);
    WHEN  OTHERS THEN
        p_result:=-1;
        RAISE_APPLICATION_ERROR(-20002, 'ERRCODE : '|| l_error||SQLERRM );
    ROLLBACK;
END  ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_3
(
   p_work_mon       in      varchar2,
   p_from           in      varchar2,                                                                                    -- YYYYMMDD
   p_to            in      varchar2,                                                                                    -- YYYYMMDD
   p_location_pk   in      varchar2,
   p_sal_period    in      varchar2,
   p_crt_by               varchar2,
   p_result           out number                                                                        -- RETURN VALUE ( NUMBER )
)
is
   l_error             varchar2(2) := '';
   l_flag_exist      boolean := false;
   l_cur_rec         number;
   l_cur             sys_refcursor;
   l_check             exception;
   l_probation_num     number(1) := 0;
   flag_cal_resign     varchar2(1) := 'N';
   l_company_pk      number := 0;

   l_pro             varchar2(200) := '';
   l_string          varchar2(2000) := '';
   l_resign_num        number;
--******************************************
-- Create by    : huynh truong
--******************************************

begin
   l_error := '10';

   select o.tco_company_pk
   into   l_company_pk
   from   tco_org o
   where  o.del_if = 0 and o.pk = p_location_pk;

   open l_cur for
      select 1
      from     thr_close a
      where      a.del_if = 0
             and a.month_close = p_work_mon
             and a.id = p_sal_period
             and a.tco_company_pk = l_company_pk
             and nvl(a.close_yn, 'N') = 'N';

   fetch l_cur into   l_cur_rec;

   l_flag_exist := l_cur%found;

   close l_cur;

   if l_flag_exist = false then
      p_result := -1;
      raise l_check;
   end if;

   --find procedure
   open l_cur for
      select a.char_3
      from     vhr_hr_code a
      where      a.id = 'HR0044'
             and upper(a.char_1) = upper('ST_HR_PRO_HRTI01300_3')
             and nvl(tco_company_pk, l_company_pk) = l_company_pk;

   fetch l_cur into   l_pro;

   l_flag_exist := l_cur%found;

   close l_cur;

   if l_flag_exist = true then                                                                          --CO SU DUNG PROCEDURE RIENG
      l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6,:7); end;';

      execute immediate l_string
         using in p_work_mon,
               in p_from,
               in p_to,
               in p_location_pk,
               in p_sal_period,
               in p_crt_by,
               out p_result;
   else
      SELECT A.NUM_3
      INTO     l_probation_num
      FROM     VHR_HR_CODE A
      WHERE  A.ID = 'HR0002' AND A.CODE = '03' AND NVL(TCO_COMPANY_PK, l_company_pk) = l_company_pk;
      
      SELECT decode(nvl(A.NUM_4,0),0,-1,0)
        INTO l_resign_num 
        FROM VHR_HR_CODE A
        WHERE A.ID='HR0006' 
        AND A.CODE='11' 
        and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;

      --xac dinh xem tinh luong thoi viec chung hay rieng
      OPEN L_CUR FOR
         SELECT 1
         FROM    THR_CLOSE A
         WHERE    A.DEL_IF = 0 AND A.MONTH_CLOSE = P_WORK_MON 
         AND A.ID = P_SAL_PERIOD 
         AND A.TCO_COMPANY_PK = L_COMPANY_PK;

      fetch l_cur into     l_cur_rec;

      l_flag_exist := l_cur%found;

      close l_cur;

      if l_flag_exist = true then
         SELECT (CASE WHEN NVL(V.NUM_3, 1) = 1 THEN 'N' ELSE 'Y' END)
         INTO    FLAG_CAL_RESIGN                                                                    --Y: tinh luong thoi viec rieng
         FROM    THR_CLOSE A, VHR_HR_CODE V
         WHERE        A.DEL_IF = 0
                AND V.ID = 'HR0030'
                AND A.ID = V.CODE
                AND A.MONTH_CLOSE = P_WORK_MON
                AND A.ID = P_SAL_PERIOD
                AND A.TCO_COMPANY_PK = NVL(V.TCO_COMPANY_PK, A.TCO_COMPANY_PK)
                AND A.TCO_COMPANY_PK = L_COMPANY_PK;
      end if;

             
        DELETE THR_ABSENCE_MONTH W
        WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
        AND (W.TCO_DEPT_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                             WHERE g.del_if = 0 
                                              START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                CONNECT BY PRIOR g.pk = g.p_pk)
                            OR p_location_pk ='ALL')
       AND NVL(W.CLOSE_YN,'N')='N' 
       AND NVL(W.CLOSE_M_YN,'N')='N' 
       AND W.TIMES IS NULL
       and w.sal_period = p_sal_period;

    INSERT INTO THR_ABSENCE_MONTH
    (PK, THR_EMP_PK, WORK_MON
    , DEL_IF, CRT_BY, CRT_DT, JOIN_DT, LEFT_DT, STATUS, GROUP_NM, THR_GROUP_PK
    , DEPT_NM, DEPT_KNM, DEPT_LNM, TCO_DEPT_PK, LOCATION_DEPT_PK,FULL_NAME,EMP_ID,FROM_DT,TO_DT,PROBATION_STATUS, SAL_PERIOD
    ,D1_L1, D2_L1, D3_L1, D4_L1, D5_L1, D6_L1, D7_L1, D8_L1, D9_L1, D10_L1
    ,D11_L1, D12_L1, D13_L1, D14_L1, D15_L1, D16_L1, D17_L1, D18_L1, D19_L1, D20_L1
    ,D21_L1, D22_L1, D23_L1, D24_L1, D25_L1, D26_L1, D27_L1, D28_L1, D29_L1, D30_L1, D31_L1
    ,TOTAL_ABS_ALE_L1, TOTAL_OTHER_PAY_L1, TOTAL_ABS_PAY_L1, TOTAL_ABS_NPAY_L1, TOTAL_ABS_PER_L1, TOTAL_ABS_L1
    ,TOTAL_RATE_ABS_ALE_L1, TOTAL_RATE_OTHER_PAY_L1, TOTAL_RATE_ABS_PAY_L1
    ,D1_L2, D2_L2, D3_L2, D4_L2, D5_L2, D6_L2, D7_L2, D8_L2, D9_L2, D10_L2
    ,D11_L2, D12_L2, D13_L2, D14_L2, D15_L2, D16_L2, D17_L2, D18_L2, D19_L2, D20_L2
    ,D21_L2, D22_L2, D23_L2, D24_L2, D25_L2, D26_L2, D27_L2, D28_L2, D29_L2, D30_L2, D31_L2
    ,TOTAL_ABS_ALE_L2, TOTAL_OTHER_PAY_L2, TOTAL_ABS_PAY_L2, TOTAL_ABS_NPAY_L2, TOTAL_ABS_PER_L2, TOTAL_ABS_L2
    ,TOTAL_RATE_ABS_ALE_L2, TOTAL_RATE_OTHER_PAY_L2, TOTAL_RATE_ABS_PAY_L2
    ,D1_CODE, D2_CODE, D3_CODE, D4_CODE, D5_CODE,D6_CODE, D7_CODE, D8_CODE, D9_CODE, D10_CODE
    ,D11_CODE, D12_CODE, D13_CODE, D14_CODE, D15_CODE,D16_CODE, D17_CODE, D18_CODE, D19_CODE, D20_CODE
    ,D21_CODE, D22_CODE, D23_CODE, D24_CODE, D25_CODE,D26_CODE, D27_CODE, D28_CODE, D29_CODE, D30_CODE, D31_CODE
    ,TOTAL_ABS_ALE, TOTAL_OTHER_PAY, TOTAL_ABS_PAY, TOTAL_ABS_NPAY, TOTAL_ABS_PER, TOTAL_ABS
    )
    SELECT THR_ABSENCE_MONTH_SEQ.NEXTVAL,AB.EMP_PK, p_work_mon
    , 0, p_crt_by, SYSDATE, AB.JOIN_DT, AB.LEFT_DT, AB.STATUS, AB.WORKGROUP_NM, AB.GROUP_PK
    , AB.ORG_NM, AB.ORG_FNM, AB.ORG_LNM, AB.DEPT_PK, AB.LOCATION_DEPT_PK, AB.FULL_NAME, AB.EMP_ID, p_from, p_to, AB.PROBATION_STATUS, p_sal_period
    ,AB.D1_L1, AB.D2_L1, AB.D3_L1, AB.D4_L1, AB.D5_L1, AB.D6_L1, AB.D7_L1, AB.D8_L1, AB.D9_L1, AB.D10_L1
    ,AB.D11_L1, AB.D12_L1, AB.D13_L1, AB.D14_L1, AB.D15_L1, AB.D16_L1, AB.D17_L1, AB.D18_L1, AB.D19_L1, AB.D20_L1
    ,AB.D21_L1, AB.D22_L1, AB.D23_L1, AB.D24_L1, AB.D25_L1, AB.D26_L1, AB.D27_L1, AB.D28_L1, AB.D29_L1, AB.D30_L1, AB.D31_L1
    ,AB.TOTAL_ABS_ALE_L1, AB.TOTAL_OTHER_PAY_L1, AB.TOTAL_ABS_PAY_L1, AB.TOTAL_ABS_NPAY_L1, AB.TOTAL_ABS_PER_L1, AB.TOTAL_ABS_L1
    ,AB.TOTAL_RATE_ABS_ALE_L1, AB.TOTAL_OTHER_PAY_L1, AB.TOTAL_ABS_PAY_L1
    ,AB.D1_L2, AB.D2_L2, AB.D3_L2, AB.D4_L2, AB.D5_L2, AB.D6_L2, AB.D7_L2, AB.D8_L2, AB.D9_L2, AB.D10_L2
    ,AB.D11_L2, AB.D12_L2, AB.D13_L2, AB.D14_L2, AB.D15_L2, AB.D16_L2, AB.D17_L2, AB.D18_L2, AB.D19_L2, AB.D20_L2
    ,AB.D21_L2, AB.D22_L2, AB.D23_L2, AB.D24_L2, AB.D25_L2, AB.D26_L2, AB.D27_L2, AB.D28_L2, AB.D29_L2, AB.D30_L2, AB.D31_L2
    ,AB.TOTAL_ABS_ALE_L2, AB.TOTAL_OTHER_PAY_L2, AB.TOTAL_ABS_PAY_L2, AB.TOTAL_ABS_NPAY_L2, AB.TOTAL_ABS_PER_L2, AB.TOTAL_ABS_L2
    ,AB.TOTAL_RATE_ABS_ALE_L2, AB.TOTAL_RATE_OTHER_PAY_L2, AB.TOTAL_RATE_ABS_PAY_L2
    ,AB.D1_CODE, AB.D2_CODE, AB.D3_CODE, AB.D4_CODE, AB.D5_CODE,AB.D6_CODE, AB.D7_CODE, AB.D8_CODE, AB.D9_CODE, AB.D10_CODE
    ,AB.D11_CODE, AB.D12_CODE, AB.D13_CODE, AB.D14_CODE, AB.D15_CODE,AB.D16_CODE, AB.D17_CODE, AB.D18_CODE, AB.D19_CODE, AB.D20_CODE
    ,AB.D21_CODE, AB.D22_CODE, AB.D23_CODE, AB.D24_CODE, AB.D25_CODE,AB.D26_CODE, AB.D27_CODE, AB.D28_CODE, AB.D29_CODE, AB.D30_CODE, AB.D31_CODE
    ,NVL(AB.TOTAL_ABS_ALE_L1, 0) + NVL(AB.TOTAL_ABS_ALE_L1, 0) AS TOTAL_ABS_ALE
    ,NVL(AB.TOTAL_OTHER_PAY_L1, 0) + NVL(AB.TOTAL_OTHER_PAY_L2, 0) AS  TOTAL_OTHER_PAY
    ,NVL(AB.TOTAL_ABS_PAY_L1, 0) + NVL(AB.TOTAL_ABS_PAY_L2, 0) AS TOTAL_ABS_PAY
    ,NVL(AB.TOTAL_ABS_NPAY_L1, 0) + NVL(AB.TOTAL_ABS_NPAY_L2, 0) AS TOTAL_ABS_NPAY
    ,NVL(AB.TOTAL_ABS_PER_L1, 0) + NVL(AB.TOTAL_ABS_PER_L2, 0) AS TOTAL_ABS_PER
    ,NVL(AB.TOTAL_ABS_L1, 0) + NVL(AB.TOTAL_ABS_L2, 0) AS TOTAL_ABS
    FROM(
        SELECT A.PK AS EMP_PK,A.FULL_NAME,A.EMP_ID,B.PK AS GROUP_PK,B.WORKGROUP_NM,NULL,NULL
            ,C.PK AS DEPT_PK,C.ORG_NM,C.ORG_FNM,C.ORG_LNM
            ,A.JOIN_DT,A.LEFT_DT
            ,(CASE WHEN NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to THEN 'A'
                    ELSE 'R' END) AS STATUS
            ,(select LO.pk from TCO_ORG LO
                where LO.del_if=0 AND LO.P_PK IS NULL
                start with LO.pk =C.PK
                connect by prior  LO.p_pk=LO.pk) AS LOCATION_DEPT_PK
             ,(CASE WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')-l_probation_num,'YYYYMMDD') >p_to THEN '01'
            WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')-l_probation_num,'YYYYMMDD')<=p_from THEN '03'
            ELSE '02' END) AS PROBATION_STATUS
            ,L1.D1_L1, L1.D2_L1, L1.D3_L1, L1.D4_L1, L1.D5_L1, L1.D6_L1, L1.D7_L1, L1.D8_L1, L1.D9_L1, L1.D10_L1
            ,L1.D11_L1, L1.D12_L1, L1.D13_L1, L1.D14_L1, L1.D15_L1, L1.D16_L1, L1.D17_L1, L1.D18_L1, L1.D19_L1, L1.D20_L1
            ,L1.D21_L1, L1.D22_L1, L1.D23_L1, L1.D24_L1, L1.D25_L1, L1.D26_L1, L1.D27_L1, L1.D28_L1, L1.D29_L1, L1.D30_L1, L1.D31_L1
            ,L1.TOTAL_ABS_ALE_L1, L1.TOTAL_OTHER_PAY_L1, L1.TOTAL_ABS_PAY_L1, L1.TOTAL_ABS_NPAY_L1, L1.TOTAL_ABS_PER_L1, L1.TOTAL_ABS_L1
            ,L1.TOTAL_RATE_ABS_ALE_L1, L1.TOTAL_RATE_OTHER_PAY_L1, L1.TOTAL_RATE_ABS_PAY_L1
            ,L2.D1_L2, L2.D2_L2, L2.D3_L2, L2.D4_L2, L2.D5_L2, L2.D6_L2, L2.D7_L2, L2.D8_L2, L2.D9_L2, L2.D10_L2
            ,L2.D11_L2, L2.D12_L2, L2.D13_L2, L2.D14_L2, L2.D15_L2, L2.D16_L2, L2.D17_L2, L2.D18_L2, L2.D19_L2, L2.D20_L2
            ,L2.D21_L2, L2.D22_L2, L2.D23_L2, L2.D24_L2, L2.D25_L2, L2.D26_L2, L2.D27_L2, L2.D28_L2, L2.D29_L2, L2.D30_L2, L2.D31_L2
            ,L2.TOTAL_ABS_ALE_L2, L2.TOTAL_OTHER_PAY_L2, L2.TOTAL_ABS_PAY_L2, L2.TOTAL_ABS_NPAY_L2, L2.TOTAL_ABS_PER_L2, L2.TOTAL_ABS_L2
            ,L2.TOTAL_RATE_ABS_ALE_L2, L2.TOTAL_RATE_OTHER_PAY_L2, L2.TOTAL_RATE_ABS_PAY_L2
            ,CODE.D1_CODE, CODE.D2_CODE, CODE.D3_CODE, CODE.D4_CODE, CODE.D5_CODE,CODE.D6_CODE, CODE.D7_CODE, CODE.D8_CODE, CODE.D9_CODE, CODE.D10_CODE
            ,CODE.D11_CODE, CODE.D12_CODE, CODE.D13_CODE, CODE.D14_CODE, CODE.D15_CODE,CODE.D16_CODE, CODE.D17_CODE, CODE.D18_CODE, CODE.D19_CODE, CODE.D20_CODE
            ,CODE.D21_CODE, CODE.D22_CODE, CODE.D23_CODE, CODE.D24_CODE, CODE.D25_CODE,CODE.D26_CODE, CODE.D27_CODE, CODE.D28_CODE, CODE.D29_CODE, CODE.D30_CODE, CODE.D31_CODE
    FROM( SELECT T.THR_EMP_PK AS EMP_PK
                   ,SUM(DECODE(T.ABSENCE_DT, p_from, NVL(T.ABSENCE_TIME,0),0)) AS D1_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D2_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D3_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D4_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D5_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D6_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D7_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D8_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D9_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D10_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D11_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D12_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D13_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D14_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D15_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D16_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D17_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D18_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D19_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D20_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D21_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D22_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D23_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D24_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D25_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D26_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D27_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D28_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D29_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D30_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D31_L1
                   ,SUM(CASE WHEN T.ABSENCE_TYPE ='01' THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_ALE_L1
                   ,SUM(CASE WHEN T.ABSENCE_TYPE <>'01' AND NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_OTHER_PAY_L1
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_PAY_L1
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)=0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_NPAY_L1
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)=0 AND T.ABSENCE_TYPE NOT IN ('05','13') THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_PER_L1
                   ,SUM(NVL(T.ABSENCE_TIME, 0)) TOTAL_ABS_L1
                   ,SUM(CASE WHEN T.ABSENCE_TYPE ='01' THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_ABS_ALE_L1
                   ,SUM(CASE WHEN T.ABSENCE_TYPE <>'01' AND NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_OTHER_PAY_L1
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_ABS_PAY_L1
                FROM THR_EMPLOYEE A,THR_SALARY_MANAGE S,THR_ABSENCE T, thr_wg_sch_detail c
                WHERE T.DEL_IF = 0 AND A.DEL_IF=0 AND S.DEL_IF(+)=0 and c.del_if=0
                  AND T.THR_EMP_PK=A.PK AND S.THR_EMP_PK(+)=A.PK
                  and C.THR_EMP_PK=a.pk
                  and C.WORK_DT=T.ABSENCE_DT
                  and C.HOL_TYPE  is null
                  AND S.WORK_MON(+)=p_work_mon
                  AND NVL(S.CONFIRM_DT,p_from)>p_from
                  AND T.ABSENCE_DT BETWEEN  A.JOIN_DT AND NVL(S.CONFIRM_DT,p_to)
                  and C.WORK_DT BETWEEN p_from and p_to
                  AND T.ABSENCE_DT BETWEEN a.join_dt AND to_char(to_date(nvl(a.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd') 
                  AND A.JOIN_DT<=p_to
                  AND NVL(A.LEFT_DT,p_to)>=p_from                  
                  AND T.ABSENCE_DT BETWEEN p_from AND TO_CHAR(TO_DATE(NVL(S.CONFIRM_DT,p_from),'YYYYMMDD')-1,'YYYYMMDD')
                  AND T.ABSENCE_DT BETWEEN p_from and p_to
                  AND (A.TCO_ORG_PK IN (SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
                GROUP BY  T.THR_EMP_PK) L1
     ,(SELECT T.THR_EMP_PK AS EMP_PK
                   ,SUM(DECODE(T.ABSENCE_DT, p_from, NVL(T.ABSENCE_TIME,0),0)) AS D1_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D2_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D3_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D4_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D5_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D6_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D7_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D8_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D9_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D10_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D11_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D12_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D13_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D14_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D15_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D16_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D17_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D18_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D19_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D20_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D21_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D22_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D23_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D24_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D25_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D26_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D27_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D28_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D29_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D30_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D31_L2
                   ,SUM(CASE WHEN T.ABSENCE_TYPE ='01' THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_ALE_L2
                   ,SUM(CASE WHEN T.ABSENCE_TYPE <>'01' AND NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_OTHER_PAY_L2
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_PAY_L2
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)=0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_NPAY_L2
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)=0 AND T.ABSENCE_TYPE NOT IN ('05','13') THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_PER_L2
                   ,SUM(NVL(T.ABSENCE_TIME, 0)) TOTAL_ABS_L2
                   ,SUM(CASE WHEN T.ABSENCE_TYPE ='01' THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_ABS_ALE_L2
                   ,SUM(CASE WHEN T.ABSENCE_TYPE <>'01' AND NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_OTHER_PAY_L2
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_ABS_PAY_L2
                FROM THR_EMPLOYEE A,THR_SALARY_MANAGE S,THR_ABSENCE T, thr_wg_sch_detail c
                WHERE T.DEL_IF = 0 AND A.DEL_IF=0 AND S.DEL_IF(+)=0 and C.DEL_IF=0
                  AND T.THR_EMP_PK=A.PK AND S.THR_EMP_PK(+)=A.PK
                  and C.WORK_DT=T.ABSENCE_DT
                  and C.THR_EMP_PK=a.pk
                  and C.HOL_TYPE is null                  
                  and C.WORK_DT=T.ABSENCE_DT
                  and C.WORK_DT BETWEEN p_from and p_to
                  AND A.JOIN_DT<=p_to
                  AND NVL(A.LEFT_DT,p_to)>=p_from
                  AND T.ABSENCE_DT BETWEEN NVL(S.CONFIRM_DT,p_from) AND p_to
                  AND T.ABSENCE_DT BETWEEN P_FROM AND P_TO
                  AND T.ABSENCE_DT BETWEEN a.join_dt AND to_char(to_date(nvl(a.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd')
                  AND NVL(S.CONFIRM_DT,p_to)<=p_to
                  AND S.WORK_MON(+)=p_work_mon
                  AND (A.TCO_ORG_PK IN(SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
                GROUP BY  T.THR_EMP_PK) L2
     ,( SELECT T.THR_EMP_PK AS EMP_PK
                   ,MAX(DECODE(T.ABSENCE_DT, p_from, ABS_TYPE.CHAR_1 ,'')) AS D1_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+1,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D2_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+2,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D3_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+3,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D4_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+4,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D5_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+5,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D6_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+6,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D7_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+7,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D8_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+8,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D9_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+9,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D10_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+10,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D11_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+11,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D12_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+12,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D13_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+13,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D14_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+14,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D15_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+15,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D16_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+16,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D17_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+17,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D18_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+18,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D19_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+19,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D20_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+20,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D21_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+21,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D22_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+22,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D23_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+23,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D24_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+24,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D25_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+25,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D26_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+26,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D27_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+27,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D28_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+28,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D29_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+29,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D30_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(p_from,'YYYYMMDD')+30,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D31_CODE
                FROM THR_EMPLOYEE A,THR_ABSENCE T, thr_wg_sch_detail c
                    ,(SELECT D.CODE,D.CHAR_1 FROM VHR_HR_CODE D WHERE ID='HR0003') ABS_TYPE
                WHERE T.DEL_IF = 0 AND A.DEL_IF=0 and C.DEL_IF=0
                  AND T.THR_EMP_PK=A.PK 
                  AND ABS_TYPE.CODE(+) = T.ABSENCE_TYPE
                  and C.WORK_DT=T.ABSENCE_DT
                  and C.THR_EMP_PK=a.pk
                  and C.HOL_TYPE is null                  
                  and C.WORK_DT=T.ABSENCE_DT
                  AND C.WORK_DT BETWEEN a.join_dt AND to_char(to_date(nvl(a.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd')
                  and C.WORK_DT BETWEEN p_from and p_to
                  AND A.JOIN_DT<=p_to
                  AND NVL(A.LEFT_DT,p_to)>=p_from
                  AND (A.TCO_ORG_PK IN(SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
                GROUP BY  T.THR_EMP_PK) CODE
     , THR_EMPLOYEE A,THR_WORK_GROUP B,TCO_ORG C
    WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0
    AND A.THR_WG_PK=B.PK AND A.TCO_ORG_PK=C.PK
     AND A.JOIN_DT <= p_to
     AND NVL(A.LEFT_DT,p_to) >= p_from
     AND (flag_cal_resign='N' OR NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1 ,'YYYYMMDD'))>p_to)
    AND A.PK=L1.EMP_PK(+)
    AND A.PK=L2.EMP_PK(+)
    AND A.PK=CODE.EMP_PK(+)
     AND (A.TCO_ORG_PK IN (SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
     AND A.PK NOT IN(SELECT M.THR_EMP_PK FROM THR_ABSENCE_MONTH M WHERE M.DEL_IF=0 AND M.WORK_MON=p_work_mon
                        AND M.THR_EMP_PK=A.PK)
     )AB;     

             
                                         
   end if;

   p_result := 0;
   commit;
exception
   when l_check then
      p_result := -1;
      raise_application_error(-20019, sqlerrm);
   when others then
      p_result := -1;
      raise_application_error(-20002, 'ERRCODE : ' || l_error || sqlerrm);
      rollback;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_4;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_4(
    p_work_mon      IN  VARCHAR2,
    p_from        IN    VARCHAR2,    -- YYYYMMDD
    p_to        IN    VARCHAR2,     -- YYYYMMDD
    p_location_pk       IN VARCHAR2,
    p_SAL_PERIOD       IN VARCHAR2,
    p_crt_by                VARCHAR2,
    p_result        OUT NUMBER      -- RETURN VALUE ( NUMBER )
) IS

l_error         varchar2(2):='';
l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;
l_lately        number(2):=0;
l_early        number(2):=0;
l_string       varchar2(2000):='';
l_pro          varchar2(200):='';
flag_cal_resign VARCHAR2(1):='N';

l_company_pk number:=0;
--******************************************
  -- Create by    : huynh truong
--******************************************

BEGIN
    l_error := '10';
  select o.tco_company_pk into l_company_pk
                                            from tco_org o where o.del_if=0 
                                            and  o.pk= p_location_pk;
    open l_cur for
    SELECT 1 FROM THR_CLOSE A
    WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon
    AND A.ID=p_SAL_PERIOD
    and A.TCO_COMPANY_PK=l_company_pk 
    AND NVL(A.CLOSE_YN,'N')='N';

     FETCH l_cur INTO l_cur_rec;
      l_flag_exist := l_cur%FOUND;
    CLOSE l_cur;
    IF l_flag_exist=FALSE THEN
        p_result:=-1;
        raise l_check;
    END IF;
    
    --find procedure
    OPEN l_cur FOR
    SELECT A.char_3 FROM VHR_HR_CODE A
    WHERE A.ID='HR0044' AND UPPER(A.CHAR_1)=UPPER('ST_HR_PRO_HRTI01300_4') and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;

    FETCH l_cur INTO l_pro;
    l_flag_exist:=l_cur%FOUND;
    CLOSE l_cur;

    IF l_flag_exist=TRUE THEN --CO SU DUNG PROCEDURE RIENG 
        l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6,:7); end;' ;
        execute  immediate l_string using in p_work_mon,in p_from,in p_to,in p_location_pk,in p_SAL_PERIOD,in p_crt_by,out p_result ;

    ELSE
    
    --xac dinh xem tinh luong thoi viec chung hay rieng 
    open l_cur for
            SELECT 1 FROM THR_CLOSE A
            WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon  and A.id=p_SAL_PERIOD
            and a.TCO_COMPANY_PK=l_company_pk ;

             FETCH l_cur INTO l_cur_rec;
              l_flag_exist := l_cur%FOUND;
            CLOSE l_cur;
            
            IF l_flag_exist=TRUE THEN

             SELECT (CASE WHEN NVL(V.NUM_3,1)=1 THEN 'N' ELSE 'Y' END) INTO flag_cal_resign --Y: tinh luong thoi viec rieng
             FROM THR_CLOSE A,VHR_HR_CODE V
            WHERE A.DEL_IF=0 AND V.ID='HR0030' AND A.ID=V.CODE 
            AND A.MONTH_CLOSE=p_work_mon  and A.id=p_SAL_PERIOD
            AND a.TCO_COMPANY_PK=NVL(V.TCO_COMPANY_PK,a.TCO_COMPANY_PK)
            and a.TCO_COMPANY_PK=l_company_pk;
           
             END IF;


    SELECT NVL(V.NUM_1,0),NVL(V.NUM_2,0) INTO l_lately,l_early FROM VHR_HR_CODE V WHERE V.ID='HR0039' and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    

    DELETE THR_MONTH_SUMMARY W
    WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
    and W.SAL_PERIOD=p_SAL_PERIOD
    AND W.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
    AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N' AND W.TIMES IS NULL;

    INSERT INTO THR_MONTH_SUMMARY
    (PK, THR_EMP_PK, WORK_MON, LOCATION_DEPT_PK, IN_LATE, OUT_EARLY, STATUS, WORK_DAYS, WORK_MONTHS
    , EMPLOYEE_TYPE, PROBATION_STATUS, DEL_IF, CRT_BY, CRT_DT,NO_SCAN_CARD,SAL_PERIOD,tco_dept_pk )
    SELECT THR_MONTH_SUMMARY_SEQ.NEXTVAL,A.PK,p_work_mon
    ,(select LO.pk from TCO_ORG LO
            where LO.del_if=0 AND LO.P_PK IS NULL
            start with LO.pk =A.TCO_ORG_PK
            connect by prior  LO.p_pk=LO.pk) AS LOCATION_DEPT_PK
    ,NVL(WD.IN_LATE,0),NVL(WD.OUT_EARLY,0)
   ,(CASE WHEN NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to THEN 'A'
                    ELSE 'R' END) AS STATUS
    ,NVL(WD.WDAY,0) AS WORK_DAYS
    ,ROUND(MONTHS_BETWEEN(TO_DATE(p_to,'YYYYMMDD'),TO_DATE(A.JOIN_DT,'YYYYMMDD')),2) AS WORK_MONTHS
    ,A.EMPLOYEE_TYPE
    ,(CASE WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')+1,'YYYYMMDD') >p_to THEN '01'
                WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')+1,'YYYYMMDD')<=p_from THEN '03'
                ELSE '02' END) AS PROBATION_STATUS
     ,0,p_crt_by,SYSDATE,WD.NO_SCAN_CARD,P_SAL_PERIOD, A.TCO_ORG_PK
     FROM
        (SELECT B.THR_EMP_PK EMP_PK,ROUND(SUM(NVL(B.WORK_TIME,0)/8),5) AS WDAY
            ,SUM(CASE WHEN  (TO_DATE(B.DATE_IN||B.TIME_IN,'YYYYMMDDHH24:MI')-TO_DATE(B.WORK_DT||S.START_TIME,'YYYYMMDDHH24:MI'))*24*60>=l_lately + decode(RE.REG_TYPE,'03',0,F_LATELY_REGULATION(B.WORK_DT,RE.START_DT,RE.END_DT,RE.MI)) THEN 1
                ELSE 0 END
            ) AS IN_LATE
            ,SUM(CASE WHEN  (DECODE(S.DURING_DAY,1,TO_DATE(B.WORK_DT||DECODE(S.OT,0,S.END_TIME,S.START_OT),'YYYYMMDDHH24:MI'),TO_DATE(B.WORK_DT||DECODE(S.OT,0,S.END_TIME,S.START_OT),'YYYYMMDDHH24:MI')+1)-TO_DATE(B.DATE_OUT||B.TIME_OUT,'YYYYMMDDHH24:MI'))*24*60>=l_early+decode(RE.REG_TYPE,'01',0,F_LATELY_REGULATION(B.WORK_DT,RE.START_DT,RE.END_DT,RE.MI)) THEN 1
                ELSE 0 END
            ) AS OUT_EARLY
            ,SUM(NVL(B.NO_SCAN_FLAG,0))*(-1) AS NO_SCAN_CARD
                FROM THR_EMPLOYEE A, THR_TIME_MACHINE B,THR_WORK_SHIFT S
                ,(SELECT R.THR_EMP_PK THR_EMP_PK,MAX(R.START_DT) START_DT,MAX(R.END_DT) END_DT,MAX(NVL(R.REG_HOURS,0))*60 AS MI, R.REG_TYPE REG_TYPE
                    FROM THR_REGULATION R WHERE R.DEL_IF=0
                    GROUP BY R.THR_EMP_PK,R.REG_TYPE
                    HAVING MAX(R.START_DT)<=p_to AND MAX(R.END_DT)>=p_from) RE
                WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND S.DEL_IF=0 AND B.THR_WS_PK=S.PK
                AND A.PK=B.THR_EMP_PK
                and A.SAL_PERIOD=P_SAL_PERIOD
                AND B.HOL_TYPE IS NULL
                AND B.WORK_DT BETWEEN p_from AND p_to
                AND NVL(A.LEFT_DT,p_to) >= p_from
                AND A.PK=RE.THR_EMP_PK(+)
                GROUP BY B.THR_EMP_PK)WD
                ,THR_EMPLOYEE A
        WHERE A.DEL_IF=0 AND A.PK=WD.EMP_PK(+)
         AND A.JOIN_DT <= p_to
         and A.SAL_PERIOD=P_SAL_PERIOD
         AND NVL(A.LEFT_DT,p_to) >= p_from
         AND (flag_cal_resign='N' OR NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to)
         AND (A.TCO_ORG_PK IN (SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =p_location_pk
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
        AND A.PK NOT IN(SELECT W.THR_EMP_PK FROM THR_MONTH_SUMMARY W WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon);
        
        
        -- XU LY DU LIEU VAO TRONG BANG WORK_MON
        DELETE THR_WORK_MON W
        WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
        AND (W.TCO_DEPT_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                             WHERE g.del_if = 0 
                                              START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                CONNECT BY PRIOR g.pk = g.p_pk)
                            OR p_location_pk ='ALL')
        AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N'
        AND W.SAL_PERIOD=p_sal_period ;

        INSERT INTO THR_WORK_MON
        (PK, THR_EMP_PK, FULL_NAME, EMP_ID, THR_GROUP_PK, GROUP_NM, GROUP_FNM, GROUP_KNM, WORK_MON, FROM_DT, TO_DT, JOIN_DT
        , LEFT_DT, STATUS, SAL_PERIOD
        , D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21
        , D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, DEL_IF, CRT_BY, CRT_DT, TCO_DEPT_PK,DEPT_NM, DEPT_KNM, DEPT_LNM
        ,LOCATION_DEPT_PK,TOTAL_WD,PROBATION_STATUS,ABS_PAY,ABS_ALE,ABS_UNPAY,HOL_HOUR)
        SELECT THR_WORK_MON_SEQ.NEXTVAL, E.PK, E.FULL_NAME, E.EMP_ID, E.THR_WG_PK, A.GROUP_NM, A.GROUP_FNM, A.GROUP_KNM, p_work_mon, W.FROM_DT, W.TO_DT, E.JOIN_DT
        ,E.LEFT_DT, E.STATUS, p_sal_period
        ,DECODE(NVL(W.D1_L1,0) + NVL(W.D1_L2,0), 0, '',NVL(W.D1_L1,0) + NVL(W.D1_L2,0))||A.D1_CODE||DECODE(NVL(W.H1_L1, 0) + NVL(W.H1_L2, 0), 0 ,'', 'HOL') AS D1
        ,DECODE(NVL(W.D2_L1,0) + NVL(W.D2_L2,0), 0, '',NVL(W.D2_L1,0) + NVL(W.D2_L2,0))||A.D2_CODE||DECODE(NVL(W.H2_L1, 0) + NVL(W.H2_L2, 0), 0 ,'', 'HOL') AS D2
        ,DECODE(NVL(W.D3_L1,0) + NVL(W.D3_L2,0), 0, '',NVL(W.D3_L1,0) + NVL(W.D3_L2,0))||A.D3_CODE||DECODE(NVL(W.H3_L1, 0) + NVL(W.H3_L2, 0), 0 ,'', 'HOL') AS D3
        ,DECODE(NVL(W.D4_L1,0) + NVL(W.D4_L2,0), 0, '',NVL(W.D4_L1,0) + NVL(W.D4_L2,0))||A.D4_CODE||DECODE(NVL(W.H4_L1, 0) + NVL(W.H4_L2, 0), 0 ,'', 'HOL') AS D4
        ,DECODE(NVL(W.D5_L1,0) + NVL(W.D5_L2,0), 0, '',NVL(W.D5_L1,0) + NVL(W.D5_L2,0))||A.D5_CODE||DECODE(NVL(W.H5_L1, 0) + NVL(W.H5_L2, 0), 0 ,'', 'HOL') AS D5
        ,DECODE(NVL(W.D6_L1,0) + NVL(W.D6_L2,0), 0, '',NVL(W.D6_L1,0) + NVL(W.D6_L2,0))||A.D6_CODE||DECODE(NVL(W.H6_L1, 0) + NVL(W.H6_L2, 0), 0 ,'', 'HOL') AS D6
        ,DECODE(NVL(W.D7_L1,0) + NVL(W.D7_L2,0), 0, '',NVL(W.D7_L1,0) + NVL(W.D7_L2,0))||A.D7_CODE||DECODE(NVL(W.H7_L1, 0) + NVL(W.H7_L2, 0), 0 ,'', 'HOL') AS D7
        ,DECODE(NVL(W.D8_L1,0) + NVL(W.D8_L2,0), 0, '',NVL(W.D8_L1,0) + NVL(W.D8_L2,0))||A.D8_CODE||DECODE(NVL(W.H8_L1, 0) + NVL(W.H8_L2, 0), 0 ,'', 'HOL') AS D8
        ,DECODE(NVL(W.D9_L1,0) + NVL(W.D9_L2,0), 0, '',NVL(W.D9_L1,0) + NVL(W.D9_L2,0))||A.D9_CODE||DECODE(NVL(W.H9_L1, 0) + NVL(W.H9_L2, 0), 0 ,'', 'HOL') AS D9
        ,DECODE(NVL(W.D10_L1,0) + NVL(W.D10_L2,0), 0, '',NVL(W.D10_L1,0) + NVL(W.D10_L2,0))||A.D10_CODE||DECODE(NVL(W.H10_L1, 0) + NVL(W.H10_L2, 0), 0 ,'', 'HOL') AS D10
        ,DECODE(NVL(W.D11_L1,0) + NVL(W.D11_L2,0), 0, '',NVL(W.D11_L1,0) + NVL(W.D11_L2,0))||A.D11_CODE||DECODE(NVL(W.H11_L1, 0) + NVL(W.H11_L2, 0), 0 ,'', 'HOL') AS D11
        ,DECODE(NVL(W.D12_L1,0) + NVL(W.D12_L2,0), 0, '',NVL(W.D12_L1,0) + NVL(W.D12_L2,0))||A.D12_CODE||DECODE(NVL(W.H12_L1, 0) + NVL(W.H12_L2, 0), 0 ,'', 'HOL') AS D12
        ,DECODE(NVL(W.D13_L1,0) + NVL(W.D13_L2,0), 0, '',NVL(W.D13_L1,0) + NVL(W.D13_L2,0))||A.D13_CODE||DECODE(NVL(W.H13_L1, 0) + NVL(W.H13_L2, 0), 0 ,'', 'HOL') AS D13
        ,DECODE(NVL(W.D14_L1,0) + NVL(W.D14_L2,0), 0, '',NVL(W.D14_L1,0) + NVL(W.D14_L2,0))||A.D14_CODE||DECODE(NVL(W.H14_L1, 0) + NVL(W.H14_L2, 0), 0 ,'', 'HOL') AS D14
        ,DECODE(NVL(W.D15_L1,0) + NVL(W.D15_L2,0), 0, '',NVL(W.D15_L1,0) + NVL(W.D15_L2,0))||A.D15_CODE||DECODE(NVL(W.H15_L1, 0) + NVL(W.H15_L2, 0), 0 ,'', 'HOL') AS D15
        ,DECODE(NVL(W.D16_L1,0) + NVL(W.D16_L2,0), 0, '',NVL(W.D16_L1,0) + NVL(W.D16_L2,0))||A.D16_CODE||DECODE(NVL(W.H16_L1, 0) + NVL(W.H16_L2, 0), 0 ,'', 'HOL') AS D16
        ,DECODE(NVL(W.D17_L1,0) + NVL(W.D17_L2,0), 0, '',NVL(W.D17_L1,0) + NVL(W.D17_L2,0))||A.D17_CODE||DECODE(NVL(W.H17_L1, 0) + NVL(W.H17_L2, 0), 0 ,'', 'HOL') AS D17
        ,DECODE(NVL(W.D18_L1,0) + NVL(W.D18_L2,0), 0, '',NVL(W.D18_L1,0) + NVL(W.D18_L2,0))||A.D18_CODE||DECODE(NVL(W.H18_L1, 0) + NVL(W.H18_L2, 0), 0 ,'', 'HOL') AS D18
        ,DECODE(NVL(W.D19_L1,0) + NVL(W.D19_L2,0), 0, '',NVL(W.D19_L1,0) + NVL(W.D19_L2,0))||A.D19_CODE||DECODE(NVL(W.H19_L1, 0) + NVL(W.H19_L2, 0), 0 ,'', 'HOL') AS D19
        ,DECODE(NVL(W.D20_L1,0) + NVL(W.D20_L2,0), 0, '',NVL(W.D20_L1,0) + NVL(W.D20_L2,0))||A.D20_CODE||DECODE(NVL(W.H20_L1, 0) + NVL(W.H20_L2, 0), 0 ,'', 'HOL') AS D20
        ,DECODE(NVL(W.D21_L1,0) + NVL(W.D21_L2,0), 0, '',NVL(W.D21_L1,0) + NVL(W.D21_L2,0))||A.D21_CODE||DECODE(NVL(W.H21_L1, 0) + NVL(W.H21_L2, 0), 0 ,'', 'HOL') AS D21
        ,DECODE(NVL(W.D22_L1,0) + NVL(W.D22_L2,0), 0, '',NVL(W.D22_L1,0) + NVL(W.D22_L2,0))||A.D22_CODE||DECODE(NVL(W.H22_L1, 0) + NVL(W.H22_L2, 0), 0 ,'', 'HOL') AS D22
        ,DECODE(NVL(W.D23_L1,0) + NVL(W.D23_L2,0), 0, '',NVL(W.D23_L1,0) + NVL(W.D23_L2,0))||A.D23_CODE||DECODE(NVL(W.H23_L1, 0) + NVL(W.H23_L2, 0), 0 ,'', 'HOL') AS D23
        ,DECODE(NVL(W.D24_L1,0) + NVL(W.D24_L2,0), 0, '',NVL(W.D24_L1,0) + NVL(W.D24_L2,0))||A.D24_CODE||DECODE(NVL(W.H24_L1, 0) + NVL(W.H24_L2, 0), 0 ,'', 'HOL') AS D24
        ,DECODE(NVL(W.D25_L1,0) + NVL(W.D25_L2,0), 0, '',NVL(W.D25_L1,0) + NVL(W.D25_L2,0))||A.D25_CODE||DECODE(NVL(W.H25_L1, 0) + NVL(W.H25_L2, 0), 0 ,'', 'HOL') AS D25
        ,DECODE(NVL(W.D26_L1,0) + NVL(W.D26_L2,0), 0, '',NVL(W.D26_L1,0) + NVL(W.D26_L2,0))||A.D26_CODE||DECODE(NVL(W.H26_L1, 0) + NVL(W.H26_L2, 0), 0 ,'', 'HOL') AS D26
        ,DECODE(NVL(W.D27_L1,0) + NVL(W.D27_L2,0), 0, '',NVL(W.D27_L1,0) + NVL(W.D27_L2,0))||A.D27_CODE||DECODE(NVL(W.H27_L1, 0) + NVL(W.H27_L2, 0), 0 ,'', 'HOL') AS D27
        ,DECODE(NVL(W.D28_L1,0) + NVL(W.D28_L2,0), 0, '',NVL(W.D28_L1,0) + NVL(W.D28_L2,0))||A.D28_CODE||DECODE(NVL(W.H28_L1, 0) + NVL(W.H28_L2, 0), 0 ,'', 'HOL') AS D28
        ,DECODE(NVL(W.D29_L1,0) + NVL(W.D29_L2,0), 0, '',NVL(W.D29_L1,0) + NVL(W.D29_L2,0))||A.D29_CODE||DECODE(NVL(W.H29_L1, 0) + NVL(W.H29_L2, 0), 0 ,'', 'HOL') AS D29
        ,DECODE(NVL(W.D30_L1,0) + NVL(W.D30_L2,0), 0, '',NVL(W.D30_L1,0) + NVL(W.D30_L2,0))||A.D30_CODE||DECODE(NVL(W.H30_L1, 0) + NVL(W.H30_L2, 0), 0 ,'', 'HOL') AS D30
        ,DECODE(NVL(W.D31_L1,0) + NVL(W.D31_L2,0), 0, '',NVL(W.D31_L1,0) + NVL(W.D31_L2,0))||A.D31_CODE||DECODE(NVL(W.H31_L1, 0) + NVL(W.H31_L2, 0), 0 ,'', 'HOL') AS D31
        , 0, P_CRT_BY, SYSDATE, E.TCO_ORG_PK, A.DEPT_NM, A.DEPT_KNM, A.DEPT_LNM
        ,A.LOCATION_DEPT_PK,NVL(W.TOTAL_WD, 0) + NVL(W.TOTAL_HOL,0) + NVL(A.TOTAL_ABS_PAY, 0) AS TOTAL_WD
        ,W.PROBATION_STATUS, A.TOTAL_ABS_PAY AS ABS_PAY, A.TOTAL_ABS_ALE AS ABS_ALE, A.TOTAL_ABS_NPAY AS ABS_UNPAY, W.TOTAL_HOL AS HOL_HOUR
        FROM THR_EMPLOYEE E, THR_WORK_TIME_MONTH W, THR_ABSENCE_MONTH A
        WHERE E.DEL_IF=0 AND W.DEL_IF=0 AND A.DEL_IF=0
        AND E.PK = W.THR_EMP_PK
        AND E.PK = A.THR_EMP_PK
        AND W.WORK_MON = p_work_mon
        AND A.WORK_MON = p_work_mon
        AND E.JOIN_DT <= p_to
        AND NVL(E.LEFT_DT,p_to) >= p_from
        AND E.SAL_PERIOD = p_sal_period
        AND (flag_cal_resign='N' OR NVL(E.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to)
        AND (E.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                                         WHERE g.del_if = 0
                                                          START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                            CONNECT BY PRIOR g.pk = g.p_pk)
                                        OR p_location_pk ='ALL')
        AND E.PK NOT IN(SELECT X.THR_EMP_PK FROM THR_WORK_MON X WHERE X.DEL_IF=0 AND X.WORK_MON=p_work_mon and x.thr_emp_pk=a.pk);
        
        
        update THR_WORK_MON w
         set w.maternity_yn = 'Y'
         where w.del_if=0 and w.work_mon=p_work_mon 
            and W.SAL_PERIOD=p_SAL_PERIOD
            and w.THR_EMP_PK in(select abc.THR_EMP_PK from thr_absence_reg abc
                  where abc.DEL_IF=0 and abc.START_DT <= p_from and abc.END_DT>=p_to and abc.ABSENCE_TYPE='04'
                  and abc.thr_emp_pk=w.thr_emp_pk )
           and W.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)            
        AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N' AND W.TIMES IS NULL;
        
     
        update thr_work_mon w
        set w.ALE_HAVE = (select decode(e.STATUS,'A', HR_F_CAL_ALE(w.WORK_MON, e.JOIN_DT, E.ALE_DAY_IN_YEAR, E.ALE_PLUS, e.pk)
                                ,HR_F_CAL_ALE_STOP(e.LEFT_DT , e.JOIN_DT, E.ALE_DAY_IN_YEAR, E.ALE_PLUS, e.pk) ) + nvl(A.TOTAL_UNPAY,0)                            
                from thr_employee e , thr_annual_leave a
                where E.DEL_IF = 0
                and A.DEL_IF(+) = 0
                and A.THR_EMP_PK(+) = e.pk
                and A.AN_YEAR(+) = to_number( substr(w.WORK_MON,1,4)) - 1
                and E.PK = w.THR_EMP_PK ) 
            , w.total_ale_use = NVL((SELECT round(SUM (nvl(a.ale_hours,0)/8),2) yearsum
                                FROM thr_current_ale a
                               WHERE a.del_if=0 and a.thr_emp_pk=w.thr_emp_pk 
                                and a.work_mon <= w.work_mon
                                and substr(a.work_mon,1,4) = substr(w.work_mon,1,4)),0)
        where w.del_if=0 
        and w.work_mon=p_work_mon 
        and W.SAL_PERIOD=p_SAL_PERIOD
        and W.TCO_DEPT_PK in (SELECT g.pk
                                     FROM tco_org g
                                    WHERE g.del_if = 0
                                    START WITH g.pk =p_location_pk
                                    CONNECT BY PRIOR g.pk =g.p_pk)            
        AND NVL(W.CLOSE_YN,'N')='N' 
        AND NVL(W.CLOSE_M_YN,'N')='N' 
        AND W.TIMES IS NULL;

        
        update thr_work_mon w
        set w.REMAIN_ALE = nvl(ALE_HAVE,0) - nvl(total_ale_use,0)
        where w.del_if=0 
        and w.work_mon=p_work_mon 
        and W.SAL_PERIOD=p_SAL_PERIOD
        and W.TCO_DEPT_PK in (SELECT g.pk
                                     FROM tco_org g
                                    WHERE g.del_if = 0
                                    START WITH g.pk =p_location_pk
                                    CONNECT BY PRIOR g.pk =g.p_pk)            
        AND NVL(W.CLOSE_YN,'N')='N' 
        AND NVL(W.CLOSE_M_YN,'N')='N' 
        AND W.TIMES IS NULL;        
    
    
        --insert vào bang cong ngay
        UPDATE THR_ATT_ABSENCE W
        SET MOD_BY = P_CRT_BY || '-DEL'
            ,MOD_DT = SYSDATE
        WHERE W.DEL_IF=0 AND W.WORK_DT BETWEEN p_from AND p_to
        and W.SAL_PERIOD=p_SAL_PERIOD
        AND W.TCO_ORG_PK in (SELECT g.pk
                                 FROM tco_org g
                                WHERE g.del_if = 0
                                START WITH g.pk =p_location_pk
                                CONNECT BY PRIOR g.pk =g.p_pk)
        AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N' AND W.TIMES IS NULL;
        
        DELETE THR_ATT_ABSENCE W
        WHERE W.DEL_IF=0 AND W.WORK_DT BETWEEN p_from AND p_to
        and W.SAL_PERIOD=p_SAL_PERIOD
        AND W.TCO_ORG_PK in (SELECT g.pk
                                 FROM tco_org g
                                WHERE g.del_if = 0
                                START WITH g.pk =p_location_pk
                                CONNECT BY PRIOR g.pk =g.p_pk)
        AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N' AND W.TIMES IS NULL;
        
        
        INSERT INTO THR_ATT_ABSENCE (PK, THR_EMP_PK, WORK_DT, EMP_ID, THR_WS_PK, THR_WG_PK, TCO_ORG_PK, TIME_IN, TIME_OUT
        , WT, OT, OT_2 , NT, NOT1, NOT2, ST, NST, OST, NOST, HT, NHT, OHT, NOHT, ABSENCE_TYPE, ABSENCE_TIME, REMARK, DEL_IF, CRT_BY, CRT_DT
        , DAY_TYPE, HOL_TYPE, SAL_PERIOD, TIME_IN_ORG, TIME_OUT_ORG, DATE_IN, DATE_OUT)
        SELECT THR_ATT_ABSENCE_SEQ.NEXTVAL,A.PK,GW.WORK_DT,A.EMP_ID,WS.PK,GP.PK,A.TCO_ORG_PK,WKD.TIME_IN,WKD.TIME_OUT
            ,WKD.WORK_TIME, CASE WHEN NVL(WKD.OVT, 0) >= 1 THEN NVL(WKD.OVT, 0) - 0.5 ELSE NVL(WKD.OVT, 0) END AS OT
            , CASE WHEN NVL(WKD.OVT, 0) >= 1 THEN 0.5 ELSE 0 END AS OT_2
            ,WKD.NT,WKD.NT2,WKD.NT3
            ,WKD.ST ST,WKD.NST NST,WKD.OST OST,WKD.NOST NOST,WKD.HT HT,WKD.NHT NHT,WKD.OHT OHT,WKD.NOHT NOHT
            ,ABS.CODE,ABS.ABSENCE_TIME,'',0,P_CRT_BY,SYSDATE
            ,GW.DAY_TYPE,GW.HOL_TYPE,A.SAL_PERIOD,WKD.TIME_IN_ORG,WKD.TIME_OUT_ORG,WKD.DATE_IN,WKD.DATE_OUT
                  FROM THR_EMPLOYEE A, TCO_ORG C,THR_WORK_GROUP GP,THR_WG_SCH_DETAIL GW,THR_WORK_SHIFT WS
                         ,(SELECT D.THR_EMP_PK AS THR_EMP_PK,D.WORK_DT AS W_DATE,MAX( D.TIME_IN) AS TIME_IN, MAX(D.TIME_OUT) AS TIME_OUT, MAX(D.WORK_TIME) AS WORK_TIME
                               ,MAX(D.PK) AS PK,MAX(D.THR_WS_PK) AS THR_WS_PK
                               ,SUM(DECODE(H.OT_TYPE,'OT',NVL(H.OT_TIME,0),0)) AS OVT
                               ,SUM(DECODE(H.OT_TYPE,'NT',NVL(H.OT_TIME,0),0)) AS NT
                               ,SUM(DECODE(H.OT_TYPE,'NT2',NVL(H.OT_TIME,0),0)) AS NT2
                               ,SUM(DECODE(H.OT_TYPE,'NT3',NVL(H.OT_TIME,0),0)) AS NT3
                               ,SUM(CASE WHEN NVL(D.HOL_TYPE,' ') = 'SUN' AND H.OT_TYPE = 'HT' THEN NVL(H.OT_TIME,0) ELSE 0 END) AS ST
                               ,SUM(CASE WHEN NVL(D.HOL_TYPE,' ') = 'SUN' AND H.OT_TYPE = 'NT' THEN NVL(H.OT_TIME,0) ELSE 0 END) AS NST
                               ,SUM(CASE WHEN NVL(D.HOL_TYPE,' ') = 'SUN' AND H.OT_TYPE = 'OT' THEN NVL(H.OT_TIME,0) ELSE 0 END) AS OST
                               ,SUM(CASE WHEN NVL(D.HOL_TYPE,' ') = 'SUN' AND H.OT_TYPE = 'NT2' THEN NVL(H.OT_TIME,0) ELSE 0 END) AS NOST
                               ,SUM(CASE WHEN NVL(D.HOL_TYPE,' ') = 'HOL' AND H.OT_TYPE = 'HT' THEN NVL(H.OT_TIME,0) ELSE 0 END) AS HT
                               ,SUM(CASE WHEN NVL(D.HOL_TYPE,' ') = 'HOL' AND H.OT_TYPE = 'NT' THEN NVL(H.OT_TIME,0) ELSE 0 END) AS NHT
                               ,SUM(CASE WHEN NVL(D.HOL_TYPE,' ') = 'HOL' AND H.OT_TYPE = 'OT' THEN NVL(H.OT_TIME,0) ELSE 0 END) AS OHT
                               ,SUM(CASE WHEN NVL(D.HOL_TYPE,' ') = 'HOL' AND H.OT_TYPE = 'NT2' THEN NVL(H.OT_TIME,0) ELSE 0 END) AS NOHT
                               ,MAX( D.TIME_IN_ORG) AS TIME_IN_ORG
                               ,MAX( D.TIME_OUT_ORG) AS TIME_OUT_ORG
                               ,MAX( D.DATE_IN) AS DATE_IN
                               ,MAX( D.DATE_OUT) AS DATE_OUT
                        FROM THR_TIME_MACHINE D,THR_EXTRA_TIME H,THR_EMPLOYEE V
                          WHERE D.DEL_IF = 0 AND V.DEL_IF=0 
                          AND H.DEL_IF(+)=0 AND D.THR_EMP_PK=V.PK  
                          AND D.THR_EMP_PK=H.THR_EMP_PK(+)
                          AND D.WORK_DT=H.WORK_DT(+)
                          AND D.WORK_DT BETWEEN p_from AND p_to
                          GROUP BY  D.THR_EMP_PK, D.WORK_DT) WKD
                       ,(SELECT E.ABSENCE_DT AS ABS_DATE,E.THR_EMP_PK, E.ABSENCE_TYPE AS CODE, E.ABSENCE_TIME,E.PK
                           FROM THR_ABSENCE E,THR_EMPLOYEE F
                          WHERE E.DEL_IF = 0 AND F.DEL_IF=0  AND F.PK=E.THR_EMP_PK
                            AND E.ABSENCE_DT  BETWEEN p_from AND p_to
                        ) ABS
                 WHERE A.DEL_IF = 0 AND C.DEL_IF=0 AND GP.DEL_IF=0 AND GW.DEL_IF=0 AND WS.DEL_IF=0 
                   AND A.PK=GW.THR_EMP_PK AND GW.THR_WS_PK=WS.PK
                   AND NVL(A.OLD_JOIN_DT,A.JOIN_DT) <= p_to
                   AND NVL(A.LEFT_DT,'99999999') > TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')-1,'YYYYMMDD')
                   AND A.TCO_ORG_PK = C.PK AND A.THR_WG_PK=GP.PK
                   AND GW.WORK_DT BETWEEN p_from AND p_to
                   AND GW.THR_EMP_PK = WKD.THR_EMP_PK(+)
                   AND GW.THR_EMP_PK = ABS.THR_EMP_PK(+)
                   AND GW.WORK_DT=WKD.W_DATE(+)
                   AND GW.WORK_DT=ABS.ABS_DATE(+)
                   AND A.SAL_PERIOD = p_sal_period
                   AND (flag_cal_resign='N' OR NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to)
                   AND A.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                             WHERE g.del_if = 0
                                              START WITH g.pk = CASE WHEN p_location_pk = 'ALL' THEN G.PK ELSE TO_NUMBER(p_location_pk) END
                                                CONNECT BY PRIOR g.pk = g.p_pk)
                   AND A.PK NOT IN(SELECT X.THR_EMP_PK FROM THR_ATT_ABSENCE X WHERE X.DEL_IF=0 AND X.WORK_DT BETWEEN p_from AND p_to and x.thr_emp_pk=a.pk);
                
     
    END IF;

p_result:=0;
COMMIT;
    EXCEPTION
    WHEN l_check THEN
        p_result:=-1;
        Raise_application_error(-20019, sqlerrm);
    WHEN  OTHERS THEN
        p_result:=-1;
        RAISE_APPLICATION_ERROR(-20002, 'ERRCODE : '|| l_error||SQLERRM );
    ROLLBACK;
END  ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_5;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_5(
    p_work_mon      IN  VARCHAR2,
    p_from        IN    VARCHAR2,    -- YYYYMMDD
    p_to        IN    VARCHAR2,     -- YYYYMMDD
    p_location_pk       IN VARCHAR2,
    p_SAL_PERIOD             in varchar2,
    p_crt_by                VARCHAR2,
    p_result        OUT NUMBER      -- RETURN VALUE ( NUMBER )
) IS

l_error         varchar2(2):='';
l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;
l_probation_num number(1):=0;
l_wt_from     varchar2(8);
l_company_pk number:=0;
L_TIMES varchar2(10):='1';

l_pro varchar2(200):='';
l_string varchar2(2000):='';
l_resign_num        number;
--******************************************
  -- Create by    : huynh truong
--******************************************

BEGIN
    l_error := '10';

     select o.tco_company_pk into l_company_pk
                                            from tco_org o where o.del_if=0 
                                            and  o.pk= p_location_pk;

    open l_cur for
    SELECT A.TIMES FROM THR_CLOSE A
    WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon
    AND A.ID=p_SAL_PERIOD
    and A.TCO_COMPANY_PK=l_company_pk 
    AND NVL(A.CLOSE_YN,'N')='N';

     FETCH l_cur INTO L_TIMES;
      l_flag_exist := l_cur%FOUND;
    CLOSE l_cur;
    IF l_flag_exist=FALSE THEN
        p_result:=-1;
        raise l_check;
    END IF;
--find procedure
    OPEN l_cur FOR
    SELECT A.char_3 FROM VHR_HR_CODE A
    WHERE A.ID='HR0044' AND UPPER(A.CHAR_1)=UPPER('ST_HR_PRO_HRTI01300_5')
    and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;

    FETCH l_cur INTO l_pro;
    l_flag_exist:=l_cur%FOUND;
    CLOSE l_cur;

IF l_flag_exist=TRUE THEN --CO SU DUNG PROCEDURE RIENG
    l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6,:7); end;' ;
    execute  immediate l_string using in p_work_mon,in p_from,in p_to,in p_location_pk,in p_SAL_PERIOD,in p_crt_by,out p_result ;

ELSE
    SELECT MIN(S.FROM_DT) INTO l_wt_from  --NGAY DAU CHU KY CUA THANG 
    FROM THR_CLOSE S
    WHERE S.DEL_IF=0 AND S.KIND_OF_SALARY=1
    and s.TCO_COMPANY_PK=l_company_pk 
    AND S.MONTH_CLOSE=p_work_mon; 
                           
    SELECT A.NUM_3 INTO l_probation_num FROM VHR_HR_CODE A
    WHERE A.ID='HR0002' AND A.CODE='01' and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    
    SELECT decode(nvl(A.NUM_4,0),0,-1,0)
    INTO l_resign_num 
    FROM VHR_HR_CODE A
    WHERE A.ID='HR0006' 
    AND A.CODE='11' 
    and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    DELETE THR_WORK_TIME_MONTH W
    WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
    AND (W.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                         WHERE g.del_if = 0 
                                          START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                            CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_location_pk ='ALL')
    AND NVL(W.CLOSE_YN,'N')='N' AND W.SAL_PERIOD = p_sal_period; 
    
   INSERT INTO THR_WORK_TIME_MONTH(PK, THR_EMP_PK, WORK_MON, EMP_ID, FULL_NAME, TCO_ORG_PK, THR_WG_PK, FROM_DT, TO_DT, JOB_TYPE, POS_TYPE, STATUS
    , LEFT_DT, JOIN_DT, DEL_IF, CRT_BY, CRT_DT, REMARK, CONFIRM_DT, PROBATION_STATUS, TIMES, SAL_PERIOD
    , D1_L1, D1_L2, D2_L1, D2_L2, D3_L1, D3_L2, D4_L1, D4_L2, D5_L1, D5_L2, D6_L1, D6_L2, D7_L1, D7_L2, D8_L1, D8_L2, D9_L1, D9_L2, D10_L1, D10_L2
    , D11_L1, D11_L2, D12_L1, D12_L2, D13_L1, D13_L2, D14_L1, D14_L2, D15_L1, D15_L2, D16_L1, D16_L2, D17_L1, D17_L2, D18_L1, D18_L2, D19_L1, D19_L2, D20_L1, D20_L2
    , D21_L1, D21_L2, D22_L1, D22_L2, D23_L1, D23_L2, D24_L1, D24_L2, D25_L1, D25_L2, D26_L1, D26_L2, D27_L1, D27_L2, D28_L1, D28_L2, D29_L1, D29_L2, D30_L1, D30_L2
    , D31_L1, D31_L2, TOTAL_WD_L1, TOTAL_RATE_WD_L1, TOTAL_WD_L2, TOTAL_RATE_WD_L2, TOTAL_WD, TOTAL_RATE_WD
    , H1_L1, H1_L2, H2_L1, H2_L2, H3_L1, H3_L2, H4_L1, H4_L2, H5_L1, H5_L2, H6_L1, H6_L2, H7_L1, H7_L2, H8_L1, H8_L2, H9_L1, H9_L2, H10_L1, H10_L2
    , H11_L1, H11_L2, H12_L1, H12_L2, H13_L1, H13_L2, H14_L1, H14_L2, H15_L1, H15_L2, H16_L1, H16_L2, H17_L1, H17_L2, H18_L1, H18_L2, H19_L1, H19_L2, H20_L1, H20_L2
    , H21_L1, H21_L2, H22_L1, H22_L2, H23_L1, H23_L2, H24_L1, H24_L2, H25_L1, H25_L2, H26_L1, H26_L2, H27_L1, H27_L2, H28_L1, H28_L2, H29_L1, H29_L2, H30_L1, H30_L2
    , H31_L1, H31_L2
    , TOTAL_HOL_L1, TOTAL_HOL_L2, TOTAL_HOL
    )
    SELECT THR_WORK_TIME_MONTH_SEQ.NEXTVAL, E.PK, p_work_mon, E.EMP_ID, E.FULL_NAME, E.TCO_ORG_PK, E.THR_WG_PK , l_wt_from, p_to, E.JOB_TYPE, E.POS_TYPE, E.STATUS
    , E.LEFT_DT, E.JOIN_DT, 0, p_crt_by, SYSDATE, 'PROCESS WT', M.CONFIRM_DT
    ,(CASE WHEN TO_CHAR(TO_DATE(E.END_PROBATION,'YYYYMMDD'),'YYYYMMDD') >p_to THEN '01' --probation
            WHEN TO_CHAR(TO_DATE(E.END_PROBATION,'YYYYMMDD'),'YYYYMMDD')<=l_wt_from THEN '03' --offical
            ELSE '02' END) AS PROBATION_STATUS, l_times, p_sal_period
    , Z.D1_L1, Z.D1_L2, Z.D2_L1, Z.D2_L2, Z.D3_L1, Z.D3_L2, Z.D4_L1, Z.D4_L2, Z.D5_L1, Z.D5_L2, Z.D6_L1, Z.D6_L2, Z.D7_L1, Z.D7_L2, Z.D8_L1, Z.D8_L2, Z.D9_L1, Z.D9_L2, Z.D10_L1, Z.D10_L2
    , Z.D11_L1, Z.D11_L2, Z.D12_L1, Z.D12_L2, Z.D13_L1, Z.D13_L2, Z.D14_L1, Z.D14_L2, Z.D15_L1, Z.D15_L2, Z.D16_L1, Z.D16_L2, Z.D17_L1, Z.D17_L2, Z.D18_L1, Z.D18_L2, Z.D19_L1, Z.D19_L2, Z.D20_L1, Z.D20_L2
    , Z.D21_L1, Z.D21_L2, Z.D22_L1, Z.D22_L2, Z.D23_L1, Z.D23_L2, Z.D24_L1, Z.D24_L2, Z.D25_L1, Z.D25_L2, Z.D26_L1, Z.D26_L2, Z.D27_L1, Z.D27_L2, Z.D28_L1, Z.D28_L2, Z.D29_L1, Z.D29_L2, Z.D30_L1, Z.D30_L2
    , Z.D31_L1, Z.D31_L2, Z.TOTAL_WD_L1, Z.TOTAL_RATE_WD_L1, Z.TOTAL_WD_L2, Z.TOTAL_RATE_WD_L2
    , NVL(Z.TOTAL_WD_L1, 0) + NVL(Z.TOTAL_WD_L2, 0) AS TOTAL_WD
    , NVL(Z.TOTAL_RATE_WD_L1, 0) + NVL(Z.TOTAL_RATE_WD_L2, 0) AS TOTAL_RATE_WD 
    , HOL.H1_L1, HOL.H1_L2, HOL.H2_L1, HOL.H2_L2, HOL.H3_L1, HOL.H3_L2, HOL.H4_L1, HOL.H4_L2, HOL.H5_L1, HOL.H5_L2, HOL.H6_L1, HOL.H6_L2, HOL.H7_L1, HOL.H7_L2, HOL.H8_L1, HOL.H8_L2, HOL.H9_L1, HOL.H9_L2, HOL.H10_L1, HOL.H10_L2
    , HOL.H11_L1, HOL.H11_L2, HOL.H12_L1, HOL.H12_L2, HOL.H13_L1, HOL.H13_L2, HOL.H14_L1, HOL.H14_L2, HOL.H15_L1, HOL.H15_L2, HOL.H16_L1, HOL.H16_L2, HOL.H17_L1, HOL.H17_L2, HOL.H18_L1, HOL.H18_L2, HOL.H19_L1, HOL.H19_L2, HOL.H20_L1, HOL.H20_L2
    , HOL.H21_L1, HOL.H21_L2, HOL.H22_L1, HOL.H22_L2, HOL.H23_L1, HOL.H23_L2, HOL.H24_L1, HOL.H24_L2, HOL.H25_L1, HOL.H25_L2, HOL.H26_L1, HOL.H26_L2, HOL.H27_L1, HOL.H27_L2, HOL.H28_L1, HOL.H28_L2, HOL.H29_L1, HOL.H29_L2, HOL.H30_L1, HOL.H30_L2
    , HOL.H31_L1, HOL.H31_L2
    , HOL.TOTAL_HOL_L1, HOL.TOTAL_HOL_L2, HOL.TOTAL_HOL
      FROM  (SELECT   W.THR_EMP_PK
               , SUM(W.D1_L1) AS D1_L1
               , SUM(W.D1_L2) AS D1_L2
               , SUM(W.D2_L1) AS D2_L1
               , SUM(W.D2_L2) AS D2_L2
               , SUM(W.D3_L1) AS D3_L1
               , SUM(W.D3_L2) AS D3_L2
               , SUM(W.D4_L1) AS D4_L1
               , SUM(W.D4_L2) AS D4_L2
               , SUM(W.D5_L1) AS D5_L1
               , SUM(W.D5_L2) AS D5_L2
               , SUM(W.D6_L1) AS D6_L1
               , SUM(W.D6_L2) AS D6_L2
               , SUM(W.D7_L1) AS D7_L1
               , SUM(W.D7_L2) AS D7_L2
               , SUM(W.D8_L1) AS D8_L1
               , SUM(W.D8_L2) AS D8_L2
               , SUM(W.D9_L1) AS D9_L1
               , SUM(W.D9_L2) AS D9_L2
               , SUM(W.D10_L1) AS D10_L1
               , SUM(W.D10_L2) AS D10_L2
               , SUM(W.D11_L1) AS D11_L1
               , SUM(W.D11_L2) AS D11_L2
               , SUM(W.D12_L1) AS D12_L1
               , SUM(W.D12_L2) AS D12_L2
               , SUM(W.D13_L1) AS D13_L1
               , SUM(W.D13_L2) AS D13_L2
               , SUM(W.D14_L1) AS D14_L1
               , SUM(W.D14_L2) AS D14_L2
               , SUM(W.D15_L1) AS D15_L1
               , SUM(W.D15_L2) AS D15_L2
               , SUM(W.D16_L1) AS D16_L1
               , SUM(W.D16_L2) AS D16_L2
               , SUM(W.D17_L1) AS D17_L1
               , SUM(W.D17_L2) AS D17_L2
               , SUM(W.D18_L1) AS D18_L1
               , SUM(W.D18_L2) AS D18_L2
               , SUM(W.D19_L1) AS D19_L1
               , SUM(W.D19_L2) AS D19_L2
               , SUM(W.D20_L1) AS D20_L1
               , SUM(W.D20_L2) AS D20_L2
               , SUM(W.D21_L1) AS D21_L1
               , SUM(W.D21_L2) AS D21_L2
               , SUM(W.D22_L1) AS D22_L1
               , SUM(W.D22_L2) AS D22_L2
               , SUM(W.D23_L1) AS D23_L1
               , SUM(W.D23_L2) AS D23_L2
               , SUM(W.D24_L1) AS D24_L1
               , SUM(W.D24_L2) AS D24_L2
               , SUM(W.D25_L1) AS D25_L1
               , SUM(W.D25_L2) AS D25_L2
               , SUM(W.D26_L1) AS D26_L1
               , SUM(W.D26_L2) AS D26_L2
               , SUM(W.D27_L1) AS D27_L1
               , SUM(W.D27_L2) AS D27_L2
               , SUM(W.D28_L1) AS D28_L1
               , SUM(W.D28_L2) AS D28_L2
               , SUM(W.D29_L1) AS D29_L1
               , SUM(W.D29_L2) AS D29_L2
               , SUM(W.D30_L1) AS D30_L1
               , SUM(W.D30_L2) AS D30_L2
               , SUM(W.D31_L1) AS D31_L1
               , SUM(W.D31_L2) AS D31_L2
               , SUM(W.TOTAL_WD_L1) AS TOTAL_WD_L1
               , SUM(W.TOTAL_RATE_WD_L1) AS TOTAL_RATE_WD_L1
               , SUM(W.TOTAL_WD_L2) AS TOTAL_WD_L2
               , SUM(W.TOTAL_RATE_WD_L2) AS TOTAL_RATE_WD_L2
        FROM (SELECT T.THR_EMP_PK
               ,SUM(DECODE(T.WORK_DT,l_wt_from,NVL(T.WORK_TIME,0),0)) AS D1_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D2_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D3_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D4_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D5_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D6_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D7_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D8_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D9_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D10_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D11_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D12_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D13_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D14_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D15_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D16_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D17_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D18_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D19_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D20_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D21_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D22_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D23_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D24_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D25_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D26_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D27_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D28_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D29_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D30_L1
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D31_L1
               , 0 AS D1_L2, 0 AS D2_L2, 0 AS D3_L2, 0 AS D4_L2, 0 AS D5_L2, 0 AS D6_L2, 0 AS D7_L2, 0 AS D8_L2, 0 AS D9_L2, 0 AS D10_L2
               , 0 AS D11_L2, 0 AS D12_L2, 0 AS D13_L2, 0 AS D14_L2, 0 AS D15_L2, 0 AS D16_L2, 0 AS D17_L2, 0 AS D18_L2, 0 AS D19_L2, 0 AS D20_L2
               , 0 AS D21_L2, 0 AS D22_L2, 0 AS D23_L2, 0 AS D24_L2, 0 AS D25_L2, 0 AS D26_L2, 0 AS D27_L2, 0 AS D28_L2, 0 AS D29_L2, 0 AS D30_L2, 0 AS D31_L2
               , SUM(NVL(T.WORK_TIME, 0)) AS TOTAL_WD_L1
               , SUM(NVL(T.WORK_TIME, 0)* NVL(T.PAY_RATE, 100)/100) AS TOTAL_RATE_WD_L1
               , 0 AS TOTAL_WD_L2, 0 AS TOTAL_RATE_WD_L2
        FROM THR_TIME_MACHINE T,THR_EMPLOYEE D, THR_SALARY_MANAGE S
        WHERE T.DEL_IF = 0 AND D.DEL_IF=0 AND S.DEL_IF(+) =0
          AND D.PK = S.THR_EMP_PK(+)
          AND S.WORK_MON(+) = p_work_mon
          AND T.THR_EMP_PK=D.PK
          AND T.WORK_DT BETWEEN l_wt_from AND p_to
          AND NVL(S.CONFIRM_DT(+), l_wt_from)>l_wt_from
          AND T.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(S.CONFIRM_DT,NVL(D.CONFIRM_DT, l_wt_from)),'YYYYMMDD')-1,'YYYYMMDD')
          AND T.WORK_DT BETWEEN d.join_dt AND  to_char(to_date(nvl(d.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd') 
          AND T.WORK_DT BETWEEN  D.JOIN_DT AND NVL(S.CONFIRM_DT,p_to)
          AND D.JOIN_DT<=p_to
          AND NVL(D.LEFT_DT,p_to)>=l_wt_from
          AND NVL(D.LEFT_DT,'99999999') BETWEEN p_from AND p_to
          AND (D.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                         WHERE g.del_if = 0 
                                          START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                            CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_location_pk ='ALL')
        GROUP BY  T.THR_EMP_PK
      UNION ALL
        SELECT T.THR_EMP_PK
               , 0 AS D1_L1, 0 AS D2_L1, 0 AS D3_L1, 0 AS D4_L1, 0 AS D5_L1, 0 AS D6_L1, 0 AS D7_L1, 0 AS D8_L1, 0 AS D9_L1, 0 AS D10_L1
               , 0 AS D11_L1, 0 AS D12_L1, 0 AS D13_L1, 0 AS D14_L1, 0 AS D15_L1, 0 AS D16_L1, 0 AS D17_L1, 0 AS D18_L1, 0 AS D19_L1, 0 AS D20_L1
               , 0 AS D21_L1, 0 AS D22_L1, 0 AS D23_L1, 0 AS D24_L1, 0 AS D25_L1, 0 AS D26_L1, 0 AS D27_L1, 0 AS D28_L1, 0 AS D29_L1, 0 AS D30_L1, 0 AS D31_L1
               ,SUM(DECODE(T.WORK_DT,l_wt_from,NVL(T.WORK_TIME,0),0)) AS D1_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D2_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D3_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D4_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D5_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D6_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D7_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D8_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D9_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D10_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D11_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D12_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D13_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D14_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D15_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D16_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D17_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D18_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D19_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D20_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D21_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D22_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D23_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D24_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D25_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D26_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D27_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D28_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D29_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D30_L2
               ,SUM(DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD'),NVL(T.WORK_TIME,0),0)) AS D31_L2
               , 0 AS TOTAL_WD_L1, 0 AS TOTAL_RATE_WD_L1
               , SUM(NVL(T.WORK_TIME, 0)) AS TOTAL_WD_L2
               , SUM(NVL(T.WORK_TIME, 0)* NVL(T.PAY_RATE, 100)/100) AS TOTAL_RATE_WD_L2
        FROM THR_TIME_MACHINE T,THR_EMPLOYEE D, THR_SALARY_MANAGE S
        WHERE T.DEL_IF = 0 AND D.DEL_IF=0 AND S.DEL_IF(+) =0
          AND D.PK = S.THR_EMP_PK(+)
          AND S.WORK_MON(+) = p_work_mon
          AND T.THR_EMP_PK=D.PK
          AND T.WORK_DT BETWEEN l_wt_from AND p_to
          AND T.WORK_DT BETWEEN D.join_dt AND TO_CHAR(TO_DATE(NVL(D.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
          AND NVL(S.CONFIRM_DT(+), l_wt_from)<=p_to
          AND T.WORK_DT BETWEEN NVL(S.CONFIRM_DT,NVL(D.CONFIRM_DT, l_wt_from)) AND p_to
          AND D.JOIN_DT<=p_to
          AND NVL(D.LEFT_DT,p_to)>=l_wt_from
          AND NVL(D.LEFT_DT,'99999999') BETWEEN p_from AND p_to
          AND (D.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                     WHERE g.del_if = 0 
                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                        OR p_location_pk ='ALL')
        GROUP BY  T.THR_EMP_PK) W
    GROUP BY W.THR_EMP_PK) Z   -- WORIKING DAY.
   ,(SELECT   H.THR_EMP_PK
               , SUM(H.H1_L1) AS H1_L1
               , SUM(H.H1_L2) AS H1_L2
               , SUM(H.H2_L1) AS H2_L1
               , SUM(H.H2_L2) AS H2_L2
               , SUM(H.H3_L1) AS H3_L1
               , SUM(H.H3_L2) AS H3_L2
               , SUM(H.H4_L1) AS H4_L1
               , SUM(H.H4_L2) AS H4_L2
               , SUM(H.H5_L1) AS H5_L1
               , SUM(H.H5_L2) AS H5_L2
               , SUM(H.H6_L1) AS H6_L1
               , SUM(H.H6_L2) AS H6_L2
               , SUM(H.H7_L1) AS H7_L1
               , SUM(H.H7_L2) AS H7_L2
               , SUM(H.H8_L1) AS H8_L1
               , SUM(H.H8_L2) AS H8_L2
               , SUM(H.H9_L1) AS H9_L1
               , SUM(H.H9_L2) AS H9_L2
               , SUM(H.H10_L1) AS H10_L1
               , SUM(H.H10_L2) AS H10_L2
               , SUM(H.H11_L1) AS H11_L1
               , SUM(H.H11_L2) AS H11_L2
               , SUM(H.H12_L1) AS H12_L1
               , SUM(H.H12_L2) AS H12_L2
               , SUM(H.H13_L1) AS H13_L1
               , SUM(H.H13_L2) AS H13_L2
               , SUM(H.H14_L1) AS H14_L1
               , SUM(H.H14_L2) AS H14_L2
               , SUM(H.H15_L1) AS H15_L1
               , SUM(H.H15_L2) AS H15_L2
               , SUM(H.H16_L1) AS H16_L1
               , SUM(H.H16_L2) AS H16_L2
               , SUM(H.H17_L1) AS H17_L1
               , SUM(H.H17_L2) AS H17_L2
               , SUM(H.H18_L1) AS H18_L1
               , SUM(H.H18_L2) AS H18_L2
               , SUM(H.H19_L1) AS H19_L1
               , SUM(H.H19_L2) AS H19_L2
               , SUM(H.H20_L1) AS H20_L1
               , SUM(H.H20_L2) AS H20_L2
               , SUM(H.H21_L1) AS H21_L1
               , SUM(H.H21_L2) AS H21_L2
               , SUM(H.H22_L1) AS H22_L1
               , SUM(H.H22_L2) AS H22_L2
               , SUM(H.H23_L1) AS H23_L1
               , SUM(H.H23_L2) AS H23_L2
               , SUM(H.H24_L1) AS H24_L1
               , SUM(H.H24_L2) AS H24_L2
               , SUM(H.H25_L1) AS H25_L1
               , SUM(H.H25_L2) AS H25_L2
               , SUM(H.H26_L1) AS H26_L1
               , SUM(H.H26_L2) AS H26_L2
               , SUM(H.H27_L1) AS H27_L1
               , SUM(H.H27_L2) AS H27_L2
               , SUM(H.H28_L1) AS H28_L1
               , SUM(H.H28_L2) AS H28_L2
               , SUM(H.H29_L1) AS H29_L1
               , SUM(H.H29_L2) AS H29_L2
               , SUM(H.H30_L1) AS H30_L1
               , SUM(H.H30_L2) AS H30_L2
               , SUM(H.H31_L1) AS H31_L1
               , SUM(H.H31_L2) AS H31_L2
               , SUM(H.TOTAL_HOL_L1) AS TOTAL_HOL_L1
               , SUM(H.TOTAL_HOL_L2) AS TOTAL_HOL_L2
               , SUM(NVL(H.TOTAL_HOL_L1,0) + NVL(H.TOTAL_HOL_L2,0)) AS TOTAL_HOL
        FROM (SELECT T.THR_EMP_PK
               ,SUM(DECODE(C.ABSENCE_DT,l_wt_from,'',DECODE(T.WORK_DT,l_wt_from,8,0)))  AS H1_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD'),8,0)))  AS H2_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD'),8,0)))  AS H3_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD'),8,0)))  AS H4_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD'),8,0)))  AS H5_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD'),8,0)))  AS H6_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD'),8,0)))  AS H7_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD'),8,0)))  AS H8_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD'),8,0)))  AS H9_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD'),8,0)))  AS H10_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD'),8,0)))  AS H11_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD'),8,0)))  AS H12_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD'),8,0)))  AS H13_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD'),8,0)))  AS H14_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD'),8,0)))  AS H15_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD'),8,0)))  AS H16_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD'),8,0)))  AS H17_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD'),8,0)))  AS H18_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD'),8,0)))  AS H19_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD'),8,0)))  AS H20_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD'),8,0)))  AS H21_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD'),8,0)))  AS H22_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD'),8,0)))  AS H23_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD'),8,0)))  AS H24_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD'),8,0)))  AS H25_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD'),8,0)))  AS H26_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD'),8,0)))  AS H27_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD'),8,0)))  AS H28_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD'),8,0)))  AS H29_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD'),8,0)))  AS H30_L1
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD'),8,0)))  AS H31_L1
               , 0 AS H1_L2, 0 AS H2_L2, 0 AS H3_L2, 0 AS H4_L2, 0 AS H5_L2, 0 AS H6_L2, 0 AS H7_L2, 0 AS H8_L2, 0 AS H9_L2, 0 AS H10_L2
               , 0 AS H11_L2, 0 AS H12_L2, 0 AS H13_L2, 0 AS H14_L2, 0 AS H15_L2, 0 AS H16_L2, 0 AS H17_L2, 0 AS H18_L2, 0 AS H19_L2, 0 AS H20_L2
               , 0 AS H21_L2, 0 AS H22_L2, 0 AS H23_L2, 0 AS H24_L2, 0 AS H25_L2, 0 AS H26_L2, 0 AS H27_L2, 0 AS H28_L2, 0 AS H29_L2, 0 AS H30_L2, 0 AS H31_L2
               , SUM(CASE WHEN C.ABSENCE_DT IS NULL THEN 8 ELSE 0 END) AS TOTAL_HOL_L1
               , 0 AS TOTAL_HOL_L2
        FROM THR_WG_SCH_DETAIL T,THR_EMPLOYEE D, THR_SALARY_MANAGE S,THR_ABSENCE C
        WHERE T.DEL_IF = 0 AND D.DEL_IF=0 AND S.DEL_IF(+) =0 AND C.DEL_IF(+)=0
          AND D.PK = S.THR_EMP_PK(+)
          AND S.WORK_MON(+) = p_work_mon
          AND T.THR_EMP_PK=D.PK
          AND T.THR_EMP_PK=C.THR_EMP_PK(+)
          AND T.WORK_DT=C.ABSENCE_DT(+)
          AND C.THR_ABSENCE_REG_PK(+) IS NOT NULL 
          AND T.WORK_DT BETWEEN l_wt_from AND p_to
          AND NVL(S.CONFIRM_DT(+), l_wt_from)>l_wt_from
          AND T.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(S.CONFIRM_DT,NVL(D.CONFIRM_DT, l_wt_from)),'YYYYMMDD')-1,'YYYYMMDD')
          AND T.WORK_DT BETWEEN d.join_dt AND  to_char(to_date(nvl(d.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd') 
          AND T.WORK_DT BETWEEN  D.JOIN_DT AND NVL(S.CONFIRM_DT,p_to)
          AND D.JOIN_DT<=p_to
          AND NVL(D.LEFT_DT,p_to)>=l_wt_from
          AND NVL(D.LEFT_DT,'99999999') BETWEEN p_from AND p_to
          AND T.HOL_TYPE IS NOT NULL
          AND T.HOL_TYPE = 'HOL'
          AND (D.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                         WHERE g.del_if = 0 
                                          START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                            CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_location_pk ='ALL')
        GROUP BY  T.THR_EMP_PK
      UNION ALL
        SELECT T.THR_EMP_PK
               , 0 AS H1_L1, 0 AS H2_L1, 0 AS H3_L1, 0 AS H4_L1, 0 AS H5_L1, 0 AS H6_L1, 0 AS H7_L1, 0 AS H8_L1, 0 AS H9_L1, 0 AS H10_L1
               , 0 AS H11_L1, 0 AS H12_L1, 0 AS H13_L1, 0 AS H14_L1, 0 AS H15_L1, 0 AS H16_L1, 0 AS H17_L1, 0 AS H18_L1, 0 AS H19_L1, 0 AS H20_L1
               , 0 AS H21_L1, 0 AS H22_L1, 0 AS H23_L1, 0 AS H24_L1, 0 AS H25_L1, 0 AS H26_L1, 0 AS H27_L1, 0 AS H28_L1, 0 AS H29_L1, 0 AS H30_L1, 0 AS H31_L1
               ,SUM(DECODE(C.ABSENCE_DT,l_wt_from,'',DECODE(T.WORK_DT,l_wt_from,8,0)))  AS H1_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD'),8,0)))  AS H2_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD'),8,0)))  AS H3_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD'),8,0)))  AS H4_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD'),8,0)))  AS H5_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD'),8,0)))  AS H6_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD'),8,0)))  AS H7_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD'),8,0)))  AS H8_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD'),8,0)))  AS H9_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD'),8,0)))  AS H10_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD'),8,0)))  AS H11_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD'),8,0)))  AS H12_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD'),8,0)))  AS H13_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD'),8,0)))  AS H14_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD'),8,0)))  AS H15_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD'),8,0)))  AS H16_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD'),8,0)))  AS H17_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD'),8,0)))  AS H18_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD'),8,0)))  AS H19_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD'),8,0)))  AS H20_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD'),8,0)))  AS H21_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD'),8,0)))  AS H22_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD'),8,0)))  AS H23_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD'),8,0)))  AS H24_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD'),8,0)))  AS H25_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD'),8,0)))  AS H26_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD'),8,0)))  AS H27_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD'),8,0)))  AS H28_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD'),8,0)))  AS H29_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD'),8,0)))  AS H30_L2
               ,SUM(DECODE(C.ABSENCE_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD'),'',DECODE(T.WORK_DT,TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD'),8,0)))  AS H31_L2
               , 0 AS TOTAL_HOL_L1
               , SUM(CASE WHEN C.ABSENCE_DT IS NULL THEN 8 ELSE 0 END) AS TOTAL_HOL_L2
        FROM THR_WG_SCH_DETAIL T,THR_EMPLOYEE D, THR_SALARY_MANAGE S,THR_ABSENCE C
        WHERE T.DEL_IF = 0 AND D.DEL_IF=0 AND S.DEL_IF(+) =0 AND C.DEL_IF(+)=0
          AND D.PK = S.THR_EMP_PK(+)
          AND S.WORK_MON(+) = p_work_mon
          AND T.THR_EMP_PK=D.PK
          AND T.THR_EMP_PK=C.THR_EMP_PK(+)
          AND T.WORK_DT=C.ABSENCE_DT(+)
          AND C.THR_ABSENCE_REG_PK(+) IS NOT NULL 
          AND T.WORK_DT BETWEEN l_wt_from AND p_to
          AND T.WORK_DT BETWEEN D.join_dt AND TO_CHAR(TO_DATE(NVL(D.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num ,'YYYYMMDD')
          AND NVL(S.CONFIRM_DT(+), l_wt_from)<=p_to
          AND T.WORK_DT BETWEEN NVL(S.CONFIRM_DT,NVL(D.CONFIRM_DT, l_wt_from)) AND p_to
          AND D.JOIN_DT<=p_to
          AND NVL(D.LEFT_DT,p_to)>=l_wt_from
          AND NVL(D.LEFT_DT,'99999999') BETWEEN p_from AND p_to
          AND T.HOL_TYPE IS NOT NULL
          AND T.HOL_TYPE = 'HOL'
          AND (D.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                     WHERE g.del_if = 0 
                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                        OR p_location_pk ='ALL')
        GROUP BY  T.THR_EMP_PK) H
    GROUP BY H.THR_EMP_PK) HOL   -- HOLIDAY
   , THR_EMPLOYEE E, THR_SALARY_MANAGE M
   WHERE E.DEL_IF=0 AND M.DEL_IF(+)=0
   AND M.THR_EMP_PK(+) = E.PK
   AND M.WORK_MON(+) = p_work_mon
   AND E.PK = Z.THR_EMP_PK(+)
   AND E.PK = HOL.THR_EMP_PK(+)
   AND E.JOIN_DT <= p_to
   AND NVL(E.LEFT_DT,p_to) >= l_wt_from
   AND NVL(E.LEFT_DT,'99999999') BETWEEN p_from AND p_to
   AND (E.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                             WHERE g.del_if = 0
                              START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                CONNECT BY PRIOR g.pk = g.p_pk)
            OR p_location_pk ='ALL')
   AND E.PK NOT IN(SELECT X.THR_EMP_PK FROM THR_WORK_TIME_MONTH X WHERE X.DEL_IF=0 AND X.WORK_MON=p_work_mon and x.thr_emp_pk=e.pk);
    
  
     update THR_WORK_MON w
     set w.maternity_yn = 'Y'
     where w.del_if=0 and w.work_mon=p_work_mon 
            and W.SAL_PERIOD=p_SAL_PERIOD
            and W.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
            and w.THR_EMP_PK in(select abc.THR_EMP_PK 
                                from thr_absence_reg abc,thr_employee e
                                where abc.DEL_IF=0 AND E.DEL_IF=0 and abc.START_DT <= l_wt_from
                                and e.pk=abc.thr_emp_pk
                                AND E.TCO_COMPANY_PK=l_company_pk 
                              and abc.END_DT>=p_to and abc.ABSENCE_TYPE='04' 
                              AND abc.thr_emp_pk=w.thr_emp_pk); 
                              
       
       update  THR_SALARY_MANAGE s
            set s.times=l_times
                ,S.SAL_PERIOD=p_SAL_PERIOD
            where s.DEL_IF=0 and s.work_mon= p_work_mon and nvl(s.close_yn,'N')='N' and nvl(s.close_M_yn,'N')='N'
            and S.TCO_ORG_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
             and   S.thr_emp_pk in ( select e.pk from thr_employee e 
                                    where e.del_if=0  
                                    AND NVL(e.LEFT_DT,'99999999') BETWEEN p_from AND p_to
                                    AND e.LEFT_DT IS NOT NULL and s.thr_emp_pk=e.pk
                                    );
          
           
           update thr_extra_month s
           set s.times=l_times
                ,s.SAL_PERIOD=p_SAL_PERIOD
                ,s.status='R'
            where s.DEL_IF=0 and s.work_mon=p_work_mon
            and nvl(s.close_yn,'N')='N' and nvl(s.close_M_yn,'N')='N'
            and S.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
            and   S.thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'99999999') BETWEEN p_from AND p_to
                        AND e.LEFT_DT IS NOT NULL and s.thr_emp_pk=e.pk
                    );
           
           update thr_month_salary s
            set s.times=l_times
                ,s.sal_period=p_SAL_PERIOD
            ,s.status='R'
            where s.DEL_IF=0 and s.work_mon=p_work_mon
                and S.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
             and nvl(s.close_yn,'N')='N' and nvl(s.close_M_yn,'N')='N'
             and   S.thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'99999999') BETWEEN p_from AND p_to
                    AND e.LEFT_DT IS NOT NULL and s.thr_emp_pk=e.pk
                    );
             
           update thr_month_allow s
            set s.times=l_times
                ,s.SAL_PERIOD=p_SAL_PERIOD
            where s.DEL_IF=0 and s.work_mon=p_work_mon            
             and nvl(s.close_yn,'N')='N' and nvl(s.close_M_yn,'N')='N'
            and   S.thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'99999999') BETWEEN p_from AND p_to
                        AND e.LEFT_DT IS NOT NULL and s.thr_emp_pk=e.pk
                         );
            
            update thr_month_summary s
            set s.times=l_times
                ,s.SAL_PERIOD=p_SAL_PERIOD
            ,s.status='R'
            where s.DEL_IF=0 and s.work_mon=p_work_mon
            and S.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
             and nvl(s.close_yn,'N')='N' and nvl(s.close_M_yn,'N')='N'
            and   S.thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0  
                    AND NVL(e.LEFT_DT,'99999999') BETWEEN p_from AND p_to
                        AND e.LEFT_DT IS NOT NULL and s.thr_emp_pk=e.pk
                         );

END IF;                  
p_result:=0;
COMMIT;
    EXCEPTION
    WHEN l_check THEN
        p_result:=-1;
        Raise_application_error(-20019, sqlerrm);
    WHEN  OTHERS THEN
        p_result:=-1;
        RAISE_APPLICATION_ERROR(-20002, 'ERRCODE : '|| l_error||SQLERRM );
    ROLLBACK;
END  ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_6;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_6(
    p_work_mon      IN  VARCHAR2,
    p_from        IN    VARCHAR2,    -- YYYYMMDD
    p_to        IN    VARCHAR2,     -- YYYYMMDD
    p_location_pk       IN VARCHAR2,
    p_SAL_PERIOD             in varchar2,
    p_crt_by                VARCHAR2,
    p_result        OUT NUMBER      -- RETURN VALUE ( NUMBER )
) IS

l_error         varchar2(2):='';
l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;
l_probation_num number(1):=0;

l_company_pk number:=0;
L_TIMES varchar2(10):='1';
l_wt_from varchar2(8);
l_pro varchar2(200):='';
l_string varchar2(2000):='';
l_resign_num        number;
F_LAG_NT2 VARCHAR(1):='N';--- CO XAI 2 LOAD NT ?
l_ot_kind       varchar(2):='';
--******************************************
  -- Create by    : huynh truong
--******************************************

BEGIN
    l_error := '10';
 p_result:=1;
     select o.tco_company_pk into l_company_pk
                                            from tco_org o where o.del_if=0 
                                            and  o.pk= p_location_pk;
    
    open l_cur for
    SELECT TIMES FROM THR_CLOSE A
    WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon
    AND A.ID=p_SAL_PERIOD
    and A.TCO_COMPANY_PK= l_company_pk
    AND NVL(A.CLOSE_YN,'N')='N';

     FETCH l_cur INTO l_TIMES;
      l_flag_exist := l_cur%FOUND;
    CLOSE l_cur;
    IF l_flag_exist=FALSE THEN
        p_result:=-1;
        raise l_check;
    END IF;
    
--find procedure
    OPEN l_cur FOR
    SELECT A.char_3 FROM VHR_HR_CODE A
    WHERE A.ID='HR0044' AND UPPER(A.CHAR_1)=UPPER('ST_HR_PRO_HRTI01300_6')and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;

    FETCH l_cur INTO l_pro;
    l_flag_exist:=l_cur%FOUND;
    CLOSE l_cur;

IF l_flag_exist=TRUE THEN --CO SU DUNG PROCEDURE RIENG
    l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6,:7); end;' ;
    execute  immediate l_string using in p_work_mon,in p_from,in p_to,in p_location_pk,in p_SAL_PERIOD,in p_crt_by,out p_result ;

ELSE  

    SELECT NVL(A.NUM_3,0) INTO l_probation_num FROM VHR_HR_CODE A
    WHERE A.ID='HR0002' AND A.CODE='01' and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    SELECT decode(nvl(A.NUM_4,0),0,-1,0)
    INTO l_resign_num 
    FROM VHR_HR_CODE A
    WHERE A.ID='HR0006' 
    AND A.CODE='11' 
    and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    OPEN l_cur FOR
        SELECT NVL(A.char_3,'N')  INTO F_LAG_NT2  --- CO XAI 2 LOAD NT ? 
        FROM VHR_HR_CODE A
        WHERE A.ID='HR0031' and  nvl(a.TCO_COMPANY_PK,l_company_pk)=l_company_pk ;

        FETCH l_cur INTO F_LAG_NT2;
        l_flag_exist:=l_cur%FOUND;
        CLOSE l_cur;

    SELECT A.CODE INTO l_ot_kind FROM VHR_HR_CODE A
        WHERE A.ID='HR0038' and  nvl(a.TCO_COMPANY_PK,l_company_pk)=l_company_pk 
         and rownum=1;
    
    SELECT MIN(S.FROM_DT) INTO l_wt_from  --NGAY DAU CHU KY CUA THANG 
    FROM THR_CLOSE S
    WHERE S.DEL_IF=0 AND S.KIND_OF_SALARY=1
    and s.TCO_COMPANY_PK=l_company_pk 
    AND S.MONTH_CLOSE=p_work_mon; 

    DELETE THR_EXTRA_MONTH W
    WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
    and W.SAL_PERIOD=p_SAL_PERIOD
    AND W.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
    AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N' ;
    



    INSERT INTO THR_EXTRA_MONTH
    (PK, THR_EMP_PK, FULL_NAME, EMP_ID, THR_GROUP_PK, GROUP_NM, GROUP_FNM, GROUP_KNM
    , TCO_DEPT_PK, DEPT_NM, DEPT_FNM, DEPT_KNM, WORK_MON, FROM_DT, TO_DT, JOIN_DT
    , LEFT_DT, STATUS, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17
    , D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31
    , DEL_IF, CRT_BY, CRT_DT
    , LOCATION_DEPT_PK, TOTAL_OT, TOTAL_HT, TOTAL_NT
    , N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17, N18, N19, N20, N21
    , N22, N23, N24, N25, N26,N27, N28, N29, N30, N31
    , NT2_1, NT2_2, NT2_3, NT2_4, NT2_5, NT2_6, NT2_7, NT2_8, NT2_9, NT2_10
    , NT2_11, NT2_12, NT2_13, NT2_14, NT2_15, NT2_16, NT2_17, NT2_18, NT2_19, NT2_20
    , NT2_21, NT2_22, NT2_23, NT2_24, NT2_25, NT2_26, NT2_27, NT2_28, NT2_29, NT2_30, NT2_31
    , NT3_1, NT3_2, NT3_3, NT3_4, NT3_5, NT3_6, NT3_7, NT3_8, NT3_9, NT3_10
    , NT3_11, NT3_12, NT3_13, NT3_14, NT3_15, NT3_16, NT3_17, NT3_18, NT3_19, NT3_20
    , NT3_21, NT3_22, NT3_23, NT3_24, NT3_25, NT3_26, NT3_27, NT3_28, NT3_29, NT3_30, NT3_31
    , PROBATION_STATUS,TIMES,SAL_PERIOD
    , TOTAL_ST , TOTAL_NT45, TOTAL_NT30, TOTAL_NT60, TOTAL_NT90 )
    SELECT THR_EXTRA_MONTH_SEQ.NEXTVAL,OVT.EMP_PK, OVT.FULL_NAME, OVT.EMP_ID, OVT.WORKGROUP_PK, OVT.WORKGROUP_NM, NULL
    , NULL, OVT.DEPT_PK,OVT.ORG_NM, OVT.ORG_FNM, OVT.ORG_LNM, p_work_mon, p_from, p_to, OVT.JOIN_DT, OVT.LEFT_DT
    , OVT.STATUS
    , OVT.D1, OVT.D2, OVT.D3, OVT.D4, OVT.D5, OVT.D6, OVT.D7, OVT.D8, OVT.D9, OVT.D10, OVT.D11, OVT.D12, OVT.D13
    , OVT.D14, OVT.D15, OVT.D16, OVT.D17, OVT.D18, OVT.D19, OVT.D20, OVT.D21, OVT.D22, OVT.D23, OVT.D24, OVT.D25
    , OVT.D26, OVT.D27, OVT.D28, OVT.D29, OVT.D30, OVT.D31
    , 0, p_crt_by, SYSDATE
    ,OVT.LOCATION_DEPT_PK,OVT.TOTAL_OT, OVT.TOTAL_HT, OVT.TOTAL_NT
    , OVT.N1, OVT.N2, OVT.N3, OVT.N4, OVT.N5, OVT.N6, OVT.N7, OVT.N8
    , OVT.N9, OVT.N10, OVT.N11, OVT.N12, OVT.N13, OVT.N14, OVT.N15, OVT.N16, OVT.N17, OVT.N18, OVT.N19, OVT.N20, OVT.N21
    , OVT.N22, OVT.N23, OVT.N24, OVT.N25, OVT.N26, OVT.N27, OVT.N28, OVT.N29, OVT.N30, OVT.N31
    , OVT.N2_1, OVT.N2_2, OVT.N2_3, OVT.N2_4, OVT.N2_5, OVT.N2_6, OVT.N2_7, OVT.N2_8
    , OVT.N2_9, OVT.N2_10, OVT.N2_11, OVT.N2_12, OVT.N2_13, OVT.N2_14, OVT.N2_15, OVT.N2_16, OVT.N2_17, OVT.N2_18, OVT.N2_19, OVT.N2_20, OVT.N2_21
    , OVT.N2_22, OVT.N2_23, OVT.N2_24, OVT.N2_25, OVT.N2_26, OVT.N2_27, OVT.N2_28, OVT.N2_29, OVT.N2_30, OVT.N2_31
    , OVT.N3_1, OVT.N3_2, OVT.N3_3, OVT.N3_4, OVT.N3_5, OVT.N3_6, OVT.N3_7, OVT.N3_8
    , OVT.N3_9, OVT.N3_10, OVT.N3_11, OVT.N3_12, OVT.N3_13, OVT.N3_14, OVT.N3_15, OVT.N3_16, OVT.N3_17, OVT.N3_18, OVT.N3_19, OVT.N3_20, OVT.N3_21
    , OVT.N3_22, OVT.N3_23, OVT.N3_24, OVT.N3_25, OVT.N3_26, OVT.N3_27, OVT.N3_28, OVT.N3_29, OVT.N3_30, OVT.N3_31
    ,OVT.PROBATION_STATUS
    ,L_TIMES times
    ,p_sal_period
    ,OVT.TOTAL_ST, OVT.TOTAL_NT2, OVT.TOTAL_NT30, OVT.TOTAL_NT60, OVT.TOTAL_NT90
    FROM(
        SELECT A.PK AS EMP_PK,A.FULL_NAME,A.EMP_ID,B.PK AS WORKGROUP_PK,B.WORKGROUP_NM,NULL,NULL
            ,C.PK AS DEPT_PK,C.ORG_NM,C.ORG_FNM,C.ORG_LNM
            ,A.JOIN_DT,A.LEFT_DT
            ,(CASE WHEN NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to THEN 'A'
                    ELSE 'R' END) AS STATUS
            ,(select LO.pk from TCO_ORG LO
                where LO.del_if=0 AND LO.P_PK IS NULL
                start with LO.pk =C.PK
                connect by prior  LO.p_pk=LO.pk) AS LOCATION_DEPT_PK
            ,OT.D1+OT.H1 AS D1, OT.D2+OT.H2 AS D2, OT.D3+OT.H3 AS D3
            ,OT.D4+OT.H4 AS D4, OT.D5+OT.H5 AS D5, OT.D6+OT.H6 AS D6
            ,OT.D7+OT.H7 AS D7, OT.D8+OT.H8 AS D8, OT.D9+OT.H9 AS D9
            ,OT.D10+OT.H10 AS D10, OT.D11+OT.H11 AS D11, OT.D12+OT.H12 AS D12
            ,OT.D13+OT.H13 AS D13, OT.D14+OT.H14 AS D14, OT.D15+OT.H15 AS D15
            ,OT.D16+OT.H16 AS D16, OT.D17+OT.H17 AS D17, OT.D18+OT.H18 AS D18
            ,OT.D19+OT.H19 AS D19, OT.D20+OT.H20 AS D20, OT.D21+OT.H21 AS D21
            ,OT.D22+OT.H22 AS D22, OT.D23+OT.H23 AS D23, OT.D24+OT.H24 AS D24
            ,OT.D25+OT.H25 AS D25, OT.D26+OT.H26 AS D26, OT.D27+OT.H27 AS D27
            ,OT.D28+OT.H28 AS D28, OT.D29+OT.H29 AS D29, OT.D30+OT.H30 AS D30
            ,OT.D31+OT.H31 AS D31
            ,OT.N1,OT.N2,OT.N3,OT.N4,OT.N5,OT.N6,OT.N7,OT.N8,OT.N9,OT.N10
            ,OT.N11,OT.N12,OT.N13,OT.N14,OT.N15,OT.N16,OT.N17,OT.N18,OT.N19
            ,OT.N20,OT.N21,OT.N22,OT.N23,OT.N24,OT.N25,OT.N26,OT.N27,OT.N28
            ,OT.N29,OT.N30,OT.N31
            ,OT.N2_1,OT.N2_2,OT.N2_3,OT.N2_4,OT.N2_5,OT.N2_6,OT.N2_7,OT.N2_8,OT.N2_9,OT.N2_10
            ,OT.N2_11,OT.N2_12,OT.N2_13,OT.N2_14,OT.N2_15,OT.N2_16,OT.N2_17,OT.N2_18,OT.N2_19
            ,OT.N2_20,OT.N2_21,OT.N2_22,OT.N2_23,OT.N2_24,OT.N2_25,OT.N2_26,OT.N2_27,OT.N2_28
            ,OT.N2_29,OT.N2_30,OT.N2_31
            ,OT.N3_1,OT.N3_2,OT.N3_3,OT.N3_4,OT.N3_5,OT.N3_6,OT.N3_7,OT.N3_8,OT.N3_9,OT.N3_10
            ,OT.N3_11,OT.N3_12,OT.N3_13,OT.N3_14,OT.N3_15,OT.N3_16,OT.N3_17,OT.N3_18,OT.N3_19
            ,OT.N3_20,OT.N3_21,OT.N3_22,OT.N3_23,OT.N3_24,OT.N3_25,OT.N3_26,OT.N3_27,OT.N3_28
            ,OT.N3_29,OT.N3_30,OT.N3_31
            ,OT.TOTAL_OT  AS TOTAL_OT
            ,OT.TOTAL_HT as  TOTAL_HT           
            ,OT.TOTAL_NT  AS TOTAL_NT
            ,OT.TOTAL_NT2 AS TOTAL_NT2
            ,OT.TOTAL_NT3 AS TOTAL_NT3
            ,(CASE WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')-l_probation_num,'YYYYMMDD') >p_to THEN '01'
            WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')-l_probation_num,'YYYYMMDD')<=l_wt_from THEN '03'
            ELSE '02' END) AS PROBATION_STATUS
            ,OT.TOTAL_ST,OT.TOTAL_NT30,OT.TOTAL_NT60,OT.TOTAL_NT90
    FROM(
        SELECT T.THR_EMP_PK AS EMP_PK,
           SUM(CASE WHEN T.WORK_DT=l_wt_from AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D1
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D2
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D3
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D4
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D5
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D6
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D7
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D8
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D9
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D10
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D11
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D12
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D13
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D14
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D15
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D16
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D17
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D18
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D19
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D20
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D21
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D22
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D23
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D24
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D25
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D26
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D27
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D28
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D29
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D30
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.HOL_TYPE IS NULL AND T.OT_TYPE='OT' THEN NVL(T.OT_TIME,0)+ NVL(T.OT_PLUS,0) ELSE 0 END) D31
           
           ,SUM(CASE WHEN T.WORK_DT=l_wt_from AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H1
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H2
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H3
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H4
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H5
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H6
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H7
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H8
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H9
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H10
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H11
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H12
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H13
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H14
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H15
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H16
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H17
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H18
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H19
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H20
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H21

           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H22
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H23
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H24
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H25
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H26
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H27
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H28
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H29
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H30
           ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.HOL_TYPE IS NOT NULL AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS H31

           ,SUM(CASE WHEN T.WORK_DT=l_wt_from AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) N1
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N4
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N5
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N6
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N7
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N8
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N9
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N10
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N11
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N12
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N13
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N14
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N15
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N16
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N17
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N18
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N19
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N20
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N21
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N22
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N23
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N24
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N25
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N26
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N27
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N28
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N29
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N30
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N31
            ,SUM(CASE WHEN T.WORK_DT=l_wt_from AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_1
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_2
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_3
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_4
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_5
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_6
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_7
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_8
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_9
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_10
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_11
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_12
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_13
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_14
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_15
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_16
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_17
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_18
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_19
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_20
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_21
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_22
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_23
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_24
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_25
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_26
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_27
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_28
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_29
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_30
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N2_31
            ,SUM(CASE WHEN T.WORK_DT=l_wt_from AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_1
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_2
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_3
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_4
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_5
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_6
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_7
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_8
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_9
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_10
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_11
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_12
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_13
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_14
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_15
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_16
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_17
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_18
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_19
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_20
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_21
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_22
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_23
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_24
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_25
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_26
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_27
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_28
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_29
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_30
            ,SUM(CASE WHEN T.WORK_DT=TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD') AND T.OT_TYPE='NT3' THEN NVL(T.OT_TIME,0) ELSE 0 END) AS N3_31
            ,SUM(CASE WHEN T.HOL_TYPE IS NULL AND T.OT_TYPE IN('OT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS TOTAL_OT
            ,SUM(CASE WHEN T.HOL_TYPE='SUN' AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS TOTAL_ST
            ,SUM(CASE WHEN T.OT_TYPE='NT2' THEN NVL(T.OT_TIME,0) ELSE 0 END) TOTAL_NT2
            ,SUM(CASE WHEN T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) TOTAL_NT
            ,SUM(CASE WHEN T.HOL_TYPE IS NULL AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) total_nt30
            ,SUM(CASE WHEN T.HOL_TYPE ='SUN' AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) total_nt60
            ,SUM(CASE WHEN T.HOL_TYPE ='HOL' AND T.OT_TYPE='NT' THEN NVL(T.OT_TIME,0) ELSE 0 END) total_nt90
            ,SUM(CASE WHEN T.HOL_TYPE='HOL' AND T.OT_TYPE IN('OT','HT') THEN NVL(T.OT_TIME,0) ELSE 0 END) AS TOTAL_HT
            ,SUM(DECODE(T.OT_TYPE,'NT3',NVL(T.OT_TIME,0),0)) AS TOTAL_NT3
    FROM THR_EXTRA_TIME T,THR_EMPLOYEE A
    WHERE T.DEL_IF = 0 AND A.DEL_IF=0
      AND T.THR_EMP_PK=A.PK
      and a.TCO_COMPANY_PK=l_company_pk 
      AND T.WORK_DT BETWEEN l_wt_from AND p_to
      AND T.WORK_DT BETWEEN A.JOIN_DT AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
      AND NVL(A.LEFT_DT,'30000101') between p_from and p_to
      AND A.LEFT_DT IS NOT NULL
      AND A.TCO_ORG_PK IN (SELECT  g.pk FROM tco_org g
                             WHERE g.del_if = 0 
                              START WITH g.pk =p_location_pk
                                CONNECT BY PRIOR g.pk = g.p_pk)
    GROUP BY  T.THR_EMP_PK)OT
     , THR_EMPLOYEE A,THR_WORK_GROUP B,TCO_ORG C
    WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0
    AND A.THR_WG_PK=B.PK AND A.TCO_ORG_PK=C.PK
    AND A.PK=OT.EMP_PK(+)
     AND A.JOIN_DT <= p_to
     AND NVL(A.LEFT_DT,p_to) between p_from and p_to
     AND A.LEFT_DT IS NOT NULL
     AND A.TCO_ORG_PK IN (SELECT  g.pk FROM tco_org g
                                     WHERE g.del_if = 0 
                                      START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk = g.p_pk)
     AND A.PK NOT IN(SELECT X.THR_EMP_PK FROM THR_EXTRA_MONTH X WHERE X.DEL_IF=0 AND X.WORK_MON=p_work_mon)
     )OVT;
     
     
     -- CAP NHAT MOT SO TRUONG DU LIEU
    UPDATE THR_EXTRA_MONTH W
    SET (W.TOTAL_OT_L1, W.TOTAL_RATE_OT_L1) = (SELECT SUM(NVL(B.OT_TIME,0) + NVL(B.OT_PLUS,0)) AS TOTAL_OT_L1
                                                      ,SUM((NVL(B.OT_TIME,0) + NVL(B.OT_PLUS,0))*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OT_L1
                                                    FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                    WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                          AND A.PK=B.THR_EMP_PK
                                                          AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                          AND B.WORK_DT BETWEEN A.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                          AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                          AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                          AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                          AND A.JOIN_DT<=p_to
                                                          AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                          AND B.OT_TYPE='OT' AND B.HOL_TYPE IS NULL
                                                          AND A.PK=W.THR_EMP_PK
                                                          AND NVL(A.OT_YN,'Y')='Y'
                                                    GROUP BY A.PK)
       ,(W.TOTAL_OT_L2, W.TOTAL_RATE_OT_L2) = (SELECT SUM(NVL(B.OT_TIME,0) + NVL(B.OT_PLUS,0) ) AS TOTAL_OT_L2
                                                      ,SUM((NVL(B.OT_TIME,0) + NVL(B.OT_PLUS,0))*NVL(B.PAY_RATE,0)/100 ) AS TOTAL_RATE_OT_L2
                                                    FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                    WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                          AND A.PK=B.THR_EMP_PK
                                                          AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                           AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                          AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                          AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                          AND A.JOIN_DT<=p_to
                                                          AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                          AND B.OT_TYPE='OT' AND B.HOL_TYPE IS NULL
                                                          AND A.PK=W.THR_EMP_PK
                                                          AND NVL(A.OT_YN,'Y')='Y'
                                                    GROUP BY A.PK)
       ,(W.TOTAL_ST_L1, W.TOTAL_RATE_ST_L1) = (SELECT SUM(NVL(B.OT_TIME,0)+ NVL(B.OT_PLUS,0)) AS TOTAL_ST_L1
                                                      ,SUM((NVL(B.OT_TIME,0)+ NVL(B.OT_PLUS,0))*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_ST_L1
                                            FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                            WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                  AND B.THR_EMP_PK=A.PK
                                                  AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                  AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                  AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                  AND A.JOIN_DT<=p_to
                                                  AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                  AND B.OT_TYPE IN ('HT') AND B.HOL_TYPE IS NOT NULL
                                                  AND B.HOL_TYPE='SUN'
                                                  AND W.THR_EMP_PK=A.PK
                                                  AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                   AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                                            GROUP BY B.THR_EMP_PK)  
        ,(W.TOTAL_ST_L2, W.TOTAL_RATE_ST_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_ST_L2
                                                        ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_ST_L2
                                                    FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                    WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                          AND B.THR_EMP_PK=A.PK
                                                           AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                          AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                          AND A.JOIN_DT<=p_to
                                                          AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                          AND B.OT_TYPE IN ('HT') AND B.HOL_TYPE IS NOT NULL
                                                          AND B.HOL_TYPE='SUN'
                                                          AND W.THR_EMP_PK=A.PK
                                                          AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                           AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                    GROUP BY B.THR_EMP_PK)   
        ,(W.TOTAL_OST_L1, W.TOTAL_RATE_OST_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_OST_L1
                                                         ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OST_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND B.THR_EMP_PK=A.PK
                                                              AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                              AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE IN ('OT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='SUN'
                                                              AND W.THR_EMP_PK=A.PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                                                        GROUP BY B.THR_EMP_PK)   
         ,(W.TOTAL_OST_L2, W.TOTAL_RATE_OST_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_OST_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OST_L2
                                                            FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                            WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                                  AND B.THR_EMP_PK=A.PK
                                                                  AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                                  AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                                  AND A.JOIN_DT<=p_to
                                                                  AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                                  AND B.OT_TYPE IN ('OT') AND B.HOL_TYPE IS NOT NULL
                                                                  AND B.HOL_TYPE='SUN'
                                                                  AND W.THR_EMP_PK=A.PK
                                                                  AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                                   AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                                                            GROUP BY B.THR_EMP_PK) 
         ,(W.TOTAL_HT_L1, W.TOTAL_RATE_HT_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_HT_L1
                                                        ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_HT_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                              AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                              AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE IN ('HT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='HOL'
                                                              AND A.PK=W.THR_EMP_PK
                                                        GROUP BY A.PK)  
         ,(W.TOTAL_HT_L2, W.TOTAL_RATE_HT_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_HT_L2
                                                        ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_HT_L2
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                               AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                              AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE IN ('HT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='HOL'
                                                              AND A.PK=W.THR_EMP_PK
                                                        GROUP BY A.PK)
         ,(W.TOTAL_OHT_L1, W.TOTAL_RATE_OHT_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_OHT_L1
                                                          ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OHT_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                             AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                              AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE IN ('OT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='HOL'
                                                              AND A.PK=W.THR_EMP_PK
                                                        GROUP BY A.PK)   
        ,(W.TOTAL_OHT_L2, W.TOTAL_RATE_OHT_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_OHT_L2
                                                         ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_OHT_L2
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                               AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                              AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE IN ('OT') AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='HOL'
                                                              AND A.PK=W.THR_EMP_PK
                                                        GROUP BY A.PK)
         ,(W.TOTAL_NT30_L1, W.TOTAL_RATE_NT30_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT30_L1
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT30_L1
                                                            FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND WS.DEL_IF=0
                                                                  AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                                  AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                                   AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                                 AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                                  AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                                  AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                                  AND A.JOIN_DT<=p_to
                                                                  AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                                  AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NULL
                                                                  AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',2,NVL(WS.DURING_DAY,1))
                                                                  AND A.PK=W.THR_EMP_PK
                                                                  AND NVL(A.OT_YN,'Y')='Y'
                                                            GROUP BY A.PK)   
         ,(W.TOTAL_NT30_L2, W.TOTAL_RATE_NT30_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT30_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT30_L2
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND WS.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                              AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                              AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                              AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NULL
                                                              AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',2,NVL(WS.DURING_DAY,1))
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK) 
         ,(W.TOTAL_NT45_L1, W.TOTAL_RATE_NT45_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT45_L1
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT45_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND WS.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                              AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE =DECODE(F_LAG_NT2,'N','NT','NT2')
                                                              AND B.HOL_TYPE IS NULL
                                                              AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',1,NVL(WS.DURING_DAY,1))
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK) 
         ,(W.TOTAL_NT45_L2, W.TOTAL_RATE_NT45_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT45_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT45_L2
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND W.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                              AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE =DECODE(F_LAG_NT2,'N','NT','NT2')
                                                              AND B.HOL_TYPE IS NULL
                                                              AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',1,NVL(WS.DURING_DAY,1))
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK) 
         ,(W.TOTAL_NT45_2_L1, W.TOTAL_RATE_NT45_2_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT45_2_L1
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT45_2_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND WS.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                              AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE = 'NT3'
                                                              AND B.HOL_TYPE IS NULL
                                                              AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',1,NVL(WS.DURING_DAY,1))
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK) 
         ,(W.TOTAL_NT45_2_L2, W.TOTAL_RATE_NT45_2_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT45_2_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT45_2_L2
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B,THR_WORK_SHIFT WS
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND W.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK AND B.THR_WS_PK=WS.PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                              AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE = 'NT3'
                                                              AND B.HOL_TYPE IS NULL
                                                              AND NVL(WS.DURING_DAY,1)=DECODE(F_LAG_NT2,'N',1,NVL(WS.DURING_DAY,1))
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK)     
         ,(W.TOTAL_NT60_L1, W.TOTAL_RATE_NT60_L1)  = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT60_L1
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT60_L1
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                              AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                              AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='SUN'
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK)  
         ,(W.TOTAL_NT60_L2, W.TOTAL_RATE_NT60_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT60_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT60_L2
                                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                        WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                              AND A.PK=B.THR_EMP_PK
                                                              AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                               AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                              AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                              AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                              AND A.JOIN_DT<=p_to
                                                              AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                              AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NOT NULL
                                                              AND B.HOL_TYPE='SUN'
                                                              AND A.PK=W.THR_EMP_PK
                                                              AND NVL(A.OT_YN,'Y')='Y'
                                                        GROUP BY A.PK) 
         ,(W.TOTAL_NT90_L1,W.TOTAL_RATE_NT90_L1) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT90_L1
                                                          ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT90_L1
                                                    FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                    WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                          AND A.PK=B.THR_EMP_PK
                                                          AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                           AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                          AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                                          AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                                          AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                                          AND A.JOIN_DT<=p_to
                                                          AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                          AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NOT NULL
                                                          AND B.HOL_TYPE='HOL'
                                                          AND A.PK=W.THR_EMP_PK
                                                          AND NVL(A.OT_YN,'Y')='Y'
                                                    GROUP BY A.PK)  
          ,(W.TOTAL_NT90_L2, W.TOTAL_RATE_NT90_L2) = (SELECT SUM(NVL(B.OT_TIME,0)) AS TOTAL_NT90_L2
                                                            ,SUM(NVL(B.OT_TIME,0)*NVL(B.PAY_RATE,0)/100) AS TOTAL_RATE_NT90_L2
                                                    FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                                    WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                                          AND A.PK=B.THR_EMP_PK
                                                          AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                                           AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                                          AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                                          AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                                          AND A.JOIN_DT<=p_to
                                                          AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                                          AND B.OT_TYPE ='NT' AND B.HOL_TYPE IS NOT NULL
                                                          AND B.HOL_TYPE='HOL'
                                                          AND A.PK=W.THR_EMP_PK
                                                          AND NVL(A.OT_YN,'Y')='Y'
                                                    GROUP BY A.PK) 
          ,W.TOTAL_OT_TAX_L1 = (SELECT SUM(NVL(B.OT_TIME,0)+ NVL(B.OT_PLUS,0)) AS TOTAL_OT_TAX_L1
                                        FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK
                                      AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,l_wt_from)>l_wt_from
                                      AND B.WORK_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(W.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                                      AND B.WORK_DT BETWEEN  A.JOIN_DT AND NVL(W.CONFIRM_DT,p_to)
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                      AND (B.OT_TYPE IN('OT','HT')
                                           OR B.OT_TYPE =DECODE(l_ot_kind,'02',l_ot_kind,'NT')
                                          )
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK)
          ,W.TOTAL_OT_TAX_L2 = (SELECT SUM(NVL(B.OT_TIME,0)+ NVL(B.OT_PLUS,0)) AS TOTAL_OT_TAX_L2
                                FROM THR_EMPLOYEE A,THR_EXTRA_TIME B
                                WHERE A.DEL_IF=0 AND B.DEL_IF=0
                                      AND A.PK=B.THR_EMP_PK
                                      AND B.WORK_DT BETWEEN l_wt_from AND p_to
                                       AND B.WORK_DT BETWEEN a.join_dt AND TO_CHAR(TO_DATE(NVL(A.LEFT_DT,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD') 
                                      AND NVL(W.CONFIRM_DT,p_to)<=p_to
                                      AND B.WORK_DT BETWEEN NVL(W.CONFIRM_DT,l_wt_from) AND p_to
                                      AND A.JOIN_DT<=p_to
                                      AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                                      AND (B.OT_TYPE IN('OT','HT')
                                           OR B.OT_TYPE =DECODE(l_ot_kind,'02',l_ot_kind,'NT')
                                          )
                                      AND A.PK=W.THR_EMP_PK
                                      AND NVL(A.OT_YN,'Y')='Y'
                                GROUP BY A.PK)           
    WHERE W.DEL_IF=0
    AND W.WORK_MON = p_work_mon
    AND NVL(W.CLOSE_YN, 'N') = 'N'
    AND (W.TCO_DEPT_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
    AND W.SAL_PERIOD = p_sal_period;
     
END IF;



p_result:=0;
COMMIT;
    EXCEPTION
    WHEN l_check THEN
        p_result:=-1;
        Raise_application_error(-20019, sqlerrm);
    WHEN  OTHERS THEN
        p_result:=-1;
        RAISE_APPLICATION_ERROR(-20002, 'ERRCODE : '|| l_error||SQLERRM );
    ROLLBACK;
END  ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_7;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_7(
    p_work_mon      IN  VARCHAR2,
    p_from        IN    VARCHAR2,    -- YYYYMMDD
    p_to        IN    VARCHAR2,     -- YYYYMMDD
    p_location_pk       IN VARCHAR2,
    p_sal_period             IN VARCHAR2,
    p_crt_by                VARCHAR2,
    p_result        OUT NUMBER      -- RETURN VALUE ( NUMBER )
) IS

l_error         varchar2(2):='';
l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;
l_probation_num number(1):=0;


l_company_pk number:=0;
L_TIMES varchar2(10):='1';
l_wt_from   varchar2(8);
l_resign_num        number;
--******************************************
  -- Create by    : huynh truong
--******************************************

BEGIN
    l_error := '10';

     select o.tco_company_pk into l_company_pk
                                            from tco_org o where o.del_if=0 
                                            and  o.pk= p_location_pk;
    
    open l_cur for
    SELECT TIMES FROM THR_CLOSE A
    WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon
    AND A.ID=p_SAL_PERIOD
    and A.TCO_COMPANY_PK= l_company_pk
    AND NVL(A.CLOSE_YN,'N')='N';

     FETCH l_cur INTO l_TIMES;
      l_flag_exist := l_cur%FOUND;
    CLOSE l_cur;
    IF l_flag_exist=FALSE THEN
        p_result:=-1;
        raise l_check;
    END IF;
    
    
    SELECT MIN(S.FROM_DT) INTO l_wt_from  --NGAY DAU CHU KY CUA THANG 
    FROM THR_CLOSE S
    WHERE S.DEL_IF=0 AND S.KIND_OF_SALARY=1
    and s.TCO_COMPANY_PK=l_company_pk 
    AND S.MONTH_CLOSE=p_work_mon; 

    SELECT A.NUM_3 INTO l_probation_num FROM VHR_HR_CODE A
    WHERE A.ID='HR0002' AND A.CODE='01'  and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    SELECT decode(nvl(A.NUM_4,0),0,-1,0)
        INTO l_resign_num 
        FROM VHR_HR_CODE A
        WHERE A.ID='HR0006' 
        AND A.CODE='11' 
        and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;

    DELETE THR_ABSENCE_MONTH W
    WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
    and W.SAL_PERIOD=p_sal_period
    AND W.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
    AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N';
    

    INSERT INTO THR_ABSENCE_MONTH
    (PK, THR_EMP_PK, WORK_MON
    , DEL_IF, CRT_BY, CRT_DT, JOIN_DT, LEFT_DT, STATUS, GROUP_NM, THR_GROUP_PK
    , DEPT_NM, DEPT_KNM, DEPT_LNM, TCO_DEPT_PK, LOCATION_DEPT_PK,FULL_NAME,EMP_ID,FROM_DT,TO_DT,PROBATION_STATUS, SAL_PERIOD
    ,D1_L1, D2_L1, D3_L1, D4_L1, D5_L1, D6_L1, D7_L1, D8_L1, D9_L1, D10_L1
    ,D11_L1, D12_L1, D13_L1, D14_L1, D15_L1, D16_L1, D17_L1, D18_L1, D19_L1, D20_L1
    ,D21_L1, D22_L1, D23_L1, D24_L1, D25_L1, D26_L1, D27_L1, D28_L1, D29_L1, D30_L1, D31_L1
    ,TOTAL_ABS_ALE_L1, TOTAL_OTHER_PAY_L1, TOTAL_ABS_PAY_L1, TOTAL_ABS_NPAY_L1, TOTAL_ABS_PER_L1, TOTAL_ABS_L1
    ,TOTAL_RATE_ABS_ALE_L1, TOTAL_RATE_OTHER_PAY_L1, TOTAL_RATE_ABS_PAY_L1
    ,D1_L2, D2_L2, D3_L2, D4_L2, D5_L2, D6_L2, D7_L2, D8_L2, D9_L2, D10_L2
    ,D11_L2, D12_L2, D13_L2, D14_L2, D15_L2, D16_L2, D17_L2, D18_L2, D19_L2, D20_L2
    ,D21_L2, D22_L2, D23_L2, D24_L2, D25_L2, D26_L2, D27_L2, D28_L2, D29_L2, D30_L2, D31_L2
    ,TOTAL_ABS_ALE_L2, TOTAL_OTHER_PAY_L2, TOTAL_ABS_PAY_L2, TOTAL_ABS_NPAY_L2, TOTAL_ABS_PER_L2, TOTAL_ABS_L2
    ,TOTAL_RATE_ABS_ALE_L2, TOTAL_RATE_OTHER_PAY_L2, TOTAL_RATE_ABS_PAY_L2
    ,D1_CODE, D2_CODE, D3_CODE, D4_CODE, D5_CODE,D6_CODE, D7_CODE, D8_CODE, D9_CODE, D10_CODE
    ,D11_CODE, D12_CODE, D13_CODE, D14_CODE, D15_CODE,D16_CODE, D17_CODE, D18_CODE, D19_CODE, D20_CODE
    ,D21_CODE, D22_CODE, D23_CODE, D24_CODE, D25_CODE,D26_CODE, D27_CODE, D28_CODE, D29_CODE, D30_CODE, D31_CODE
    ,TOTAL_ABS_ALE, TOTAL_OTHER_PAY, TOTAL_ABS_PAY, TOTAL_ABS_NPAY, TOTAL_ABS_PER, TOTAL_ABS
    )
    SELECT THR_ABSENCE_MONTH_SEQ.NEXTVAL,AB.EMP_PK, p_work_mon
    , 0, p_crt_by, SYSDATE, AB.JOIN_DT, AB.LEFT_DT, AB.STATUS, AB.WORKGROUP_NM, AB.GROUP_PK
    , AB.ORG_NM, AB.ORG_FNM, AB.ORG_LNM, AB.DEPT_PK, AB.LOCATION_DEPT_PK, AB.FULL_NAME, AB.EMP_ID, l_wt_from, p_to, AB.PROBATION_STATUS, p_sal_period
    ,AB.D1_L1, AB.D2_L1, AB.D3_L1, AB.D4_L1, AB.D5_L1, AB.D6_L1, AB.D7_L1, AB.D8_L1, AB.D9_L1, AB.D10_L1
    ,AB.D11_L1, AB.D12_L1, AB.D13_L1, AB.D14_L1, AB.D15_L1, AB.D16_L1, AB.D17_L1, AB.D18_L1, AB.D19_L1, AB.D20_L1
    ,AB.D21_L1, AB.D22_L1, AB.D23_L1, AB.D24_L1, AB.D25_L1, AB.D26_L1, AB.D27_L1, AB.D28_L1, AB.D29_L1, AB.D30_L1, AB.D31_L1
    ,AB.TOTAL_ABS_ALE_L1, AB.TOTAL_OTHER_PAY_L1, AB.TOTAL_ABS_PAY_L1, AB.TOTAL_ABS_NPAY_L1, AB.TOTAL_ABS_PER_L1, AB.TOTAL_ABS_L1
    ,AB.TOTAL_RATE_ABS_ALE_L1, AB.TOTAL_OTHER_PAY_L1, AB.TOTAL_ABS_PAY_L1
    ,AB.D1_L2, AB.D2_L2, AB.D3_L2, AB.D4_L2, AB.D5_L2, AB.D6_L2, AB.D7_L2, AB.D8_L2, AB.D9_L2, AB.D10_L2
    ,AB.D11_L2, AB.D12_L2, AB.D13_L2, AB.D14_L2, AB.D15_L2, AB.D16_L2, AB.D17_L2, AB.D18_L2, AB.D19_L2, AB.D20_L2
    ,AB.D21_L2, AB.D22_L2, AB.D23_L2, AB.D24_L2, AB.D25_L2, AB.D26_L2, AB.D27_L2, AB.D28_L2, AB.D29_L2, AB.D30_L2, AB.D31_L2
    ,AB.TOTAL_ABS_ALE_L2, AB.TOTAL_OTHER_PAY_L2, AB.TOTAL_ABS_PAY_L2, AB.TOTAL_ABS_NPAY_L2, AB.TOTAL_ABS_PER_L2, AB.TOTAL_ABS_L2
    ,AB.TOTAL_RATE_ABS_ALE_L2, AB.TOTAL_RATE_OTHER_PAY_L2, AB.TOTAL_RATE_ABS_PAY_L2
    ,AB.D1_CODE, AB.D2_CODE, AB.D3_CODE, AB.D4_CODE, AB.D5_CODE,AB.D6_CODE, AB.D7_CODE, AB.D8_CODE, AB.D9_CODE, AB.D10_CODE
    ,AB.D11_CODE, AB.D12_CODE, AB.D13_CODE, AB.D14_CODE, AB.D15_CODE,AB.D16_CODE, AB.D17_CODE, AB.D18_CODE, AB.D19_CODE, AB.D20_CODE
    ,AB.D21_CODE, AB.D22_CODE, AB.D23_CODE, AB.D24_CODE, AB.D25_CODE,AB.D26_CODE, AB.D27_CODE, AB.D28_CODE, AB.D29_CODE, AB.D30_CODE, AB.D31_CODE
    ,NVL(AB.TOTAL_ABS_ALE_L1, 0) + NVL(AB.TOTAL_ABS_ALE_L1, 0) AS TOTAL_ABS_ALE
    ,NVL(AB.TOTAL_OTHER_PAY_L1, 0) + NVL(AB.TOTAL_OTHER_PAY_L2, 0) AS  TOTAL_OTHER_PAY
    ,NVL(AB.TOTAL_ABS_PAY_L1, 0) + NVL(AB.TOTAL_ABS_PAY_L2, 0) AS TOTAL_ABS_PAY
    ,NVL(AB.TOTAL_ABS_NPAY_L1, 0) + NVL(AB.TOTAL_ABS_NPAY_L2, 0) AS TOTAL_ABS_NPAY
    ,NVL(AB.TOTAL_ABS_PER_L1, 0) + NVL(AB.TOTAL_ABS_PER_L2, 0) AS TOTAL_ABS_PER
    ,NVL(AB.TOTAL_ABS_L1, 0) + NVL(AB.TOTAL_ABS_L2, 0) AS TOTAL_ABS
    FROM(
        SELECT A.PK AS EMP_PK,A.FULL_NAME,A.EMP_ID,B.PK AS GROUP_PK,B.WORKGROUP_NM,NULL,NULL
            ,C.PK AS DEPT_PK,C.ORG_NM,C.ORG_FNM,C.ORG_LNM
            ,A.JOIN_DT,A.LEFT_DT
            ,(CASE WHEN NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to THEN 'A'
                    ELSE 'R' END) AS STATUS
            ,(select LO.pk from TCO_ORG LO
                where LO.del_if=0 AND LO.P_PK IS NULL
                start with LO.pk =C.PK
                connect by prior  LO.p_pk=LO.pk) AS LOCATION_DEPT_PK
             ,(CASE WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')-l_probation_num,'YYYYMMDD') >p_to THEN '01'
            WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')-l_probation_num,'YYYYMMDD')<=l_wt_from THEN '03'
            ELSE '02' END) AS PROBATION_STATUS
            ,L1.D1_L1, L1.D2_L1, L1.D3_L1, L1.D4_L1, L1.D5_L1, L1.D6_L1, L1.D7_L1, L1.D8_L1, L1.D9_L1, L1.D10_L1
            ,L1.D11_L1, L1.D12_L1, L1.D13_L1, L1.D14_L1, L1.D15_L1, L1.D16_L1, L1.D17_L1, L1.D18_L1, L1.D19_L1, L1.D20_L1
            ,L1.D21_L1, L1.D22_L1, L1.D23_L1, L1.D24_L1, L1.D25_L1, L1.D26_L1, L1.D27_L1, L1.D28_L1, L1.D29_L1, L1.D30_L1, L1.D31_L1
            ,L1.TOTAL_ABS_ALE_L1, L1.TOTAL_OTHER_PAY_L1, L1.TOTAL_ABS_PAY_L1, L1.TOTAL_ABS_NPAY_L1, L1.TOTAL_ABS_PER_L1, L1.TOTAL_ABS_L1
            ,L1.TOTAL_RATE_ABS_ALE_L1, L1.TOTAL_RATE_OTHER_PAY_L1, L1.TOTAL_RATE_ABS_PAY_L1
            ,L2.D1_L2, L2.D2_L2, L2.D3_L2, L2.D4_L2, L2.D5_L2, L2.D6_L2, L2.D7_L2, L2.D8_L2, L2.D9_L2, L2.D10_L2
            ,L2.D11_L2, L2.D12_L2, L2.D13_L2, L2.D14_L2, L2.D15_L2, L2.D16_L2, L2.D17_L2, L2.D18_L2, L2.D19_L2, L2.D20_L2
            ,L2.D21_L2, L2.D22_L2, L2.D23_L2, L2.D24_L2, L2.D25_L2, L2.D26_L2, L2.D27_L2, L2.D28_L2, L2.D29_L2, L2.D30_L2, L2.D31_L2
            ,L2.TOTAL_ABS_ALE_L2, L2.TOTAL_OTHER_PAY_L2, L2.TOTAL_ABS_PAY_L2, L2.TOTAL_ABS_NPAY_L2, L2.TOTAL_ABS_PER_L2, L2.TOTAL_ABS_L2
            ,L2.TOTAL_RATE_ABS_ALE_L2, L2.TOTAL_RATE_OTHER_PAY_L2, L2.TOTAL_RATE_ABS_PAY_L2
            ,CODE.D1_CODE, CODE.D2_CODE, CODE.D3_CODE, CODE.D4_CODE, CODE.D5_CODE,CODE.D6_CODE, CODE.D7_CODE, CODE.D8_CODE, CODE.D9_CODE, CODE.D10_CODE
            ,CODE.D11_CODE, CODE.D12_CODE, CODE.D13_CODE, CODE.D14_CODE, CODE.D15_CODE,CODE.D16_CODE, CODE.D17_CODE, CODE.D18_CODE, CODE.D19_CODE, CODE.D20_CODE
            ,CODE.D21_CODE, CODE.D22_CODE, CODE.D23_CODE, CODE.D24_CODE, CODE.D25_CODE,CODE.D26_CODE, CODE.D27_CODE, CODE.D28_CODE, CODE.D29_CODE, CODE.D30_CODE, CODE.D31_CODE
    FROM( SELECT T.THR_EMP_PK AS EMP_PK
                   ,SUM(DECODE(T.ABSENCE_DT, l_wt_from, NVL(T.ABSENCE_TIME,0),0)) AS D1_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D2_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D3_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D4_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D5_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D6_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D7_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D8_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D9_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D10_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D11_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D12_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D13_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D14_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D15_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D16_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D17_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D18_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D19_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D20_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D21_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D22_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D23_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D24_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D25_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D26_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D27_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D28_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D29_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D30_L1
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D31_L1
                   ,SUM(CASE WHEN T.ABSENCE_TYPE ='01' THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_ALE_L1
                   ,SUM(CASE WHEN T.ABSENCE_TYPE <>'01' AND NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_OTHER_PAY_L1
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_PAY_L1
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)=0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_NPAY_L1
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)=0 AND T.ABSENCE_TYPE NOT IN ('05','13') THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_PER_L1
                   ,SUM(NVL(T.ABSENCE_TIME, 0)) TOTAL_ABS_L1
                   ,SUM(CASE WHEN T.ABSENCE_TYPE ='01' THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_ABS_ALE_L1
                   ,SUM(CASE WHEN T.ABSENCE_TYPE <>'01' AND NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_OTHER_PAY_L1
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_ABS_PAY_L1
                FROM THR_EMPLOYEE A,THR_SALARY_MANAGE S,THR_ABSENCE T, thr_wg_sch_detail c
                WHERE T.DEL_IF = 0 AND A.DEL_IF=0 AND S.DEL_IF(+)=0 and c.del_if=0
                  AND T.THR_EMP_PK=A.PK AND S.THR_EMP_PK(+)=A.PK
                  and C.THR_EMP_PK=a.pk
                  and C.WORK_DT=T.ABSENCE_DT
                  and C.HOL_TYPE  is null
                  AND S.WORK_MON(+)=p_work_mon
                  AND NVL(S.CONFIRM_DT,l_wt_from)>l_wt_from
                  AND T.ABSENCE_DT BETWEEN  A.JOIN_DT AND NVL(S.CONFIRM_DT,p_to)
                  and C.WORK_DT BETWEEN l_wt_from and p_to
                  AND T.ABSENCE_DT BETWEEN a.join_dt AND to_char(to_date(nvl(a.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd') 
                  AND A.JOIN_DT<=p_to
                  AND NVL(A.LEFT_DT, '30000101') between p_from and p_to                  
                  AND T.ABSENCE_DT BETWEEN l_wt_from AND TO_CHAR(TO_DATE(NVL(S.CONFIRM_DT,l_wt_from),'YYYYMMDD')-1,'YYYYMMDD')
                  AND T.ABSENCE_DT BETWEEN l_wt_from and p_to
                  AND (A.TCO_ORG_PK IN (SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
                GROUP BY  T.THR_EMP_PK) L1
     ,(SELECT T.THR_EMP_PK AS EMP_PK
                   ,SUM(DECODE(T.ABSENCE_DT, l_wt_from, NVL(T.ABSENCE_TIME,0),0)) AS D1_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D2_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D3_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D4_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D5_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D6_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D7_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D8_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D9_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D10_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D11_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D12_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D13_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D14_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D15_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D16_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D17_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D18_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D19_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D20_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D21_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D22_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D23_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D24_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D25_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D26_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D27_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D28_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D29_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D30_L2
                   ,SUM(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD'), NVL(T.ABSENCE_TIME,0),0)) AS D31_L2
                   ,SUM(CASE WHEN T.ABSENCE_TYPE ='01' THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_ALE_L2
                   ,SUM(CASE WHEN T.ABSENCE_TYPE <>'01' AND NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_OTHER_PAY_L2
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_PAY_L2
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)=0 THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_NPAY_L2
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)=0 AND T.ABSENCE_TYPE NOT IN ('05','13') THEN NVL(T.ABSENCE_TIME, 0) ELSE 0 END) TOTAL_ABS_PER_L2
                   ,SUM(NVL(T.ABSENCE_TIME, 0)) TOTAL_ABS_L2
                   ,SUM(CASE WHEN T.ABSENCE_TYPE ='01' THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_ABS_ALE_L2
                   ,SUM(CASE WHEN T.ABSENCE_TYPE <>'01' AND NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_OTHER_PAY_L2
                   ,SUM(CASE WHEN NVL(T.COMPANY_PAY_RATE, 0)>0 THEN NVL(T.ABSENCE_TIME, 0)*NVL(T.COMPANY_PAY_RATE, 0)/100 ELSE 0 END) TOTAL_RATE_ABS_PAY_L2
                FROM THR_EMPLOYEE A,THR_SALARY_MANAGE S,THR_ABSENCE T, thr_wg_sch_detail c
                WHERE T.DEL_IF = 0 AND A.DEL_IF=0 AND S.DEL_IF(+)=0 and C.DEL_IF=0
                  AND T.THR_EMP_PK=A.PK AND S.THR_EMP_PK(+)=A.PK
                  and C.WORK_DT=T.ABSENCE_DT
                  and C.THR_EMP_PK=a.pk
                  and C.HOL_TYPE is null                  
                  and C.WORK_DT=T.ABSENCE_DT
                  and C.WORK_DT BETWEEN l_wt_from and p_to
                  AND A.JOIN_DT<=p_to
                  AND NVL(A.LEFT_DT, '30000101') between p_from and p_to 
                  AND T.ABSENCE_DT BETWEEN NVL(S.CONFIRM_DT,l_wt_from) AND p_to
                  AND T.ABSENCE_DT BETWEEN l_wt_from AND P_TO
                  AND T.ABSENCE_DT BETWEEN a.join_dt AND to_char(to_date(nvl(a.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd')
                  AND NVL(S.CONFIRM_DT,p_to)<=p_to
                  AND S.WORK_MON(+)=p_work_mon
                  AND (A.TCO_ORG_PK IN(SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
                GROUP BY  T.THR_EMP_PK) L2
     ,( SELECT T.THR_EMP_PK AS EMP_PK
                   ,MAX(DECODE(T.ABSENCE_DT, l_wt_from, ABS_TYPE.CHAR_1 ,'')) AS D1_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+1,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D2_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+2,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D3_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+3,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D4_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+4,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D5_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+5,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D6_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+6,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D7_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+7,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D8_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+8,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D9_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+9,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D10_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+10,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D11_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+11,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D12_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+12,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D13_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+13,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D14_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+14,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D15_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+15,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D16_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+16,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D17_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+17,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D18_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+18,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D19_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+19,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D20_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+20,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D21_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+21,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D22_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+22,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D23_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+23,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D24_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+24,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D25_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+25,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D26_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+26,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D27_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+27,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D28_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+28,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D29_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+29,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D30_CODE
                   ,MAX(DECODE(T.ABSENCE_DT, TO_CHAR(TO_DATE(l_wt_from,'YYYYMMDD')+30,'YYYYMMDD'), ABS_TYPE.CHAR_1 ,'')) AS D31_CODE
                FROM THR_EMPLOYEE A,THR_ABSENCE T, THR_WG_SCH_DETAIL c
                    ,(SELECT D.CODE,D.CHAR_1 FROM VHR_HR_CODE D WHERE ID='HR0003') ABS_TYPE
                WHERE T.DEL_IF = 0 AND A.DEL_IF=0 and C.DEL_IF=0
                  AND T.THR_EMP_PK=A.PK 
                  AND ABS_TYPE.CODE(+) = T.ABSENCE_TYPE
                  and C.WORK_DT=T.ABSENCE_DT
                  and C.THR_EMP_PK=a.pk
                  and C.HOL_TYPE is null                  
                  and C.WORK_DT=T.ABSENCE_DT
                  and C.WORK_DT BETWEEN l_wt_from and p_to
                  AND A.JOIN_DT<=p_to
                  AND NVL(A.LEFT_DT, '30000101') between p_from and p_to
                  AND (A.TCO_ORG_PK IN(SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
                GROUP BY  T.THR_EMP_PK) CODE
     , THR_EMPLOYEE A,THR_WORK_GROUP B,TCO_ORG C
    WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0
    AND A.THR_WG_PK=B.PK AND A.TCO_ORG_PK=C.PK
     AND A.JOIN_DT <= p_to
     AND A.LEFT_DT between  p_from and p_to
    AND A.PK=L1.EMP_PK(+)
    AND A.PK=L2.EMP_PK(+)
    AND A.PK=CODE.EMP_PK(+)
     AND (A.TCO_ORG_PK IN (SELECT  g.pk FROM TCO_ORG g
                                                     WHERE g.del_if = 0
                                                      START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                        CONNECT BY PRIOR g.pk = g.p_pk)
                                    OR p_location_pk ='ALL')
     AND A.PK NOT IN(SELECT M.THR_EMP_PK FROM THR_ABSENCE_MONTH M WHERE M.DEL_IF=0 AND M.WORK_MON=p_work_mon
                        AND M.THR_EMP_PK=A.PK)
     )AB;     



p_result:=0;
COMMIT;
    EXCEPTION
    WHEN l_check THEN
        p_result:=-1;
        Raise_application_error(-20019, sqlerrm);
    WHEN  OTHERS THEN
        p_result:=-1;
        RAISE_APPLICATION_ERROR(-20002, 'ERRCODE : '|| l_error||SQLERRM );
    ROLLBACK;
END  ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_8;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_8(
    p_work_mon      IN  VARCHAR2,
    p_from        IN    VARCHAR2,    -- YYYYMMDD
    p_to        IN    VARCHAR2,     -- YYYYMMDD
    p_location_pk       IN VARCHAR2,
    p_SAL_PERIOD             IN VARCHAR2,
    p_crt_by                VARCHAR2,
    p_result        OUT NUMBER      -- RETURN VALUE ( NUMBER )
) IS

l_error         varchar2(2):='';
l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
l_check     exception;
l_lately        number(2):=0;
l_early        number(2):=0;
--CL.FROM_DT     varchar2(8);
l_company_pk number:=0;
L_TIMES varchar2(10):='1';
l_wt_from varchar2(8);
l_pro varchar2(200):='';
l_string varchar2(2000):='';
--******************************************
  -- Create by    : huynh truong
--******************************************

BEGIN
    l_error := '10';
 
 select o.tco_company_pk into l_company_pk
                                            from tco_org o where o.del_if=0 
                                            and  o.pk= p_location_pk;
    
   open l_cur for
    SELECT TIMES FROM THR_CLOSE A
    WHERE A.DEL_IF=0 AND A.MONTH_CLOSE=p_work_mon
    AND A.ID=p_SAL_PERIOD
    and A.TCO_COMPANY_PK= l_company_pk
    AND NVL(A.CLOSE_YN,'N')='N';

     FETCH l_cur INTO l_TIMES;
      l_flag_exist := l_cur%FOUND;
    CLOSE l_cur;
    IF l_flag_exist=FALSE THEN
        p_result:=-1;
        raise l_check;
    END IF;
    
--find procedure
    OPEN l_cur FOR
    SELECT A.char_3 FROM VHR_HR_CODE A
    WHERE A.ID='HR0044' AND UPPER(A.CHAR_1)=UPPER('ST_HR_PRO_HRTI01300_8')
    and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;

    FETCH l_cur INTO l_pro;
    l_flag_exist:=l_cur%FOUND;
    CLOSE l_cur;

IF l_flag_exist=TRUE THEN --CO SU DUNG PROCEDURE RIENG
    l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6,:7); end;' ;
    execute  immediate l_string using in p_work_mon,in p_from,in p_to,in p_location_pk,in p_SAL_PERIOD,in p_crt_by,out p_result ;

ELSE

   SELECT MIN(S.FROM_DT) INTO l_wt_from  --NGAY DAU CHU KY CUA THANG 
    FROM THR_CLOSE S
    WHERE S.DEL_IF=0 AND S.KIND_OF_SALARY=1
    and s.TCO_COMPANY_PK=l_company_pk 
    AND S.MONTH_CLOSE=p_work_mon; 
   
    
    SELECT NVL(V.NUM_1,0),NVL(V.NUM_2,0) INTO l_lately,l_early FROM VHR_HR_CODE V 
    WHERE V.ID='HR0039' and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
    
    

    DELETE THR_MONTH_SUMMARY W
    WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
    and W.SAL_PERIOD=p_SAL_PERIOD
    AND W.TCO_DEPT_PK in (SELECT g.pk
                                         FROM tco_org g
                                        WHERE g.del_if = 0
                                        START WITH g.pk =p_location_pk
                                        CONNECT BY PRIOR g.pk =g.p_pk)
    AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N';

    INSERT INTO THR_MONTH_SUMMARY
    (PK, THR_EMP_PK, WORK_MON, LOCATION_DEPT_PK, IN_LATE, OUT_EARLY, STATUS, WORK_DAYS, WORK_MONTHS
    , EMPLOYEE_TYPE, PROBATION_STATUS, DEL_IF, CRT_BY, CRT_DT,NO_SCAN_CARD,TIMES, SAL_PERIOD,tco_dept_pk)
    SELECT THR_MONTH_SUMMARY_SEQ.NEXTVAL,A.PK,p_work_mon
    ,(select LO.pk from TCO_ORG LO
            where LO.del_if=0 AND LO.P_PK IS NULL
            start with LO.pk =A.TCO_ORG_PK
            connect by prior  LO.p_pk=LO.pk) AS LOCATION_DEPT_PK
    ,NVL(WD.IN_LATE,0),NVL(WD.OUT_EARLY,0)
   ,(CASE WHEN NVL(A.LEFT_DT,TO_CHAR(TO_DATE(p_to,'YYYYMMDD')+1,'YYYYMMDD'))>p_to THEN 'A'
                    ELSE 'R' END) AS STATUS
    ,NVL(WD.WDAY,0) AS WORK_DAYS
    ,ROUND(MONTHS_BETWEEN(TO_DATE(p_to,'YYYYMMDD')+1,TO_DATE(A.JOIN_DT,'YYYYMMDD')),2) AS WORK_MONTHS
    ,A.EMPLOYEE_TYPE
    ,(CASE WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')+1,'YYYYMMDD') >p_to THEN '01'
                WHEN TO_CHAR(TO_DATE(A.END_PROBATION,'YYYYMMDD')+1,'YYYYMMDD')<=p_from THEN '03'
                ELSE '02' END) AS PROBATION_STATUS
     ,0,p_crt_by,SYSDATE,WD.NO_SCAN_CARD
     ,L_TIMES times
    ,p_SAL_PERIOD, A.TCO_ORG_PK
     FROM
        (SELECT B.THR_EMP_PK EMP_PK,ROUND(SUM(NVL(B.WORK_TIME,0)/8),5) AS WDAY
            ,SUM(CASE WHEN  (TO_DATE(B.DATE_IN||B.TIME_IN,'YYYYMMDDHH24:MI')-TO_DATE(B.WORK_DT||S.START_TIME,'YYYYMMDDHH24:MI'))*24*60>=l_lately THEN 1
                ELSE 0 END
            ) AS IN_LATE
            ,SUM(CASE WHEN  (DECODE(S.DURING_DAY,1,TO_DATE(B.WORK_DT||S.END_TIME,'YYYYMMDDHH24:MI'),TO_DATE(B.WORK_DT||S.END_TIME,'YYYYMMDDHH24:MI')+1)-TO_DATE(B.DATE_OUT||B.TIME_OUT,'YYYYMMDDHH24:MI'))*24*60>=l_early+F_LATELY_REGULATION(B.WORK_DT,RE.START_DT,RE.END_DT,RE.MI) THEN 1
                ELSE 0 END
            ) AS OUT_EARLY
            ,SUM(NVL(B.NO_SCAN_FLAG,0))*(-1) AS NO_SCAN_CARD
                FROM THR_EMPLOYEE A, THR_TIME_MACHINE B,THR_WORK_SHIFT S
                ,(SELECT R.THR_EMP_PK THR_EMP_PK,MAX(R.START_DT) START_DT,MAX(R.END_DT) END_DT,MAX(NVL(R.REG_HOURS,0))*60 AS MI
                    FROM THR_REGULATION R,THR_EMPLOYEE A
                    WHERE R.DEL_IF=0
                     AND A.TCO_COMPANY_PK=l_company_pk 
                   AND A.PK=R.THR_EMP_PK and a.del_if=0
                    GROUP BY R.THR_EMP_PK
                    HAVING MAX(R.START_DT)<=p_to AND MAX(R.END_DT)>=l_wt_from) RE
                WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND S.DEL_IF=0 AND B.THR_WS_PK=S.PK
                AND A.PK=B.THR_EMP_PK
                AND B.HOL_TYPE IS NULL
                AND A.SAL_PERIOD=p_SAL_PERIOD
                AND a.TCO_COMPANY_PK=l_company_pk 
                AND B.WORK_DT BETWEEN l_wt_from AND p_to
                AND NVL(A.LEFT_DT,p_to) between p_from and p_to
                and a.left_dt is not null
                AND A.PK=RE.THR_EMP_PK(+)
                GROUP BY B.THR_EMP_PK)WD
                ,THR_EMPLOYEE A
        WHERE A.DEL_IF=0 AND A.PK=WD.EMP_PK(+)
         AND A.JOIN_DT <= p_to
         AND NVL(A.LEFT_DT,p_to) between p_from and p_to
         and a.left_dt is not null
         AND A.TCO_ORG_PK IN (SELECT  g.pk FROM tco_org g
                                                             WHERE g.del_if = 0 
                                                              START WITH g.pk =p_location_pk
                                                                CONNECT BY PRIOR g.pk = g.p_pk)
        AND A.PK NOT IN(SELECT W.THR_EMP_PK FROM THR_MONTH_SUMMARY W WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon);
        
        
        -- XU LY DU LIEU VAO TRONG BANG WORK_MON
        DELETE THR_WORK_MON W
        WHERE W.DEL_IF=0 AND W.WORK_MON=p_work_mon
        AND (W.TCO_DEPT_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                             WHERE g.del_if = 0 
                                              START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                CONNECT BY PRIOR g.pk = g.p_pk)
                            OR p_location_pk ='ALL')
        AND NVL(W.CLOSE_YN,'N')='N' AND NVL(W.CLOSE_M_YN,'N')='N'
        AND W.SAL_PERIOD=p_sal_period ;

        INSERT INTO THR_WORK_MON
        (PK, THR_EMP_PK, FULL_NAME, EMP_ID, THR_GROUP_PK, GROUP_NM, GROUP_FNM, GROUP_KNM, WORK_MON, FROM_DT, TO_DT, JOIN_DT
        , LEFT_DT, STATUS, SAL_PERIOD
        , D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21
        , D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, DEL_IF, CRT_BY, CRT_DT, TCO_DEPT_PK,DEPT_NM, DEPT_KNM, DEPT_LNM
        ,LOCATION_DEPT_PK,TOTAL_WD,PROBATION_STATUS,ABS_PAY,ABS_ALE,ABS_UNPAY,HOL_HOUR)
        SELECT THR_WORK_MON_SEQ.NEXTVAL, E.PK, E.FULL_NAME, E.EMP_ID, E.THR_WG_PK, A.GROUP_NM, A.GROUP_FNM, A.GROUP_KNM, p_work_mon, W.FROM_DT, W.TO_DT, E.JOIN_DT
        ,E.LEFT_DT, E.STATUS, p_sal_period
        ,DECODE(NVL(W.D1_L1,0) + NVL(W.D1_L2,0), 0, '',NVL(W.D1_L1,0) + NVL(W.D1_L2,0))||A.D1_CODE||DECODE(NVL(W.H1_L1, 0) + NVL(W.H1_L2, 0), 0 ,'', 'HOL') AS D1
        ,DECODE(NVL(W.D2_L1,0) + NVL(W.D2_L2,0), 0, '',NVL(W.D2_L1,0) + NVL(W.D2_L2,0))||A.D2_CODE||DECODE(NVL(W.H2_L1, 0) + NVL(W.H2_L2, 0), 0 ,'', 'HOL') AS D2
        ,DECODE(NVL(W.D3_L1,0) + NVL(W.D3_L2,0), 0, '',NVL(W.D3_L1,0) + NVL(W.D3_L2,0))||A.D3_CODE||DECODE(NVL(W.H3_L1, 0) + NVL(W.H3_L2, 0), 0 ,'', 'HOL') AS D3
        ,DECODE(NVL(W.D4_L1,0) + NVL(W.D4_L2,0), 0, '',NVL(W.D4_L1,0) + NVL(W.D4_L2,0))||A.D4_CODE||DECODE(NVL(W.H4_L1, 0) + NVL(W.H4_L2, 0), 0 ,'', 'HOL') AS D4
        ,DECODE(NVL(W.D5_L1,0) + NVL(W.D5_L2,0), 0, '',NVL(W.D5_L1,0) + NVL(W.D5_L2,0))||A.D5_CODE||DECODE(NVL(W.H5_L1, 0) + NVL(W.H5_L2, 0), 0 ,'', 'HOL') AS D5
        ,DECODE(NVL(W.D6_L1,0) + NVL(W.D6_L2,0), 0, '',NVL(W.D6_L1,0) + NVL(W.D6_L2,0))||A.D6_CODE||DECODE(NVL(W.H6_L1, 0) + NVL(W.H6_L2, 0), 0 ,'', 'HOL') AS D6
        ,DECODE(NVL(W.D7_L1,0) + NVL(W.D7_L2,0), 0, '',NVL(W.D7_L1,0) + NVL(W.D7_L2,0))||A.D7_CODE||DECODE(NVL(W.H7_L1, 0) + NVL(W.H7_L2, 0), 0 ,'', 'HOL') AS D7
        ,DECODE(NVL(W.D8_L1,0) + NVL(W.D8_L2,0), 0, '',NVL(W.D8_L1,0) + NVL(W.D8_L2,0))||A.D8_CODE||DECODE(NVL(W.H8_L1, 0) + NVL(W.H8_L2, 0), 0 ,'', 'HOL') AS D8
        ,DECODE(NVL(W.D9_L1,0) + NVL(W.D9_L2,0), 0, '',NVL(W.D9_L1,0) + NVL(W.D9_L2,0))||A.D9_CODE||DECODE(NVL(W.H9_L1, 0) + NVL(W.H9_L2, 0), 0 ,'', 'HOL') AS D9
        ,DECODE(NVL(W.D10_L1,0) + NVL(W.D10_L2,0), 0, '',NVL(W.D10_L1,0) + NVL(W.D10_L2,0))||A.D10_CODE||DECODE(NVL(W.H10_L1, 0) + NVL(W.H10_L2, 0), 0 ,'', 'HOL') AS D10
        ,DECODE(NVL(W.D11_L1,0) + NVL(W.D11_L2,0), 0, '',NVL(W.D11_L1,0) + NVL(W.D11_L2,0))||A.D11_CODE||DECODE(NVL(W.H11_L1, 0) + NVL(W.H11_L2, 0), 0 ,'', 'HOL') AS D11
        ,DECODE(NVL(W.D12_L1,0) + NVL(W.D12_L2,0), 0, '',NVL(W.D12_L1,0) + NVL(W.D12_L2,0))||A.D12_CODE||DECODE(NVL(W.H12_L1, 0) + NVL(W.H12_L2, 0), 0 ,'', 'HOL') AS D12
        ,DECODE(NVL(W.D13_L1,0) + NVL(W.D13_L2,0), 0, '',NVL(W.D13_L1,0) + NVL(W.D13_L2,0))||A.D13_CODE||DECODE(NVL(W.H13_L1, 0) + NVL(W.H13_L2, 0), 0 ,'', 'HOL') AS D13
        ,DECODE(NVL(W.D14_L1,0) + NVL(W.D14_L2,0), 0, '',NVL(W.D14_L1,0) + NVL(W.D14_L2,0))||A.D14_CODE||DECODE(NVL(W.H14_L1, 0) + NVL(W.H14_L2, 0), 0 ,'', 'HOL') AS D14
        ,DECODE(NVL(W.D15_L1,0) + NVL(W.D15_L2,0), 0, '',NVL(W.D15_L1,0) + NVL(W.D15_L2,0))||A.D15_CODE||DECODE(NVL(W.H15_L1, 0) + NVL(W.H15_L2, 0), 0 ,'', 'HOL') AS D15
        ,DECODE(NVL(W.D16_L1,0) + NVL(W.D16_L2,0), 0, '',NVL(W.D16_L1,0) + NVL(W.D16_L2,0))||A.D16_CODE||DECODE(NVL(W.H16_L1, 0) + NVL(W.H16_L2, 0), 0 ,'', 'HOL') AS D16
        ,DECODE(NVL(W.D17_L1,0) + NVL(W.D17_L2,0), 0, '',NVL(W.D17_L1,0) + NVL(W.D17_L2,0))||A.D17_CODE||DECODE(NVL(W.H17_L1, 0) + NVL(W.H17_L2, 0), 0 ,'', 'HOL') AS D17
        ,DECODE(NVL(W.D18_L1,0) + NVL(W.D18_L2,0), 0, '',NVL(W.D18_L1,0) + NVL(W.D18_L2,0))||A.D18_CODE||DECODE(NVL(W.H18_L1, 0) + NVL(W.H18_L2, 0), 0 ,'', 'HOL') AS D18
        ,DECODE(NVL(W.D19_L1,0) + NVL(W.D19_L2,0), 0, '',NVL(W.D19_L1,0) + NVL(W.D19_L2,0))||A.D19_CODE||DECODE(NVL(W.H19_L1, 0) + NVL(W.H19_L2, 0), 0 ,'', 'HOL') AS D19
        ,DECODE(NVL(W.D20_L1,0) + NVL(W.D20_L2,0), 0, '',NVL(W.D20_L1,0) + NVL(W.D20_L2,0))||A.D20_CODE||DECODE(NVL(W.H20_L1, 0) + NVL(W.H20_L2, 0), 0 ,'', 'HOL') AS D20
        ,DECODE(NVL(W.D21_L1,0) + NVL(W.D21_L2,0), 0, '',NVL(W.D21_L1,0) + NVL(W.D21_L2,0))||A.D21_CODE||DECODE(NVL(W.H21_L1, 0) + NVL(W.H21_L2, 0), 0 ,'', 'HOL') AS D21
        ,DECODE(NVL(W.D22_L1,0) + NVL(W.D22_L2,0), 0, '',NVL(W.D22_L1,0) + NVL(W.D22_L2,0))||A.D22_CODE||DECODE(NVL(W.H22_L1, 0) + NVL(W.H22_L2, 0), 0 ,'', 'HOL') AS D22
        ,DECODE(NVL(W.D23_L1,0) + NVL(W.D23_L2,0), 0, '',NVL(W.D23_L1,0) + NVL(W.D23_L2,0))||A.D23_CODE||DECODE(NVL(W.H23_L1, 0) + NVL(W.H23_L2, 0), 0 ,'', 'HOL') AS D23
        ,DECODE(NVL(W.D24_L1,0) + NVL(W.D24_L2,0), 0, '',NVL(W.D24_L1,0) + NVL(W.D24_L2,0))||A.D24_CODE||DECODE(NVL(W.H24_L1, 0) + NVL(W.H24_L2, 0), 0 ,'', 'HOL') AS D24
        ,DECODE(NVL(W.D25_L1,0) + NVL(W.D25_L2,0), 0, '',NVL(W.D25_L1,0) + NVL(W.D25_L2,0))||A.D25_CODE||DECODE(NVL(W.H25_L1, 0) + NVL(W.H25_L2, 0), 0 ,'', 'HOL') AS D25
        ,DECODE(NVL(W.D26_L1,0) + NVL(W.D26_L2,0), 0, '',NVL(W.D26_L1,0) + NVL(W.D26_L2,0))||A.D26_CODE||DECODE(NVL(W.H26_L1, 0) + NVL(W.H26_L2, 0), 0 ,'', 'HOL') AS D26
        ,DECODE(NVL(W.D27_L1,0) + NVL(W.D27_L2,0), 0, '',NVL(W.D27_L1,0) + NVL(W.D27_L2,0))||A.D27_CODE||DECODE(NVL(W.H27_L1, 0) + NVL(W.H27_L2, 0), 0 ,'', 'HOL') AS D27
        ,DECODE(NVL(W.D28_L1,0) + NVL(W.D28_L2,0), 0, '',NVL(W.D28_L1,0) + NVL(W.D28_L2,0))||A.D28_CODE||DECODE(NVL(W.H28_L1, 0) + NVL(W.H28_L2, 0), 0 ,'', 'HOL') AS D28
        ,DECODE(NVL(W.D29_L1,0) + NVL(W.D29_L2,0), 0, '',NVL(W.D29_L1,0) + NVL(W.D29_L2,0))||A.D29_CODE||DECODE(NVL(W.H29_L1, 0) + NVL(W.H29_L2, 0), 0 ,'', 'HOL') AS D29
        ,DECODE(NVL(W.D30_L1,0) + NVL(W.D30_L2,0), 0, '',NVL(W.D30_L1,0) + NVL(W.D30_L2,0))||A.D30_CODE||DECODE(NVL(W.H30_L1, 0) + NVL(W.H30_L2, 0), 0 ,'', 'HOL') AS D30
        ,DECODE(NVL(W.D31_L1,0) + NVL(W.D31_L2,0), 0, '',NVL(W.D31_L1,0) + NVL(W.D31_L2,0))||A.D31_CODE||DECODE(NVL(W.H31_L1, 0) + NVL(W.H31_L2, 0), 0 ,'', 'HOL') AS D31
        , 0, P_CRT_BY, SYSDATE, E.TCO_ORG_PK, A.DEPT_NM, A.DEPT_KNM, A.DEPT_LNM
        ,A.LOCATION_DEPT_PK,NVL(W.TOTAL_WD, 0) + NVL(W.TOTAL_HOL,0) + NVL(A.TOTAL_ABS_PAY, 0) AS TOTAL_WD
        ,W.PROBATION_STATUS, A.TOTAL_ABS_PAY AS ABS_PAY, A.TOTAL_ABS_ALE AS ABS_ALE, A.TOTAL_ABS_NPAY AS ABS_UNPAY, W.TOTAL_HOL AS HOL_HOUR
        FROM THR_EMPLOYEE E, THR_WORK_TIME_MONTH W, THR_ABSENCE_MONTH A
        WHERE E.DEL_IF=0 AND W.DEL_IF=0 AND A.DEL_IF=0
        AND E.PK = W.THR_EMP_PK
        AND E.PK = A.THR_EMP_PK
        AND W.WORK_MON = p_work_mon
        AND A.WORK_MON = p_work_mon
        AND E.JOIN_DT <= p_to
        AND NVL(E.LEFT_DT,'30000101') BETWEEN  p_from AND p_to
        AND E.SAL_PERIOD = p_sal_period
        AND (E.TCO_ORG_PK IN  (SELECT  g.pk FROM TCO_ORG g
                                                         WHERE g.del_if = 0
                                                          START WITH g.pk =DECODE (p_location_pk,'ALL', 0,p_location_pk)
                                                            CONNECT BY PRIOR g.pk = g.p_pk)
                                        OR p_location_pk ='ALL')
        AND E.PK NOT IN(SELECT X.THR_EMP_PK FROM THR_WORK_MON X WHERE X.DEL_IF=0 AND X.WORK_MON=p_work_mon and x.thr_emp_pk=a.pk);
END IF;

p_result:=0;
/*COMMIT;
    EXCEPTION
    WHEN l_check THEN
        p_result:=-1;
        Raise_application_error(-20019, sqlerrm);
    WHEN  OTHERS THEN
        p_result:=-1;
        RAISE_APPLICATION_ERROR(-20002, 'ERRCODE : '|| l_error||SQLERRM );
    ROLLBACK;*/
END  ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_9;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01300_9 (
   p_work_mon      IN     VARCHAR2,
   p_from          IN     VARCHAR2,                                -- YYYYMMDD
   p_to            IN     VARCHAR2,                                -- YYYYMMDD
   p_location_pk   IN     VARCHAR2,
   p_SAL_PERIOD    IN     VARCHAR2,
   p_flag          IN     VARCHAR2,
   p_crt_by               VARCHAR2,
   p_result           OUT VARCHAR2                    -- RETURN VALUE ( NUMBER )
                                )
IS
    l_error           VARCHAR2 (2) := '';
    l_flag_exist      BOOLEAN := FALSE;
    l_cur_rec         NUMBER;
    l_cur             SYS_REFCURSOR;
    l_check           EXCEPTION;
    l_probation_num   NUMBER (1) := 0;
    flag_cal_resign   VARCHAR2 (1) := 'N';
    l_pro             VARCHAR2 (200) := '';
    l_string          VARCHAR2 (2000) := '';
    l_company_pk      NUMBER := 0;
    l_flag            VARCHAR2(1);
    l_kind_sal       NUMBER;
    l_work_from  varchar2(8):='';
    l_work_to varchar2(8):=''; 
    l_times varchar2(2):='';
    l_id varchar2(10);
--******************************************
-- Create by    : huynh truong
--******************************************

BEGIN
   l_error := '10';

   SELECT o.tco_company_pk
     INTO l_company_pk
     FROM tco_org o
    WHERE o.del_if = 0 AND o.pk = p_location_pk;
   
   IF p_flag = 'CLOSE' THEN
        l_flag:= 'Y';
   ELSE
        l_flag:= 'N';
   END IF;    
   
   
   SELECT NVL(V.NUM_1,1) INTO l_kind_sal 
   FROM VHR_HR_CODE V
   WHERE V.ID='HR0030'
    AND V.CODE = p_SAL_PERIOD;
    
    IF l_kind_sal = 1 THEN          --ACTIVE
    
        --kiem tra xem co process luong chua
        OPEN l_cur FOR
          SELECT 1
            FROM thr_month_salary B
           WHERE B.DEL_IF = 0 AND B.WORK_MON = p_work_mon
            and B.SAL_PERIOD = p_sal_period
            AND B.TCO_COMPANY_PK =
                        (SELECT G.TCO_COMPANY_PK
                           FROM tco_org g
                          WHERE G.DEL_IF = 0 AND g.pk = p_location_pk);

       FETCH l_cur INTO l_cur_rec;

       l_flag_exist := l_cur%FOUND;

       CLOSE l_cur;

       IF l_flag_exist = TRUE THEN
          raise l_check;
      
       END IF;
    
    
    
       UPDATE THR_WG_SCH_DETAIL A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
             ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);



       UPDATE THR_TIME_MACHINE A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);



       UPDATE THR_EXTRA_TIME A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_ABSENCE A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.ABSENCE_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_WORK_MON A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_EXTRA_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

        UPDATE THR_ABSENCE_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_MONTH_SUMMARY A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);


        UPDATE THR_WORK_TIME_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);
                                          
    ELSE        --RESIGN
    
        --kiem tra xem co process luong chua
--        OPEN l_cur FOR
--          SELECT 1
--            FROM thr_month_salary B
--           WHERE B.DEL_IF = 0 AND B.WORK_MON = p_work_mon
--            and B.SAL_PERIOD = p_sal_period
--            AND B.TCO_COMPANY_PK =
--                        (SELECT G.TCO_COMPANY_PK
--                           FROM tco_org g
--                          WHERE G.DEL_IF = 0 AND g.pk = p_location_pk);
--
--       FETCH l_cur INTO l_cur_rec;
--
--       l_flag_exist := l_cur%FOUND;
--
--       CLOSE l_cur;
--
--       IF l_flag_exist = TRUE THEN
--          raise l_check;
--      
--       END IF;
    
        SELECT S.FROM_DT,S.TO_DT,S.ID INTO l_work_from,l_work_to,l_id  --NGAY DAU CHU KY CUA THANG 
        FROM THR_CLOSE S
        WHERE S.DEL_IF=0 AND S.KIND_OF_SALARY=1 
        --AND S.ID=P_ID  
        AND S.MONTH_CLOSE=p_work_mon
        AND ROWNUM=1;
        
        select times into l_times from thr_close where del_if =0 and id = p_SAL_PERIOD and month_close = p_work_mon;
        
        
        UPDATE THR_WG_SCH_DETAIL A
        SET A.CLOSE_M_YN=l_flag
            ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
        WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN l_work_from AND p_to
        and a.THR_EMP_PK  in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
                                        and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
        and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );                                  
             
             

        UPDATE THR_TIME_MACHINE A
        SET A.CLOSE_M_YN=l_flag
            ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
       WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN l_work_from AND p_to
       and a.THR_EMP_PK in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
                                and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
       and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );            

        UPDATE THR_EXTRA_TIME A
        SET A.CLOSE_M_YN=l_flag
                ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
        WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN l_work_from AND p_to
                and a.THR_EMP_PK in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
             and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
             and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );      

        UPDATE THR_ABSENCE A
        SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
        WHERE A.DEL_IF=0 AND A.ABSENCE_DT BETWEEN l_work_from AND p_to
        and a.THR_EMP_PK in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
             and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
        and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );           

       
        UPDATE THR_WORK_MON A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE     A.DEL_IF=0 AND A.WORK_MON=p_work_mon
          and nvl(a.TIMES,'0')=l_times 
          and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );      


         UPDATE THR_EXTRA_MONTH A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );       
          
        UPDATE THR_ABSENCE_MONTH A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );       
        
        UPDATE THR_MONTH_SUMMARY A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );   
                                   
       UPDATE THR_WORK_TIME_MONTH A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );   
                                                                             
    END IF;
   p_result := l_flag;
   COMMIT;
EXCEPTION
   WHEN l_check
   THEN
      p_result := -1;
      Raise_application_error (-20019,'This month of salary has been processed.');
   WHEN OTHERS
   THEN
      p_result := -1;
      RAISE_APPLICATION_ERROR (-20002, 'ERRCODE : ' || l_error || SQLERRM);
      ROLLBACK;
END;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01603_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01603_0 (
   p_tco_org_pk     varchar2,
   p_from           varchar2,
   p_to             varchar2,
   p_emp_id         varchar2,
   p_crt_by            varchar,
   p_return_flag   out varchar)
IS
   l_tco_company_pk     number:=99;
   l_kind_ot        varchar(10):='02';
   
   l_wt_rate         number;
   l_ot_rate         number;
   l_nt30_rate       number;
   l_nt45_rate       number;
   l_nt60_rate       number;
   l_nt90_rate       number;
   l_ht_rate         number;
   l_ost_rate        number;
   l_oht_rate        number;
   l_st_rate         number;
   
   l_thr_emp_pk      number;
   l_count           number;
BEGIN
   
  if p_emp_id is not null then
       
      select max(a.pk) into l_thr_emp_pk 
      from thr_employee a
       where a.del_if=0
       and upper(a.emp_id) = upper(p_emp_id);
           
       if l_thr_emp_pk is null then
         p_return_flag:=-1;
         raise_application_error(-20019, 'KHÔNG TÌM THẤY MÃ NHÂN VIÊN NÀY TRONG HỆ THỐNG, VUI LÒNG KIỂM TRA LẠI');
       end if;
  else 
          l_thr_emp_pk := null;
  end if;
  
  -- checking data of work schedule
  select count(a.pk) into l_count
  from thr_wg_sch_detail a
  where a.del_if=0
  and a.work_dt between p_from and p_to
  and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
  
  if l_count = 0 then
         p_return_flag:=-1;
         raise_application_error(-20019, 'CHƯA CÓ DỮ LIỆU LỊCH LÀM VIỆC, VUI LÒNG KIỂM TRA LẠI');
  end if;
  
/*
  update  thr_work_date a
  set a.del_if = a.pk
  , A.REMARK = 'DELETE BEFORE PROCESS'
  where a.del_if=0
  and a.work_dt between p_from and p_to
  and nvl(a.mod_byhand_yn, 'N') = 'N'
  and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
*/
  select nvl(max(o.tco_company_pk), 99) 
  into l_tco_company_pk from tco_org o
  where o.del_if=0
  and o.pk = p_tco_org_pk;
  
  select    sum(decode(c.code,'01',c.num_1,0)) as wt
            ,sum(decode(c.code,'02',c.num_1,0)) as ot
            ,sum(decode(c.code,'03',c.num_1,0)) as nt30
            ,sum(decode(c.code,'04',c.num_1,0)) as nt45
            ,sum(decode(c.code,'05',c.num_1,0)) as nt60
            ,sum(decode(c.code,'06',c.num_1,0)) as nt90
            ,sum(decode(c.code,'07',c.num_1,0)) as ht
            ,sum(decode(c.code,'08',c.num_1,0)) as ost
            ,sum(decode(c.code,'09',c.num_1,0)) as oht
            ,sum(decode(c.code,'10',c.num_1,0)) as st
             into l_wt_rate,l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate,l_oht_rate,l_st_rate
             from thr_code_detail c,thr_code_master d
             where c.del_if=0 and d.del_if=0 and c.thr_code_master_pk=d.pk
             and d.id='HR0028' and nvl(d.use_yn,'N')='Y'
             and (nvl(to_char(c.tco_company_pk),l_tco_company_pk) = l_tco_company_pk );

  for l_cur in (select c.car_date as work_dt 
                from thr_calendar c
                where c.del_if=0
                and c.car_date between p_from and p_to
                and c.tco_company_pk = l_tco_company_pk )
 loop
      -- tao moi thong tin thr_work_date
       insert into thr_work_date(pk, thr_emp_pk, emp_id, id_num, thr_ws_pk,  thr_wg_pk, tco_org_pk, tco_company_pk
                , day_type, hol_type, work_dt, del_if, crt_by, crt_dt, ot_yn, start_ot, start_nt, shift_time, days_shift
                , week_no)
       select thr_work_date_seq.nextval, e.pk, e.emp_id, e.id_num, d.thr_ws_pk, d.thr_wg_pk, e.tco_org_pk, e.tco_company_pk
               , d.day_type, d.hol_type, d.work_dt, 0, p_crt_by, sysdate, nvl(e.ot_yn, 'N'), s.start_ot, s.start_nt, s.wt, nvl(s.during_day, 1)
               , HR_F_GET_WEEKS(d.work_dt)
       from thr_employee e, thr_wg_sch_detail d, thr_work_shift s
       where e.del_if=0 and d.del_if=0 and s.del_if=0
       and d.thr_ws_pk = s.pk
       and e.pk = d.thr_emp_pk
       and nvl(e.attendance_yn, 'N') = 'Y'
       and d.work_dt = l_cur.work_dt
       and nvl(e.left_dt, '30000101') > l_cur.work_dt
       and e.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
       and d.thr_emp_pk not in (select w.thr_emp_pk 
                                    from thr_work_date w where w.del_if=0
                                    and w.work_dt = d.work_dt
                                    and w.thr_emp_pk = d.thr_emp_pk
                                    and nvl(w.tco_company_pk, l_tco_company_pk) = nvl(e.tco_company_pk, l_tco_company_pk)) 
       and d.thr_emp_pk=nvl(l_thr_emp_pk, d.thr_emp_pk);
                                    
     
   
      -- XAC DINH GIO VAO RA CHO CA 1 NGAY:
      -- ko di tre qua 4 h
      update thr_work_date a
      set (a.time_in, a.date_in) = (select min(t.time) , min(d.work_dt)
                                    from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    where d.del_if=0 and s.del_if=0 and e.del_if=0
                                    and e.pk = d.thr_emp_pk
                                    and d.thr_emp_pk = a.thr_emp_pk
                                    and d.thr_ws_pk = s.pk
                                    and t.work_dt = d.work_dt  
                                    and t.id= e.id_num
                                    and t.work_dt = a.work_dt
                                    and nvl(s.start_time, ' ') <= nvl(s.end_time, ' ')
                                    and abs(to_number(substr(t.time,1,2))-to_number(substr(s.start_time,1,2))) <= nvl(a.shift_time, 8) - 1 -- so gio lam viec co the >=1h
                                    and not exists (select 1 from thr_work_date k 
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and nvl(k.time_out, ' ') = nvl(t.time, ' ')
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                    )
        , a.remark = 'UPDATE TIME IN SHIFT 1 DAYS BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                            
 -- lam viec it nhat 2h     
      update thr_work_date a
      set (a.time_out, a.date_out) = (select max(t.time), min(d.work_dt) 
                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                        and e.pk = d.thr_emp_pk
                        and d.thr_emp_pk = a.thr_emp_pk
                        and d.thr_ws_pk = s.pk
                        and t.work_dt = d.work_dt  
                        and t.id= e.id_num
                        and t.work_dt = a.work_dt
--                        and abs(to_number(substr(t.time,1,2))-to_number(substr(s.end_time,1,2))) <= nvl(a.shift_time, 8) - 1 -- dao dong 4 h
                        and nvl(t.time, ' ') <> nvl(a.time_in, ' ')
                        )
        , a.remark = 'UPDATE TIME OUT SHIFT 1 DAYS BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 1 -- ca 1 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);  
                            
      
      -- XAC DINH GIO VAO RA CHO CA 2 NGAY:
      -- VAO NGAY 1 RA NGAY 2
      update thr_work_date a
      set (a.time_in, a.date_in) = (select min(t.time) , min(d.work_dt)
                                    from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                    where d.del_if=0 and s.del_if=0 and e.del_if=0
                                    and e.pk = d.thr_emp_pk
                                    and d.thr_emp_pk = a.thr_emp_pk
                                    and d.thr_ws_pk = s.pk
                                    and t.work_dt = d.work_dt  
                                    and t.id= e.id_num
                                    and t.work_dt = a.work_dt
                                    and nvl(s.start_time, ' ') > nvl(s.end_time, ' ')
                                    and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) <= 4
                                    and not exists (select 1 from thr_work_date k 
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and nvl(k.time_out, ' ') = nvl(t.time, ' ')
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                    )       
        , (a.time_out, a.date_out) = (select max(t.time) , min(t.work_dt)
                                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                                        and e.pk = d.thr_emp_pk
                                        and d.thr_emp_pk = a.thr_emp_pk
                                        and d.thr_ws_pk = s.pk
                                        and t.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')+1,'YYYYMMDD')  
                                        and t.id= e.id_num
                                        and t.work_dt = to_char(to_date(a.work_dt,'YYYYMMDD')+1,'YYYYMMDD') 
                                        and nvl(s.start_time, ' ') > nvl(s.end_time, ' ')
                                        and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') 
                                            - to_date(to_char(to_date(d.work_dt,'YYYYMMDD')+1,'YYYYMMDD')||s.end_time, 'yyyymmddhh24:mi'))*24) <= 6
                                        )
        , a.remark = 'UPDATE TIME IN OUT (IN1OUT2) BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                            
     -- vao ngay 1 ra ngay 1
      update thr_work_date a
      set  (a.time_out, a.date_out) = (select max(t.time) , min(t.work_dt)
                                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                                        and e.pk = d.thr_emp_pk
                                        and d.thr_emp_pk = a.thr_emp_pk
                                        and d.thr_ws_pk = s.pk
                                        and t.work_dt = d.work_dt  
                                        and t.id= e.id_num
                                        and t.work_dt = a.work_dt
                                        and nvl(t.time, ' ') > nvl(s.start_time, ' ')  --phai lon hon gio bat dau ca lam viec
                                        and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') 
                                            - to_date(d.work_dt||s.start_time, 'yyyymmddhh24:mi'))*24) >= 1 -- lon hon 1 tieng so voi bat dau ca moi lay
                                        )
        , a.remark = 'UPDATE TIME OUT (IN1OUT1) BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is  null
      and a.time_in is not null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                                  
      -- vao ngay 2 ra ngay 2 (da xac dinh dc out time)
      update thr_work_date a
      set  (a.time_in, a.date_in) = (select min(t.time) , min(t.work_dt)
                                        from thr_time_temp t, thr_wg_sch_detail d, thr_work_shift s, thr_employee e
                                        where d.del_if=0 and s.del_if=0 and e.del_if=0
                                        and e.pk = d.thr_emp_pk
                                        and d.thr_emp_pk = a.thr_emp_pk
                                        and d.thr_ws_pk = s.pk
                                        and t.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')+1,'YYYYMMDD')  
                                        and t.id= e.id_num
                                        and t.work_dt = to_char(to_date(a.work_dt,'YYYYMMDD')+1,'YYYYMMDD')   
                                        and nvl(t.time, ' ') < nvl(s.start_time, ' ')  --phai nho hon gio bat dau ca lam viec
                                        and abs((to_date(t.work_dt||t.time, 'yyyymmddhh24:mi') 
                                            - to_date(a.date_out||a.time_out, 'yyyymmddhh24:mi'))*24) >= 1 -- nho hon 1 tieng so voi time out
                                        and not exists (select 1 from thr_work_date k 
                                                                where k.del_if=0 
                                                                and k.work_dt = to_char(to_date(d.work_dt,'YYYYMMDD')-1,'YYYYMMDD') 
                                                                and nvl(k.time_out, ' ') = nvl(t.time, ' ')
                                                                and k.thr_emp_pk = d.thr_emp_pk
                                                                ) 
                                        )
        , a.remark = 'UPDATE TIME OUT (IN1OUT1) BY PROCESS'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_out is not null
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);     
                                  
     -- KO CO GIO IN VA CA NGAY KE TIEP LA CA NGAY
      update thr_work_date a
      set a.time_out = NULL
        , a.date_out = NULL 
        , a.remark = 'KO CO GIO IN VA CA NGAY KE TIEP LA CA NGAY'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and nvl(a.days_shift, 1) = 2 -- ca 2 ngay
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk in(select g.thr_emp_pk from thr_wg_sch_detail g,thr_work_shift s   -- ca cua ngay ke tiep la ca ngay 
                                        where g.del_if=0 and s.del_if=0 and g.thr_ws_pk=s.pk 
                                        and g.work_dt=to_char(to_date(a.work_dt,'YYYYMMDD')+1,'YYYYMMDD')
                                        and s.start_time<s.end_time
                                    and g.thr_emp_pk=a.thr_emp_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk); 
                                    
     --gio in hom nay trung  voi gio out hom qua=> lay lai gio in 1 lan nua
      update thr_work_date a
      set  (a.time_in, a.date_in) = (select min(t.time) , min(t.work_dt)
                                            from thr_time_temp t,thr_employee e 
                                            where e.del_if=0 and e.id_num = t.id 
                                                and t.work_dt= l_cur.work_dt
                                                and t.time> a.time_in
                                                and e.pk= a.thr_emp_pk
                                                and t.work_dt = a.work_dt
                                                and t.time<'12:00')
        , a.remark = 'TRUNG VOI GIO OUT NGAY TRUOC'
      where a.del_if=0
      and a.work_dt = l_cur.work_dt
      and a.time_in is null
      and nvl(a.mod_byhand_yn, 'N') = 'N' 
      and a.time_in is not null
      and a.time_in in(select nvl(t.time_out,' ') from thr_work_date t where t.del_if=0
                        and t.work_dt = to_char(to_date(l_cur.work_dt,'YYYYMMDD')-1,'YYYYMMDD')
                        and t.thr_emp_pk = a.thr_emp_pk)
      and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk)
      and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);                                          
     
    -- tinh gio wt, ot, nt
        update thr_work_date a
        set a.wt = hr_sf_get_wt_com(a.date_in||a.time_in,a.date_out||a.time_out,a.thr_ws_pk,a.work_dt, l_tco_company_pk)
           ,a.ot = case when a.ot_yn = 'Y' then hr_sf_get_ot_com(a.start_ot,a.date_out||a.time_out , a.thr_ws_pk, a.work_dt,l_kind_ot,l_tco_company_pk)
                        else 0 end
           ,a.nt = hr_sf_get_nt1_com(a.start_nt,a.date_out||a.time_out, a.thr_ws_pk, a.work_dt, a.date_in||a.time_in, l_tco_company_pk)
           ,a.ont= case when a.ot_yn = 'Y' then hr_sf_get_nt2_com(a.start_nt,a.date_out||a.time_out, a.thr_ws_pk, a.work_dt, a.date_in||a.time_in, l_tco_company_pk)
                        else 0 end
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.time_in is not null
        and a.time_out is not null
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
                                  
    -- tinh gio wt rate, ot rate, nt rate
        update thr_work_date a
        set a.wt_rate = case when nvl(a.wt, 0) > 0 then decode(a.hol_type, 'SUN', l_st_rate, 'HOL', l_ht_rate, l_wt_rate) else 0 end
           ,a.ot_rate = case when nvl(a.ot, 0) > 0 then decode(a.hol_type, 'SUN', l_ost_rate, 'HOL', l_oht_rate, l_ot_rate) else 0 end
           ,a.nt_rate = case when nvl(a.nt, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt30_rate) else 0 end
           ,a.ont_rate = case when nvl(a.ont, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt45_rate) else 0 end
           ,a.wd = round(nvl(a.wt, 0)/ nvl(a.shift_time, 8), 2)
        where a.del_if=0
        and nvl(a.mod_byhand_yn,'N') <>'Y'
        and a.time_in is not null
        and a.time_out is not null
        and a.work_dt = l_cur.work_dt
        and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
        and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
        
        
        
   /*  
    -- insert vang neu gio lam viec khong du
      insert into thr_absence  
                 (pk, thr_emp_pk, thr_wg_pk, thr_ws_pk,absence_type,absence_dt, absence_time
                 , company_pay_yn, company_pay_rate, reg_type
                 , remark, del_if, crt_dt, crt_by, tco_company_pk)
                select thr_absence_seq.nextval,a.pk,b.thr_wg_pk,b.thr_ws_pk,'21', l_cur.work_dt
                   ,(nvl(s.shift_time, 8) - nvl(s.wt, 0)) as absence_time
                   ,'Y',100, 1, 'INS FROM PROCESS', 0, sysdate, p_crt_by, a.tco_company_pk
                  from thr_employee a, thr_wg_sch_detail b, thr_work_date s
                 where a.del_if = 0
                   and b.del_if = 0
                   and s.del_if = 0
                   and a.pk = b.thr_emp_pk 
                   and b.thr_emp_pk = s.thr_emp_pk
                   and b.work_dt = s.work_dt
                   and b.work_dt=l_cur.work_dt
                   and a.pk in (select w.thr_emp_pk from thr_work_date w where w.del_if=0
                                         and w.work_dt = l_cur.work_dt
                                         and nvl(w.mod_byhand_yn, 'N') = 'N'
                                         and w.thr_emp_pk = a.pk
                                         )
                   and a.join_dt <= l_cur.work_dt
                   and (a.left_dt> l_cur.work_dt or a.left_dt is null)
                   and nvl(s.wt, 0) < nvl(s.shift_time, 8)
                   and a.pk not in (select e.thr_emp_pk
                                      from thr_absence e
                                     where e.del_if = 0
                                       and e.absence_dt = l_cur.work_dt and e.thr_emp_pk=a.pk)
                   and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
                  and b.hol_type is null
                  and a.pk = nvl(l_thr_emp_pk,a.pk);
     */
  /*   
    --xoa vang kieu 13 neu co du lieu
    delete thr_absence a
    where a.del_if=0
    and a.absence_type = '13'
    and a.thr_emp_pk in (select w.thr_emp_pk from thr_work_date w
                            where w.del_if=0
                            and w.thr_emp_pk = a.thr_emp_pk
                            and w.work_dt = a.absence_dt
                            and w.work_dt = l_cur.work_dt
                            and (w.time_in is not null or w.time_out is not null));
     
    -- xu ly vang mat
    insert into thr_absence  --AUTO INSERT ABSENT LIST NON SCAN CARD 
                 (pk, thr_emp_pk, thr_wg_pk, thr_ws_pk,absence_type,absence_dt, absence_time
                 , company_pay_yn, company_pay_rate, reg_type
                 , remark, del_if, crt_dt, crt_by, tco_company_pk, week_no)
                select thr_absence_seq.nextval,a.pk,b.thr_wg_pk,b.thr_ws_pk,'13',l_cur.work_dt,(case when nvl(s.wt,0)+nvl(s.wt_plus,0)>8 then 8 else nvl(s.wt,0)+nvl(s.wt_plus,0) end)
                       ,'N',0, 1, 'INS FROM PROCESS', 0, sysdate, p_crt_by, a.tco_company_pk
                       ,HR_F_GET_WEEKS(l_cur.work_dt)
                  from thr_employee a, thr_wg_sch_detail b, thr_work_shift s
                 where a.del_if = 0
                   and b.del_if = 0
                   and s.del_if = 0
                   and a.pk = b.thr_emp_pk and b.thr_ws_pk=s.pk
                   and b.work_dt=l_cur.work_dt
                   and a.pk in (select w.thr_emp_pk from thr_work_date w where w.del_if=0
                                         and w.work_dt = l_cur.work_dt
                                         and nvl(w.wt, 0) = 0
                                         and w.time_in is null
                                         and w.time_out is null
                                         and nvl(w.mod_byhand_yn, 'N') = 'N'
                                         and w.thr_emp_pk = a.pk
                                         )
                   and a.join_dt <= l_cur.work_dt
                   and (a.left_dt>l_cur.work_dt or a.left_dt is null)
                   and to_char(to_date(l_cur.work_dt||s.start_time,'YYYYMMDDHH24:MI'),'YYYYMMDDHH24:MI') < to_char(sysdate,'YYYYMMDDHH24:MI')
                   and a.pk not in (select e.thr_emp_pk
                                      from thr_absence e
                                     where e.del_if = 0
                                       and e.absence_dt = l_cur.work_dt and e.thr_emp_pk=a.pk)
                   and a.tco_org_pk in (select     g.pk
                                from tco_org g
                                where g.del_if = 0
                                  start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                                  connect by prior g.pk = g.p_pk) 
                  and b.hol_type is null
                  and a.pk = nvl(l_thr_emp_pk,a.pk);
  
   */

  end loop;
   p_return_flag := 1;
EXCEPTION
   WHEN OTHERS
   THEN
      raise_application_error (-20999, SQLERRM);
END;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01603_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01603_1 (
   p_tco_org_pk     varchar2,
   p_from           varchar2,
   p_to             varchar2,
   p_emp_id         varchar2,
   p_crt_by            varchar,
   p_return_flag   out varchar)
IS
   
   l_thr_emp_pk      number;
   
BEGIN
   
  if p_emp_id is not null then
       
      select max(a.pk) into l_thr_emp_pk 
      from thr_employee a
       where a.del_if=0
       and upper(a.emp_id) = upper(p_emp_id);
           
       if l_thr_emp_pk is null then
         p_return_flag:=-1;
         raise_application_error(-20019, 'KHÔNG TÌM THẤY MÃ NHÂN VIÊN NÀY TRONG HỆ THỐNG, VUI LÒNG KIỂM TRA LẠI');
       end if;
  else 
          l_thr_emp_pk := null;
  end if;

  update  thr_work_date a
  set a.del_if = a.pk
  , a.mod_by = p_crt_by
  , a.mod_dt = sysdate
  , a.remark = 'DELETE PROCESS'
  where a.del_if=0
  and a.work_dt between p_from and p_to
  and nvl(a.mod_byhand_yn, 'N') = 'N'
   and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
  and a.thr_emp_pk not in (select b.thr_emp_pk from thr_absence b where b.del_if=0
                            and b.absence_dt = a.work_dt
                            and b.absence_type <> '13'
                            and b.thr_emp_pk = a.thr_emp_pk) 
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);

   update  thr_absence a
  set a.del_if = a.pk
  , a.mod_by = p_crt_by
  , a.mod_dt = sysdate
  , a.remark = 'DELETE PROCESS'
  where a.del_if=0
  and a.absence_dt between p_from and p_to
  and A.ABSENCE_TYPE = '13'
  and a.thr_emp_pk in (select e.pk from thr_employee e where e.del_if=0 
                          and (e.tco_org_pk in  (select  g.pk from tco_org g
                                                                         where g.del_if = 0 
                                                                          start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                                            connect by prior g.pk = g.p_pk)
                                                        or p_tco_org_pk ='ALL') )
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
  
   p_return_flag := 1;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01700_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01700_0 (
   p_tco_org_pk          number,
   p_month               varchar2,
   p_sal_period          varchar2,                                         
   p_crt_by              varchar2,
   p_from            out varchar2,
   p_to              out varchar2,
   p_close_time_yn   out varchar2
  )
IS
   l_error        VARCHAR2 (2) := '';
   l_flag_exist   BOOLEAN := FALSE;
   l_cur_rec      NUMBER;
   l_cur          SYS_REFCURSOR;
   tmp1           VARCHAR2 (50) := '';
   tmp2           VARCHAR2 (50) := '';
BEGIN
   l_error := '01';

   

   OPEN l_cur FOR
      SELECT 1
        FROM THR_CLOSE A
       WHERE     A.DEL_IF = 0
             AND A.MONTH_CLOSE = p_month
             AND A.id = p_sal_period
             AND A.TCO_COMPANY_PK =(SELECT G.TCO_COMPANY_PK
                                       FROM tco_org g
                                      WHERE G.DEL_IF = 0 AND g.pk = p_tco_org_pk);

   FETCH l_cur INTO l_cur_rec;

   l_flag_exist := l_cur%FOUND;

   CLOSE l_cur;

   IF l_flag_exist = TRUE
   THEN
      SELECT A.FROM_DT,
             A.TO_DT,
             nvl(A.CLOSE_TIME_YN, 'N')
        INTO p_FROM,
             p_TO,
             p_close_time_yn
        FROM THR_CLOSE A
       WHERE     A.DEL_IF = 0
             AND A.MONTH_CLOSE = p_month
             AND A.id = p_sal_period
             AND A.TCO_COMPANY_PK =
                    (SELECT G.TCO_COMPANY_PK
                       FROM tco_org g
                      WHERE G.DEL_IF = 0 AND g.pk = p_tco_org_pk);
   ELSE                                             --CHUA CO DINH NGHIA THANG
      p_FROM := '';
      p_TO := '';
      p_close_time_yn := 'N';
   END IF;
exception
   when others   then
      raise_application_error (-20002,l_error||sqlerrm);
      ROLLBACK WORK;
END;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01700_1;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_pro_hrti01700_1 (
   p_work_mon      IN     VARCHAR2,
   p_from          IN     VARCHAR2,                                -- YYYYMMDD
   p_to            IN     VARCHAR2,                                -- YYYYMMDD
   p_tco_org_pk   IN     VARCHAR2,
   p_SAL_PERIOD    IN     VARCHAR2,
   p_flag          IN     VARCHAR2,
   p_crt_by               VARCHAR2,
   p_result           OUT VARCHAR2                    -- RETURN VALUE ( NUMBER )
                                )
IS
    l_error           VARCHAR2 (2) := '';
    l_flag_exist      BOOLEAN := FALSE;
    l_cur_rec         NUMBER;
    l_cur             SYS_REFCURSOR;
    l_check           EXCEPTION;
    l_probation_num   NUMBER (1) := 0;
    flag_cal_resign   VARCHAR2 (1) := 'N';
    l_pro             VARCHAR2 (200) := '';
    l_string          VARCHAR2 (2000) := '';
    l_company_pk      NUMBER := 0;
    l_flag            VARCHAR2(1);
    l_kind_sal       NUMBER;
    l_work_from  varchar2(8):='';
    l_work_to varchar2(8):=''; 
    l_times varchar2(2):='';
    l_id varchar2(10);
--******************************************
-- Create by    : huynh truong
--******************************************

BEGIN
   l_error := '10';

   SELECT o.tco_company_pk
     INTO l_company_pk
     FROM tco_org o
    WHERE o.del_if = 0 AND o.pk = p_tco_org_pk;
   
   IF p_flag = 'CLOSE' THEN
        l_flag:= 'Y';
   ELSE
        l_flag:= 'N';
   END IF;    
   
   
   SELECT NVL(V.NUM_1,1) INTO l_kind_sal 
   FROM VHR_HR_CODE V
   WHERE V.ID='HR0030'
    AND V.CODE = p_SAL_PERIOD;
    
    IF l_kind_sal = 1 THEN          --ACTIVE
    
        --kiem tra xem co process luong chua
        OPEN l_cur FOR
          SELECT 1
            FROM thr_month_salary B
           WHERE B.DEL_IF = 0 AND B.WORK_MON = p_work_mon
            and B.SAL_PERIOD = p_sal_period
            AND B.TCO_COMPANY_PK =
                        (SELECT G.TCO_COMPANY_PK
                           FROM tco_org g
                          WHERE G.DEL_IF = 0 AND g.pk = p_tco_org_pk);

       FETCH l_cur INTO l_cur_rec;

       l_flag_exist := l_cur%FOUND;

       CLOSE l_cur;

       IF l_flag_exist = TRUE THEN
          raise l_check;
      
       END IF;
    
    
    
       UPDATE THR_WG_SCH_DETAIL A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
             ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_WORK_DATE A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       
       UPDATE THR_ABSENCE A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.ABSENCE_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_WORK_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);
     /*
       UPDATE THR_EXTRA_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

        UPDATE THR_ABSENCE_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_MONTH_SUMMARY A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);


        UPDATE THR_WORK_TIME_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);
     */                                     
    ELSE        --RESIGN
    
        --kiem tra xem co process luong chua
--        OPEN l_cur FOR
--          SELECT 1
--            FROM thr_month_salary B
--           WHERE B.DEL_IF = 0 AND B.WORK_MON = p_work_mon
--            and B.SAL_PERIOD = p_sal_period
--            AND B.TCO_COMPANY_PK =
--                        (SELECT G.TCO_COMPANY_PK
--                           FROM tco_org g
--                          WHERE G.DEL_IF = 0 AND g.pk = p_tco_org_pk);
--
--       FETCH l_cur INTO l_cur_rec;
--
--       l_flag_exist := l_cur%FOUND;
--
--       CLOSE l_cur;
--
--       IF l_flag_exist = TRUE THEN
--          raise l_check;
--      
--       END IF;
    
        SELECT S.FROM_DT,S.TO_DT,S.ID INTO l_work_from,l_work_to,l_id  --NGAY DAU CHU KY CUA THANG 
        FROM THR_CLOSE S
        WHERE S.DEL_IF=0 AND S.KIND_OF_SALARY=1 
        --AND S.ID=P_ID  
        AND S.MONTH_CLOSE=p_work_mon
        AND ROWNUM=1;
        
        select times into l_times from thr_close where del_if =0 and id = p_SAL_PERIOD and month_close = p_work_mon;
        
        
        UPDATE THR_WG_SCH_DETAIL A
        SET A.CLOSE_M_YN=l_flag
            ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
        WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN l_work_from AND p_to
        and a.THR_EMP_PK  in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
                                        and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
        and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );                                  
             
             

        UPDATE THR_WORK_DATE A
        SET A.CLOSE_YN=l_flag
            ,A.CLOSE_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
       WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN l_work_from AND p_to
       and a.THR_EMP_PK in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
                                and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
       and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );       
                                                        
        UPDATE THR_WORK_MONTH A
          SET A.CLOSE_YN=l_flag
           ,A.CLOSE_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE     A.DEL_IF=0 AND A.WORK_MON=p_work_mon
          and nvl(a.TIMES,'0')=l_times 
          and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );           

     /*
        UPDATE THR_EXTRA_TIME A
        SET A.CLOSE_M_YN=l_flag
                ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
        WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN l_work_from AND p_to
                and a.THR_EMP_PK in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
             and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
             and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );      

        UPDATE THR_ABSENCE A
        SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
        WHERE A.DEL_IF=0 AND A.ABSENCE_DT BETWEEN l_work_from AND p_to
        and a.THR_EMP_PK in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
             and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
        and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );           

       
        


         UPDATE THR_EXTRA_MONTH A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );       
          
        UPDATE THR_ABSENCE_MONTH A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );       
        
        UPDATE THR_MONTH_SUMMARY A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );   
                                   
       UPDATE THR_WORK_TIME_MONTH A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );   
       */                                                                   
    END IF;
   p_result := '1';
   COMMIT;
EXCEPTION
   WHEN l_check
   THEN
      p_result := -1;
      Raise_application_error (-20019,'This month of salary has been processed.');
   WHEN OTHERS
   THEN
      p_result := -1;
      RAISE_APPLICATION_ERROR (-20002, 'ERRCODE : ' || l_error || SQLERRM);
      ROLLBACK;
END;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01700_2;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_pro_hrti01700_2 (
   p_work_mon      IN     VARCHAR2,
   p_from          IN     VARCHAR2,                                -- YYYYMMDD
   p_to            IN     VARCHAR2,                                -- YYYYMMDD
   p_tco_org_pk   IN     VARCHAR2,
   p_SAL_PERIOD    IN     VARCHAR2,
   p_flag          IN     VARCHAR2,
   p_crt_by               VARCHAR2,
   p_result           OUT VARCHAR2                    -- RETURN VALUE ( NUMBER )
                                )
IS
    l_error           VARCHAR2 (2) := '';
    l_flag_exist      BOOLEAN := FALSE;
    l_cur_rec         NUMBER;
    l_cur             SYS_REFCURSOR;
    l_check           EXCEPTION;
    l_probation_num   NUMBER (1) := 0;
    flag_cal_resign   VARCHAR2 (1) := 'N';
    l_pro             VARCHAR2 (200) := '';
    l_string          VARCHAR2 (2000) := '';
    l_company_pk      NUMBER := 0;
    l_flag            VARCHAR2(1);
    l_kind_sal       NUMBER;
    l_work_from  varchar2(8):='';
    l_work_to varchar2(8):=''; 
    l_times varchar2(2):='';
    l_id varchar2(10);
--******************************************
-- Create by    : huynh truong
--******************************************

BEGIN
   l_error := '10';

   SELECT o.tco_company_pk
     INTO l_company_pk
     FROM tco_org o
    WHERE o.del_if = 0 AND o.pk = p_tco_org_pk;
   
   IF p_flag = 'CLOSE' THEN
        l_flag:= 'Y';
   ELSE
        l_flag:= 'N';
   END IF;    
   
   
   SELECT NVL(V.NUM_1,1) INTO l_kind_sal 
   FROM VHR_HR_CODE V
   WHERE V.ID='HR0030'
    AND V.CODE = p_SAL_PERIOD;
    
    IF l_kind_sal = 1 THEN          --ACTIVE
    
        --kiem tra xem co process luong chua
        OPEN l_cur FOR
          SELECT 1
            FROM thr_month_salary B
           WHERE B.DEL_IF = 0 AND B.WORK_MON = p_work_mon
            and B.SAL_PERIOD = p_sal_period
            AND B.TCO_COMPANY_PK =
                        (SELECT G.TCO_COMPANY_PK
                           FROM tco_org g
                          WHERE G.DEL_IF = 0 AND g.pk = p_tco_org_pk);

       FETCH l_cur INTO l_cur_rec;

       l_flag_exist := l_cur%FOUND;

       CLOSE l_cur;

       IF l_flag_exist = TRUE THEN
          raise l_check;
      
       END IF;
    
    
    
       UPDATE THR_WG_SCH_DETAIL A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
             ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_WORK_DATE A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       
       UPDATE THR_ABSENCE A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.ABSENCE_DT BETWEEN p_from AND p_to
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_WORK_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);
     /*
       UPDATE THR_EXTRA_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

        UPDATE THR_ABSENCE_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);

       UPDATE THR_MONTH_SUMMARY A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);


        UPDATE THR_WORK_TIME_MONTH A
          SET A.CLOSE_YN = l_flag,
              A.CLOSE_DT = (CASE WHEN l_flag = 'Y' THEN SYSDATE ELSE NULL END)
              ,A.CLOSE_BY = p_crt_by
        WHERE     A.DEL_IF = 0
              AND A.WORK_MON = p_work_mon
              AND a.times IS NULL
              AND a.thr_emp_pk IN (SELECT e.pk FROM thr_employee e
                                    WHERE     e.del_if = 0
                                          AND e.TCO_COMPANY_PK = l_company_pk
                                          AND e.pk = a.thr_emp_pk
                                          AND E.SAL_PERIOD = p_SAL_PERIOD);
     */                                     
    ELSE        --RESIGN
    
        --kiem tra xem co process luong chua
--        OPEN l_cur FOR
--          SELECT 1
--            FROM thr_month_salary B
--           WHERE B.DEL_IF = 0 AND B.WORK_MON = p_work_mon
--            and B.SAL_PERIOD = p_sal_period
--            AND B.TCO_COMPANY_PK =
--                        (SELECT G.TCO_COMPANY_PK
--                           FROM tco_org g
--                          WHERE G.DEL_IF = 0 AND g.pk = p_tco_org_pk);
--
--       FETCH l_cur INTO l_cur_rec;
--
--       l_flag_exist := l_cur%FOUND;
--
--       CLOSE l_cur;
--
--       IF l_flag_exist = TRUE THEN
--          raise l_check;
--      
--       END IF;
    
        SELECT S.FROM_DT,S.TO_DT,S.ID INTO l_work_from,l_work_to,l_id  --NGAY DAU CHU KY CUA THANG 
        FROM THR_CLOSE S
        WHERE S.DEL_IF=0 AND S.KIND_OF_SALARY=1 
        --AND S.ID=P_ID  
        AND S.MONTH_CLOSE=p_work_mon
        AND ROWNUM=1;
        
        select times into l_times from thr_close where del_if =0 and id = p_SAL_PERIOD and month_close = p_work_mon;
        
        
        UPDATE THR_WG_SCH_DETAIL A
        SET A.CLOSE_M_YN=l_flag
            ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
        WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN l_work_from AND p_to
        and a.THR_EMP_PK  in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
                                        and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
        and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );                                  
             
             

        UPDATE THR_WORK_DATE A
        SET A.CLOSE_YN=l_flag
            ,A.CLOSE_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
       WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN l_work_from AND p_to
       and a.THR_EMP_PK in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
                                and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
       and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );       
                                                        
        UPDATE THR_WORK_MONTH A
          SET A.CLOSE_YN=l_flag
           ,A.CLOSE_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE     A.DEL_IF=0 AND A.WORK_MON=p_work_mon
          and nvl(a.TIMES,'0')=l_times 
          and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );           

     /*
        UPDATE THR_EXTRA_TIME A
        SET A.CLOSE_M_YN=l_flag
                ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
        WHERE A.DEL_IF=0 AND A.WORK_DT BETWEEN l_work_from AND p_to
                and a.THR_EMP_PK in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
             and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
             and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );      

        UPDATE THR_ABSENCE A
        SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
        WHERE A.DEL_IF=0 AND A.ABSENCE_DT BETWEEN l_work_from AND p_to
        and a.THR_EMP_PK in ( select s.THR_EMP_PK from THR_WORK_MON s where s.del_if=0  
             and s.work_mon=p_work_mon and a.thr_emp_pk =s.thr_emp_pk and nvl(s.TIMES,'0')=l_times )
        and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );           

       
        


         UPDATE THR_EXTRA_MONTH A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );       
          
        UPDATE THR_ABSENCE_MONTH A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );       
        
        UPDATE THR_MONTH_SUMMARY A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );   
                                   
       UPDATE THR_WORK_TIME_MONTH A
          SET A.CLOSE_M_YN=l_flag
           ,A.CLOSE_M_DT=(CASE WHEN l_flag='Y' THEN SYSDATE
                                ELSE NULL END)
         WHERE A.DEL_IF=0 AND A.WORK_MON=p_work_mon
           and nvl(a.TIMES,'0')=l_times
           and a.thr_emp_pk in(select e.pk from thr_employee e,tco_org f where e.del_if=0 and f.del_if=0 and e.tco_org_pk=f.pk
                                                        and F.TCO_COMPANY_PK=l_company_pk
                                                        and e.pk=a.thr_emp_pk
                                                        AND E.SAL_PERIOD=l_id
                                                        );   
       */                                                                   
    END IF;
   p_result := l_flag;
   COMMIT;
EXCEPTION
   WHEN l_check
   THEN
      p_result := -1;
      Raise_application_error (-20019,'This month of salary has been processed.');
   WHEN OTHERS
   THEN
      p_result := -1;
      RAISE_APPLICATION_ERROR (-20002, 'ERRCODE : ' || l_error || SQLERRM);
      ROLLBACK;
END;
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01701_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_pro_hrti01701_0(
    p_work_mon          in varchar2,
    p_from              in varchar2,    -- YYYYMMDD
    p_to                in varchar2,     -- YYYYMMDD
    p_tco_org_pk        in varchar2,
    p_sal_period        in varchar2,
    p_emp_id            in varchar2,
    p_crt_by            varchar2,
    p_result        out number      -- RETURN VALUE ( NUMBER )
) is

l_error         varchar2(2):='';
l_flag_exist boolean:=false;
l_cur_rec number;
l_cur sys_refcursor;
l_check     exception;
l_exp_wt     exception;
l_exp_ot     exception;
l_probation_num number(1):=0;
flag_cal_resign varchar2(1):='N';

l_pro varchar2(200):='';
l_string varchar2(2000):='';
l_company_pk number:=0;

l_resign_num        number;

l_thr_emp_pk      number;
l_day_in_month    number;
begin

 
    l_error := '10';
 select o.tco_company_pk into l_company_pk
                                            from tco_org o where o.del_if=0 
                                            and  o.pk= p_tco_org_pk;
   open l_cur for
    select 1 from thr_close a
    where a.del_if=0 and a.month_close=p_work_mon
    and a.id=p_sal_period
    and a.tco_company_pk=l_company_pk 
    and nvl(a.close_yn,'N')='N';

     fetch l_cur into l_cur_rec;
      l_flag_exist := l_cur%found;
    close l_cur;
    if l_flag_exist=false then
        p_result:=-1;
        raise l_check;
    end if;
    
    --find procedure
    open l_cur for
    select a.char_3 from vhr_hr_code a
    where a.id='HR0044' and upper(a.char_1)=upper('ST_HR_PRO_HRTI01700_0') and  nvl(tco_company_pk,l_company_pk)=l_company_pk;

    fetch l_cur into l_pro;
    l_flag_exist:=l_cur%found;
    close l_cur;

if l_flag_exist=true then --CO SU DUNG PROCEDURE RIENG
    l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6,:7); end;' ;
    execute  immediate l_string using in p_work_mon,in p_from,in p_to,in p_tco_org_pk,in p_sal_period,in p_crt_by,out p_result ;

else

    if p_emp_id is not null then
       
      select max(a.pk) into l_thr_emp_pk 
      from thr_employee a
       where a.del_if=0
       and upper(a.emp_id) = upper(p_emp_id);
           
       if l_thr_emp_pk is null then
         p_result:=-1;
         raise_application_error(-20019, 'KHÔNG TÌM THẤY MÃ NHÂN VIÊN NÀY TRONG HỆ THỐNG, VUI LÒNG KIỂM TRA LẠI');
       end if;
  else 
          l_thr_emp_pk := null;
  end if;
  
    select a.num_3 
    into l_probation_num 
    from vhr_hr_code a
    where a.id='HR0002' 
    and a.code='01' 
    and  nvl(tco_company_pk,l_company_pk)=l_company_pk;
    
    select decode(nvl(a.num_4,0),0,-1,0)
    into l_resign_num 
    from vhr_hr_code a
    where a.id='HR0006' 
    and a.code='11' 
    and  nvl(tco_company_pk,l_company_pk)=l_company_pk;
    
    SELECT COUNT(*) INTO l_day_in_month FROM THR_CALENDAR A
                    WHERE A.DEL_IF=0 AND A.CAR_DATE BETWEEN p_from AND p_to
                     AND NVL(A.HOL_TYPE,' ')<>'SUN' 
                        and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk ;

 --xac dinh xem tinh luong thoi viec chung hay rieng 
    open l_cur for
            select 1 from thr_close a
            where a.del_if=0 and a.month_close=p_work_mon  and a.id=p_sal_period
            and a.tco_company_pk=l_company_pk ;

             fetch l_cur into l_cur_rec;
              l_flag_exist := l_cur%found;
            close l_cur;
            
            if l_flag_exist=true then

              select (case when nvl(v.num_3,1)=1 then 'N' else 'Y' end) into flag_cal_resign --Y: tinh luong thoi viec rieng
             from thr_close a,vhr_hr_code v
            where a.del_if=0 and v.id='HR0030' and a.id=v.code 
            and a.month_close=p_work_mon  and a.id=p_sal_period
            and a.tco_company_pk=nvl(v.tco_company_pk,a.tco_company_pk)
            and a.tco_company_pk=l_company_pk;
           
             end if;
    
   update thr_work_month s  
   set s.status='A',
       s.times=null,
       s.sal_period=p_sal_period
    where s.del_if=0 and s.work_mon=p_work_mon
    and s.times is not null      
    and s.tco_org_pk in (select g.pk
                                         from tco_org g
                                        where g.del_if = 0
                                        start with g.pk =p_tco_org_pk
                                        connect by prior g.pk =g.p_pk)
     and thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0                                          
                                and nvl(e.left_dt,'30000101') > p_to             
                                 and s.thr_emp_pk=e.pk and  e.sal_period=p_sal_period)
     and s.thr_emp_pk=nvl(l_thr_emp_pk, s.thr_emp_pk);
       
    

    update thr_work_month w
    set w.del_if = w.pk
    , w.remark = 'DELETE BY PROCESS'
    , w.mod_by = p_crt_by
    , w.mod_dt = sysdate
    where w.del_if=0 and w.work_mon=p_work_mon
    and w.sal_period = p_sal_period
    and w.tco_org_pk in (select g.pk
                                         from tco_org g
                                        where g.del_if = 0
                                        start with g.pk =p_tco_org_pk
                                        connect by prior g.pk =g.p_pk)
    and w.sal_period=p_sal_period
    and nvl(w.close_yn,'N')='N' and w.times is null
    and w.thr_emp_pk=nvl(l_thr_emp_pk, w.thr_emp_pk);
    
    --unit day: total_wt_l1, total_wt_l2; total_hol_l1; total_hol_l2
    insert into thr_work_month(pk, thr_emp_pk, full_name, emp_id, tco_org_pk, thr_wg_pk, work_mon
    , from_dt, to_dt, join_dt, left_dt, status, job_type, pos_type
    , wt1, wt2, wt3, wt4, wt5, wt6, wt7, wt8, wt9, wt10, wt11, wt12, wt13, wt14, wt15, wt16, wt17, wt18, wt19, wt20
    , wt21, wt22, wt23, wt24, wt25, wt26, wt27, wt28, wt29, wt30, wt31
    , d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20
    , d21, d22, d23, d24, d25, d26, d27, d28, d29, d30, d31
    , remark, del_if, crt_by, crt_dt, confirm_dt
    , sal_period, total_hol_l1, total_hol_l2, total_hol
    
    , total_wt_l1, total_rate_wt_l1, total_wt_l2, total_rate_wt_l2, total_wt, total_rate_wt
    , total_ot_l1, total_ot_l2, total_rate_ot_l1, total_rate_ot_l2, total_ot, total_rate_ot
    , total_ot_tax_l1, total_ot_tax_l2
    , total_st_l1, total_st_l2, total_rate_st_l1, total_rate_st_l2, total_st, total_rate_st
    , total_ost_l1, total_ost_l2, total_rate_ost_l1, total_rate_ost_l2, total_ost, total_rate_ost
    , total_ht_l1, total_ht_l2, total_rate_ht_l1, total_rate_ht_l2, total_ht, total_rate_ht
    , total_oht_l1, total_oht_l2, total_rate_oht_l1, total_rate_oht_l2, total_oht, total_rate_oht
    
    , abs_ale_l1, total_rate_abs_ale_l1, abs_ale_l2, total_rate_abs_ale_l2, total_abs_ale
    , abs_other_pay_l1, total_rate_abs_other_pay_l1, abs_other_pay_l2, total_rate_abs_other_pay_l2, total_abs_other_pay
    , total_abs_pay_l1, total_rate_abs_pay_l1, total_abs_pay_l2, total_rate_abs_pay_l2, total_abs_pay
    , total_abs_npay_l1, total_rate_abs_npay_l1, total_abs_npay_l2, total_rate_abs_npay_l2, total_abs_npay
    
    , d1_type, d2_type, d3_type, d4_type, d5_type, d6_type, d7_type, d8_type, d9_type, d10_type
    , d11_type, d12_type, d13_type, d14_type, d15_type, d16_type, d17_type, d18_type, d19_type, d20_type
    , d21_type, d22_type, d23_type, d24_type, d25_type, d26_type, d27_type, d28_type, d29_type, d30_type, d31_type
    
    , d1_kind, d2_kind, d3_kind, d4_kind, d5_kind, d6_kind, d7_kind, d8_kind, d9_kind, d10_kind
    , d11_kind, d12_kind, d13_kind, d14_kind, d15_kind, d16_kind, d17_kind, d18_kind, d19_kind, d20_kind
    , d21_kind, d22_kind, d23_kind, d24_kind, d25_kind, d26_kind, d27_kind, d28_kind, d29_kind, d30_kind, d31_kind
    
    )
    
    select thr_work_month_seq.nextval,  e.pk, e.full_name, e.emp_id, e.tco_org_pk, e.thr_wg_pk, p_work_mon 
    , p_from, p_to, e.join_dt, e.left_dt, e.status, e.job_type, e.pos_type
    
    , z.wt1, z.wt2, z.wt3, z.wt4, z.wt5, z.wt6, z.wt7, z.wt8, z.wt9, z.wt10, z.wt11, z.wt12, z.wt13, z.wt14, z.wt15, z.wt16, z.wt17, z.wt18, z.wt19, z.wt20
    , z.wt21, z.wt22, z.wt23, z.wt24, z.wt25, z.wt26, z.wt27, z.wt28, z.wt29, z.wt30, z.wt31
    , z.d1, z.d2, z.d3, z.d4, z.d5, z.d6, z.d7, z.d8, z.d9, z.d10, z.d11, z.d12, z.d13, z.d14, z.d15, z.d16, z.d17, z.d18, z.d19, z.d20
    , z.d21, z.d22, z.d23, z.d24, z.d25, z.d26, z.d27, z.d28, z.d29, z.d30, z.d31
    ,'PROCESS WORKING MONTHLY', 0, p_crt_by, sysdate , nvl(m.confirm_dt,e.confirm_dt), e.sal_period
     , nvl(z.total_hol_l1, 0), nvl(z.total_hol_l2, 0), nvl(z.total_hol_l1, 0) + nvl(z.total_hol_l2, 0) as total_hol
     
    , z.total_wt_l1, z.total_rate_wt_l1, z.total_wt_l2, z.total_rate_wt_l2
    , nvl(z.total_wt_l1, 0) + nvl(z.total_wt_l2, 0) as total_wt
    , nvl(z.total_rate_wt_l1, 0) + nvl(z.total_rate_wt_l2, 0) as total_rate_wt
     
    
    , nvl(z.total_ot_l1, 0),  nvl(z.total_ot_l2, 0), nvl(z.total_rate_ot_l1, 0), nvl(z.total_rate_ot_l2, 0)
    , nvl(z.total_ot_l1, 0) + nvl(z.total_ot_l2, 0) as total_ot
    , nvl(z.total_rate_ot_l1, 0) + nvl(z.total_rate_ot_l2, 0) as total_rate_ot
    
    , nvl(z.total_ot_tax_l1, 0) , nvl(total_ot_tax_l2, 0)
    
    , nvl(z.total_st_l1, 0),  nvl(z.total_st_l2, 0), nvl(z.total_rate_st_l1, 0), nvl(z.total_rate_st_l2, 0)
    , nvl(z.total_st_l1, 0) + nvl(z.total_st_l2, 0) as total_st
    , nvl(z.total_rate_st_l1, 0) + nvl(z.total_rate_st_l2, 0) as total_rate_st
    
    , nvl(z.total_ost_l1, 0),  nvl(z.total_ost_l2, 0), nvl(z.total_rate_ost_l1, 0), nvl(z.total_rate_ost_l2, 0)
    , nvl(z.total_ost_l1, 0) + nvl(z.total_ost_l2, 0) as total_ost
    , nvl(z.total_rate_ost_l1, 0) + nvl(z.total_rate_ost_l2, 0) as total_rate_ost
    
    , nvl(z.total_ht_l1, 0),  nvl(z.total_ht_l2, 0), nvl(z.total_rate_ht_l1, 0), nvl(z.total_rate_ht_l2, 0)
    , nvl(z.total_ht_l1, 0) + nvl(z.total_ht_l2, 0) as total_ht
    , nvl(z.total_rate_ht_l1, 0) + nvl(z.total_rate_ht_l2, 0) as total_rate_ht
    
    , nvl(z.total_oht_l1, 0),  nvl(z.total_oht_l2, 0), nvl(z.total_rate_oht_l1, 0), nvl(z.total_rate_oht_l2, 0)
    , nvl(z.total_oht_l1, 0) + nvl(z.total_oht_l2, 0) as total_oht
    , nvl(z.total_rate_oht_l1, 0) + nvl(z.total_rate_oht_l2, 0) as total_rate_oht
    
    
    , nvl(z.abs_ale_l1, 0) as abs_ale_l1, nvl(z.total_rate_abs_ale_l1, 0) as total_rate_abs_ale_l1
    , nvl(z.abs_ale_l2, 0) as abs_ale_l2, nvl(z.total_rate_abs_ale_l2, 0) as total_rate_abs_ale_l2  
    , nvl(z.abs_ale_l1, 0) +nvl(z.abs_ale_l2, 0) as total_abs_ale
    , nvl(z.abs_other_pay_l1, 0) as abs_other_pay_l1, nvl(z.total_rate_abs_other_pay_l1, 0) as total_rate_abs_other_pay_l1
    , nvl(z.abs_other_pay_l2, 0) as abs_other_pay_l2, nvl(z.total_rate_abs_other_pay_l2, 0) as total_rate_abs_other_pay_l2
    , nvl(z.abs_other_pay_l1, 0) + nvl(z.abs_other_pay_l2, 0) as total_abs_other_pay
    , nvl(z.total_abs_pay_l1, 0) as total_abs_pay_l1, nvl(z.total_rate_abs_pay_l1, 0) as total_rate_abs_pay_l1
    , nvl(z.total_abs_pay_l2, 0) as total_abs_pay_l2, nvl(z.total_rate_abs_pay_l2, 0) as total_rate_abs_pay_l2
    , nvl(z.total_abs_pay_l1, 0) + nvl(z.total_abs_pay_l2, 0) as total_abs_pay
    , nvl(z.total_abs_npay_l1, 0) as total_abs_npay_l1, nvl(z.total_rate_abs_npay_l1, 0) as total_rate_abs_npay_l1
    , nvl(z.total_abs_npay_l2, 0) as total_abs_npay_l2, nvl(z.total_rate_abs_npay_l2, 0) as total_rate_abs_npay_l2
    , nvl(z.total_abs_npay_l1, 0) + nvl(z.total_abs_npay_l2, 0)  as total_abs_npay
    
    , z.d1_type, z.d2_type, z.d3_type, z.d4_type, z.d5_type, z.d6_type, z.d7_type, z.d8_type, z.d9_type, z.d10_type
    , z.d11_type, z.d12_type, z.d13_type, z.d14_type, z.d15_type, z.d16_type, z.d17_type, z.d18_type, z.d19_type, z.d20_type
    , z.d21_type, z.d22_type, z.d23_type, z.d24_type, z.d25_type, z.d26_type, z.d27_type, z.d28_type, z.d29_type, z.d30_type, z.d31_type 
    
    , z.d1_kind, z.d2_kind, z.d3_kind, z.d4_kind, z.d5_kind, z.d6_kind, z.d7_kind, z.d8_kind, z.d9_kind, z.d10_kind
    , z.d11_kind, z.d12_kind, z.d13_kind, z.d14_kind, z.d15_kind, z.d16_kind, z.d17_kind, z.d18_kind, z.d19_kind, z.d20_kind
    , z.d21_kind, z.d22_kind, z.d23_kind, z.d24_kind, z.d25_kind, z.d26_kind, z.d27_kind, z.d28_kind, z.d29_kind, z.d30_kind, z.d31_kind 
    
      from (select   w.thr_emp_pk
                     , sum(nvl(w.wt1_l1, 0) + nvl(w.wt1_l2, 0)) as wt1
                       , sum(nvl(w.wt2_l1, 0) + nvl(w.wt2_l2, 0)) as wt2
                       , sum(nvl(w.wt3_l1, 0) + nvl(w.wt3_l2, 0)) as wt3
                       , sum(nvl(w.wt4_l1, 0) + nvl(w.wt4_l2, 0)) as wt4
                       , sum(nvl(w.wt5_l1, 0) + nvl(w.wt5_l2, 0)) as wt5
                       , sum(nvl(w.wt6_l1, 0) + nvl(w.wt6_l2, 0)) as wt6
                       , sum(nvl(w.wt7_l1, 0) + nvl(w.wt7_l2, 0)) as wt7
                       , sum(nvl(w.wt8_l1, 0) + nvl(w.wt8_l2, 0)) as wt8
                       , sum(nvl(w.wt9_l1, 0) + nvl(w.wt9_l2, 0)) as wt9
                       , sum(nvl(w.wt10_l1, 0) + nvl(w.wt10_l2, 0)) as wt10
                       , sum(nvl(w.wt11_l1, 0) + nvl(w.wt11_l2, 0)) as wt11
                       , sum(nvl(w.wt12_l1, 0) + nvl(w.wt12_l2, 0)) as wt12
                       , sum(nvl(w.wt13_l1, 0) + nvl(w.wt13_l2, 0)) as wt13
                       , sum(nvl(w.wt14_l1, 0) + nvl(w.wt14_l2, 0)) as wt14
                       , sum(nvl(w.wt15_l1, 0) + nvl(w.wt15_l2, 0)) as wt15
                       , sum(nvl(w.wt16_l1, 0) + nvl(w.wt16_l2, 0)) as wt16
                       , sum(nvl(w.wt17_l1, 0) + nvl(w.wt17_l2, 0)) as wt17
                       , sum(nvl(w.wt18_l1, 0) + nvl(w.wt18_l2, 0)) as wt18
                       , sum(nvl(w.wt19_l1, 0) + nvl(w.wt19_l2, 0)) as wt19
                       , sum(nvl(w.wt20_l1, 0) + nvl(w.wt20_l2, 0)) as wt20
                       , sum(nvl(w.wt21_l1, 0) + nvl(w.wt21_l2, 0)) as wt21
                       , sum(nvl(w.wt22_l1, 0) + nvl(w.wt22_l2, 0)) as wt22
                       , sum(nvl(w.wt23_l1, 0) + nvl(w.wt23_l2, 0)) as wt23
                       , sum(nvl(w.wt24_l1, 0) + nvl(w.wt24_l2, 0)) as wt24
                       , sum(nvl(w.wt25_l1, 0) + nvl(w.wt25_l2, 0)) as wt25
                       , sum(nvl(w.wt26_l1, 0) + nvl(w.wt26_l2, 0)) as wt26
                       , sum(nvl(w.wt27_l1, 0) + nvl(w.wt27_l2, 0)) as wt27
                       , sum(nvl(w.wt28_l1, 0) + nvl(w.wt28_l2, 0)) as wt28
                       , sum(nvl(w.wt29_l1, 0) + nvl(w.wt29_l2, 0)) as wt29
                       , sum(nvl(w.wt30_l1, 0) + nvl(w.wt30_l2, 0)) as wt30
                       , sum(nvl(w.wt31_l1, 0) + nvl(w.wt31_l2, 0)) as wt31
                       , sum(nvl(w.d1_l1, 0) + nvl(w.d1_l2, 0)) as d1
                       , sum(nvl(w.d2_l1, 0) + nvl(w.d2_l2, 0)) as d2
                       , sum(nvl(w.d3_l1, 0) + nvl(w.d3_l2, 0)) as d3
                       , sum(nvl(w.d4_l1, 0) + nvl(w.d4_l2, 0)) as d4
                       , sum(nvl(w.d5_l1, 0) + nvl(w.d5_l2, 0)) as d5
                       , sum(nvl(w.d6_l1, 0) + nvl(w.d6_l2, 0)) as d6
                       , sum(nvl(w.d7_l1, 0) + nvl(w.d7_l2, 0)) as d7
                       , sum(nvl(w.d8_l1, 0) + nvl(w.d8_l2, 0)) as d8
                       , sum(nvl(w.d9_l1, 0) + nvl(w.d9_l2, 0)) as d9
                       , sum(nvl(w.d10_l1, 0) + nvl(w.d10_l2, 0)) as d10
                       , sum(nvl(w.d11_l1, 0) + nvl(w.d11_l2, 0)) as d11
                       , sum(nvl(w.d12_l1, 0) + nvl(w.d12_l2, 0)) as d12
                       , sum(nvl(w.d13_l1, 0) + nvl(w.d13_l2, 0)) as d13
                       , sum(nvl(w.d14_l1, 0) + nvl(w.d14_l2, 0)) as d14
                       , sum(nvl(w.d15_l1, 0) + nvl(w.d15_l2, 0)) as d15
                       , sum(nvl(w.d16_l1, 0) + nvl(w.d16_l2, 0)) as d16
                       , sum(nvl(w.d17_l1, 0) + nvl(w.d17_l2, 0)) as d17
                       , sum(nvl(w.d18_l1, 0) + nvl(w.d18_l2, 0)) as d18
                       , sum(nvl(w.d19_l1, 0) + nvl(w.d19_l2, 0)) as d19
                       , sum(nvl(w.d20_l1, 0) + nvl(w.d20_l2, 0)) as d20
                       , sum(nvl(w.d21_l1, 0) + nvl(w.d21_l2, 0)) as d21
                       , sum(nvl(w.d22_l1, 0) + nvl(w.d22_l2, 0)) as d22
                       , sum(nvl(w.d23_l1, 0) + nvl(w.d23_l2, 0)) as d23
                       , sum(nvl(w.d24_l1, 0) + nvl(w.d24_l2, 0)) as d24
                       , sum(nvl(w.d25_l1, 0) + nvl(w.d25_l2, 0)) as d25
                       , sum(nvl(w.d26_l1, 0) + nvl(w.d26_l2, 0)) as d26
                       , sum(nvl(w.d27_l1, 0) + nvl(w.d27_l2, 0)) as d27
                       , sum(nvl(w.d28_l1, 0) + nvl(w.d28_l2, 0)) as d28
                       , sum(nvl(w.d29_l1, 0) + nvl(w.d29_l2, 0)) as d29
                       , sum(nvl(w.d30_l1, 0) + nvl(w.d30_l2, 0)) as d30
                       , sum(nvl(w.d31_l1, 0) + nvl(w.d31_l2, 0)) as d31
                       
                       , sum(w.total_wt_l1) as total_wt_l1
                       , sum(w.total_rate_wt_l1) as total_rate_wt_l1
                       , sum(w.total_wt_l2) as total_wt_l2
                       , sum(w.total_rate_wt_l2) as total_rate_wt_l2
                       
                       , sum(w.total_ot_tax_l1) as total_ot_tax_l1
                       , sum(w.total_ot_tax_l2) as total_ot_tax_l2
                       
                       , sum(w.total_hol_l1) as total_hol_l1
                       , sum(w.total_hol_l2) as total_hol_l2
                       
                       , sum(w.total_ot_l1) as total_ot_l1
                       , sum(w.total_rate_ot_l1) as total_rate_ot_l1
                       , sum(w.total_ot_l2) as total_ot_l2
                       , sum(w.total_rate_ot_l2) as total_rate_ot_l2
                       
                       , sum(w.total_st_l1) as total_st_l1
                       , sum(w.total_rate_st_l1) as total_rate_st_l1
                       , sum(w.total_st_l2) as total_st_l2
                       , sum(w.total_rate_st_l2) as total_rate_st_l2
                       
                       , sum(w.total_ost_l1) as total_ost_l1
                       , sum(w.total_rate_ost_l1) as total_rate_ost_l1
                       , sum(w.total_ost_l2) as total_ost_l2
                       , sum(w.total_rate_ost_l2) as total_rate_ost_l2
                       
                       , sum(w.total_ht_l1) as total_ht_l1
                       , sum(w.total_rate_ht_l1) as total_rate_ht_l1
                       , sum(w.total_ht_l2) as total_ht_l2
                       , sum(w.total_rate_ht_l2) as total_rate_ht_l2
                       
                       , sum(w.total_oht_l1) as total_oht_l1
                       , sum(w.total_rate_oht_l1) as total_rate_oht_l1
                       , sum(w.total_oht_l2) as total_oht_l2
                       , sum(w.total_rate_oht_l2) as total_rate_oht_l2
                       
                       , sum(w.total_nt30_l1) as total_nt30_l1
                       , sum(w.total_rate_nt30_l1) as total_rate_nt30_l1
                       , sum(w.total_nt30_l2) as total_nt30_l2
                       , sum(w.total_rate_nt30_l2) as total_rate_nt30_l2
                       
                       , sum(w.total_nt45_l1) as total_nt45_l1
                       , sum(w.total_rate_nt45_l1) as total_rate_nt45_l1
                       , sum(w.total_nt45_l2) as total_nt45_l2
                       , sum(w.total_rate_nt45_l2) as total_rate_nt45_l2
                       
                       , sum(w.total_nt60_l1) as total_nt60_l1
                       , sum(w.total_rate_nt60_l1) as total_rate_nt60_l1
                       , sum(w.total_nt60_l2) as total_nt60_l2
                       , sum(w.total_rate_nt60_l2) as total_rate_nt60_l2
                       
                       , sum(w.total_nt90_l1) as total_nt90_l1
                       , sum(w.total_rate_nt90_l1) as total_rate_nt90_l1
                       , sum(w.total_nt90_l2) as total_nt90_l2
                       , sum(w.total_rate_nt90_l2) as total_rate_nt90_l2
                       
                       
                       , sum(w.abs_ale_l1) as abs_ale_l1
                       , sum(w.total_rate_abs_ale_l1) as total_rate_abs_ale_l1
                       , sum(w.abs_ale_l2) as abs_ale_l2
                       , sum(w.total_rate_abs_ale_l2) as total_rate_abs_ale_l2
                       
                       , sum(w.abs_other_pay_l1) as abs_other_pay_l1
                       , sum(w.total_rate_abs_other_pay_l1) as total_rate_abs_other_pay_l1
                       , sum(w.abs_other_pay_l2) as abs_other_pay_l2
                       , sum(w.total_rate_abs_other_pay_l2) as total_rate_abs_other_pay_l2
                       
                       , sum(w.total_abs_pay_l1) as total_abs_pay_l1
                       , sum(w.total_rate_abs_pay_l1) as total_rate_abs_pay_l1
                       , sum(w.total_abs_pay_l2) as total_abs_pay_l2
                       , sum(w.total_rate_abs_pay_l2) as total_rate_abs_pay_l2
                       
                       , sum(w.total_abs_npay_l1) as total_abs_npay_l1
                       , sum(w.total_rate_abs_npay_l1) as total_rate_abs_npay_l1
                       , sum(w.total_abs_npay_l2) as total_abs_npay_l2
                       , sum(w.total_rate_abs_npay_l2) as total_rate_abs_npay_l2
                       
                       ,max(w.d1_type_l1||w.d1_type_l2) d1_type
                       ,max(w.d2_type_l1||w.d2_type_l2) d2_type
                       ,max(w.d3_type_l1||w.d3_type_l2) d3_type
                       ,max(w.d4_type_l1||w.d4_type_l2) d4_type
                       ,max(w.d5_type_l1||w.d5_type_l2) d5_type
                       ,max(w.d6_type_l1||w.d6_type_l2) d6_type
                       ,max(w.d7_type_l1||w.d7_type_l2) d7_type
                       ,max(w.d8_type_l1||w.d8_type_l2) d8_type
                       ,max(w.d9_type_l1||w.d9_type_l2) d9_type
                       ,max(w.d10_type_l1||w.d10_type_l2) d10_type
                       ,max(w.d11_type_l1||w.d11_type_l2) d11_type
                       ,max(w.d12_type_l1||w.d12_type_l2) d12_type
                       ,max(w.d13_type_l1||w.d13_type_l2) d13_type
                       ,max(w.d14_type_l1||w.d14_type_l2) d14_type
                       ,max(w.d15_type_l1||w.d15_type_l2) d15_type
                       ,max(w.d16_type_l1||w.d16_type_l2) d16_type
                       ,max(w.d17_type_l1||w.d17_type_l2) d17_type
                       ,max(w.d18_type_l1||w.d18_type_l2) d18_type
                       ,max(w.d19_type_l1||w.d19_type_l2) d19_type
                       ,max(w.d20_type_l1||w.d20_type_l2) d20_type
                       ,max(w.d21_type_l1||w.d21_type_l2) d21_type
                       ,max(w.d22_type_l1||w.d22_type_l2) d22_type
                       ,max(w.d23_type_l1||w.d23_type_l2) d23_type
                       ,max(w.d24_type_l1||w.d24_type_l2) d24_type
                       ,max(w.d25_type_l1||w.d25_type_l2) d25_type
                       ,max(w.d26_type_l1||w.d26_type_l2) d26_type
                       ,max(w.d27_type_l1||w.d27_type_l2) d27_type
                       ,max(w.d28_type_l1||w.d28_type_l2) d28_type
                       ,max(w.d29_type_l1||w.d29_type_l2) d29_type
                       ,max(w.d30_type_l1||w.d30_type_l2) d30_type
                       ,max(w.d31_type_l1||w.d31_type_l2) d31_type
                       
                       ,max(w.d1_kind_l1+w.d1_kind_l2) d1_kind
                       ,max(w.d2_kind_l1+w.d2_kind_l2) d2_kind
                       ,max(w.d3_kind_l1+w.d3_kind_l2) d3_kind
                       ,max(w.d4_kind_l1+w.d4_kind_l2) d4_kind
                       ,max(w.d5_kind_l1+w.d5_kind_l2) d5_kind
                       ,max(w.d6_kind_l1+w.d6_kind_l2) d6_kind
                       ,max(w.d7_kind_l1+w.d7_kind_l2) d7_kind
                       ,max(w.d8_kind_l1+w.d8_kind_l2) d8_kind
                       ,max(w.d9_kind_l1+w.d9_kind_l2) d9_kind
                       ,max(w.d10_kind_l1+w.d10_kind_l2) d10_kind
                       ,max(w.d11_kind_l1+w.d11_kind_l2) d11_kind
                       ,max(w.d12_kind_l1+w.d12_kind_l2) d12_kind
                       ,max(w.d13_kind_l1+w.d13_kind_l2) d13_kind
                       ,max(w.d14_kind_l1+w.d14_kind_l2) d14_kind
                       ,max(w.d15_kind_l1+w.d15_kind_l2) d15_kind
                       ,max(w.d16_kind_l1+w.d16_kind_l2) d16_kind
                       ,max(w.d17_kind_l1+w.d17_kind_l2) d17_kind
                       ,max(w.d18_kind_l1+w.d18_kind_l2) d18_kind
                       ,max(w.d19_kind_l1+w.d19_kind_l2) d19_kind
                       ,max(w.d20_kind_l1+w.d20_kind_l2) d20_kind
                       ,max(w.d21_kind_l1+w.d21_kind_l2) d21_kind
                       ,max(w.d22_kind_l1+w.d22_kind_l2) d22_kind
                       ,max(w.d23_kind_l1+w.d23_kind_l2) d23_kind
                       ,max(w.d24_kind_l1+w.d24_kind_l2) d24_kind
                       ,max(w.d25_kind_l1+w.d25_kind_l2) d25_kind
                       ,max(w.d26_kind_l1+w.d26_kind_l2) d26_kind
                       ,max(w.d27_kind_l1+w.d27_kind_l2) d27_kind
                       ,max(w.d28_kind_l1+w.d28_kind_l2) d28_kind
                       ,max(w.d29_kind_l1+w.d29_kind_l2) d29_kind
                       ,max(w.d30_kind_l1+w.d30_kind_l2) d30_kind
                       ,max(w.d31_kind_l1+w.d31_kind_l2) d31_kind
                from (select t.thr_emp_pk
                       ,sum(case when t.work_dt = p_from  then nvl(t.wt,0) else 0 end) as wt1_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt2_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt3_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt4_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt5_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt6_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt7_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt8_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt9_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt10_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt11_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt12_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt13_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt14_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt15_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt16_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt17_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt18_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt19_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt20_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt21_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt22_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt23_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt24_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt25_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt26_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt27_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt28_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt29_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt30_l1                 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt31_l1         
                       
                       , 0 as wt1_l2, 0 as wt2_l2, 0 as wt3_l2, 0 as wt4_l2, 0 as wt5_l2, 0 as wt6_l2, 0 as wt7_l2, 0 as wt8_l2, 0 as wt9_l2, 0 as wt10_l2
                       , 0 as wt11_l2, 0 as wt12_l2, 0 as wt13_l2, 0 as wt14_l2, 0 as wt15_l2, 0 as wt16_l2, 0 as wt17_l2, 0 as wt18_l2, 0 as wt19_l2, 0 as wt20_l2
                       , 0 as wt21_l2, 0 as wt22_l2, 0 as wt23_l2, 0 as wt24_l2, 0 as wt25_l2, 0 as wt26_l2, 0 as wt27_l2, 0 as wt28_l2, 0 as wt29_l2, 0 as wt30_l2, 0 as wt31_l2
                       
                       ,sum(case when t.work_dt = p_from  then nvl(t.wd, 0) else 0 end) as d1_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d2_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d3_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d4_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d5_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d6_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d7_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d8_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d9_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d10_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d11_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d12_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d13_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d14_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d15_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d16_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d17_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d18_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d19_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d20_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d21_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d22_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d23_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d24_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d25_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d26_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d27_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d28_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d29_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d30_l1                 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d31_l1         
                       
                       , 0 as d1_l2, 0 as d2_l2, 0 as d3_l2, 0 as d4_l2, 0 as d5_l2, 0 as d6_l2, 0 as d7_l2, 0 as d8_l2, 0 as d9_l2, 0 as d10_l2
                       , 0 as d11_l2, 0 as d12_l2, 0 as d13_l2, 0 as d14_l2, 0 as d15_l2, 0 as d16_l2, 0 as d17_l2, 0 as d18_l2, 0 as d19_l2, 0 as d20_l2
                       , 0 as d21_l2, 0 as d22_l2, 0 as d23_l2, 0 as d24_l2, 0 as d25_l2, 0 as d26_l2, 0 as d27_l2, 0 as d28_l2, 0 as d29_l2, 0 as d30_l2, 0 as d31_l2
                       
                       ,max(case when t.work_dt = p_from  then t.hol_type else null end) as d1_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then t.hol_type else null end) as d2_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then t.hol_type else null end) as d3_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then t.hol_type else null end) as d4_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then t.hol_type else null end) as d5_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then t.hol_type else null end) as d6_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then t.hol_type else null end) as d7_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then t.hol_type else null end) as d8_type_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then t.hol_type else null end) as d9_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then t.hol_type else null end) as d10_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then t.hol_type else null end) as d11_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then t.hol_type else null end) as d12_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then t.hol_type else null end) as d13_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then t.hol_type else null end) as d14_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then t.hol_type else null end) as d15_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then t.hol_type else null end) as d16_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then t.hol_type else null end) as d17_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then t.hol_type else null end) as d18_type_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then t.hol_type else null end) as d19_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then t.hol_type else null end) as d20_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then t.hol_type else null end) as d21_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then t.hol_type else null end) as d22_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then t.hol_type else null end) as d23_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then t.hol_type else null end) as d24_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then t.hol_type else null end) as d25_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then t.hol_type else null end) as d26_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then t.hol_type else null end) as d27_type_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then t.hol_type else null end) as d28_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then t.hol_type else null end) as d29_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then t.hol_type else null end) as d30_type_l1                 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then t.hol_type else null end) as d31_type_l1
                       
                       ,max(case when t.work_dt = p_from  then t.day_type else null end) as d1_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then t.day_type else null end) as d2_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then t.day_type else null end) as d3_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then t.day_type else null end) as d4_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then t.day_type else null end) as d5_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then t.day_type else null end) as d6_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then t.day_type else null end) as d7_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then t.day_type else null end) as d8_kind_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then t.day_type else null end) as d9_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then t.day_type else null end) as d10_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then t.day_type else null end) as d11_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then t.day_type else null end) as d12_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then t.day_type else null end) as d13_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then t.day_type else null end) as d14_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then t.day_type else null end) as d15_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then t.day_type else null end) as d16_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then t.day_type else null end) as d17_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then t.day_type else null end) as d18_kind_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then t.day_type else null end) as d19_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then t.day_type else null end) as d20_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then t.day_type else null end) as d21_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then t.day_type else null end) as d22_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then t.day_type else null end) as d23_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then t.day_type else null end) as d24_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then t.day_type else null end) as d25_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then t.day_type else null end) as d26_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then t.day_type else null end) as d27_kind_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then t.day_type else null end) as d28_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then t.day_type else null end) as d29_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then t.day_type else null end) as d30_kind_l1                 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then t.day_type else null end) as d31_kind_l1
                       
                       
                       , '' as d1_type_l2, '' as d2_type_l2, '' as d3_type_l2, '' as d4_type_l2, '' as d5_type_l2, '' as d6_type_l2, '' as d7_type_l2
                       , '' as d8_type_l2, '' as d9_type_l2, '' as d10_type_l2, '' as d11_type_l2, '' as d12_type_l2, '' as d13_type_l2, '' as d14_type_l2
                       , '' as d15_type_l2, '' as d16_type_l2, '' as d17_type_l2, '' as d18_type_l2, '' as d19_type_l2, '' as d20_type_l2, '' as d21_type_l2
                       , '' as d22_type_l2, '' as d23_type_l2, '' as d24_type_l2, '' as d25_type_l2, '' as d26_type_l2, '' as d27_type_l2, '' as d28_type_l2
                       , '' as d29_type_l2, '' as d30_type_l2, '' as d31_type_l2 
                                                 
                       , 0 as d1_kind_l2, 0 as d2_kind_l2, 0 as d3_kind_l2, 0 as d4_kind_l2, 0 as d5_kind_l2, 0 as d6_kind_l2, 0 as d7_kind_l2
                       , 0 as d8_kind_l2, 0 as d9_kind_l2, 0 as d10_kind_l2, 0 as d11_kind_l2, 0 as d12_kind_l2, 0 as d13_kind_l2, 0 as d14_kind_l2
                       , 0 as d15_kind_l2, 0 as d16_kind_l2, 0 as d17_kind_l2, 0 as d18_kind_l2, 0 as d19_kind_l2, 0 as d20_kind_l2, 0 as d21_kind_l2
                       , 0 as d22_kind_l2, 0 as d23_kind_l2, 0 as d24_kind_l2, 0 as d25_kind_l2, 0 as d26_kind_l2, 0 as d27_kind_l2, 0 as d28_kind_l2
                       , 0 as d29_kind_l2, 0 as d30_kind_l2, 0 as d31_kind_l2
                       
                       --wt level1
                       , sum(case when t.hol_type is null then nvl(t.wt,0) end) as total_wt_l1
                       , sum(case when t.hol_type is null then nvl(t.wt,0) * nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_wt_l1
                       , sum(case when t.hol_type is null then nvl(t.ot, 0) else 0 end) as total_ot_l1
                       , sum(case when t.hol_type is null then nvl(t.ot, 0) * nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_ot_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.wt, 0) else 0 end) as total_st_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.wt, 0) * nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_st_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.ot, 0) else 0 end) as total_ost_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.ot, 0)*nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_ost_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.wt, 0) else 0 end) as total_ht_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.wt, 0)*nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_ht_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.ot, 0) else 0 end) as total_oht_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.ot, 0)*nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_oht_l1
                       , sum(case when t.hol_type = 'HOL' then 8 else 0 end) as total_hol_l1
                       , sum(nvl(t.ot, 0) + decode(t.hol_type, NULL, 0, nvl(t.wt, 0))) as total_ot_tax_l1
                       --nt level1
                       , sum(case when t.hol_type is null then nvl(t.nt, 0) else 0 end) as total_nt30_l1
                       , sum(case when t.hol_type is null then nvl(t.nt, 0)* nvl(t.nt_rate, 100)/100 else 0 end) as total_rate_nt30_l1
                       , sum(case when t.hol_type is null then nvl(t.ont, 0) else 0 end) as total_nt45_l1
                       , sum(case when t.hol_type is null then nvl(t.ont, 0)*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt45_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.nt, 0) + nvl(t.ont, 0) else 0 end) as total_nt60_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then (nvl(t.nt, 0) + nvl(t.ont, 0))*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt60_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.nt, 0) + nvl(t.ont, 0) else 0 end) as total_nt90_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then (nvl(t.nt, 0) + nvl(t.ont, 0))*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt90_l1
                       
                       -- absence level1     
                       , sum(case when t.hol_type is null and t.absence_type = '01' then nvl(t.absence_time, 0) else 0 end) as abs_ale_l1
                       , sum(case when t.hol_type is null and t.absence_type = '01' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_ale_l1
                       , sum(case when t.hol_type is null and t.absence_type <> '01' and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0) else 0 end) as abs_other_pay_l1
                       , sum(case when t.hol_type is null and t.absence_type <> '01' and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_other_pay_l1
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0) else 0 end) as total_abs_pay_l1
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_pay_l1
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'N' then nvl(t.absence_time, 0) else 0 end) as total_abs_npay_l1
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'N' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_npay_l1
                       
                       --wt level2
                       , 0 as total_wt_l2
                       , 0 as total_rate_wt_l2
                       , 0 as total_ot_l2
                       , 0 as total_rate_ot_l2
                       , 0 as total_st_l2
                       , 0 as total_rate_st_l2
                       , 0 as total_ost_l2
                       , 0 as total_rate_ost_l2
                       , 0 as total_ht_l2
                       , 0 as total_rate_ht_l2
                       , 0 as total_oht_l2
                       , 0 as total_rate_oht_l2
                       , 0 as total_hol_l2
                       , 0 as total_ot_tax_l2
                       
                       --nt level2
                       , 0 as total_nt30_l2
                       , 0 as total_rate_nt30_l2
                       , 0 as total_nt45_l2
                       , 0 as total_rate_nt45_l2
                       , 0 as total_nt60_l2
                       , 0 as total_rate_nt60_l2
                       , 0 as total_nt90_l2
                       , 0 as total_rate_nt90_l2
                       
                       -- absence level2
                       , 0 as abs_ale_l2
                       , 0 as total_rate_abs_ale_l2
                       , 0 as abs_other_pay_l2
                       , 0 as total_rate_abs_other_pay_l2
                       , 0 as total_abs_pay_l2
                       , 0 as total_rate_abs_pay_l2
                       , 0 as total_abs_npay_l2
                       , 0 as total_rate_abs_npay_l2

                from thr_work_date t,thr_employee d, thr_salary_manage s
                where t.del_if = 0 and d.del_if=0 and s.del_if(+) =0
                  and t.thr_emp_pk = s.thr_emp_pk(+)
                  and s.work_mon(+) = p_work_mon
                  and t.thr_emp_pk=d.pk
                  and t.work_dt between p_from and p_to
                  and nvl(s.confirm_dt(+), p_from)>p_from
                  and t.work_dt between p_from and to_char(to_date(nvl(s.confirm_dt,nvl(d.confirm_dt, p_from)),'YYYYMMDD')-1,'YYYYMMDD')
                  and t.work_dt between d.join_dt and  to_char(to_date(nvl(d.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd') 
                  and t.work_dt between  d.join_dt and nvl(s.confirm_dt,p_to)
                  and d.join_dt <= p_to
                  and nvl(d.left_dt,p_to) >= p_from
                  and d.sal_period = p_sal_period
                  and (t.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
                  and t.thr_emp_pk=nvl(l_thr_emp_pk, t.thr_emp_pk)             
                group by  t.thr_emp_pk
              union all
                select t.thr_emp_pk
                       , 0 as wt1_l1, 0 as wt2_l1, 0 as wt3_l1, 0 as wt4_l1, 0 as wt5_l1, 0 as wt6_l1, 0 as wt7_l1, 0 as wt8_l1, 0 as wt9_l1, 0 as wt10_l1
                       , 0 as wt11_l1, 0 as wt12_l1, 0 as wt13_l1, 0 as wt14_l1, 0 as wt15_l1, 0 as wt16_l1, 0 as wt17_l1, 0 as wt18_l1, 0 as wt19_l1, 0 as wt20_l1
                       , 0 as wt21_l1, 0 as wt22_l1, 0 as wt23_l1, 0 as wt24_l1, 0 as wt25_l1, 0 as wt26_l1, 0 as wt27_l1, 0 as wt28_l1, 0 as wt29_l1, 0 as wt30_l1, 0 as wt31_l1
                       ,sum(case when t.work_dt = p_from  then nvl(t.wt,0) else 0 end) as wt1_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt2_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt3_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt4_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt5_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt6_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt7_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt8_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt9_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt10_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt11_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt12_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt13_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt14_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt15_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt16_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt17_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt18_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt19_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt20_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt21_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt22_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt23_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt24_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt25_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt26_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt27_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt28_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt29_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt30_l2                 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then nvl(t.wt,0) else 0 end) as wt31_l2
                       
                       , 0 as d1_l1, 0 as d2_l1, 0 as d3_l1, 0 as d4_l1, 0 as d5_l1, 0 as d6_l1, 0 as d7_l1, 0 as d8_l1, 0 as d9_l1, 0 as d10_l1
                       , 0 as d11_l1, 0 as d12_l1, 0 as d13_l1, 0 as d14_l1, 0 as d15_l1, 0 as d16_l1, 0 as d17_l1, 0 as d18_l1, 0 as d19_l1, 0 as d20_l1
                       , 0 as d21_l1, 0 as d22_l1, 0 as d23_l1, 0 as d24_l1, 0 as d25_l1, 0 as d26_l1, 0 as d27_l1, 0 as d28_l1, 0 as d29_l1, 0 as d30_l1, 0 as d31_l1
                       
                       ,sum(case when t.work_dt = p_from  then nvl(t.wd,0) else 0 end) as d1_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then nvl(t.wd,0) else 0 end) as d2_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then nvl(t.wd,0) else 0 end) as d3_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then nvl(t.wd,0) else 0 end) as d4_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d5_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d6_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d7_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d8_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d9_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d10_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d11_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d12_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d13_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d14_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d15_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d16_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d17_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d18_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d19_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d20_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d21_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d22_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d23_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d24_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d25_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d26_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d27_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d28_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d29_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d30_l2                 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d31_l2
                       
                       
                       , '' as d1_type_l1, '' as d2_type_l1, '' as d3_type_l1, '' as d4_type_l1, '' as d5_type_l1, '' as d6_type_l1, '' as d7_type_l1
                       , '' as d8_type_l1, '' as d9_type_l1, '' as d10_type_l1, '' as d11_type_l1, '' as d12_type_l1, '' as d13_type_l1, '' as d14_type_l1
                       , '' as d15_type_l1, '' as d16_type_l1, '' as d17_type_l1, '' as d18_type_l1, '' as d19_type_l1, '' as d20_type_l1, '' as d21_type_l1
                       , '' as d22_type_l1, '' as d23_type_l1, '' as d24_type_l1, '' as d25_type_l1, '' as d26_type_l1, '' as d27_type_l1, '' as d28_type_l1
                       , '' as d29_type_l1, '' as d30_type_l1, '' as d31_type_l1 
                       
                       , 0 as d1_kind_l1, 0 as d2_kind_l1, 0 as d3_kind_l1, 0 as d4_kind_l1, 0 as d5_kind_l1, 0 as d6_kind_l1, 0 as d7_kind_l1
                       , 0 as d8_kind_l1, 0 as d9_kind_l1, 0 as d10_kind_l1, 0 as d11_kind_l1, 0 as d12_kind_l1, 0 as d13_kind_l1, 0 as d14_kind_l1
                       , 0 as d15_kind_l1, 0 as d16_kind_l1, 0 as d17_kind_l1, 0 as d18_kind_l1, 0 as d19_kind_l1, 0 as d20_kind_l1, 0 as d21_kind_l1
                       , 0 as d22_kind_l1, 0 as d23_kind_l1, 0 as d24_kind_l1, 0 as d25_kind_l1, 0 as d26_kind_l1, 0 as d27_kind_l1, 0 as d28_kind_l1
                       , 0 as d29_kind_l1, 0 as d30_kind_l1, 0 as d31_kind_l1
                       
                       ,max(case when t.work_dt = p_from  then t.hol_type else null end) as d1_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then t.hol_type else null end) as d2_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then t.hol_type else null end) as d3_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then t.hol_type else null end) as d4_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then t.hol_type else null end) as d5_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then t.hol_type else null end) as d6_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then t.hol_type else null end) as d7_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then t.hol_type else null end) as d8_type_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then t.hol_type else null end) as d9_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then t.hol_type else null end) as d10_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then t.hol_type else null end) as d11_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then t.hol_type else null end) as d12_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then t.hol_type else null end) as d13_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then t.hol_type else null end) as d14_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then t.hol_type else null end) as d15_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then t.hol_type else null end) as d16_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then t.hol_type else null end) as d17_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then t.hol_type else null end) as d18_type_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then t.hol_type else null end) as d19_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then t.hol_type else null end) as d20_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then t.hol_type else null end) as d21_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then t.hol_type else null end) as d22_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then t.hol_type else null end) as d23_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then t.hol_type else null end) as d24_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then t.hol_type else null end) as d25_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then t.hol_type else null end) as d26_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then t.hol_type else null end) as d27_type_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then t.hol_type else null end) as d28_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then t.hol_type else null end) as d29_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then t.hol_type else null end) as d30_type_l2                 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then t.hol_type else null end) as d31_type_l2   
                       
                       ,max(case when t.work_dt = p_from  then t.day_type else null end) as d1_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then t.day_type else null end) as d2_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then t.day_type else null end) as d3_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then t.day_type else null end) as d4_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then t.day_type else null end) as d5_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then t.day_type else null end) as d6_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then t.day_type else null end) as d7_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then t.day_type else null end) as d8_kind_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then t.day_type else null end) as d9_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then t.day_type else null end) as d10_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then t.day_type else null end) as d11_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then t.day_type else null end) as d12_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then t.day_type else null end) as d13_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then t.day_type else null end) as d14_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then t.day_type else null end) as d15_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then t.day_type else null end) as d16_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then t.day_type else null end) as d17_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then t.day_type else null end) as d18_kind_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then t.day_type else null end) as d19_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then t.day_type else null end) as d20_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then t.day_type else null end) as d21_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then t.day_type else null end) as d22_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then t.day_type else null end) as d23_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then t.day_type else null end) as d24_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then t.day_type else null end) as d25_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then t.day_type else null end) as d26_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then t.day_type else null end) as d27_kind_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then t.day_type else null end) as d28_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then t.day_type else null end) as d29_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then t.day_type else null end) as d30_kind_l2                 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then t.day_type else null end) as d31_kind_l2                                                                                                                      
                       
                       --wt level1
                       , 0 as total_wt_l1
                       , 0 as total_rate_wt_l1
                       , 0 as total_ot_l1
                       , 0 as total_rate_ot_l1
                       , 0 as total_st_l1
                       , 0 as total_rate_st_l1
                       , 0 as total_ost_l1
                       , 0 as total_rate_ost_l1
                       , 0 as total_ht_l1
                       , 0 as total_rate_ht_l1
                       , 0 as total_oht_l1
                       , 0 as total_rate_oht_l1
                       , 0 as total_hol_l1
                       , 0 as total_ot_tax_l1
                       
                       --nt level1
                       , 0 as total_nt30_l1
                       , 0 as total_rate_nt30_l1
                       , 0 as total_nt45_l1
                       , 0 as total_rate_nt45_l1
                       , 0 as total_nt60_l1
                       , 0 as total_rate_nt60_l1
                       , 0 as total_nt90_l1
                       , 0 as total_rate_nt90_l1
                       
                       -- absence level1
                       , 0 as abs_ale_l1
                       , 0 as total_rate_abs_ale_l1
                       , 0 as abs_other_pay_l1
                       , 0 as total_rate_abs_other_pay_l1
                       , 0 as total_abs_pay_l1
                       , 0 as total_rate_abs_pay_l1
                       , 0 as total_abs_npay_l1
                       , 0 as total_rate_abs_npay_l1
                       
                       --wt level2
                       , sum(case when t.hol_type is null then nvl(t.wt,0) end) as total_wt_l2
                       , sum(case when t.hol_type is null then nvl(t.wt,0) * nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_wt_l2
                       , sum(case when t.hol_type is null then nvl(t.ot, 0) else 0 end) as total_ot_l2
                       , sum(case when t.hol_type is null then nvl(t.ot, 0) * nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_ot_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.wt, 0) else 0 end) as total_st_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.wt, 0) * nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_st_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.ot, 0) else 0 end) as total_ost_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.ot, 0)*nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_ost_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.wt, 0) else 0 end) as total_ht_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.wt, 0)*nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_ht_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.ot, 0) else 0 end) as total_oht_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.ot, 0)*nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_oht_l2
                       , sum(case when t.hol_type = 'HOL' then 8 else 0 end) as total_hol_l2
                       , sum(nvl(t.ot, 0) + decode(t.hol_type, NULL, 0, nvl(t.wt, 0))) as total_ot_tax_l2
                       
                       --nt level2
                       , sum(case when t.hol_type is null then nvl(t.nt, 0) else 0 end) as total_nt30_l2
                       , sum(case when t.hol_type is null then nvl(t.nt, 0)* nvl(t.nt_rate, 100)/100 else 0 end) as total_rate_nt30_l2
                       , sum(case when t.hol_type is null then nvl(t.ont, 0) else 0 end) as total_nt45_l2
                       , sum(case when t.hol_type is null then nvl(t.ont, 0)*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt45_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.nt, 0) + nvl(t.ont, 0) else 0 end) as total_nt60_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then (nvl(t.nt, 0) + nvl(t.ont, 0))*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt60_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.nt, 0) + nvl(t.ont, 0) else 0 end) as total_nt90_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then (nvl(t.nt, 0) + nvl(t.ont, 0))*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt90_l2
                       
                       -- absence level2   
                       , sum(case when t.hol_type is null and t.absence_type = '01' then nvl(t.absence_time, 0) else 0 end) as abs_ale_l2
                       , sum(case when t.hol_type is null and t.absence_type = '01' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_ale_l2
                       , sum(case when t.hol_type is null and t.absence_type <> '01' and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0) else 0 end) as abs_other_pay_l2
                       , sum(case when t.hol_type is null and t.absence_type <> '01' and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_other_pay_l2
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0) else 0 end) as total_abs_pay_l2
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_pay_l2
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'N' then nvl(t.absence_time, 0) else 0 end) as total_abs_npay_l2
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'N' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_npay_l2
                       

                from thr_work_date t,thr_employee d, thr_salary_manage s
                where t.del_if = 0 and d.del_if=0 and s.del_if(+) =0
                  and t.thr_emp_pk = s.thr_emp_pk(+)
                  and s.work_mon(+) = p_work_mon
                  and t.thr_emp_pk=d.pk
                  and t.work_dt between p_from and p_to
                  and t.work_dt between d.join_dt and to_char(to_date(nvl(d.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                  and nvl(s.confirm_dt(+), p_from) <= p_to
                  and t.work_dt between nvl(s.confirm_dt,nvl(d.confirm_dt, p_from)) and p_to
                  and d.join_dt <= p_to
                  and nvl(d.left_dt,p_to) >= p_from
                  and d.sal_period = p_sal_period
                  and (t.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
                  and t.thr_emp_pk=nvl(l_thr_emp_pk, t.thr_emp_pk)
                group by  t.thr_emp_pk) w
                group by w.thr_emp_pk) z   -- WORIKING DAY.
    , thr_employee e, thr_salary_manage m
   where e.del_if=0 and m.del_if(+)=0
   and m.thr_emp_pk(+) = z.thr_emp_pk
   and m.work_mon(+) = p_work_mon
   and e.pk = z.thr_emp_pk(+)
   and e.join_dt <= p_to
   and nvl(e.left_dt,p_to) >= p_from
   and e.sal_period=p_sal_period
   and (flag_cal_resign='N' or nvl(e.left_dt,to_char(to_date(p_to,'YYYYMMDD')+1 ,'YYYYMMDD'))>p_to)
   and (e.tco_org_pk in  (select  g.pk from tco_org g
                             where g.del_if = 0
                              start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                connect by prior g.pk = g.p_pk)
            or p_tco_org_pk ='ALL')
   and e.pk not in(select x.thr_emp_pk from thr_work_month x 
                        where x.del_if=0 
                        and x.work_mon = p_work_mon 
                        and x.thr_emp_pk=e.pk  )
   and e.pk=nvl(l_thr_emp_pk, e.pk) ;
   
  
   -- update kieu vang
   update thr_work_month a
   set (a.wt1, a.wt2, a.wt3, a.wt4, a.wt5, a.wt6, a.wt7, a.wt8, a.wt9, a.wt10 
       ,a.wt11, a.wt12, a.wt13, a.wt14, a.wt15, a.wt16, a.wt17, a.wt18, a.wt19, a.wt20
       ,a.wt21, a.wt22, a.wt23, a.wt24, a.wt25, a.wt26, a.wt27, a.wt28, a.wt29, a.wt30, a.wt31)
        = (select max(case when b.absence_dt = a.from_dt and b.absence_type is not null then b.short_nm else a.wt1 end)  as wt1
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+1,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt2 end)  as wt2
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+2,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt3 end)  as wt3
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+3,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt4 end)  as wt4
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+4,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt5 end)  as wt5
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+5,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt6 end)  as wt6
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+6,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt7 end)  as wt7
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+7,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt8 end)  as wt8
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+8,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt9 end)  as wt9
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+9,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt10 end)  as wt10
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+10,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt11 end)  as wt11
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+11,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt12 end)  as wt12
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+12,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt13 end)  as wt13
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+13,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt14 end)  as wt14
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+14,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt15 end)  as wt15
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+15,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt16 end)  as wt16
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+16,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt17 end)  as wt17
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+17,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt18 end)  as wt18
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+18,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt19 end)  as wt19
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+19,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt20 end)  as wt20
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+20,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt21 end)  as wt21
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+21,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt22 end)  as wt22
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+22,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt23 end)  as wt23
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+23,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt24 end)  as wt24
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+24,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt25 end)  as wt25
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+25,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt26 end)  as wt26
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+26,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt27 end)  as wt27
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+27,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt28 end)  as wt28
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+28,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt29 end)  as wt29
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+29,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt30 end)  as wt30
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+30,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt31 end)  as wt31
                    from thr_absence b 
                    where b.del_if=0 
                    and b.thr_emp_pk = a.thr_emp_pk
                    and b.absence_dt >= a.from_dt 
                    ) 
   where a.del_if=0
   and a.sal_period = p_sal_period
   and a.work_mon = p_work_mon
   and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
   and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk) ;
   
  
  

       --keo tat ca nhung nguoi nghi viec tro ve active
     update  thr_work_time_month s
            set s.times=null              
                ,s.sal_period=p_sal_period 
            where s.del_if=0 and s.work_mon=p_work_mon
             and nvl(s.close_m_yn,'N')='N'             
             and s.tco_org_pk in (select g.pk
                                         from tco_org g
                                        where g.del_if = 0
                                        start with g.pk =p_tco_org_pk
                                        connect by prior g.pk =g.p_pk)          
             and s.thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0  
                    and nvl(e.left_dt,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.sal_period=p_sal_period
                      )
             and s.thr_emp_pk=nvl(l_thr_emp_pk, s.thr_emp_pk);
       
       update  thr_salary_manage s
            set s.times=null              
                ,s.sal_period=p_sal_period 
            where s.del_if=0 and s.work_mon=p_work_mon
             and nvl(s.close_m_yn,'N')='N'             
             and s.tco_org_pk in (select g.pk
                                         from tco_org g
                                        where g.del_if = 0
                                        start with g.pk =p_tco_org_pk
                                        connect by prior g.pk =g.p_pk)          
             and s.thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0  
                    and nvl(e.left_dt,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.sal_period=p_sal_period
                      )
             and s.thr_emp_pk=nvl(l_thr_emp_pk, s.thr_emp_pk);
          
          
           update thr_month_salary s
          set s.status='A',
               s.times=null  
                ,s.sal_period=p_sal_period             
            where s.del_if=0 and s.work_mon=p_work_mon
             and nvl(s.close_m_yn,'N')='N'             
             and s.tco_dept_pk in (select g.pk
                                         from tco_org g
                                        where g.del_if = 0
                                        start with g.pk =p_tco_org_pk
                                        connect by prior g.pk =g.p_pk)
             and   thr_emp_pk
             in ( select e.pk from thr_employee e where e.del_if=0  
                    and nvl(e.left_dt,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.sal_period=p_sal_period
                      )
             and s.thr_emp_pk=nvl(l_thr_emp_pk, s.thr_emp_pk);
              
           update thr_work_mon s
           set s.status='A',
               s.times=null  
                ,s.sal_period=p_sal_period             
            where s.del_if=0 and s.work_mon=p_work_mon
            and s.tco_org_pk in (select g.pk
                                         from tco_org g
                                        where g.del_if = 0
                                        start with g.pk =p_tco_org_pk
                                        connect by prior g.pk =g.p_pk)          
             and   thr_emp_pk
             in ( select e.pk from thr_employee e where e.del_if=0  
                    and nvl(e.left_dt,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.sal_period=p_sal_period
                      )
            and s.thr_emp_pk=nvl(l_thr_emp_pk, s.thr_emp_pk);
            
                    
           update thr_month_allow s
           set s.times=null   
             ,s.sal_period=p_sal_period            
            where s.del_if=0 and s.work_mon=p_work_mon
             and nvl(s.close_m_yn,'N')='N'                         
             and   thr_emp_pk
             in ( select e.pk from thr_employee e where e.del_if=0  
                    and nvl(e.left_dt,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.sal_period=p_sal_period
                      )
             and s.thr_emp_pk=nvl(l_thr_emp_pk, s.thr_emp_pk);
            
            update thr_month_summary s
              set s.status='A',
               s.times=null       
                ,s.sal_period=p_sal_period        
            where s.del_if=0 and s.work_mon=p_work_mon
            and s.tco_dept_pk in (select g.pk
                                         from tco_org g
                                        where g.del_if = 0
                                        start with g.pk =p_tco_org_pk
                                        connect by prior g.pk =g.p_pk)          
             and nvl(s.close_m_yn,'N')='N'
             and   thr_emp_pk
             in( select e.pk from thr_employee e where e.del_if=0  
                    and nvl(e.left_dt,'30000101') > p_to                    
                     and s.thr_emp_pk=e.pk
                     and e.sal_period=p_sal_period
                      )
             and s.thr_emp_pk=nvl(l_thr_emp_pk, s.thr_emp_pk);
      
                      
end if;    
     
p_result:=1;
commit;
--    EXCEPTION
--    WHEN l_check THEN
--        p_result:=-1;
--        Raise_application_error(-20019, sqlerrm);
--    WHEN l_exp_wt THEN
--        p_result:=-1;
--        Raise_application_error(-20019, 'ERRCODE : exists WORKING_TIME is still SUBMIT or WAITING or CANCEL, Action denied! (T?n t?i gi? công chua du?c APPROVE, Thao tác b? t? ch?i) '||SQLERRM);
--    WHEN l_exp_ot THEN
--        p_result:=-1;
--        Raise_application_error(-20019, 'ERRCODE : exists OVER_TIME is still SUBMIT or WAITING or CANCEL, Action denied! (T?n t?i tang ca chua du?c APPROVE, Thao tác b? t? ch?i) '||SQLERRM);
--    WHEN  OTHERS THEN
--        p_result:=-1;
--        RAISE_APPLICATION_ERROR(-20002, 'ERRCODE : '|| l_error||SQLERRM );
--    ROLLBACK;
end  ;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01701_1;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_pro_hrti01701_1 (
    p_work_mon          in varchar2,
    p_from              in varchar2,    
    p_to                in varchar2,     
    p_tco_org_pk        in varchar2,
    p_sal_period        in varchar2,
    p_emp_id            in varchar2,
    p_crt_by            varchar2,
    p_result        out number      
)IS
   
   
   l_thr_emp_pk      number;
BEGIN
   
  if p_emp_id is not null then
       
      select max(a.pk) into l_thr_emp_pk 
      from thr_employee a
       where a.del_if=0
       and upper(a.emp_id) = upper(p_emp_id);
           
       if l_thr_emp_pk is null then
         p_result:=-1;
         raise_application_error(-20019, 'KHÔNG TÌM THẤY MÃ NHÂN VIÊN NÀY TRONG HỆ THỐNG, VUI LÒNG KIỂM TRA LẠI');
       end if;
  else 
          l_thr_emp_pk := null;
  end if;

  update thr_work_month a
  set a.del_if = a.pk 
  , a.mod_by = p_crt_by
  , a.remark = 'DELETE FROM PROCESS' 
  where a.del_if=0
  and a.work_mon = p_work_mon
  and a.sal_period = p_sal_period
  and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
  
  
  update thr_absence_month a
  set a.del_if = a.pk 
  , a.mod_by = p_crt_by
  , a.remark = 'DELETE FROM PROCESS' 
  where a.del_if=0
  and a.work_mon = p_work_mon
  and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);


  delete thr_mon_lately_early a
  where a.del_if=0
  and a.work_mon = p_work_mon
  and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
  and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk);
  
   p_result := 1;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01701_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01701_3 (
   p_tco_org_pk          VARCHAR2,
   p_month               VARCHAR2,
   p_sal_period          VARCHAR2,                                         
   p_crt_by              VARCHAR2,
   p_FROM            OUT VARCHAR2,
   p_TO              OUT VARCHAR2,
   p_from_to         OUT VARCHAR2,
   p_close_time           OUT VARCHAR2,
   p_PROCESS         OUT VARCHAR2
  )
IS
   l_error        VARCHAR2 (2) := '';
   l_flag_exist   BOOLEAN := FALSE;
   l_cur_rec      NUMBER;
   l_cur          SYS_REFCURSOR;
   tmp1           VARCHAR2 (50) := '';
   tmp2           VARCHAR2 (50) := '';
BEGIN
   l_error := '01';

   OPEN l_cur FOR
      SELECT 1
        FROM thr_month_salary B
       WHERE B.DEL_IF = 0 AND B.WORK_MON = p_month
        and B.SAL_PERIOD = p_sal_period
        AND B.TCO_COMPANY_PK =
                    (SELECT G.TCO_COMPANY_PK
                       FROM tco_org g
                      WHERE G.DEL_IF = 0 AND g.pk = p_tco_org_pk);

   FETCH l_cur INTO l_cur_rec;

   l_flag_exist := l_cur%FOUND;

   CLOSE l_cur;

   IF l_flag_exist = TRUE
   THEN
      p_PROCESS := 'Y';
   ELSE
      p_PROCESS := 'N';
   END IF;

   OPEN l_cur FOR
      SELECT 1
        FROM THR_CLOSE A
       WHERE     A.DEL_IF = 0
             AND A.MONTH_CLOSE = p_month
             AND A.id = p_sal_period
             AND A.TCO_COMPANY_PK =(SELECT G.TCO_COMPANY_PK
                                       FROM tco_org g
                                      WHERE G.DEL_IF = 0 AND g.pk = p_tco_org_pk);

   FETCH l_cur INTO l_cur_rec;

   l_flag_exist := l_cur%FOUND;

   CLOSE l_cur;

   IF l_flag_exist = TRUE
   THEN
      SELECT A.FROM_DT,
             A.TO_DT,
             to_char(to_date(a.from_dt, 'yyyymmdd'), 'dd/mm/yyyy')||' - '||to_char(to_date(a.to_dt, 'yyyymmdd'), 'dd/mm/yyyy'),
             NVL (A.CLOSE_TIME_YN , 'N')
        INTO p_FROM,
             p_TO,
             p_from_to,
             p_close_time
        FROM THR_CLOSE A
       WHERE     A.DEL_IF = 0
             AND A.MONTH_CLOSE = p_month
             AND A.id = p_sal_period
             AND A.TCO_COMPANY_PK =
                    (SELECT G.TCO_COMPANY_PK
                       FROM tco_org g
                      WHERE G.DEL_IF = 0 AND g.pk = p_tco_org_pk);
   ELSE                                             --CHUA CO DINH NGHIA THANG
      p_FROM := '';
      p_TO := '';
      p_from_to:= '';
      p_close_time := '';
   END IF;
--exception
--   when others   then
--      raise_application_error (-20002,l_error||sqlerrm);
--      ROLLBACK WORK;
END;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01703_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01703_0 (
   p_emp_id           VARCHAR,
   p_work_date        VARCHAR,
   p_crt_by           VARCHAR,
   p_full_name     OUT   VARCHAR,
   p_work_day      OUT   VARCHAR,
   p_time_in       OUT   VARCHAR,
   p_mid_time_out  OUT   VARCHAR,
   p_mid_time_in   OUT   VARCHAR,
   p_time_out      OUT   VARCHAR,
   p_wt            OUT   VARCHAR,
   p_ot_xn         OUT   VARCHAR
)
IS

BEGIN

       SELECT MAX(E.FULL_NAME)
        , MAX(TO_CHAR(TO_DATE(A.WORK_DT, 'YYYYMMDD'), 'DD/MM/YYYY'))
        , MAX(A.TIME_IN)
        , MAX(A.MID_TIME_OUT)
        , MAX(A.MID_TIME_IN)
        , MAX(A.TIME_OUT)
        , NVL(MAX(A.WT), 0)
        , NVL(MAX(A.OT_XN), 0)
        INTO p_full_name, p_work_day, p_time_in, p_mid_time_out, p_mid_time_in, p_time_out, p_wt, p_ot_xn 
       FROM THR_WORK_DATE A, THR_EMPLOYEE E
       WHERE A.DEL_IF=0 AND E.DEL_IF=0
       AND A.THR_EMP_PK = E.PK
       AND A.WORK_DT = p_work_date
       AND A.EMP_ID = p_emp_id;
            
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01800_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_hr_pro_HRTI01800_0 (
   p_no               varchar2,
   p_emp_id           varchar2,
   p_full_name        varchar2,
   p_work_dt          varchar2,
   p_start_time       varchar2,
   p_end_time         varchar2,
   p_description      varchar2,
   p_1                varchar2,
   p_2                varchar2,
   p_3                varchar2,
   p_4                varchar2,
   p_5                varchar2,
   p_sequence_dt      varchar2,
   p_crt_by           varchar2,
   p_rtn_value    out varchar2)
is

   l_flag_exist   boolean := false;
   l_cur          sys_refcursor;
   l_pro          varchar2 (2000) := '';
   l_work_dt      varchar2 (8);
   l_thr_emp_pk   number;
   
begin
      
--      select max(e.pk) into l_thr_emp_pk
--        from thr_employee e
--       where e.del_if = 0 and e.emp_id = p_emp_id;
--
--   
--   if l_thr_emp_pk is null no exist emp id
--   then 
--      p_rtn_value := '-1';
--      return;
--   end if;
--   
--   if hr_f_check_hh24mi(p_start_time) = 0 or hr_f_check_hh24mi(p_end_time) = 0 then
--        p_rtn_value := '-1';
--         return;
--   end if;
--   
--   if hr_f_work_date(p_work_dt) = '0' then 
--        p_rtn_value := '-1';
--         return;
--   end if;

   l_work_dt := hr_f_work_date(p_work_dt);
   
   update thr_daily_ot_reg a
   set A.DEL_IF = a.pk
   , a.mod_by = p_crt_by
   , a.mod_dt = sysdate
   , a.remark = 'DELETE BY IMPORT NEW'
   where a.del_if=0
   and a.work_dt = l_work_dt
   and a.thr_emp_pk = l_thr_emp_pk;
    /* 
     insert into thr_daily_ot_reg(pk, thr_emp_pk, emp_id, tco_org_pk, pos_type, job_type
                                  , work_dt, start_time, end_time, ot, description
                                  , del_if, crt_by, crt_dt, remark, sequence_dt)
     select thr_daily_ot_reg_seq.nextval, e.pk, e.emp_id, e.tco_org_pk, e.pos_type, e.job_type
                                , l_work_dt
                                , nvl(p_start_time, c.start_time)
                                , nvl(p_end_time, c.end_time)
                                , nvl(c.wt, 0)
                                , p_description , 0, p_crt_by, sysdate, 'INSERT FROM IMPORT DATA', p_sequence_dt
        from thr_employee e, thr_wg_sch_detail b, thr_work_shift c
        where e.del_if=0 and b.del_if(+)=0 and c.del_if=0
        and b.thr_emp_pk(+) = e.pk
        and b.work_dt(+) = l_work_dt
        and b.thr_ws_pk = c.pk
        and upper(e.emp_id) = upper(p_emp_id)
         and e.pk not in (select r.thr_emp_pk from thr_daily_ot_reg r
                            where r.del_if=0
                            and r.thr_emp_pk = e.pk
                            and r.work_dt = l_work_dt)
        ;
    */ 
     insert into thr_daily_ot_reg(pk, thr_emp_pk, emp_id, tco_org_pk, pos_type, job_type
                                  , work_dt, start_time, end_time, ot, description
                                  , del_if, crt_by, crt_dt, remark, sequence_dt)
     select thr_daily_ot_reg_seq.nextval, e.pk, e.emp_id, e.tco_org_pk, e.pos_type, e.job_type
                                , l_work_dt
                                , null
                                , null
                                , null
                                , p_description , 0, p_crt_by, sysdate, 'INSERT FROM IMPORT DATA', p_sequence_dt
        from thr_employee e
        where e.del_if=0 
        and upper(e.emp_id) = upper(p_emp_id)
        and e.pk not in (select r.thr_emp_pk from thr_daily_ot_reg r
                            where r.del_if=0
                            and r.thr_emp_pk = e.pk
                            and r.work_dt = l_work_dt)
        ;
     
   p_rtn_value := '1';
exception
   when others
   then
      p_rtn_value := '0';
end;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI01900_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI01900_0 (
   p_no               varchar2,
   p_emp_id           varchar2,
   p_full_name        varchar2,
   p_start_dt         varchar2,
   p_end_dt           varchar2,
   p_reason           varchar2,
   p_description      varchar2,
   p_1                varchar2,
   p_2                varchar2,
   p_3                varchar2,
   p_4                varchar2,
   p_5                varchar2,
   p_sequence_dt      varchar2,
   p_crt_by           varchar2,
   p_rtn_value    out varchar2)
is

  l_auto_pk  number;
   
begin


     select max(a.pk) into  l_auto_pk
     from thr_att_time_auto a
     where a.del_if =0
     and upper(a.emp_id) = upper(p_emp_id)
     and a.start_dt = hr_f_work_date(p_start_dt);
     
     if l_auto_pk is not null and p_end_dt is not null then
     
            update thr_att_time_auto a
            set a.end_dt = hr_f_work_date(p_end_dt)
            , a.description = p_crt_by || 'UPDATE END DATE'
            , a.mod_by = p_crt_by
            , a.mod_dt = sysdate
            , a.remark = 'UPDATE END DATE'
            where a.del_if=0
            and a.pk = l_auto_pk;
            
     else 
          
         insert into thr_att_time_auto (pk, thr_emp_pk, emp_id, tco_org_pk, pos_type, job_type
            , start_dt, end_dt, reason, description, sequence_dt
            , del_if, crt_by, crt_dt)
        select  thr_att_time_auto_seq.nextval, a.pk, a.emp_id, a.tco_org_pk, a.pos_type, a.job_type
        , hr_f_work_date(p_start_dt), hr_f_work_date(p_end_dt), p_reason, p_description, p_sequence_dt
        , 0, p_crt_by, sysdate
        from thr_employee a
        where a.del_if=0
        and upper(a.emp_id) = upper(p_emp_id)
        and not exists (select 1 from thr_att_time_auto b 
                        where b.del_if=0 
                        and b.thr_emp_pk = a.pk
                        and b.start_dt = p_start_dt);
     
     end if;
   
     
        
        
     

   p_rtn_value := '1';
exception
   when others
   then
      p_rtn_value := '-1';
end;
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI00400_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI00400_0(
   p_tco_org_pk         VARCHAR,
   p_wg_pk              varchar,
   p_search_emp         VARCHAR,
   p_from_date          varchar,
   p_to_date            varchar,
   p_nation             varchar,  
   p_lang               varchar,
   p_rtn_value         OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2007   Ho Thi Thu Hien       1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
            OPEN l_rtn_cur FOR
            select  to_char(to_date(p_from_date,'yyyymmdd'),'dd/mm/yyyy') ,
                    to_char(to_date(p_to_date,'yyyymmdd'),'dd/mm/yyyy') ,
                    decode(p_lang,'ENG',C.WORKGROUP_NM,C.WORKGROUP_FNM) as workgroup ,
                    a.emp_id ,
                    a.full_name ,
                    to_char(to_date(A.JOIN_DT ,'yyyymmdd'),'dd/mm/yyyy') ,
                    to_char(to_date(B.WORK_DT ,'yyyymmdd'),'dd/mm/yyyy') ,                    
                    b.hol_type,
                    b.THR_WS_PK || '-'|| D.START_TIME || '-' || D.END_TIME ,
                   (select decode(p_lang,'ENG',code_nm,code_fnm) from vhr_hr_code where id = 'HR0056' and code = B.SALARY_TYPE) salary_type
           
            from thr_employee a, THR_WG_SCH_DETAIL b,thr_work_group c, thr_work_shift d
            
            where a.del_if=0 and b.del_if=0 and C.DEL_IF = 0 and D.DEL_IF = 0 
            and b.thr_WG_pk=c.pk
            and a.pk=b.THR_EMP_PK
            and B.THR_WS_PK = D.PK
            and b.WORK_DT between p_from_date and p_to_date
            and (a.status='A' or a.left_dt > b.work_dt)
            AND p_nation = decode(p_nation,p_nation,'ALL',A.NATION)
            and b.work_dt >= a.JOIN_DT
            AND (p_search_emp IS NULL
                OR UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_search_emp)|| '%'
                OR UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_search_emp)|| '%'
                OR UPPER(A.OLD_ID) LIKE  '%' || UPPER(p_search_emp)|| '%' )  
            AND (a.tco_org_pk IN (SELECT g.pk
                                    FROM tco_org g
                                   WHERE g.del_if = 0
                                  START WITH g.pk =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_tco_org_pk = 'ALL')
          and  decode(p_wg_pk,'ALL','ALL',c.pk)=p_wg_pk       
          order by nvl(c.seq,999999),emp_id,work_dt;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
 
 
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI00400_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI00400_1(
   p_tco_org_pk         VARCHAR,
   p_wg_pk              varchar,
   p_search_emp         VARCHAR,
   p_from_date          varchar,
   p_to_date            varchar,
   p_nation             varchar,  
   p_lang               varchar,
   p_rtn_value         OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2007   Ho Thi Thu Hien       1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
            OPEN l_rtn_cur FOR
            select  to_char(to_date(p_from_date,'yyyymmdd'),'dd/mm/yyyy') ,
                    to_char(to_date(p_to_date,'yyyymmdd'),'dd/mm/yyyy') ,
                    decode(p_lang,'ENG',C.WORKGROUP_NM,C.WORKGROUP_FNM) as workgroup ,
                    a.emp_id ,
                    a.full_name ,
                    to_char(to_date(A.JOIN_DT ,'yyyymmdd'),'dd/mm/yyyy') ,
                    to_char(to_date(B.WORK_DT ,'yyyymmdd'),'dd/mm/yyyy') ,                    
                    decode(b.hol_type,'SUN','Sunday','HOL','Holiday',''),
                    b.THR_WS_PK || '-'|| D.START_TIME || '-' || D.END_TIME ,
                   (select decode(p_lang,'ENG',code_nm,code_fnm) from vhr_hr_code where id = 'HR0056' and code = B.SALARY_TYPE) salary_type
           
            from thr_employee a, THR_WG_SCH_DETAIL b,thr_work_group c, thr_work_shift d
            
            where a.del_if=0 and b.del_if=0 and C.DEL_IF = 0 and D.DEL_IF = 0 
            and b.thr_WG_pk=c.pk
            and a.pk=b.THR_EMP_PK
            and B.THR_WS_PK = D.PK
            and b.WORK_DT between p_from_date and p_to_date
            and (a.status='A' or a.left_dt > b.work_dt)
            AND p_nation = decode(p_nation,'ALL',p_nation,A.NATION)
            and b.work_dt >= a.JOIN_DT
            AND (p_search_emp IS NULL
                OR UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_search_emp)|| '%'
                OR UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_search_emp)|| '%'
                OR UPPER(A.OLD_ID) LIKE  '%' || UPPER(p_search_emp)|| '%' )  
            AND (a.tco_org_pk IN (SELECT g.pk
                                    FROM tco_org g
                                   WHERE g.del_if = 0
                                  START WITH g.pk =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_tco_org_pk = 'ALL')
          and  decode(p_wg_pk,'ALL','ALL',c.pk)=p_wg_pk       
          order by nvl(c.seq,999999),emp_id,work_dt;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
 
 
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI00400_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI00400_2(
    p_tco_org_pk            VARCHAR2,
    p_thr_wg_pk             VARCHAR2,
    p_work_mon              VARCHAR2,
    p_from                  varchar2,
    p_to                    varchar2,
    P_SEARCH_TEMP           VARCHAR2,
    p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
   TYPE Char_Array IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
    p_c Char_Array;
    tmp         number;
    
BEGIN

FOR d IN 1..31 LOOP
if to_number(substr(p_from,-2))+d-1>31 then
        tmp:=to_number(substr(p_from,-2))+d-1-31;
        if tmp<10 then
            p_c(d):=substr(p_to,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_to,1,6)||tmp;
        end if;
    else
        tmp:=to_number(substr(p_from,-2))+d-1;
        if tmp<10 then
            p_c(d):=substr(p_from,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_from,1,6)||tmp;
        end if;    
    end if;    
END LOOP;    


   OPEN l_rtn_cur FOR
      SELECT    to_char(to_date(p_from,'yyyymmdd'),'dd/mm/yyyy'),
                to_char(to_date(p_to,'yyyymmdd'),'dd/mm/yyyy'),
                HR.EMP_ID,
                HR.FULL_NAME,
                HR.T2,
                HR.T3,
                HR.T4,
                HR.T5,
                DECODE(HR.D1,0,NULL,HR.D1),
                DECODE(HR.D2,0,NULL,HR.D2),
                DECODE(HR.D3,0,NULL,HR.D3),
                DECODE(HR.D4,0,NULL,HR.D4),
                DECODE(HR.D5,0,NULL,HR.D5),
                DECODE(HR.D6,0,NULL,HR.D6),
                DECODE(HR.D7,0,NULL,HR.D7),
                DECODE(HR.D8,0,NULL,HR.D8),
                DECODE(HR.D9,0,NULL,HR.D9),
                DECODE(HR.D10,0,NULL,HR.D10),
                DECODE(HR.D11,0,NULL,HR.D11),
                DECODE(HR.D12,0,NULL,HR.D12),
                DECODE(HR.D13,0,NULL,HR.D13),
                DECODE(HR.D14,0,NULL,HR.D14),
                DECODE(HR.D15,0,NULL,HR.D15),
                DECODE(HR.D16,0,NULL,HR.D16),
                DECODE(HR.D17,0,NULL,HR.D17),
                DECODE(HR.D18,0,NULL,HR.D18),
                DECODE(HR.D19,0,NULL,HR.D19),
                DECODE(HR.D20,0,NULL,HR.D20),
                DECODE(HR.D21,0,NULL,HR.D21),
                DECODE(HR.D22,0,NULL,HR.D22),
                DECODE(HR.D23,0,NULL,HR.D23),
                DECODE(HR.D24,0,NULL,HR.D24),
                DECODE(HR.D25,0,NULL,HR.D25),
                DECODE(HR.D26,0,NULL,HR.D26),
                DECODE(HR.D27,0,NULL,HR.D27),
                DECODE(HR.D28,0,NULL,HR.D28),
                DECODE(HR.D29,0,NULL,HR.D29),
                DECODE(HR.D30,0,NULL,HR.D30),
                DECODE(HR.D31,0,NULL,HR.D31),
                HR.DT1,
                HR.DT2,
                HR.DT3,
                HR.DT4,
                HR.DT5,
                HR.DT6,
                HR.DT7,
                HR.DT8,
                HR.DT9,
                HR.DT10,
                HR.DT11,
                HR.DT12,
                HR.DT13,
                HR.DT14,
                HR.DT15,
                HR.DT16,
                HR.DT17,
                HR.DT18,
                HR.DT19,
                HR.DT20,
                HR.DT21,
                HR.DT22,
                HR.DT23,
                HR.DT24,
                HR.DT25,
                HR.DT26,
                HR.DT27,
                HR.DT28,
                HR.DT29,
                HR.DT30,
                HR.DT31
FROM
(
SELECT          C.EMP_ID EMP_ID,
                C.FULL_NAME FULL_NAME,
                D.ORG_NM T2,
                E.WORKGROUP_NM T3,
                to_char(to_date(MAX(C.JOIN_DT),'yyyymmdd'),'dd/mm/yyyy') T4,
                to_char(to_date(MAX(C.LEFT_DT),'yyyymmdd'),'dd/mm//yyyy') T5
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(1),B.SHIFT, 0), 0)) D1
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(2),B.SHIFT, 0), 0)) D2
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(3),B.SHIFT, 0), 0)) D3
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(4),B.SHIFT, 0), 0)) D4
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(5),B.SHIFT, 0), 0)) D5
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(6),B.SHIFT, 0), 0)) D6
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(7),B.SHIFT, 0), 0)) D7
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(8),B.SHIFT, 0), 0)) D8
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(9),B.SHIFT, 0), 0)) D9
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(10),B.SHIFT, 0), 0)) D10
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(11),B.SHIFT, 0), 0)) D11
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(12),B.SHIFT, 0), 0)) D12
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(13),B.SHIFT, 0), 0)) D13
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(14),B.SHIFT, 0), 0)) D14
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(15),B.SHIFT, 0), 0)) D15
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(16),B.SHIFT, 0), 0)) D16
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(17),B.SHIFT, 0), 0)) D17
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(18),B.SHIFT, 0), 0)) D18
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(19),B.SHIFT, 0), 0)) D19
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(20),B.SHIFT, 0), 0)) D20
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(21),B.SHIFT, 0), 0)) D21
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(22),B.SHIFT, 0), 0)) D22
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(23),B.SHIFT, 0), 0)) D23
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(24),B.SHIFT, 0), 0)) D24
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(25),B.SHIFT, 0), 0)) D25
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(26),B.SHIFT, 0), 0)) D26
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(27),B.SHIFT, 0), 0)) D27
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(28),B.SHIFT, 0), 0)) D28
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(29),B.SHIFT, 0), 0)) D29
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(30),B.SHIFT, 0), 0)) D30
                ,SUM(NVL(DECODE(A.WORK_DT,p_c(31),B.SHIFT, 0), 0)) D31
                
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(1),F.D1_TYPE,''),'')) DT1
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(2),F.D2_TYPE,''),'')) DT2
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(3),F.D3_TYPE,''),'')) DT3
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(4),F.D4_TYPE,''),'')) DT4
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(5),F.D5_TYPE,''),'')) DT5
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(6),F.D6_TYPE,''),'')) DT6
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(7),F.D7_TYPE,''),'')) DT7
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(8),F.D8_TYPE,''),'')) DT8
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(9),F.D9_TYPE,''),'')) DT9
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(10),F.D10_TYPE,''),'')) DT10
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(11),F.D11_TYPE,''),'')) DT11
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(12),F.D12_TYPE,''),'')) DT12
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(13),F.D13_TYPE,''),'')) DT13
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(14),F.D14_TYPE,''),'')) DT14
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(15),F.D15_TYPE,''),'')) DT15
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(16),F.D16_TYPE,''),'')) DT16
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(17),F.D17_TYPE,''),'')) DT17
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(18),F.D18_TYPE,''),'')) DT18
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(19),F.D19_TYPE,''),'')) DT19
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(20),F.D20_TYPE,''),'')) DT20
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(21),F.D21_TYPE,''),'')) DT21
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(22),F.D22_TYPE,''),'')) DT22
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(23),F.D23_TYPE,''),'')) DT23
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(24),F.D24_TYPE,''),'')) DT24
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(25),F.D25_TYPE,''),'')) DT25
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(26),F.D26_TYPE,''),'')) DT26
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(27),F.D27_TYPE,''),'')) DT27
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(28),F.D28_TYPE,''),'')) DT28 
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(29),F.D29_TYPE,''),'')) DT29
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(30),F.D30_TYPE,''),'')) DT30
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(31),F.D31_TYPE,''),'')) DT31
    FROM THR_WG_SCH_DETAIL a,THR_WORK_SHIFT b,THR_EMPLOYEE C,TCO_ORG D,THR_WORK_GROUP E, thr_work_month f
    WHERE a.DEL_IF=0 AND b.del_if=0 AND C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0 and F.DEL_IF(+) = 0
        AND F.THR_EMP_PK(+) = C.PK
        AND A.THR_EMP_PK=C.PK 
        AND C.THR_WG_PK=E.PK 
        AND C.TCO_ORG_PK=D.PK
        AND A.THR_WS_PK=b.pk
        AND a.WORK_DT BETWEEN p_from and p_to
        AND C.JOIN_DT<=A.WORK_DT
        AND (C.LEFT_DT IS NULL OR C.LEFT_DT>A.WORK_DT)
        AND F.WORK_MON(+) = p_work_mon
        AND (   C.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =DECODE (P_TCO_ORG_PK,'ALL', 0,P_TCO_ORG_PK)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
        AND (P_SEARCH_TEMP IS NULL
            OR UPPER(C.FULL_NAME) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
            OR UPPER(C.EMP_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
            OR UPPER(C.OLD_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%' )                
        GROUP BY  A.THR_EMP_PK,C.EMP_ID,C.FULL_NAME,D.ORG_NM,E.WORKGROUP_NM )HR;


   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI00500_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI00500_1
                                (
                                   p_work_mon varchar2,
                                   p_from varchar2,
                                   p_to varchar2,
                                   p_imp_seq varchar2,
                                   p_rtn_value    out  sys_refcursor
                                ) IS
  l_rtn_cur   sys_refcursor;
   TYPE Char_Array IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
    p_c Char_Array;
    tmp         number;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN

     FOR d IN 1..31 LOOP
if to_number(substr(p_from,-2))+d-1>31 then
        tmp:=to_number(substr(p_from,-2))+d-1-31;
        if tmp<10 then
            p_c(d):=substr(p_to,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_to,1,6)||tmp;
        end if;
    else
        tmp:=to_number(substr(p_from,-2))+d-1;
        if tmp<10 then
            p_c(d):=substr(p_from,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_from,1,6)||tmp;
        end if;    
    end if;    
END LOOP;    


   OPEN l_rtn_cur FOR
   
      SELECT to_char(to_date(p_work_mon, 'YYYYMM'),'MM/YYYY'), MAN_1.FULL_NAME, MAN_1.EMP_ID
     ,(CASE WHEN MAN_1.H1='0' THEN  DECODE(MAN_1.D1,'0',NULL,MAN_1.D1) ELSE  DECODE(MAN_1.D1,'0',NULL,MAN_1.D1) END)
    ,(CASE WHEN MAN_1.H2='0' THEN  DECODE(MAN_1.D2,'0',NULL,MAN_1.D2) ELSE  DECODE(MAN_1.D2,'0',NULL,MAN_1.D2) END)
    ,(CASE WHEN MAN_1.H3='0' THEN  DECODE(MAN_1.D3,'0',NULL,MAN_1.D3) ELSE  DECODE(MAN_1.D3,'0',NULL,MAN_1.D3) END)
    ,(CASE WHEN MAN_1.H4='0' THEN  DECODE(MAN_1.D4,'0',NULL,MAN_1.D4) ELSE  DECODE(MAN_1.D4,'0',NULL,MAN_1.D4) END)
     ,(CASE WHEN MAN_1.H5='0' THEN  DECODE(MAN_1.D5,'0',NULL,MAN_1.D5)   ELSE  DECODE(MAN_1.D5,'0',NULL,MAN_1.D5) END)
     ,(CASE WHEN MAN_1.H6='0' THEN  DECODE(MAN_1.D6,'0',NULL,MAN_1.D6) ELSE  DECODE(MAN_1.D6,'0',NULL,MAN_1.D6) END)
     ,(CASE WHEN MAN_1.H7='0' THEN  DECODE(MAN_1.D7,'0',NULL,MAN_1.D7) ELSE  DECODE(MAN_1.D7,'0',NULL,MAN_1.D7) END)
      ,(CASE WHEN MAN_1.H8='0' THEN  DECODE(MAN_1.D8,'0',NULL,MAN_1.D8)   ELSE  DECODE(MAN_1.D8,'0',NULL,MAN_1.D8) END)
     ,(CASE WHEN MAN_1.H9='0' THEN  DECODE(MAN_1.D9,'0',NULL,MAN_1.D9) ELSE  DECODE(MAN_1.D9,'0',NULL,MAN_1.D9) END)
     ,(CASE WHEN MAN_1.H10='0' THEN  DECODE(MAN_1.D10,'0',NULL,MAN_1.D10) ELSE  DECODE(MAN_1.D10,'0',NULL,MAN_1.D10) END)
     ,(CASE WHEN MAN_1.H11='0' THEN  DECODE(MAN_1.D11,'0',NULL,MAN_1.D11) ELSE  DECODE(MAN_1.D11,'0',NULL,MAN_1.D11) END)
     ,(CASE WHEN MAN_1.H12='0' THEN  DECODE(MAN_1.D12,'0',NULL,MAN_1.D12) ELSE  DECODE(MAN_1.D12,'0',NULL,MAN_1.D12) END)
     ,(CASE WHEN MAN_1.H13='0' THEN  DECODE(MAN_1.D13,'0',NULL,MAN_1.D13) ELSE  DECODE(MAN_1.D13,'0',NULL,MAN_1.D13) END)
     ,(CASE WHEN MAN_1.H14='0' THEN  DECODE(MAN_1.D14,'0',NULL,MAN_1.D14) ELSE  DECODE(MAN_1.D14,'0',NULL,MAN_1.D14) END)
     ,(CASE WHEN MAN_1.H15='0' THEN  DECODE(MAN_1.D15,'0',NULL,MAN_1.D15) ELSE  DECODE(MAN_1.D15,'0',NULL,MAN_1.D15) END)
     ,(CASE WHEN MAN_1.H16='0' THEN  DECODE(MAN_1.D16,'0',NULL,MAN_1.D16) ELSE  DECODE(MAN_1.D16,'0',NULL,MAN_1.D16) END)
     ,(CASE WHEN MAN_1.H17='0' THEN  DECODE(MAN_1.D17,'0',NULL,MAN_1.D17) ELSE  DECODE(MAN_1.D17,'0',NULL,MAN_1.D17) END)
     ,(CASE WHEN MAN_1.H18='0' THEN  DECODE(MAN_1.D18,'0',NULL,MAN_1.D18) ELSE  DECODE(MAN_1.D18,'0',NULL,MAN_1.D18) END)
     ,(CASE WHEN MAN_1.H19='0' THEN  DECODE(MAN_1.D19,'0',NULL,MAN_1.D19) ELSE  DECODE(MAN_1.D19,'0',NULL,MAN_1.D19) END)
     ,(CASE WHEN MAN_1.H20='0' THEN  DECODE(MAN_1.D20,'0',NULL,MAN_1.D20) ELSE  DECODE(MAN_1.D20,'0',NULL,MAN_1.D20) END)
     ,(CASE WHEN MAN_1.H21='0' THEN  DECODE(MAN_1.D21,'0',NULL,MAN_1.D21) ELSE  DECODE(MAN_1.D21,'0',NULL,MAN_1.D21) END)
     ,(CASE WHEN MAN_1.H22='0' THEN  DECODE(MAN_1.D22,'0',NULL,MAN_1.D22) ELSE  DECODE(MAN_1.D22,'0',NULL,MAN_1.D22) END)
     ,(CASE WHEN MAN_1.H23='0' THEN  DECODE(MAN_1.D23,'0',NULL,MAN_1.D23) ELSE  DECODE(MAN_1.D23,'0',NULL,MAN_1.D23) END)
     ,(CASE WHEN MAN_1.H24='0' THEN  DECODE(MAN_1.D24,'0',NULL,MAN_1.D24) ELSE  DECODE(MAN_1.D24,'0',NULL,MAN_1.D24) END)
     ,(CASE WHEN MAN_1.H25='0' THEN  DECODE(MAN_1.D25,'0',NULL,MAN_1.D25) ELSE  DECODE(MAN_1.D25,'0',NULL,MAN_1.D25) END)
    ,(CASE WHEN MAN_1.H26='0' THEN  DECODE(MAN_1.D26,'0',NULL,MAN_1.D26) ELSE  DECODE(MAN_1.D26,'0',NULL,MAN_1.D26) END)
     ,(CASE WHEN MAN_1.H27='0' THEN  DECODE(MAN_1.D27,'0',NULL,MAN_1.D27) ELSE  DECODE(MAN_1.D27,'0',NULL,MAN_1.D27) END)
    ,(CASE WHEN MAN_1.H28='0' THEN  DECODE(MAN_1.D28,'0',NULL,MAN_1.D28) ELSE  DECODE(MAN_1.D28,'0',NULL,MAN_1.D28) END)
    ,(CASE WHEN MAN_1.H29='0' THEN  DECODE(MAN_1.D29,'0',NULL,MAN_1.D29) ELSE  DECODE(MAN_1.D29,'0',NULL,MAN_1.D29) END)
    ,(CASE WHEN MAN_1.H30='0' THEN  DECODE(MAN_1.D30,'0',NULL,MAN_1.D30) ELSE  DECODE(MAN_1.D30,'0',NULL,MAN_1.D30) END)
    ,(CASE WHEN MAN_1.H31='0' THEN  DECODE(MAN_1.D31,'0',NULL,MAN_1.D31) ELSE  DECODE(MAN_1.D31,'0',NULL,MAN_1.D31) END)
FROM
(SELECT C.FULL_NAME FULL_NAME, C.EMP_ID EMP_ID
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(1),B.SHIFT, '0'), '0')) D1
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(2),B.SHIFT, '0'), '0')) D2
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(3),B.SHIFT, '0'), '0')) D3
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(4),B.SHIFT, '0'), '0')) D4
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(5),B.SHIFT, '0'), '0')) D5
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(6),B.SHIFT, '0'), '0')) D6
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(7),B.SHIFT, '0'), '0')) D7
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(8),B.SHIFT, '0'), '0')) D8
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(9),B.SHIFT, '0'), '0')) D9
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(10),B.SHIFT, '0'), '0')) D10
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(11),B.SHIFT, '0'), '0')) D11
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(12),B.SHIFT, '0'), '0')) D12
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(13),B.SHIFT, '0'), '0')) D13
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(14),B.SHIFT, '0'), '0')) D14
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(15),B.SHIFT, '0'), '0')) D15
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(16),B.SHIFT, '0'), '0')) D16
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(17),B.SHIFT, '0'), '0')) D17
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(18),B.SHIFT, '0'), '0')) D18
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(19),B.SHIFT, '0'), '0')) D19
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(20),B.SHIFT, '0'), '0')) D20
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(21),B.SHIFT, '0'), '0')) D21
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(22),B.SHIFT, '0'), '0')) D22
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(23),B.SHIFT, '0'), '0')) D23
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(24),B.SHIFT, '0'), '0')) D24
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(25),B.SHIFT, '0'), '0')) D25
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(26),B.SHIFT, '0'), '0')) D26
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(27),B.SHIFT, '0'), '0')) D27
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(28),B.SHIFT, '0'), '0')) D28
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(29),B.SHIFT, '0'), '0')) D29
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(30),B.SHIFT, '0'), '0')) D30
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(31),B.SHIFT, '0'), '0')) D31
   ,MAX(NVL(DECODE(A.WORK_DT,p_c(1),NVL(A.HOL_TYPE,'0'), '0'), '0')) H1
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(2),NVL(A.HOL_TYPE,'0'), '0'), '0')) H2
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(3),NVL(A.HOL_TYPE,'0'), '0'), '0')) H3
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(4),NVL(A.HOL_TYPE,'0'), '0'), '0')) H4
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(5),NVL(A.HOL_TYPE,'0'), '0'), '0')) H5
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(6),NVL(A.HOL_TYPE,'0'), '0'), '0')) H6
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(7),NVL(A.HOL_TYPE,'0'), '0'), '0')) H7
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(8),NVL(A.HOL_TYPE,'0'), '0'), '0')) H8
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(9),NVL(A.HOL_TYPE,'0'), '0'), '0')) H9
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(10),NVL(A.HOL_TYPE,'0'), '0'), '0')) H10
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(11),NVL(A.HOL_TYPE,'0'), '0'), '0')) H11
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(12),NVL(A.HOL_TYPE,'0'), '0'), '0')) H12
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(13),NVL(A.HOL_TYPE,'0'), '0'), '0')) H13
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(14),NVL(A.HOL_TYPE,'0'), '0'), '0')) H14
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(15),NVL(A.HOL_TYPE,'0'), '0'), '0')) H15
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(16),NVL(A.HOL_TYPE,'0'), '0'), '0')) H16
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(17),NVL(A.HOL_TYPE,'0'), '0'), '0')) H17
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(18),NVL(A.HOL_TYPE,'0'), '0'), '0')) H18
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(19),NVL(A.HOL_TYPE,'0'), '0'), '0')) H19
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(20),NVL(A.HOL_TYPE,'0'), '0'), '0')) H20
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(21),NVL(A.HOL_TYPE,'0'), '0'), '0')) H21
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(22),NVL(A.HOL_TYPE,'0'), '0'), '0')) H22
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(23),NVL(A.HOL_TYPE,'0'), '0'), '0')) H23
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(24),NVL(A.HOL_TYPE,'0'), '0'), '0')) H24
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(25),NVL(A.HOL_TYPE,'0'), '0'), '0')) H25
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(26),NVL(A.HOL_TYPE,'0'), '0'), '0')) H26
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(27),NVL(A.HOL_TYPE,'0'), '0'), '0')) H27
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(28),NVL(A.HOL_TYPE,'0'), '0'), '0')) H28
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(29),NVL(A.HOL_TYPE,'0'), '0'), '0')) H29
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(30),NVL(A.HOL_TYPE,'0'), '0'), '0')) H30
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(31),NVL(A.HOL_TYPE,'0'), '0'), '0')) H31
    FROM THR_WG_SCH_DETAIL a,THR_WORK_SHIFT b,THR_EMPLOYEE C,TCO_ORG D,THR_WORK_GROUP E
    WHERE a.DEL_IF=0 AND b.del_if=0 AND C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0
        AND A.THR_EMP_PK=C.PK AND C.THR_WG_PK=E.PK AND C.TCO_ORG_PK=D.PK
        AND A.THR_WS_PK=b.pk
        AND A.IMPORT_SEQ=p_imp_seq              
        GROUP BY C.FULL_NAME, C.EMP_ID)MAN_1;

       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ST_HR_RPT_HRTI00500_1;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI00800_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI00800_1 (
    p_tco_org_pk            varchar,
    p_input                 varchar,
    p_nation                varchar,
    p_status                varchar,
    p_wg                    varchar,
    p_from                  varchar,
    p_to                    varchar,
    p_val                   varchar,
    p_opt                   varchar,
    p_wt_ot                 varchar,
    p_lang                  varchar,
    
    p_rtn_value     out     sys_refcursor
 )
 IS
    l_rtn_cur   sys_refcursor;
 BEGIN
        open l_rtn_cur for
        SELECT   to_char(to_date(p_from,'yyyymmdd'),'dd/mm/yyyy')
                ,to_char(to_date(p_to,'yyyymmdd'),'dd/mm/yyyy')
                ,FIN.org_NM,fin.workgroup_nm,FIN.EMP_ID
                ,to_char(to_date(FIN.JOIN_DT,'yyyymmdd'),'dd/mm/yyyy')
                ,FIN.FULL_NAME,FIN.WT
                ,NULLIF(FIN.OT,0),NULLIF(FIN.NT,0),NULLIF(FIN.ONT,0),NULLIF(FIN.ST,0),NULLIF(FIN.HT,0)
                ,NULLIF(FIN.WT_OT,0),NULLIF(FIN.OT_HT,0),NULLIF(FIN.N_OT,0)
        FROM(
              SELECT B.org_NM AS org_NM,wg.workgroup_nm as workgroup_nm,A.EMP_ID AS EMP_ID,A.JOIN_DT AS JOIN_DT
            ,A.FULL_NAME AS FULL_NAME,NVL(TM.WT,0) AS WT
            ,NVL(OVT.OT,0) AS OT
            ,NVL(OVT.NT,0) AS NT
            ,NVL(OVT.ONT,0) AS ONT
            ,NVL(OVT.ST,0) AS ST
            ,NVL(OVT.HT,0) AS HT
            ,NVL(TM.WT,0) + NVL(OVT.OT,0) AS WT_OT
            ,NVL(OVT.OT,0)+NVL(OVT.HT,0) AS OT_HT
            ,NVL(OVT.N_OT,0) AS N_OT
            ,A.TCO_ORG_PK AS TCO_ORG_PK
            FROM THR_EMPLOYEE A,tco_org B, thr_work_group wg
            ,(SELECT F.PK AS EMP_PK
                    ,SUM(NVL(M.WT,0)) AS WT
                    FROM THR_WORK_DATE M,THR_EMPLOYEE F
                    WHERE M.DEL_IF=0 AND F.DEL_IF=0 AND F.PK=M.THR_EMP_PK
                    AND DECODE(p_nation,'ALL',p_nation,f.nation ) = p_nation
                    AND DECODE(p_status,'ALL',p_status,f.status ) = p_status
                     AND (    F.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
                        AND (p_input IS NULL 
                             OR  (UPPER(F.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                             OR  (UPPER(F.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                             OR  (UPPER(F.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                        AND M.WORK_DT BETWEEN p_from AND p_to
                    GROUP BY F.PK
                 ) TM
                ,(SELECT F.PK AS EMP_PK
                    ,SUM(DECODE(E.HOL_TYPE,'',NVL(E.OT_XN,0),0)) AS OT
                    ,SUM(DECODE(E.HOL_TYPE,'',NVL(E.NT,0),0)) AS NT
                    ,SUM(DECODE(E.HOL_TYPE,'',NVL(E.ONT , 0),0)) AS ONT
                    ,SUM(DECODE(E.HOL_TYPE,'SUN',E.OT_XN, 0 )) AS ST
                    ,SUM(DECODE(E.HOL_TYPE,'HOL',E.OT_XN, 0 )) AS HT
                    ,(SUM(E.NT)+SUM(E.ONT)) AS N_OT
                    FROM THR_WORK_DATE E,THR_EMPLOYEE F,THR_WORK_SHIFT S
                    WHERE E.DEL_IF=0 AND F.DEL_IF=0 AND S.DEL_IF=0 AND F.PK=E.THR_EMP_PK
                    AND E.THR_WS_PK=S.PK
                    AND DECODE(p_nation,'ALL',p_nation,f.nation ) = p_nation
                    AND DECODE(p_status,'ALL',p_status,f.status ) = p_status
                     AND (    F.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
                        AND (p_input IS NULL 
                             OR  (UPPER(F.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                             OR  (UPPER(F.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                             OR  (UPPER(F.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                        AND E.WORK_DT BETWEEN p_from AND p_to
                    GROUP BY F.PK
                 ) OVT
            WHERE A.DEL_IF=0 AND B.DEL_IF=0
            AND A.tco_org_PK=B.PK
            AND A.PK=OVT.EMP_PK(+)
            AND A.PK=TM.EMP_PK(+)
            AND A.JOIN_DT <= p_to
            and wg.pk=a.thr_wg_pk
            and wg.del_if=0
            AND (A.LEFT_DT>= p_from OR A.LEFT_DT IS NULL)
            AND DECODE(p_nation,'ALL',p_nation,a.nation ) = p_nation
            AND DECODE(p_status,'ALL',p_status,a.status ) = p_status
            AND DECODE(p_wg,'ALL',p_wg,a.thr_wg_pk) = p_wg
            AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
            )FIN
            WHERE ( p_val = '=' and DECODE(p_opt,'1',FIN.WT,'2',FIN.OT,'3',FIN.HT,'4',FIN.WT_OT,'5',FIN.OT_HT)=NVL(p_wt_ot,0)
                        or p_val = '>' and DECODE(p_opt,'1',FIN.WT,'2',FIN.OT,'3',FIN.HT,'4',FIN.WT_OT,'5',FIN.OT_HT)>NVL(p_wt_ot,0)
                        or p_val = '<' and DECODE(p_opt,'1',FIN.WT,'2',FIN.OT,'3',FIN.HT,'4',FIN.WT_OT,'5',FIN.OT_HT)<NVL(p_wt_ot,0)
                        or p_val = '>=' and DECODE(p_opt,'1',FIN.WT,'2',FIN.OT,'3',FIN.HT,'4',FIN.WT_OT,'5',FIN.OT_HT)>=NVL(p_wt_ot,0)
                        or p_val = '<=' and DECODE(p_opt,'1',FIN.WT,'2',FIN.OT,'3',FIN.HT,'4',FIN.WT_OT,'5',FIN.OT_HT)<=NVL(p_wt_ot,0)
                        OR NVL(p_wt_ot,0)=0)
            ORDER BY FIN.org_NM,fin.workgroup_nm,FIN.EMP_ID;
       p_rtn_value :=l_rtn_cur;
        EXCEPTION
           WHEN NO_DATA_FOUND
           THEN
              NULL;
           WHEN OTHERS
           THEN
              -- Consider logging the error and then re-raise
              RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI00800_5;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI00800_5 (
    p_tco_org_pk            varchar,  
    p_input                 varchar,
    p_search_ot             varchar,
    p_nation                varchar,
    p_status                varchar,
    p_wg                    varchar,
    p_ot                    varchar,
    p_year                  varchar,
    p_lang                  varchar,
    
    p_rtn_value     out     sys_refcursor
 )
 IS
    l_rtn_cur   sys_refcursor;
 BEGIN
        open l_rtn_cur for
        
         SELECT p_year,
                to_char(sysdate,'dd/mm/yyyy'),
                 PR_OT.ORG_NM,PR_OT.WGROUP_NM,PR_OT.EMP_ID,PR_OT.FULL_NAME 
                ,TO_CHAR(TO_DATE(PR_OT.JOIN_DT,'YYYYMMDD'),'DD/MM/YYYY') 
--                ,100.5
                ,pr_ot.t1
                ,pr_ot.t2
                ,pr_ot.t3
                ,pr_ot.t4
                ,pr_ot.t5
                ,pr_ot.t6
                ,pr_ot.t7
                ,pr_ot.t8
                ,pr_ot.t9
                ,pr_ot.t10
                ,pr_ot.t11
                ,pr_ot.t12 
                ,PR_OT.T1+PR_OT.T2+PR_OT.T3+PR_OT.T4+PR_OT.T5 
                 +PR_OT.T6+PR_OT.T7+PR_OT.T8+PR_OT.T9+PR_OT.T10+PR_OT.T11+PR_OT.T12 AS TOTAL 
                FROM( 
                SELECT D.ORG_NM AS ORG_NM,B.WORKGROUP_NM AS WGROUP_NM,V.EMP_ID AS EMP_ID,V.FULL_NAME AS FULL_NAME,V.JOIN_DT AS JOIN_DT, V.PK as PK 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'01',NVL(A.OT,0),0)) AS T1 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'02',NVL(A.OT,0),0)) AS T2 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'03',NVL(A.OT,0),0)) AS T3 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'04',NVL(A.OT,0),0)) AS T4 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'05',NVL(A.OT,0),0)) AS T5 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'06',NVL(A.OT,0),0)) AS T6 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'07',NVL(A.OT,0),0)) AS T7 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'08',NVL(A.OT,0),0)) AS T8 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'09',NVL(A.OT,0),0)) AS T9 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'10',NVL(A.OT,0),0)) AS T10 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'11',NVL(A.OT,0),0)) AS T11 
                ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'12',NVL(A.OT,0),0))  AS T12 
                FROM THR_WORK_DATE A,THR_EMPLOYEE V,THR_WORK_GROUP B,tco_org D 
                WHERE A.DEL_IF=0 AND V.DEL_IF=0 AND B.DEL_IF=0 AND D.DEL_IF=0  
                 AND A.THR_EMP_PK=V.PK AND V.THR_WG_PK=B.PK AND V.TCO_ORG_PK=D.PK 
                 AND SUBSTR(A.WORK_DT,1,4)= p_year  
                    AND DECODE( p_nation  ,'ALL',  p_nation ,v.nation) =   p_nation
                    AND DECODE(p_status,'ALL',p_status,v.status ) = p_status 
                 AND DECODE( p_wg  ,'ALL','ALL',B.PK) =  p_wg   
                           AND (    V.TCO_ORG_PK IN ( 
                               SELECT     G.PK 
                                     FROM TCO_ORG G 
                                    WHERE G.DEL_IF = 0           
                               START WITH G.PK = 
                                             DECODE ( p_tco_org_pk , 
                                                     'ALL', 0, 
                                                      p_tco_org_pk  
                                                    ) 
                               CONNECT BY PRIOR G.PK = G.P_PK) 
                         OR  p_tco_org_pk  = 'ALL') 
                       AND ( p_input  IS NULL  
                             OR  (UPPER(V.EMP_ID) LIKE  '%' || UPPER( p_input )|| '%') 
                             OR  (UPPER(V.OLD_ID ) LIKE  '%' || UPPER( p_input )|| '%') 
                             OR  (UPPER(V.FULL_NAME) LIKE  '%' || UPPER( p_input )|| '%')) 
                GROUP BY D.ORG_NM,B.WORKGROUP_NM,V.EMP_ID,V.FULL_NAME,V.JOIN_DT,V.PK  
                HAVING ((SUM(NVL(A.OT,0))>=nvl( p_ot  ,0) AND  p_search_ot  =1) OR (SUM(NVL(A.OT,0)) < nvl( p_ot  ,0) AND  p_search_ot   =2)) 
                ORDER BY d.org_nm,B.WORKGROUP_NM,V.EMP_ID 
                )PR_OT ;
                p_rtn_value := l_rtn_cur;
        EXCEPTION
           WHEN NO_DATA_FOUND
           THEN
              NULL;
           WHEN OTHERS
           THEN
              -- Consider logging the error and then re-raise
              RAISE;
 END;
 
 
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI00900_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI00900_0
                                (
                                   p_tco_org_pk varchar2,
                                   p_wg varchar2,
                                   p_input varchar2,
                                   p_thr_ws_pk varchar2,
                                   p_from varchar2,
                                   p_to varchar2,                                                                      
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;
tmp number;

/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN
    
      open l_rtn_cur for
      SELECT    to_char(to_date(p_from,'yyyymmdd'),'dd/mm/yyyy')
                ,to_char(to_date(p_to,'yyyymmdd'),'dd/mm/yyyy')
                ,E.ORG_NM
                ,V.EMP_ID
                ,V.FULL_NAME
                ,S.DESCRIPTION
                ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY') AS W_DATE
                ,MAX(DECODE(D.HOL_TYPE,'',D.WT,'SUN','','HOL','')) AS WT
                ,MAX(DECODE(D.HOL_TYPE,'',D.WT_RATE,'SUN','','HOL','')) AS WT_RATE
                ,MAX(DECODE(D.HOL_TYPE,'',D.OT,'SUN',D.OT,'HOL',D.OT )) AS OT
                ,MAX(DECODE(D.HOL_TYPE,'',D.OT_RATE,'SUN',D.OT_RATE,'HOL',D.OT_RATE )) AS OT_RATE
                ,MAX(DECODE(D.NT,0,'',D.NT )) AS NT
                ,MAX(DECODE(D.NT,0,'',D.NT_RATE )) AS NT_RATE
                ,MAX(DECODE(D.ONT ,0,'',D.ONT_RATE )) AS ONT
                ,MAX(DECODE(D.ONT,0,'',D.ONT_RATE )) AS ONT_RATE
                ,MAX(DECODE(D.HOL_TYPE,'SUN',D.WT,'',D.OT,'' )) AS ST
                ,MAX(DECODE(D.HOL_TYPE,'SUN',D.OT_RATE,'',D.OT_RATE,'' )) AS ST_RATE
                ,MAX(DECODE(D.HOL_TYPE,'HOL',D.WT,'','','SUN','' )) AS HT
                ,MAX(DECODE(D.HOL_TYPE,'HOL',D.OT_RATE,'' )) AS HT_RATE

                
        FROM THR_WORK_DATE D,THR_EMPLOYEE V,TCO_ORG E,THR_WORK_SHIFT S
          WHERE D.DEL_IF = 0 AND V.DEL_IF=0 AND E.DEL_IF=0 AND S.DEL_IF=0
          AND V.PK=D.THR_EMP_PK 
          AND V.TCO_ORG_PK=E.PK 
          AND D.THR_WS_PK=S.PK
          AND D.WT IS NOT NULL
          AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,D.THR_WS_PK)=p_thr_ws_pk
          AND DECODE(p_wg,'ALL',p_wg,v.thr_wg_pk)=p_wg
          AND (p_input IS NULL 
                 OR  (UPPER(V.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(V.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(V.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
          AND (    v.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
         AND D.WORK_DT BETWEEN p_from AND p_to
     GROUP BY  D.THR_EMP_PK,D.WORK_DT,E.ORG_NM,V.EMP_ID,V.FULL_NAME,S.DESCRIPTION
     ORDER BY V.EMP_ID,E.ORG_NM,D.WORK_DT,D.THR_EMP_PK;
       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI01000_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI01000_0
(
    p_tco_org_pk    varchar2,
    p_input         varchar2,
    p_absence_type  varchar2,
    p_from_date     varchar2,
    p_to_date       varchar2,
    p_rtn_value   out   sys_refcursor
)
IS
    l_rtn_cur   sys_refcursor;
    

BEGIN
  
    OPEN l_rtn_cur FOR
      SELECT   to_char(to_date(p_from_date,'yyyymmdd'),'dd/mm/yyyy'),
               to_char(to_date(p_to_date,'yyyymmdd'),'dd/mm/yyyy'),
               E.ORG_NM,  
               A.EMP_ID,
               A.FULL_NAME,              
               TO_CHAR(TO_DATE(B.ABSENCE_DT ,'YYYYMMDD'), 'DD/MM/YYYY'),
               B.START_TIME,
               B.END_TIME,
               ROUND(B.ABSENCE_TIME,2),
               (SELECT V.CODE_FNM FROM VHR_HR_CODE V WHERE V.ID ='HR0003' AND V.CODE = B.ABSENCE_TYPE),
               B.DESCRIPTION
      FROM THR_EMPLOYEE A,
           THR_ABSENCE B,
           TCO_ORG E
     WHERE     A.DEL_IF = 0
           AND B.DEL_IF = 0
           AND A.PK = B.THR_EMP_PK
           AND E.DEL_IF = 0
           AND E.PK = A.TCO_ORG_PK
           AND DECODE(P_ABSENCE_TYPE, 'ALL', 'ALL', B.ABSENCE_TYPE ) = P_ABSENCE_TYPE
           and B.REG_TYPE = 1
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           AND b.absence_dt between p_from_date and p_to_date
           AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
      ORDER BY 1,2, a.emp_id, a.full_name;
   
p_rtn_value := l_rtn_cur;

   EXCEPTION
     WHEN NO_DATA_FOUND THEN
       NULL;
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI01000_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI01000_1
(
    P_TCO_ORG_PK VARCHAR2,
   P_EMP_ID VARCHAR2,
   P_ABSENCE_TYPE VARCHAR2,
   P_FROM_DATE VARCHAR2,
   P_TO_DATE VARCHAR2,
   P_LANG    VARCHAR2,
   P_RTN_VALUE      OUT   SYS_REFCURSOR
)
IS
    l_rtn_cur   sys_refcursor;
    

BEGIN
    open l_rtn_cur for
        select  to_char(to_date(p_from_date,'yyyymmdd'),'dd/mm/yyyy'),
                to_char(to_date(p_to_date,'yyyymmdd'),'dd/mm/yyyy'),
                C.ORG_NM,
                A.EMP_ID,
                A.FULL_NAME,
                to_char(to_date(P.START_DT,'yyyymmdd'),'dd/mm/yyyy'),
                to_char(to_date(P.END_DT,'yyyymmdd'),'dd/mm/yyyy'),
                (select decode(p_lang,'ENG',H.CODE_NM,H.CODE_FNM ) from vhr_hr_code h where H.ID = 'HR0003' and h.code =  P.ABSENCE_TYPE),
                P.DESCRIPTION
--                ,P.SEQUENCE_DT
        FROM    THR_ABSENCE_REG P,
                THR_EMPLOYEE A, 
                TCO_ORG C
        WHERE P.DEL_IF = 0
            AND P.THR_EMP_PK = A.PK
            AND P.START_DT between NVL(P_FROM_DATE,'1') and NVL(P_TO_DATE,'99999999')
            AND DECODE(P_ABSENCE_TYPE, 'ALL', 'ALL', P.ABSENCE_TYPE ) = P_ABSENCE_TYPE
            AND A.DEL_IF=0 AND C.DEL_IF=0
            AND A.TCO_ORG_PK = C.PK
            AND (P_EMP_ID IS NULL 
                OR UPPER(A.EMP_ID) LIKE '%'|| UPPER(P_EMP_ID) ||'%'
                OR UPPER(A.FULL_NAME) LIKE '%'|| UPPER(P_EMP_ID) ||'%')
            AND ( A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
        ORDER BY  P.START_DT DESC, C.ORG_ID, A.EMP_ID;
   
    p_rtn_value := l_rtn_cur;
    EXCEPTION
     WHEN NO_DATA_FOUND THEN
       NULL;
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI01100_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI01100_0(
   
   P_TCO_ORG_PK         VARCHAR,
   P_EMP_ID             VARCHAR,
   P_WG                 VARCHAR,
   P_STATUS             VARCHAR,
   P_FROM_DATE          VARCHAR,
   P_TO_DATE            VARCHAR,
   P_ABSENCE_TYPE       VARCHAR,
   P_ABSENCE_KIND       VARCHAR,
   P_RTN_VALUE      OUT   SYS_REFCURSOR
)
IS

   L_RTN_CUR   SYS_REFCURSOR;
BEGIN
   OPEN L_RTN_CUR FOR
        select to_char(to_date(P_FROM_DATE, 'yyyymmdd'), 'dd/mm/yyyy'),
                   to_char(to_date(P_TO_DATE, 'yyyymmdd'), 'dd/mm/yyyy'),
                   c.org_nm,
                   a.emp_id,
                   a.full_name,
                   to_char(to_date(d.absence_dt, 'yyyymmdd'), 'dd/mm/yyyy'),
                   (select v.code_nm from vhr_hr_code v where v.id='HR0003' and v.code = d.absence_type),
                   d.start_time,
                   d.end_time,
                   d.absence_time,
                   decode(d.reg_type, 1, 'Short term', 'Long term'),
                   d.description
            from thr_employee a, 
                 tco_org c,
                 thr_absence d
            where d.del_if = 0 and a.del_if=0 and c.del_if=0
              and d.thr_emp_pk = a.pk
              and d.absence_dt between nvl(p_from_date,'1') and nvl(p_to_date,'99999999')
              and (d.absence_type = p_absence_type or p_absence_type = 'ALL')
              and decode(p_status,'ALL','ALL',a.status)=p_status
              and decode(p_absence_kind,'ALL','ALL', d.reg_type) = p_absence_kind
              and decode (p_wg, 'ALL', p_wg, a.thr_wg_pk) = p_wg
              and a.tco_org_pk = c.pk
              and (p_emp_id is null 
                   or upper(a.emp_id) like '%'|| upper(p_emp_id) ||'%'
                   or upper(a.full_name) like '%'|| upper(p_emp_id) ||'%')
              and ( a.tco_org_pk in (
                                      select     g.pk
                                            from tco_org g
                                           where g.del_if = 0
                                      start with g.pk =
                                                    decode (p_tco_org_pk,
                                                            'ALL', 0,
                                                            p_tco_org_pk
                                                           )
                                      connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk = 'ALL')
            order by d.absence_dt, c.org_id, a.emp_id;
 
 P_RTN_VALUE := L_RTN_CUR;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI01200_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI01200_0(
        p_tco_org_pk            varchar2,
        p_thr_group_pk          varchar2,
        p_status                varchar2,
        p_lday                  varchar2,
        p_ale                   varchar2,
        p_month                 varchar2,
        p_input                 varchar2,
        p_nation                varchar2,
        p_from                  varchar2,
        p_to                    varchar2,
        p_sql                   number,
        p_rtn_value    out      sys_refcursor
)   IS
    l_rtn_cur   sys_refcursor;
BEGIN
    IF p_sql = 1 THEN
        OPEN l_rtn_cur FOR  
            SELECT    
                   al.dept_nm, al.group_nm, al.emp_id, al.full_nm, 
                   TO_CHAR (TO_DATE (al.join_date, 'YYYYMMDD'), 'DD/MM/YYYY') 
                   ,nvl(al.total_unpay,0) as ale_last_year 
                   ,nvl(al.annual_leave_days_in_year,0) 
                   ,nvl(al.ale_plus,0) 
                   ,case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)>  p_month  then  
                        HR_F_CAL_ALE( p_month ,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                    else    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) end   AS al_real 
                        ,nvl(yearsum,0) AS used
                         
                   ,case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)> p_month  then  
                        HR_F_CAL_ALE( p_month ,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                    else    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk)  end   
                        - NVL(yearsum,0)+nvl(al.total_unpay,0)  AS UNUSED
                         
                   ,case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)> SUBSTR( p_month ,1,4)||'12' then  
                        HR_F_CAL_ALE(SUBSTR( p_month ,1,4)||'12',AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                    else    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                        end - NVL(yearsum,0)+nvl(al.total_unpay,0) AS unused_in_yeaar 
                   ,0 as pay 
                   ,case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)> p_month  then  
                        HR_F_CAL_ALE( p_month ,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                    else    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                        end   - NVL(yearsum,0)+nvl(al.total_unpay,0) AS UNPAY,
                                        
                   decode(mon01,null,0,mon01), decode(mon02,null,0,mon02), 
                   decode(mon03,null,0,mon03), decode(mon04,null,0,mon04), 
                   decode(mon05,null,0,mon05), decode(mon06,null,0,mon06), 
                   decode(mon07,null,0,mon07), decode(mon08,null,0,mon08), 
                   decode(mon09,null,0,mon09), decode(mon10,null,0,mon10), 
                   decode(mon11,null,0,mon11), decode(mon12,null,0,mon12) ,to_char(sysdate,'dd/mm/YYYY') 
                           
                   FROM 
                   (SELECT b.pk AS group_pk, b.workgroup_nm AS group_nm, 
                           a.emp_id AS emp_id, a.full_name AS full_nm, 
                           a.ale_day_in_year AS annual_leave_days_in_year, a.ale_plus as ale_plus 
                           ,a.join_dt AS join_date, a.pk AS emp_pk 
                           ,c.UNUSED as ale_unused 
                           ,c.ale_pay as ale_pay,a.al_pay_yn as al_pay_yn,c.total_unpay as total_unpay 
                           ,decode(nvl(a.AL_PAY_YN,'N'),'Y','-1','0') as pay 
                           ,a.LEFT_DT,d.org_nm as dept_nm 
                    FROM thr_employee a, thr_work_group b,thr_annual_leave c,tco_org d 
                    WHERE a.del_if = 0 and (a.LEFT_DT is null or substr(nvl(a.LEFT_DT,'30001010'),1,4) >= substr( p_month ,1,4) ) 
                        AND b.del_if = 0 and d.del_if=0 and d.pk=a.tco_org_pk 
                        AND c.del_if(+)=0  
                        and a.pk=c.thr_emp_pk(+) 
                        and c.an_year(+)=TO_CHAR(ADD_MONTHS(TO_DATE( p_month ,'YYYYMM'),-12),'YYYY')  
                        AND a.thr_wg_pk = b.pk 
                        AND (DECODE ( p_status , 'ALL',  p_status , case when a.LEFT_DT is null or substr(a.LEFT_DT,1,6)>= p_month  then 'A'else 'R' end ) = p_status ) 
                        AND (a.left_dt is not null and  to_date(a.left_dt,'yyyymmdd') between to_date( p_left_from ,'yyyymmdd') and to_date( p_left_to ,'yyyymmdd')  
                                or  p_left_from  is null or  p_left_to  is null) 
                        AND (DECODE ( p_nation ,'ALL',  p_nation ,a.nation) =  p_nation ) 
                        AND (DECODE ( p_thr_group_pk ,'ALL',  p_thr_group_pk ,a.thr_wg_pk) =  p_thr_group_pk ) 
                        AND ( p_input  IS NULL  
                             OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER( p_input )|| '%') 
                             OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER( p_input )|| '%') 
                             OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER( p_input )|| '%')) 
                        AND (a.tco_org_pk IN ( 
                                  SELECT     g.pk 
                                        FROM TCO_ORG g 
                                       WHERE g.del_if = 0 
                                  START WITH g.pk =DECODE ( p_tco_org_pk ,'ALL', 0, p_tco_org_pk ) 
                                  CONNECT BY PRIOR g.pk = g.p_pk) 
                            OR  p_tco_org_pk  = 'ALL' 
                           )) al, 
                    (SELECT   e.emp_id emp_id, e.pk emp_pk, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'01', round(a.ale_hours/8,2),0)) mon01, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'02', round(a.ale_hours/8,2),0)) mon02, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'03', round(a.ale_hours/8,2),0)) mon03, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'04', round(a.ale_hours/8,2),0)) mon04, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'05', round(a.ale_hours/8,2),0)) mon05, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'06', round(a.ale_hours/8,2),0)) mon06, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'07', round(a.ale_hours/8,2),0)) mon07, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'08', round(a.ale_hours/8,2),0)) mon08, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'09', round(a.ale_hours/8,2),0)) mon09, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'10', round(a.ale_hours/8,2),0)) mon10, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'11', round(a.ale_hours/8,2),0)) mon11, 
                             SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'12', round(a.ale_hours/8,2),0)) mon12, 
                             round(SUM (nvl(a.ale_hours,0)/8),2) yearsum 
                        FROM thr_current_ale a,thr_employee e 
                        WHERE a.del_if=0 and e.del_if=0 and a.thr_emp_pk=e.pk  
                            and a.work_mon <=  p_month  
                            AND SUBSTR (a.work_mon, 1, 4) = SUBSTR ( p_month , 1, 4) 
                            AND ( p_input  IS NULL  
                                 OR  (UPPER(E.EMP_ID) LIKE  '%' || UPPER( p_input )|| '%') 
                                 OR  (UPPER(E.OLD_ID ) LIKE  '%' || UPPER( p_input )|| '%') 
                                 OR  (UPPER(E.FULL_NAME) LIKE  '%' || UPPER( p_input )|| '%')) 
                            AND e.TCO_ORG_PK IN ( 
                                  SELECT     G.PK 
                                        FROM TCO_ORG G 
                                       WHERE G.DEL_IF = 0 
                                  START WITH G.PK =(CASE WHEN  p_tco_org_pk ='ALL' THEN G.PK ELSE TO_NUMBER( p_tco_org_pk ) END) 
                                  CONNECT BY PRIOR G.PK = G.P_PK) 
                            GROUP BY e.emp_id, e.pk) alsum, 
                    (SELECT   a.emp_id emp_id, a.thr_emp_pk emp_pk, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'01', a.mon_cnt,0)) mon01, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'02', a.mon_cnt,0)) mon02, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'03', a.mon_cnt,0)) mon03, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'04', a.mon_cnt,0)) mon04, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'05', a.mon_cnt,0)) mon05, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'06', a.mon_cnt,0)) mon06, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'07', a.mon_cnt,0)) mon07, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'08', a.mon_cnt,0)) mon08, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'09', a.mon_cnt,0)) mon09, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'10', a.mon_cnt,0)) mon10, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'11', a.mon_cnt,0)) mon11, 
                             SUM (DECODE (SUBSTR (a.yearmon, 5, 2),'12', a.mon_cnt,0)) mon12, 
                             SUM (a.mon_cnt) yearsum 
                        FROM vhr_annual_leave a 
                        WHERE a.yearmon <=  p_month  
                            AND SUBSTR (a.yearmon, 1, 4) = SUBSTR ( p_month , 1, 4) 
                            AND (DECODE ( p_search ,'1', UPPER (a.emp_id),'2', a.id_num,'3', UPPER (a.full_name)) LIKE '%' || UPPER ( p_input ) 
                                OR  p_input  IS NULL 
                                ) 
                            AND (   a.tco_org_pk IN ( 
                                    SELECT     g.pk 
                                          FROM TCO_ORG g 
                                         WHERE g.del_if = 0 
                                    START WITH g.pk =DECODE ( p_tco_org_pk ,'ALL', 0, p_tco_org_pk ) 
                                    CONNECT BY PRIOR g.pk = g.p_pk) 
                                OR  p_tco_org_pk  = 'ALL' 
                                ) 
                            GROUP BY a.emp_id, a.thr_emp_pk) alsum 
                            WHERE al.emp_pk = alsum.emp_pk(+) 
                                AND (   ( case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)>= p_month  then  
                                               HR_F_CAL_ALE( p_month ,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                                          else     HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                                               end   -NVL (yearsum,0)+nvl(al.total_unpay,0)>=  p_ale  
                                AND  p_lday  = '1'   ) 
                                OR (case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)>= p_month  then  
                                            HR_F_CAL_ALE( p_month ,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                                    else    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                                        end    - NVL (yearsum, 0)+nvl(al.total_unpay,0) =  p_ale  
                                AND  p_lday  = '2' ) 
                                OR (case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)>= p_month  then  
                                        HR_F_CAL_ALE( p_month ,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                                    else     HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk) 
                                        end   - NVL (yearsum, 0)+nvl(al.total_unpay,0) <=  p_ale  
                                AND  p_lday  = '3' 
                                     ) 
                                OR  p_ale  IS NULL 
                                ) 
               AND al.join_date <=TO_CHAR (LAST_DAY (TO_DATE ( p_month , 'YYYYMM')), 'YYYYMMDD') 
               AND (to_date(al.join_date,'yyyymmdd') between to_date( p_from ,'yyyymmdd') and to_date( p_to ,'yyyymmdd')  
                 or  p_from  is null or  p_to  is null) 
          ORDER BY al.dept_nm, al.group_nm, al.emp_id;
    
    ELSIF p_sql = 2 THEN  
                    
        SELECT  A.org_nm,A.GROUP_NM,A.EMP_ID,A.FULL_NAME 
                ,TO_CHAR(TO_DATE(A.JOIN_DT,'YYYYMMDD'),'DD/MM/YYYY') 
                ,nvl(A.ALE_LAST_YEAR,0) 
                ,nvl(A.ALE_IN_YEAR,0) 
                ,nvl(A.ALE_PLUS,0) 
                ,nvl(A.ALE_REAL,0) 
                ,nvl(A.USED,0) 
                ,nvl(A.UNUSED,0)  
                ,nvl(A.UNUSED,0)        
                ,case when nvl(A.EMPLOYEE_PAY,0) >0 then -1* nvl(A.EMPLOYEE_PAY,0) else nvl(A.ALE_PAY,0) end 
                ,nvl(A.ALE_UNPAY,0) 
                ,nvl(DECODE(A.JAN,0,NULL,A.JAN),0),nvl(DECODE(A.FEB,0,NULL,A.FEB),0) 
                ,nvl(DECODE(A.MAR,0,NULL,A.MAR),0),nvl(DECODE(A.APR,0,NULL,A.APR),0) 
                ,nvl(DECODE(A.MAY,0,NULL,A.MAY),0),nvl(DECODE(A.JUN,0,NULL,A.JUN),0) 
                ,nvl(DECODE(A.JUL,0,NULL,A.JUL),0),nvl(DECODE(A.AUG,0,NULL,A.AUG),0) 
                ,nvl(DECODE(A.SEP,0,NULL,A.SEP),0),nvl(DECODE(A.OCT,0,NULL,A.OCT),0) 
                ,nvl(DECODE(A.NOV,0,NULL,A.NOV),0),nvl(DECODE(A.DEC,0,NULL,A.DEC),0) 
              ,to_char(sysdate,'dd/mm/YYYY') 
          FROM THR_ANNUAL_LEAVE A,THR_ANNUAL_LEAVE B,THR_EMPLOYEE C,tco_org d 
          WHERE A.DEL_IF=0 AND B.DEL_IF(+)=0 AND C.DEL_IF=0 AND A.THR_EMP_PK=C.PK and d.del_if=0 and a.TCO_org_PK=d.pk  
            AND (DECODE ( p_thr_group_pk ,'ALL',  p_thr_group_pk ,a.thr_Group_pk) =  p_thr_group_pk ) 
           AND B.AN_YEAR(+)=TO_CHAR(ADD_MONTHS(TO_DATE( p_month ,'YYYYMM'),-12),'YYYY') 
           AND A.THR_EMP_PK=B.THR_EMP_PK(+) 
           AND A.AN_YEAR=SUBSTR( p_month ,1,4) 
                      AND ( p_input  IS NULL  
                             OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER( p_input )|| '%') 
                             OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER( p_input )|| '%') 
                             OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER( p_input )|| '%')) 
         AND (   a.tco_org_pk IN ( 
                                      SELECT     g.pk 
                                            FROM TCO_ORG g 
                                           WHERE g.del_if = 0 
                                      START WITH g.pk =DECODE ( p_tco_org_pk ,'ALL', 0, p_tco_org_pk ) 
                                      CONNECT BY PRIOR g.pk = g.p_pk) 
                                OR  p_tco_org_pk  = 'ALL') 
          AND (( a.ale_unpay >= p_ale  AND  p_lday ='1') 
            OR (a.ale_unpay= p_ale  AND  p_lday ='2') 
            OR (a.ale_unpay<= p_ale  AND  p_lday ='3') 
            OR  p_ale  IS NULL) 
            AND (DECODE ( p_status , 'ALL',  p_status , a.status) = p_status ) 
            AND (DECODE ( p_nation , 'ALL',  p_nation , c.nation) = p_nation ) 
                   AND (to_date(c.join_dt,'yyyymmdd') between to_date( p_from ,'yyyymmdd') and to_date( p_to ,'yyyymmdd')  
                     or  p_from  is null or  p_to  is null) 
                   AND (c.left_dt is not null and  to_date(c.left_dt,'yyyymmdd') between to_date( p_left_from ,'yyyymmdd') and to_date( p_left_to ,'yyyymmdd')  
                     or  p_left_from  is null or  p_left_to  is null) 
         ORDER BY  A.org_nm,A.GROUP_NM,A.EMP_ID;
         
    ELSE
              
        SELECT  A.org_nm,A.GROUP_NM,A.EMP_ID,A.FULL_NAME 
                ,TO_CHAR(TO_DATE(A.JOIN_DT,'YYYYMMDD'),'DD/MM/YYYY') 
                ,nvl(A.ALE_LAST_YEAR,0) 
                ,nvl(A.ALE_IN_YEAR,0) 
                ,nvl(A.ALE_PLUS,0) 
                ,nvl(A.ALE_REAL,0) 
                ,nvl(A.USED,0) 
                ,nvl(A.UNUSED,0)  
                ,nvl(A.UNUSED,0)        
                ,case when nvl(A.EMPLOYEE_PAY,0) >0 then -1* nvl(A.EMPLOYEE_PAY,0) else nvl(A.ALE_PAY,0) end 
                ,nvl(A.ALE_UNPAY,0) 
                ,nvl(DECODE(A.JAN,0,NULL,A.JAN),0),nvl(DECODE(A.FEB,0,NULL,A.FEB),0) 
                ,nvl(DECODE(A.MAR,0,NULL,A.MAR),0),nvl(DECODE(A.APR,0,NULL,A.APR),0) 
                ,nvl(DECODE(A.MAY,0,NULL,A.MAY),0),nvl(DECODE(A.JUN,0,NULL,A.JUN),0) 
                ,nvl(DECODE(A.JUL,0,NULL,A.JUL),0),nvl(DECODE(A.AUG,0,NULL,A.AUG),0) 
                ,nvl(DECODE(A.SEP,0,NULL,A.SEP),0),nvl(DECODE(A.OCT,0,NULL,A.OCT),0) 
                ,nvl(DECODE(A.NOV,0,NULL,A.NOV),0),nvl(DECODE(A.DEC,0,NULL,A.DEC),0) 
              ,to_char(sysdate,'dd/mm/YYYY') 
          FROM THR_ANNUAL_LEAVE A,THR_ANNUAL_LEAVE B,THR_EMPLOYEE C,tco_org d 
          WHERE A.DEL_IF=0 AND B.DEL_IF(+)=0 AND C.DEL_IF=0 AND A.THR_EMP_PK=C.PK and d.del_if=0 and a.TCO_org_PK=d.pk  
          AND (DECODE ( p_thr_group_pk ,'ALL',  p_thr_group_pk ,a.thr_group_pk) =  p_thr_group_pk ) 
          AND (DECODE ( p_nation ,'ALL',  p_nation ,c.nation) =  p_nation ) 
           AND B.AN_YEAR(+)= p_month -1
           AND A.THR_EMP_PK=B.THR_EMP_PK(+) 
           AND A.AN_YEAR= p_month  
                      AND ( p_input  IS NULL  
                             OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER( p_input )|| '%') 
                             OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER( p_input )|| '%') 
                             OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER( p_input )|| '%')) 
         and (  p_status ='ALL'   
                    or( p_status ='A' and nvl(a.status,'A')='A' and nvl(a.resign_pay_yn,'N')='N')  
                    or( p_status ='R' and nvl(a.status,'A')='R' )  
                    or( p_status ='Y' and nvl(a.resign_pay_yn,'N')='Y' )  
             )      
         AND (   a.tco_org_pk IN ( 
                                      SELECT     g.pk 
                                            FROM TCO_ORG g 
                                           WHERE g.del_if = 0 
                                      START WITH g.pk =DECODE ( p_tco_org_pk ,'ALL', 0, p_tco_org_pk ) 
                                      CONNECT BY PRIOR g.pk = g.p_pk) 
                                OR  p_tco_org_pk  = 'ALL') 
         ORDER BY A.org_nm,A.GROUP_NM,A.EMP_ID;
    END IF;
 
 END;
 
 
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI01600_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_rpt_hrti01600_0 
(  p_lang       varchar2,
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions    varchar2,
   p_absence_type varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
       open p_rtn_value for
       select to_char(to_date(p_from, 'yyyymmdd'), 'dd/mm/yyyy') from_dt,
              to_char(to_date(p_to, 'yyyymmdd'), 'dd/mm/yyyy') to_dt ,
              o.org_nm,
              a.emp_id,
              e.full_name,
              to_char(to_date(a.work_dt, 'yyyymmdd'), 'dd/mm/yyyy') work_dt,
              a.time_in,
              a.time_out,
              nullif(a.wt, 0),
              nullif(a.ot, 0),
              nullif(a.nt, 0),
              nullif(a.ont, 0),
              (select decode(p_lang, 'ENG', v.code_nm, nvl(v.code_fnm, v.code_nm)) 
                    from vhr_hr_code v where v.id = 'HR0003' and c.absence_type = v.code) as absence_type, 
              nullif(c.absence_time, 0),
              a.lately as lately_minute,
              a.early as early_minute
              , s.description
              , (case 
                     when A.TIME_IN is null and A.TIME_OUT is null then 'Không có giờ vào ra'
                     when A.TIME_IN is null then 'Không có giờ vào'
                     when A.TIME_OUT is null then 'Không có giờ ra'
                     else '' end ) as status_scan
              , a.description
       from thr_work_date a, tco_org o, thr_work_shift s, thr_employee e, thr_absence c
       where a.del_if=0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and c.del_if(+)=0
       and a.thr_emp_pk = c.thr_emp_pk(+)
       and a.work_dt = c.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
       and a.work_dt between p_from and p_to
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and (p_conditions ='ALL'
           or (p_conditions = '1' and a.time_in is null)
           or (p_conditions = '2' and a.time_out is null)
           or (p_conditions = '3' and a.time_in is not null 
                                  and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))
           or (p_conditions = '4' and a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi'))
           or (p_conditions ='5' and exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
             or (p_conditions ='6' and not exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
           or (p_conditions = '7' and exists (select 1 from thr_work_date f, thr_absence k
                                                where f.del_if =0 and k.del_if=0
                                                and f.thr_emp_pk = k.thr_emp_pk
                                                and f.work_dt = k.absence_dt
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = a.work_dt
                                                and nvl(f.wt, 0) > 0 
                                                and nvl(k.absence_time, 0) > 0
                                                ))
           or (p_conditions = '8' and  nvl(a.ot, 0) <> nvl(a.ot_xn, 0))
           )
       and (p_absence_type = 'ALL'
           or c.absence_type = p_absence_type)
       order by o.seq, a.work_dt, a.emp_id
       ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI01700_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI01700_0 
(
   p_employee   varchar2,
   p_month      varchar2,
   p_tco_org_pk varchar2,
   p_nation     varchar2,
   p_sal_period varchar2,
   p_rtn_value    out   sys_refcursor
) IS
 
    
BEGIN
       
       open p_rtn_value for
       select 0,
              1,
              o.org_nm,
              a.emp_id,
              e.full_name,
              (select initcap(v.code_nm) from vhr_hr_code v where v.id='HR0008' and v.code = a.pos_type ),
              nullif(a.wt1,'0'), -- col5
              nullif(a.wt2,'0'),
              nullif(a.wt3,'0'),
              nullif(a.wt4,'0'),
              nullif(a.wt5,'0'),
              nullif(a.wt6,'0'), -- col10
              nullif(a.wt7,'0'),
              nullif(a.wt8,'0'),
              nullif(a.wt9,'0'),
              nullif(a.wt10,'0'),
              nullif(a.wt11,'0'),
              nullif(a.wt12,'0'),
              nullif(a.wt13,'0'),
              nullif(a.wt14,'0'),
              nullif(a.wt15,'0'),
              nullif(a.wt16,'0'),  -- col20
              nullif(a.wt17,'0'),
              nullif(a.wt18,'0'),
              nullif(a.wt19,'0'),
              nullif(a.wt20,'0'),
              nullif(a.wt21,'0'),
              nullif(a.wt22,'0'),
              nullif(a.wt23,'0'),
              nullif(a.wt24,'0'),
              nullif(a.wt25,'0'),
              nullif(a.wt26,'0'),  -- coll30
              nullif(a.wt27,'0'),
              nullif(a.wt28,'0'),
              nullif(a.wt29,'0'),
              nullif(a.wt30,'0'),
              nullif(a.wt31,'0'),  -- col35
              nullif(a.total_wt, 0),
              nullif(a.total_abs_ale, 0),
              nullif(a.total_abs_other_pay , 0),
              nullif(a.total_abs_pay, 0),
              nullif(a.total_abs_npay, 0),
              nullif(a.total_ot, 0) as ot_15,
              nullif(nvl(a.total_st, 0) + nvl(a.total_ost, 0), 0) as ot_20,
              nullif(nvl(a.total_ht, 0) + nvl(a.total_oht, 0), 0) as ot_30,
              nullif(nvl(a.total_nt30, 0) + nvl(a.total_nt60, 0) + nvl(a.total_nt90, 0), 0) as nt,
              nullif(nvl(a.total_nt45, 0) , 0) as nt2,
              nullif(nvl(a.total_wt, 0)  + nvl(a.total_abs_pay, 0), 0) as total_days,  --46
              a.d1_type, a.d2_type, a.d3_type, a.d4_type, a.d5_type, a.d6_type, a.d7_type, a.d8_type, a.d9_type, a.d10_type,
              a.d11_type, a.d12_type, a.d13_type, a.d14_type, a.d15_type, a.d16_type, a.d17_type, a.d18_type, a.d19_type, a.d20_type,
              a.d21_type, a.d22_type, a.d23_type, a.d24_type, a.d25_type, a.d26_type, a.d27_type, a.d28_type, a.d29_type, a.d30_type, a.d31_type        
       from thr_work_month a, tco_org o, thr_employee e
       where a.del_if=0 and o.del_if=0 and e.del_if=0
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.work_mon = p_month
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_nation,'ALL','ALL',e.nation )= p_nation
       and a.sal_period  = p_sal_period
--       and rownum < 1500
       order by  o.org_nm  , a.emp_id
       ;
        
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI01800_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI01800_1
                                (
                                   p_TCO_ORG_PK varchar2,
                                   p_employee   varchar2,
                                   p_status     varchar2,
                                   p_from_dt    varchar2,
                                   p_to_dt      varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
    l_rtn_cur   sys_refcursor;
    

BEGIN
      
OPEN l_rtn_cur FOR
SELECT '', '' 
        ,e.emp_id
        ,e.full_name
        ,o.org_nm
        ,to_char(to_date(a.work_dt, 'yyyymmdd'), 'dd/mm/yyyy')
        ,a.start_time
        ,a.end_time
        ,nullif(a.ot, 0)
        ,a.description
  FROM thr_daily_ot_reg a, thr_employee e, tco_org o
  where a.del_if=0 and e.del_if=0 and o.del_if=0
  and a.thr_emp_pk = e.pk
  and e.TCO_ORG_PK = o.pk
  and a.work_dt between p_from_dt and p_to_dt 
  and ( e.tco_org_pk in (
                              select     g.pk
                                    from tco_org g
                                   where g.del_if = 0
                              start with g.pk =
                                            decode (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              connect by prior g.pk = g.p_pk)
            or p_tco_org_pk = 'ALL')
  and (   UPPER(e.emp_id) LIKE '%' || UPPER (TRIM (p_employee)) || '%'
                      OR  UPPER(e.full_name) LIKE '%' || UPPER (TRIM (p_employee)) || '%'
                      OR p_employee IS NULL)
  and decode(p_status,'ALL','ALL',e.status)=p_status
      ORDER BY A.WORK_DT ,O.ORG_NM, E.EMP_ID;
   
   

       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_RPT_HRTI01900_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_RPT_HRTI01900_1
                                (
                                   p_tco_org_pk varchar2,
                                   p_employee   varchar2,
                                   p_status     varchar2,
                                   p_from_dt    varchar2,
                                   p_to_dt      varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
    l_rtn_cur   sys_refcursor;
    

BEGIN
      
OPEN l_rtn_cur FOR
SELECT ROWNUM, T.*
FROM 
  (SELECT 0
        ,o.org_nm
        ,e.emp_id
        ,e.full_name
        ,(select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = a.pos_type )
        ,to_char(to_date(a.start_dt,'yyyy/mm/dd'),'dd/mm/yyyy')
        ,to_char(to_date(a.end_dt ,'yyyy/mm/dd'),'dd/mm/yyyy')
        ,a.reason
        ,a.description
  FROM thr_att_time_auto a, thr_employee e, tco_org o
  where a.del_if=0 and e.del_if=0 and o.del_if=0
  and a.thr_emp_pk = e.pk
  and e.TCO_ORG_PK = o.pk
  and (a.start_dt between p_from_dt and p_to_dt
       or  a.end_dt between p_from_dt and p_to_dt
       or (a.end_dt is null and a.start_dt <= p_to_dt)
       )
  and ( e.tco_org_pk in (
                              select     g.pk
                                    from tco_org g
                                   where g.del_if = 0
                              start with g.pk =
                                            decode (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              connect by prior g.pk = g.p_pk)
            or p_tco_org_pk = 'ALL')
  and (   UPPER(e.emp_id) LIKE '%' || UPPER (TRIM (p_employee)) || '%'
                      OR  UPPER(e.full_name) LIKE '%' || UPPER (TRIM (p_employee)) || '%'
                      OR p_employee IS NULL)
  and decode(p_status,'ALL','ALL',e.status)=p_status
      ORDER BY A.START_DT ,O.ORG_NM, E.EMP_ID) T;
   
   

       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00100_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00100_0 (
   p_company_pk       VARCHAR2,
   p_rtn_value    OUT SYS_REFCURSOR)
IS
   /******************************************************************************
      NAME:
      PURPOSE:

      REVISIONS:
      Ver        Date        Author           Description
      ---------  ----------  ---------------  ------------------------------------
      1.0        9/25/2007   Ho Thi Thu Hien       1. Created this function.

   ******************************************************************************/
   l_rtn_cur   SYS_REFCURSOR;
BEGIN
   OPEN l_rtn_cur FOR
        SELECT PK,
               SHIFT,
               TRIM (START_TIME),
               TRIM (END_TIME),
               WT,
               OT,
               NT,
               A.START_MEAL1,
               A.END_MEAL1,
               A.MEAL1_INTERVAL,
               A.START_MEAL2,
               A.END_MEAL2,
               A.MEAL2_INTERVAL,
               A.START_OT,
               A.START_NT,
               DECODE (A.USE_YN, 'Y', -1, ''),
               A.description,
               A.DURING_DAY,
               NVL (A.WT_PLUS, 0),
               a.max_ot,
               NVL (a.wt_plus_ty_le, 'N'),
               A.TCO_COMPANY_PK,
               NVL (A.OT_C_YN, 'N'),
               null,
               a.mm_mid, -- so phut de xac dinh gio vao ra cua giua gio
               note
          FROM THR_WORK_SHIFT A
         WHERE     A.DEL_IF = 0
               AND NVL (tco_company_pk, p_company_pk) = p_company_pk
      ORDER BY SHIFT;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00200_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00200_0 (
   p_month                VARCHAR,
   p_tco_company_pk       VARCHAR,
   p_rtn_value        OUT SYS_REFCURSOR)
IS
   /******************************************************************************
      NAME:       sp_get_user_entry_popup
      PURPOSE:

      REVISIONS:
      Ver        Date        Author           Description
      ---------  ----------  ---------------  ------------------------------------
      1.0        11/01/2008        1. Created this function.

   ******************************************************************************/
   l_rtn_cur   SYS_REFCURSOR;
BEGIN
   OPEN l_rtn_cur FOR
      SELECT A.PK,
             A.CAR_DATE,
             A.DAY_TYPE,
             A.HOL_TYPE,
             A.HOL_COMMENT,
             A.REMARK,
             A.DEL_IF,
             A.CRT_BY,
             A.CRT_DT,
             A.MOD_BY,
             A.MOD_DT
        FROM thr_CALENDAR A
       WHERE     A.DEL_IF = 0
             AND SUBSTR (A.CAR_DATE, 5, 2) = SUBSTR (p_month, 5, 2)
             AND a.tco_company_pk = p_tco_company_pk
             AND A.HOL_TYPE IN
                    (SELECT B.CODE
                       FROM TCO_ABCODE B, TCO_ABCODEGRP C
                      WHERE C.ID = 'COAB0140' AND B.TCO_ABCODEGRP_PK = C.PK);

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00200_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00200_1 (
   p_in               VARCHAR,
   p_company_pk       VARCHAR,
   p_ctrl             VARCHAR2,
   p_dat          OUT VARCHAR2,
   p_dat2         OUT VARCHAR2)
IS
   tmpVar   NUMBER;
BEGIN
   tmpVar := 0;

   SELECT MAX (c.CAR_DATE)
     INTO p_dat
     FROM thr_CALENDAR c
    WHERE NVL (c.DEL_IF, 0) = 0 AND c.tco_company_pk = p_company_pk;

   p_dat2 := p_dat;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00201_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00201_0(
    p_hol_type varchar,
    p_year   varchar,
    p_company_pk varchar,
    p_rtn_value   out   sys_refcursor
)
is
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
begin
   open l_rtn_cur for
   SELECT A.PK
       ,A.CAR_DATE
       ,(CASE WHEN A.DAY_TYPE = '1' THEN 'Sunday'
                WHEN A.DAY_TYPE = '2' THEN 'Monday'
             WHEN A.DAY_TYPE = '3' THEN 'Tuesday'
             WHEN A.DAY_TYPE = '4' THEN 'Wednesday'
             WHEN A.DAY_TYPE = '5' THEN 'Thursday'
             WHEN A.DAY_TYPE = '6' THEN 'Friday'
             WHEN A.DAY_TYPE = '7' THEN 'Saturday'
        END) AS DAY_TYPE
       ,A.HOL_TYPE
       ,A.HOL_COMMENT
       ,A.REMARK
       ,A.DEL_IF
       ,A.CRT_BY
       ,A.CRT_DT
       ,A.MOD_BY
       ,A.MOD_DT
FROM thr_CALENDAR A
WHERE  A.DEL_IF=0
AND DECODE(p_hol_type,'ALL',p_hol_type,A.HOL_TYPE) = p_hol_type
 AND SUBSTR(A.CAR_DATE,1,6) = p_year
 and a.tco_company_pk=p_company_pk
   ORDER BY A.CAR_DATE;
   p_rtn_value := l_rtn_cur;
exception
   when others
   then
      raise;
end;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00300_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00300_0 (
   p_tco_company_pk varchar2,
   p_thr_work_group_pk  varchar2,
   p_work_shift     varchar2,
   p_from         varchar2,
   p_to      varchar2,
   p_rtn_value    out   sys_refcursor
)
is
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2007   Nguyen Van Thai co sai dung chui      1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
begin
   open l_rtn_cur for
     select A.WORKGROUP_NM,B.WORK_DT as w_date
    ,B.THR_WS_PK,A.PK,B.pk,B.HOL_TYPE,DECODE(B.DAY_TYPE,1,'SUN',2,'MON',3,'TUE',4,'WED',5,'THU',6,'FRI',7,'SAT')
    FROM THR_WORK_GROUP A, THR_WG_SCH_MASTER B
    where a.del_if=0 and b.del_if=0
          AND A.PK=B.THR_WG_PK
          AND B.WORK_DT between p_from and p_to
    and decode(p_work_shift,'ALL','ALL',B.THR_WS_PK )=p_work_shift
    and decode(p_thr_work_group_pk,'ALL','ALL',a.PK)=p_thr_work_group_pk
    and decode(p_tco_company_pk,'ALL','ALL',a.tco_company_pk)=p_tco_company_pk
    ORDER BY B.WORK_DT;


   p_rtn_value := l_rtn_cur;
exception
   when others  then
           raise;
end;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00300_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00300_1(
   p_thr_gw_master_pk      varchar,
   p_rtn_value    out   sys_refcursor
)
is
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2007   Nguyen Van Thai co sai dung chui      1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
begin
   open l_rtn_cur for
    SELECT C.EMP_ID,C.FULL_NAME,C.JOIN_DT
FROM THR_WG_SCH_MASTER A,THR_WG_SCH_DETAIL B,THR_EMPLOYEE C
WHERE A.DEL_IF=0 AND A.PK=B.THR_WG_MASTER_PK
AND C.DEL_IF=0 AND B.THR_EMP_PK=C.PK
AND C.JOIN_DT<=B.WORK_DT
AND (C.LEFT_DT IS NULL OR C.LEFT_DT>B.WORK_DT)
AND A.PK=p_thr_gw_master_pk
ORDER BY C.JOIN_DT;

   p_rtn_value := l_rtn_cur;
exception
   when others
   then
      raise;
end;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00300_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00300_2 (
   p_thr_wg_pk          VARCHAR2,
   p_work_mon             VARCHAR2,
   p_from                 varchar2,
   p_to                   varchar2,
   p_tco_company_pk       varchar2,  
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
   TYPE Char_Array IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
    p_c Char_Array;
    tmp         number;
BEGIN
    FOR d IN 1..31 LOOP
    if to_number(substr(p_from,-2))+d-1>31 then
            tmp:=to_number(substr(p_from,-2))+d-1-31;
            if tmp<10 then
                p_c(d):=substr(p_to,1,6)||'0'||tmp;
            else
                p_c(d):=substr(p_to,1,6)||tmp;
            end if;
        else
            tmp:=to_number(substr(p_from,-2))+d-1;
            if tmp<10 then
                p_c(d):=substr(p_from,1,6)||'0'||tmp;
            else
                p_c(d):=substr(p_from,1,6)||tmp;
            end if;    
        end if;    
    END LOOP;    

   OPEN l_rtn_cur FOR
      SELECT C.WORKGROUP_NM AS WORKGROUP_NM
         , WS.D1, WS.D2, WS.D3, WS.D4, WS.D5, WS.D6, WS.D7, WS.D8, WS.D9, WS.D10
         , WS.D11, WS.D12, WS.D13, WS.D14, WS.D15, WS.D16, WS.D17, WS.D18, WS.D19, WS.D20
         , WS.D21, WS.D22, WS.D23, WS.D24, WS.D25, WS.D26, WS.D27, WS.D28, WS.D29, WS.D30, WS.D31
--      ,DECODE(WS.D1,0,NULL,WS.D1),DECODE(WS.D2,0,NULL,WS.D2),DECODE(WS.D3,0,NULL,WS.D3)
--      ,DECODE(WS.D4,0,NULL,WS.D4),DECODE(WS.D5,0,NULL,WS.D5),DECODE(WS.D6,0,NULL,WS.D6)
--      ,DECODE(WS.D7,0,NULL,WS.D7),DECODE(WS.D8,0,NULL,WS.D8),DECODE(WS.D9,0,NULL,WS.D9)
--      ,DECODE(WS.D10,0,NULL,WS.D10),DECODE(WS.D11,0,NULL,WS.D11),DECODE(WS.D12,0,NULL,WS.D12)
--      ,DECODE(WS.D13,0,NULL,WS.D13),DECODE(WS.D14,0,NULL,WS.D14),DECODE(WS.D15,0,NULL,WS.D15)
--      ,DECODE(WS.D16,0,NULL,WS.D16),DECODE(WS.D17,0,NULL,WS.D17),DECODE(WS.D18,0,NULL,WS.D18)
--      ,DECODE(WS.D19,0,NULL,WS.D19),DECODE(WS.D20,0,NULL,WS.D20),DECODE(WS.D21,0,NULL,WS.D21)
--      ,DECODE(WS.D22,0,NULL,WS.D22),DECODE(WS.D23,0,NULL,WS.D23),DECODE(WS.D24,0,NULL,WS.D24)
--      ,DECODE(WS.D25,0,NULL,WS.D25),DECODE(WS.D26,0,NULL,WS.D26),DECODE(WS.D27,0,NULL,WS.D27)
--      ,DECODE(WS.D28,0,NULL,WS.D28),DECODE(WS.D29,0,NULL,WS.D29),DECODE(WS.D30,0,NULL,WS.D30)
--      ,DECODE(WS.D31,0,NULL,WS.D31)
      ,c.pk AS PK,p_work_mon,p_from,p_to
 FROM THR_WORK_GROUP C
  ,(SELECT A.THR_WG_PK AS grp_pk
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(1),B.SHIFT, 0), 0)) D1
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(2),B.SHIFT, 0), 0)) D2
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(3),B.SHIFT, 0), 0)) D3
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(4),B.SHIFT, 0), 0)) D4
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(5),B.SHIFT, 0), 0)) D5
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(6),B.SHIFT, 0), 0)) D6
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(7),B.SHIFT, 0), 0)) D7
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(8),B.SHIFT, 0), 0)) D8
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(9),B.SHIFT, 0), 0)) D9
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(10),B.SHIFT, 0), 0)) D10
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(11),B.SHIFT, 0), 0)) D11
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(12),B.SHIFT, 0), 0)) D12
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(13),B.SHIFT, 0), 0)) D13
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(14),B.SHIFT, 0), 0)) D14
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(15),B.SHIFT, 0), 0)) D15
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(16),B.SHIFT, 0), 0)) D16
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(17),B.SHIFT, 0), 0)) D17
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(18),B.SHIFT, 0), 0)) D18
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(19),B.SHIFT, 0), 0)) D19
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(20),B.SHIFT, 0), 0)) D20
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(21),B.SHIFT, 0), 0)) D21
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(22),B.SHIFT, 0), 0)) D22
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(23),B.SHIFT, 0), 0)) D23
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(24),B.SHIFT, 0), 0)) D24
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(25),B.SHIFT, 0), 0)) D25
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(26),B.SHIFT, 0), 0)) D26
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(27),B.SHIFT, 0), 0)) D27
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(28),B.SHIFT, 0), 0)) D28
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(29),B.SHIFT, 0), 0)) D29
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(30),B.SHIFT, 0), 0)) D30
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(31),B.SHIFT, 0), 0)) D31
    FROM THR_WG_SCH_MASTER a,THR_WORK_SHIFT b
    WHERE a.DEL_IF=0 AND b.del_if=0 AND a.WORK_DT BETWEEN p_from and p_to
        AND A.THR_WS_PK=b.pk
        GROUP BY  A.THR_WG_PK) ws
WHERE c.del_if=0 AND ws.grp_pk(+)=c.pk
AND DECODE(p_thr_wg_pk,'ALL','ALL',C.PK)=p_thr_wg_pk
and DECODE(p_tco_company_pk,'ALL','ALL',C.TCO_COMPANY_PK)=p_tco_company_pk
ORDER BY NVL(C.SEQ,99999);


   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00302_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00302_0 (
   p_rtn_value    out   sys_refcursor
)
is
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2007   Nguyen Van Thai co sai dung chui      1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
begin
   open l_rtn_cur for


    SELECT B.WORKGROUP_NM,TO_CHAR(TO_DATE(MAX(G.WORK_DT),'YYYYMMDD'),'DD/MM/YYYY'),MAX(G.WORK_DT)
        FROM THR_WG_SCH_MASTER G,THR_WORK_GROUP B
        WHERE G.DEL_IF=0 AND B.DEL_IF=0
        AND G.THR_WG_PK=B.PK
        GROUP BY B.WORKGROUP_NM
        ORDER BY MAX(G.WORK_DT),B.WORKGROUP_NM;


   p_rtn_value := l_rtn_cur;
exception
   when others  then
           raise;
end;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00303_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00303_0 (
    p_work_dt       IN  VARCHAR2,
    p_wg_pk      IN  VARCHAR2,
   p_rtn_value    out   sys_refcursor
)
is
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2007   Nguyen Van Thai co sai dung chui      1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
begin
   open l_rtn_cur for


    SELECT B.WORKGROUP_NM,A.FULL_NAME,A.EMP_ID,A.JOIN_DT
        ,C.WORK_DT,S.SHIFT||'-'||S.REMARK
        FROM THR_EMPLOYEE A,THR_WORK_GROUP B,THR_WG_SCH_DETAIL C,THR_WORK_SHIFT S
        WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0 AND S.DEL_IF=0
              AND A.PK=C.THR_EMP_PK AND C.THR_WG_PK=B.PK AND C.THR_WS_PK=S.PK
              AND A.JOIN_DT<=p_work_dt
              AND (A.LEFT_DT >p_work_dt OR A.LEFT_DT IS NULL)
              AND C.WORK_DT=p_work_dt
              AND C.THR_WG_PK=p_wg_pk
        ORDER BY A.EMP_ID,A.JOIN_DT;


   p_rtn_value := l_rtn_cur;
exception
   when others  then
           raise;
end;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_0(
   p_tco_org_pk         VARCHAR,
   p_wg_pk              varchar,
   p_from_date          varchar,
   p_to_date            varchar,
   P_SEARCH_TEMP        VARCHAR,
   p_option             varchar,
   p_nation             varchar,
   p_rtn_value         OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2007   Ho Thi Thu Hien       1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
   if p_option =1 then
        OPEN l_rtn_cur FOR
            select  b.THR_WG_PK,
                    b.THR_WG_PK,
                    a.emp_id,
                    a.full_name,
                    join_dt,
                    work_dt,
                    b.HOL_TYPE,b.THR_WS_PK,a.pk,b.pk, DECODE(B.APPROVE_YN, 'Y', '-1', '0'), B.SALARY_TYPE 
            from thr_employee a, THR_WG_SCH_DETAIL b,thr_work_group c
            where a.del_if=0 and b.del_if=0 and b.thr_WG_pk=c.pk
            and a.pk=b.THR_EMP_PK
            and b.WORK_DT between p_from_date and p_to_date
            and (a.status='A' or a.left_dt > b.work_dt)
            and b.work_dt >= a.JOIN_DT
            AND (P_SEARCH_TEMP IS NULL
                OR UPPER(A.FULL_NAME) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
                OR UPPER(A.EMP_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
                OR UPPER(A.OLD_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%' )  
            AND (a.tco_org_pk IN (SELECT g.pk
                                    FROM tco_org g
                                   WHERE g.del_if = 0
                                  START WITH g.pk =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_tco_org_pk = 'ALL')
          and  decode(p_wg_pk,'ALL','ALL',c.pk)=p_wg_pk
          AND p_nation = decode(p_nation,'ALL',p_nation,A.NATION)
          order by emp_id,work_dt;

   else
        OPEN l_rtn_cur FOR
            select a.THR_wg_PK as t,a.THR_wg_PK as t1,a.emp_id,a.full_name,join_dt,p_from_date as work_dt
        ,b.hol_type as hol_type ,null as THR_WS_PK,a.pk,null as thr_ws_detail_pk--,NULL, NULL 
            from thr_employee a,thr_calendar b
            where a.del_if=0 and b.del_if=0 and b.CAR_DATE=p_from_date
            and (a.status='A' or a.left_dt > p_from_date)
            and a.JOIN_DT<=p_from_date
            AND (P_SEARCH_TEMP IS NULL
                OR UPPER(A.FULL_NAME) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
                OR UPPER(A.EMP_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
                OR UPPER(A.OLD_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%' )  
           AND (   a.tco_org_pk IN (SELECT g.pk
                                    FROM tco_org g
                                   WHERE g.del_if = 0
                                  START WITH g.pk =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_tco_org_pk = 'ALL')
           and  decode(p_wg_pk,'ALL','ALL',a.THR_wg_pk)=p_wg_pk
           --AND NVL(A.NATION,'01')='01'
           and a.tco_company_pk=b.tco_company_pk

           minus
           select a.THR_wg_PK,a.THR_wg_PK,a.emp_id,a.full_name,join_dt,b.work_dt as work_dt
            ,c.hol_type as hol_type,null as THR_WS_PK,a.pk,null as thr_ws_detail_pk
            from thr_employee a,THR_WG_SCH_DETAIL b,thr_calendar c
            where a.del_if=0 and b.del_if=0 and c.del_if=0 and b.work_dt=c.CAR_DATE
            and a.pk=b.thr_emp_pk
            and b.work_dt = p_from_date
            and (a.status='A' or a.left_dt > b.work_dt)
            and b.work_dt >= a.JOIN_DT
            AND (P_SEARCH_TEMP IS NULL
                OR UPPER(A.FULL_NAME) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
                OR UPPER(A.EMP_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
                OR UPPER(A.OLD_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%' )  
           AND (   a.tco_org_pk IN (SELECT g.pk
                                    FROM tco_org g
                                   WHERE g.del_if = 0
                                  START WITH g.pk =DECODE (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                              CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_tco_org_pk = 'ALL')
           and  decode(p_wg_pk,'ALL','ALL',a.thr_wg_pk)=p_wg_pk
         --  AND NVL(A.NATION,'01')='01'
           and a.tco_company_pk=c.tco_company_pk
           order by emp_id,work_dt;
   end if;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_1(
   P_IMP_SEQ         VARCHAR,
   P_RTN_VALUE         OUT   SYS_REFCURSOR
)
IS
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2007   Ho Thi Thu Hien       1. Created this function.

******************************************************************************/
   L_RTN_CUR   SYS_REFCURSOR;
BEGIN
   OPEN P_RTN_VALUE FOR
            SELECT B.THR_WG_PK,B.THR_WG_PK,A.EMP_ID,A.FULL_NAME,JOIN_DT,WORK_DT
            ,B.HOL_TYPE,B.THR_WS_PK,A.PK,B.PK
            FROM THR_EMPLOYEE A, THR_WG_SCH_DETAIL B,THR_WORK_GROUP C
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND B.THR_WG_PK=C.PK
            AND A.PK=B.THR_EMP_PK
            AND B.IMPORT_SEQ = P_IMP_SEQ 
          ORDER BY NVL(C.SEQ,999999),EMP_ID,WORK_DT;
   
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_2(
   p_thr_emp_pk         VARCHAR,
   p_rtn_value         OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2007   Ho Thi Thu Hien       1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
  OPEN l_rtn_cur FOR
     Select a.work_dt,b.workgroup_nm
     from thr_wg_his_change a,thr_work_group b
     where a.del_if=0 and b.del_if=0
     and a.THR_WG_PK=b.pk and a.thr_emp_pk=p_thr_emp_pk
     ORDER BY A.WORK_DT;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_3 (
    p_tco_org_pk            VARCHAR2,
    p_thr_wg_pk             VARCHAR2,
    p_work_mon              VARCHAR2,
    p_from                  varchar2,
    p_to                    varchar2,
    P_SEARCH_TEMP           VARCHAR,
    p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
   TYPE Char_Array IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
    p_c Char_Array;
    tmp         number;
    
BEGIN

FOR d IN 1..31 LOOP
if to_number(substr(p_from,-2))+d-1>31 then
        tmp:=to_number(substr(p_from,-2))+d-1-31;
        if tmp<10 then
            p_c(d):=substr(p_to,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_to,1,6)||tmp;
        end if;
    else
        tmp:=to_number(substr(p_from,-2))+d-1;
        if tmp<10 then
            p_c(d):=substr(p_from,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_from,1,6)||tmp;
        end if;    
    end if;    
END LOOP;    


   OPEN l_rtn_cur FOR
      SELECT HR.T1,HR.EMP_ID,HR.FULL_NAME,HR.T2,HR.T3,HR.T4,HR.T5
    ,DECODE(HR.D1,0,NULL,HR.D1),DECODE(HR.D2,0,NULL,HR.D2),DECODE(HR.D3,0,NULL,HR.D3)
      ,DECODE(HR.D4,0,NULL,HR.D4),DECODE(HR.D5,0,NULL,HR.D5),DECODE(HR.D6,0,NULL,HR.D6)
      ,DECODE(HR.D7,0,NULL,HR.D7),DECODE(HR.D8,0,NULL,HR.D8),DECODE(HR.D9,0,NULL,HR.D9)
      ,DECODE(HR.D10,0,NULL,HR.D10),DECODE(HR.D11,0,NULL,HR.D11),DECODE(HR.D12,0,NULL,HR.D12)
      ,DECODE(HR.D13,0,NULL,HR.D13),DECODE(HR.D14,0,NULL,HR.D14),DECODE(HR.D15,0,NULL,HR.D15)
      ,DECODE(HR.D16,0,NULL,HR.D16),DECODE(HR.D17,0,NULL,HR.D17),DECODE(HR.D18,0,NULL,HR.D18)
      ,DECODE(HR.D19,0,NULL,HR.D19),DECODE(HR.D20,0,NULL,HR.D20),DECODE(HR.D21,0,NULL,HR.D21)
      ,DECODE(HR.D22,0,NULL,HR.D22),DECODE(HR.D23,0,NULL,HR.D23),DECODE(HR.D24,0,NULL,HR.D24)
      ,DECODE(HR.D25,0,NULL,HR.D25),DECODE(HR.D26,0,NULL,HR.D26),DECODE(HR.D27,0,NULL,HR.D27)
      ,DECODE(HR.D28,0,NULL,HR.D28),DECODE(HR.D29,0,NULL,HR.D29),DECODE(HR.D30,0,NULL,HR.D30)
      ,DECODE(HR.D31,0,NULL,HR.D31),p_work_mon,p_from,p_to,HR.DT1,HR.DT2,HR.DT3,HR.DT4,HR.DT5,HR.DT6
      ,HR.DT7,HR.DT8,HR.DT9,HR.DT10,HR.DT11,HR.DT12,HR.DT13,HR.DT14,HR.DT15,HR.DT16,HR.DT17,HR.DT18,HR.DT19
      ,HR.DT20,HR.DT21,HR.DT22,HR.DT23,HR.DT24,HR.DT25,HR.DT26,HR.DT27,HR.DT28,HR.DT29,HR.DT30,HR.DT31
FROM
(
SELECT A.THR_EMP_PK T1,C.EMP_ID EMP_ID,C.FULL_NAME FULL_NAME,D.ORG_NM T2,E.WORKGROUP_NM T3,MAX(C.JOIN_DT) T4,MAX(C.LEFT_DT) T5
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(1),B.SHIFT, 0), 0)) D1
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(2),B.SHIFT, 0), 0)) D2
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(3),B.SHIFT, 0), 0)) D3
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(4),B.SHIFT, 0), 0)) D4
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(5),B.SHIFT, 0), 0)) D5
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(6),B.SHIFT, 0), 0)) D6
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(7),B.SHIFT, 0), 0)) D7
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(8),B.SHIFT, 0), 0)) D8
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(9),B.SHIFT, 0), 0)) D9
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(10),B.SHIFT, 0), 0)) D10
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(11),B.SHIFT, 0), 0)) D11
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(12),B.SHIFT, 0), 0)) D12
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(13),B.SHIFT, 0), 0)) D13
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(14),B.SHIFT, 0), 0)) D14
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(15),B.SHIFT, 0), 0)) D15
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(16),B.SHIFT, 0), 0)) D16
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(17),B.SHIFT, 0), 0)) D17
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(18),B.SHIFT, 0), 0)) D18
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(19),B.SHIFT, 0), 0)) D19
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(20),B.SHIFT, 0), 0)) D20
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(21),B.SHIFT, 0), 0)) D21
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(22),B.SHIFT, 0), 0)) D22
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(23),B.SHIFT, 0), 0)) D23
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(24),B.SHIFT, 0), 0)) D24
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(25),B.SHIFT, 0), 0)) D25
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(26),B.SHIFT, 0), 0)) D26
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(27),B.SHIFT, 0), 0)) D27
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(28),B.SHIFT, 0), 0)) D28
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(29),B.SHIFT, 0), 0)) D29
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(30),B.SHIFT, 0), 0)) D30
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(31),B.SHIFT, 0), 0)) D31
                  ,MAX(NVL(DECODE(A.WORK_DT,p_c(1),F.D1_TYPE,''),'')) DT1
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(2),F.D2_TYPE,''),'')) DT2
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(3),F.D3_TYPE,''),'')) DT3
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(4),F.D4_TYPE,''),'')) DT4
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(5),F.D5_TYPE,''),'')) DT5
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(6),F.D6_TYPE,''),'')) DT6
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(7),F.D7_TYPE,''),'')) DT7
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(8),F.D8_TYPE,''),'')) DT8
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(9),F.D9_TYPE,''),'')) DT9
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(10),F.D10_TYPE,''),'')) DT10
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(11),F.D11_TYPE,''),'')) DT11
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(12),F.D12_TYPE,''),'')) DT12
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(13),F.D13_TYPE,''),'')) DT13
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(14),F.D14_TYPE,''),'')) DT14
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(15),F.D15_TYPE,''),'')) DT15
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(16),F.D16_TYPE,''),'')) DT16
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(17),F.D17_TYPE,''),'')) DT17
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(18),F.D18_TYPE,''),'')) DT18
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(19),F.D19_TYPE,''),'')) DT19
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(20),F.D20_TYPE,''),'')) DT20
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(21),F.D21_TYPE,''),'')) DT21
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(22),F.D22_TYPE,''),'')) DT22
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(23),F.D23_TYPE,''),'')) DT23
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(24),F.D24_TYPE,''),'')) DT24
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(25),F.D25_TYPE,''),'')) DT25
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(26),F.D26_TYPE,''),'')) DT26
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(27),F.D27_TYPE,''),'')) DT27
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(28),F.D28_TYPE,''),'')) DT28 
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(29),F.D29_TYPE,''),'')) DT29
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(30),F.D30_TYPE,''),'')) DT30
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(31),F.D31_TYPE,''),'')) DT31
    FROM THR_WG_SCH_DETAIL a,THR_WORK_SHIFT b,THR_EMPLOYEE C,TCO_ORG D,THR_WORK_GROUP E,THR_WORK_MONTH F
    WHERE a.DEL_IF=0 AND b.del_if=0 AND C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0 AND F.DEL_IF(+) = 0
        AND A.THR_EMP_PK=C.PK 
        AND C.THR_WG_PK=E.PK 
        AND C.TCO_ORG_PK=D.PK
        AND F.THR_EMP_PK(+) = C.PK
        AND A.THR_WS_PK=b.pk
        AND F.WORK_MON(+) = p_work_mon
        AND a.WORK_DT BETWEEN p_from and p_to
        AND C.JOIN_DT<=A.WORK_DT
        AND (C.LEFT_DT IS NULL OR C.LEFT_DT>A.WORK_DT)
         AND DECODE(p_thr_wg_pk,'ALL','ALL',E.PK)=p_thr_wg_pk
        AND (   C.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =DECODE (P_TCO_ORG_PK,'ALL', 0,P_TCO_ORG_PK)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
        AND (P_SEARCH_TEMP IS NULL
            OR UPPER(C.FULL_NAME) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
            OR UPPER(C.EMP_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%'
            OR UPPER(C.OLD_ID) LIKE  '%' || UPPER(P_SEARCH_TEMP)|| '%' )                
        GROUP BY  A.THR_EMP_PK,C.EMP_ID,C.FULL_NAME,D.ORG_NM,E.WORKGROUP_NM)HR;


   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_4;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00400_4 (
    p_sequence_dt            VARCHAR2,
    p_work_mon              VARCHAR2,
    p_from                  varchar2,
    p_to                    varchar2,
    p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
   TYPE Char_Array IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
    p_c Char_Array;
    tmp         number;
    
BEGIN

FOR d IN 1..31 LOOP
if to_number(substr(p_from,-2))+d-1>31 then
        tmp:=to_number(substr(p_from,-2))+d-1-31;
        if tmp<10 then
            p_c(d):=substr(p_to,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_to,1,6)||tmp;
        end if;
    else
        tmp:=to_number(substr(p_from,-2))+d-1;
        if tmp<10 then
            p_c(d):=substr(p_from,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_from,1,6)||tmp;
        end if;    
    end if;    
END LOOP;    


   OPEN l_rtn_cur FOR
      SELECT HR.T1,HR.EMP_ID,HR.FULL_NAME,HR.T2,HR.T3,HR.T4,HR.T5
    ,DECODE(HR.D1,0,NULL,HR.D1),DECODE(HR.D2,0,NULL,HR.D2),DECODE(HR.D3,0,NULL,HR.D3)
      ,DECODE(HR.D4,0,NULL,HR.D4),DECODE(HR.D5,0,NULL,HR.D5),DECODE(HR.D6,0,NULL,HR.D6)
      ,DECODE(HR.D7,0,NULL,HR.D7),DECODE(HR.D8,0,NULL,HR.D8),DECODE(HR.D9,0,NULL,HR.D9)
      ,DECODE(HR.D10,0,NULL,HR.D10),DECODE(HR.D11,0,NULL,HR.D11),DECODE(HR.D12,0,NULL,HR.D12)
      ,DECODE(HR.D13,0,NULL,HR.D13),DECODE(HR.D14,0,NULL,HR.D14),DECODE(HR.D15,0,NULL,HR.D15)
      ,DECODE(HR.D16,0,NULL,HR.D16),DECODE(HR.D17,0,NULL,HR.D17),DECODE(HR.D18,0,NULL,HR.D18)
      ,DECODE(HR.D19,0,NULL,HR.D19),DECODE(HR.D20,0,NULL,HR.D20),DECODE(HR.D21,0,NULL,HR.D21)
      ,DECODE(HR.D22,0,NULL,HR.D22),DECODE(HR.D23,0,NULL,HR.D23),DECODE(HR.D24,0,NULL,HR.D24)
      ,DECODE(HR.D25,0,NULL,HR.D25),DECODE(HR.D26,0,NULL,HR.D26),DECODE(HR.D27,0,NULL,HR.D27)
      ,DECODE(HR.D28,0,NULL,HR.D28),DECODE(HR.D29,0,NULL,HR.D29),DECODE(HR.D30,0,NULL,HR.D30)
      ,DECODE(HR.D31,0,NULL,HR.D31),p_work_mon,p_from,p_to,HR.DT1,HR.DT2,HR.DT3,HR.DT4,HR.DT5,HR.DT6
      ,HR.DT7,HR.DT8,HR.DT9,HR.DT10,HR.DT11,HR.DT12,HR.DT13,HR.DT14,HR.DT15,HR.DT16,HR.DT17,HR.DT18,HR.DT19
      ,HR.DT20,HR.DT21,HR.DT22,HR.DT23,HR.DT24,HR.DT25,HR.DT26,HR.DT27,HR.DT28,HR.DT29,HR.DT30,HR.DT31
FROM
(
SELECT A.THR_EMP_PK T1,C.EMP_ID EMP_ID,C.FULL_NAME FULL_NAME,D.ORG_NM T2,E.WORKGROUP_NM T3,MAX(C.JOIN_DT) T4,MAX(C.LEFT_DT) T5
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(1),B.SHIFT, 0), 0)) D1
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(2),B.SHIFT, 0), 0)) D2
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(3),B.SHIFT, 0), 0)) D3
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(4),B.SHIFT, 0), 0)) D4
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(5),B.SHIFT, 0), 0)) D5
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(6),B.SHIFT, 0), 0)) D6
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(7),B.SHIFT, 0), 0)) D7
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(8),B.SHIFT, 0), 0)) D8
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(9),B.SHIFT, 0), 0)) D9
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(10),B.SHIFT, 0), 0)) D10
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(11),B.SHIFT, 0), 0)) D11
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(12),B.SHIFT, 0), 0)) D12
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(13),B.SHIFT, 0), 0)) D13
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(14),B.SHIFT, 0), 0)) D14
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(15),B.SHIFT, 0), 0)) D15
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(16),B.SHIFT, 0), 0)) D16
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(17),B.SHIFT, 0), 0)) D17
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(18),B.SHIFT, 0), 0)) D18
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(19),B.SHIFT, 0), 0)) D19
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(20),B.SHIFT, 0), 0)) D20
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(21),B.SHIFT, 0), 0)) D21
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(22),B.SHIFT, 0), 0)) D22
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(23),B.SHIFT, 0), 0)) D23
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(24),B.SHIFT, 0), 0)) D24
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(25),B.SHIFT, 0), 0)) D25
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(26),B.SHIFT, 0), 0)) D26
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(27),B.SHIFT, 0), 0)) D27
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(28),B.SHIFT, 0), 0)) D28
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(29),B.SHIFT, 0), 0)) D29
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(30),B.SHIFT, 0), 0)) D30
                  ,SUM(NVL(DECODE(A.WORK_DT,p_c(31),B.SHIFT, 0), 0)) D31
                  ,MAX(NVL(DECODE(A.WORK_DT,p_c(1),F.D1_TYPE,''),'')) DT1
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(2),F.D2_TYPE,''),'')) DT2
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(3),F.D3_TYPE,''),'')) DT3
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(4),F.D4_TYPE,''),'')) DT4
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(5),F.D5_TYPE,''),'')) DT5
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(6),F.D6_TYPE,''),'')) DT6
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(7),F.D7_TYPE,''),'')) DT7
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(8),F.D8_TYPE,''),'')) DT8
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(9),F.D9_TYPE,''),'')) DT9
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(10),F.D10_TYPE,''),'')) DT10
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(11),F.D11_TYPE,''),'')) DT11
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(12),F.D12_TYPE,''),'')) DT12
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(13),F.D13_TYPE,''),'')) DT13
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(14),F.D14_TYPE,''),'')) DT14
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(15),F.D15_TYPE,''),'')) DT15
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(16),F.D16_TYPE,''),'')) DT16
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(17),F.D17_TYPE,''),'')) DT17
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(18),F.D18_TYPE,''),'')) DT18
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(19),F.D19_TYPE,''),'')) DT19
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(20),F.D20_TYPE,''),'')) DT20
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(21),F.D21_TYPE,''),'')) DT21
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(22),F.D22_TYPE,''),'')) DT22
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(23),F.D23_TYPE,''),'')) DT23
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(24),F.D24_TYPE,''),'')) DT24
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(25),F.D25_TYPE,''),'')) DT25
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(26),F.D26_TYPE,''),'')) DT26
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(27),F.D27_TYPE,''),'')) DT27
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(28),F.D28_TYPE,''),'')) DT28 
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(29),F.D29_TYPE,''),'')) DT29
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(30),F.D30_TYPE,''),'')) DT30
                ,MAX(NVL(DECODE(A.WORK_DT,p_c(31),F.D31_TYPE,''),'')) DT31
    FROM THR_WG_SCH_DETAIL a,THR_WORK_SHIFT b,THR_EMPLOYEE C,TCO_ORG D,THR_WORK_GROUP E,THR_WORK_MONTH F
    WHERE a.DEL_IF=0 AND b.del_if=0 AND C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0 AND F.DEL_IF(+) = 0
        AND A.THR_EMP_PK=C.PK 
        AND C.THR_WG_PK=E.PK 
        AND C.TCO_ORG_PK=D.PK
        AND F.THR_EMP_PK(+) = C.PK
        AND A.THR_WS_PK=b.pk
        AND F.WORK_MON(+) = p_work_mon
        AND a.WORK_DT BETWEEN p_from and p_to
        AND C.JOIN_DT<=A.WORK_DT
        AND (C.LEFT_DT IS NULL OR C.LEFT_DT>A.WORK_DT)
        AND C.SEQUENCE_DT = p_sequence_dt               
        GROUP BY  A.THR_EMP_PK,C.EMP_ID,C.FULL_NAME,D.ORG_NM,E.WORKGROUP_NM)HR;


   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00500_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00500_0
                                (
                                   p_work_mon varchar2,
                                   p_from varchar2,
                                   p_to varchar2,
                                   p_imp_seq varchar2,
                                   p_rtn_value    out  sys_refcursor
                                ) IS
  l_rtn_cur   sys_refcursor;
   TYPE Char_Array IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
    p_c Char_Array;
    tmp         number;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN

     FOR d IN 1..31 LOOP
if to_number(substr(p_from,-2))+d-1>31 then
        tmp:=to_number(substr(p_from,-2))+d-1-31;
        if tmp<10 then
            p_c(d):=substr(p_to,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_to,1,6)||tmp;
        end if;
    else
        tmp:=to_number(substr(p_from,-2))+d-1;
        if tmp<10 then
            p_c(d):=substr(p_from,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_from,1,6)||tmp;
        end if;    
    end if;    
END LOOP;    


   OPEN l_rtn_cur FOR
      SELECT MAN.EMP_ID
      , MAN.D1, MAN.D2, MAN.D3, MAN.D4, MAN.D5, MAN.D6, MAN.D7, MAN.D8, MAN.D9, MAN.D10
      , MAN.D11, MAN.D12, MAN.D13, MAN.D14, MAN.D15, MAN.D16, MAN.D17, MAN.D18, MAN.D19, MAN.D20
      , MAN.D21, MAN.D22, MAN.D23, MAN.D24, MAN.D25, MAN.D26, MAN.D27, MAN.D28, MAN.D29, MAN.D30, MAN.D31
      
--     ,(CASE WHEN MAN.H1='0' THEN  DECODE(MAN.D1,0,NULL,MAN.D1) ELSE  DECODE(MAN.D1,0,NULL,'R'||MAN.D1) END)
--    ,(CASE WHEN MAN.H2='0' THEN  DECODE(MAN.D2,0,NULL,MAN.D2) ELSE  DECODE(MAN.D2,0,NULL,'R'||MAN.D2) END)
--    ,(CASE WHEN MAN.H3='0' THEN  DECODE(MAN.D3,0,NULL,MAN.D3) ELSE  DECODE(MAN.D3,0,NULL,'R'||MAN.D3) END)
--    ,(CASE WHEN MAN.H4='0' THEN  DECODE(MAN.D4,0,NULL,MAN.D4) ELSE  DECODE(MAN.D4,0,NULL,'R'||MAN.D4) END)
--     ,(CASE WHEN MAN.H5='0' THEN  DECODE(MAN.D5,0,NULL,MAN.D5)   ELSE  DECODE(MAN.D5,0,NULL,'R'||MAN.D5) END)
--     ,(CASE WHEN MAN.H6='0' THEN  DECODE(MAN.D6,0,NULL,MAN.D6) ELSE  DECODE(MAN.D6,0,NULL,'R'||MAN.D6) END)
--     ,(CASE WHEN MAN.H7='0' THEN  DECODE(MAN.D7,0,NULL,MAN.D7) ELSE  DECODE(MAN.D7,0,NULL,'R'||MAN.D7) END)
--      ,(CASE WHEN MAN.H8='0' THEN  DECODE(MAN.D8,0,NULL,MAN.D8)   ELSE  DECODE(MAN.D8,0,NULL,'R'||MAN.D8) END)
--     ,(CASE WHEN MAN.H9='0' THEN  DECODE(MAN.D9,0,NULL,MAN.D9) ELSE  DECODE(MAN.D9,0,NULL,'R'||MAN.D9) END)
--     ,(CASE WHEN MAN.H10='0' THEN  DECODE(MAN.D10,0,NULL,MAN.D10) ELSE  DECODE(MAN.D10,0,NULL,'R'||MAN.D10) END)
--     ,(CASE WHEN MAN.H11='0' THEN  DECODE(MAN.D11,0,NULL,MAN.D11) ELSE  DECODE(MAN.D11,0,NULL,'R'||MAN.D11) END)
--     ,(CASE WHEN MAN.H12='0' THEN  DECODE(MAN.D12,0,NULL,MAN.D12) ELSE  DECODE(MAN.D12,0,NULL,'R'||MAN.D12) END)
--     ,(CASE WHEN MAN.H13='0' THEN  DECODE(MAN.D13,0,NULL,MAN.D13) ELSE  DECODE(MAN.D13,0,NULL,'R'||MAN.D13) END)
--     ,(CASE WHEN MAN.H14='0' THEN  DECODE(MAN.D14,0,NULL,MAN.D14) ELSE  DECODE(MAN.D14,0,NULL,'R'||MAN.D14) END)
--     ,(CASE WHEN MAN.H15='0' THEN  DECODE(MAN.D15,0,NULL,MAN.D15) ELSE  DECODE(MAN.D15,0,NULL,'R'||MAN.D15) END)
--     ,(CASE WHEN MAN.H16='0' THEN  DECODE(MAN.D16,0,NULL,MAN.D16) ELSE  DECODE(MAN.D16,0,NULL,'R'||MAN.D16) END)
--     ,(CASE WHEN MAN.H17='0' THEN  DECODE(MAN.D17,0,NULL,MAN.D17) ELSE  DECODE(MAN.D17,0,NULL,'R'||MAN.D17) END)
--     ,(CASE WHEN MAN.H18='0' THEN  DECODE(MAN.D18,0,NULL,MAN.D18) ELSE  DECODE(MAN.D18,0,NULL,'R'||MAN.D18) END)
--     ,(CASE WHEN MAN.H19='0' THEN  DECODE(MAN.D19,0,NULL,MAN.D19) ELSE  DECODE(MAN.D19,0,NULL,'R'||MAN.D19) END)
--     ,(CASE WHEN MAN.H20='0' THEN  DECODE(MAN.D20,0,NULL,MAN.D20) ELSE  DECODE(MAN.D20,0,NULL,'R'||MAN.D20) END)
--     ,(CASE WHEN MAN.H21='0' THEN  DECODE(MAN.D21,0,NULL,MAN.D21) ELSE  DECODE(MAN.D21,0,NULL,'R'||MAN.D21) END)
--     ,(CASE WHEN MAN.H22='0' THEN  DECODE(MAN.D22,0,NULL,MAN.D22) ELSE  DECODE(MAN.D22,0,NULL,'R'||MAN.D22) END)
--     ,(CASE WHEN MAN.H23='0' THEN  DECODE(MAN.D23,0,NULL,MAN.D23) ELSE  DECODE(MAN.D23,0,NULL,'R'||MAN.D23) END)
--     ,(CASE WHEN MAN.H24='0' THEN  DECODE(MAN.D24,0,NULL,MAN.D24) ELSE  DECODE(MAN.D24,0,NULL,'R'||MAN.D24) END)
--     ,(CASE WHEN MAN.H25='0' THEN  DECODE(MAN.D25,0,NULL,MAN.D25) ELSE  DECODE(MAN.D25,0,NULL,'R'||MAN.D25) END)
--    ,(CASE WHEN MAN.H26='0' THEN  DECODE(MAN.D26,0,NULL,MAN.D26) ELSE  DECODE(MAN.D26,0,NULL,'R'||MAN.D26) END)
--     ,(CASE WHEN MAN.H27='0' THEN  DECODE(MAN.D27,0,NULL,MAN.D27) ELSE  DECODE(MAN.D27,0,NULL,'R'||MAN.D27) END)
--    ,(CASE WHEN MAN.H28='0' THEN  DECODE(MAN.D28,0,NULL,MAN.D28) ELSE  DECODE(MAN.D28,0,NULL,'R'||MAN.D28) END)
--    ,(CASE WHEN MAN.H29='0' THEN  DECODE(MAN.D29,0,NULL,MAN.D29) ELSE  DECODE(MAN.D29,0,NULL,'R'||MAN.D29) END)
--    ,(CASE WHEN MAN.H30='0' THEN  DECODE(MAN.D30,0,NULL,MAN.D30) ELSE  DECODE(MAN.D30,0,NULL,'R'||MAN.D30) END)
--    ,(CASE WHEN MAN.H31='0' THEN  DECODE(MAN.D31,0,NULL,MAN.D31) ELSE  DECODE(MAN.D31,0,NULL,'R'||MAN.D31) END)
   ,p_work_mon,p_from,p_to
FROM
(
SELECT C.EMP_ID EMP_ID
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(1),B.SHIFT, 0), 0)) D1
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(2),B.SHIFT, 0), 0)) D2
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(3),B.SHIFT, 0), 0)) D3
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(4),B.SHIFT, 0), 0)) D4
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(5),B.SHIFT, 0), 0)) D5
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(6),B.SHIFT, 0), 0)) D6
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(7),B.SHIFT, 0), 0)) D7
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(8),B.SHIFT, 0), 0)) D8
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(9),B.SHIFT, 0), 0)) D9
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(10),B.SHIFT, 0), 0)) D10
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(11),B.SHIFT, 0), 0)) D11
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(12),B.SHIFT, 0), 0)) D12
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(13),B.SHIFT, 0), 0)) D13
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(14),B.SHIFT, 0), 0)) D14
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(15),B.SHIFT, 0), 0)) D15
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(16),B.SHIFT, 0), 0)) D16
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(17),B.SHIFT, 0), 0)) D17
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(18),B.SHIFT, 0), 0)) D18
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(19),B.SHIFT, 0), 0)) D19
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(20),B.SHIFT, 0), 0)) D20
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(21),B.SHIFT, 0), 0)) D21
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(22),B.SHIFT, 0), 0)) D22
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(23),B.SHIFT, 0), 0)) D23
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(24),B.SHIFT, 0), 0)) D24
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(25),B.SHIFT, 0), 0)) D25
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(26),B.SHIFT, 0), 0)) D26
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(27),B.SHIFT, 0), 0)) D27
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(28),B.SHIFT, 0), 0)) D28
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(29),B.SHIFT, 0), 0)) D29
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(30),B.SHIFT, 0), 0)) D30
  ,SUM(NVL(DECODE(A.WORK_DT,p_c(31),B.SHIFT, 0), 0)) D31
   ,MAX(NVL(DECODE(A.WORK_DT,p_c(1),NVL(A.HOL_TYPE,'0'), '0'), '0')) H1
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(2),NVL(A.HOL_TYPE,'0'), '0'), '0')) H2
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(3),NVL(A.HOL_TYPE,'0'), '0'), '0')) H3
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(4),NVL(A.HOL_TYPE,'0'), '0'), '0')) H4
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(5),NVL(A.HOL_TYPE,'0'), '0'), '0')) H5
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(6),NVL(A.HOL_TYPE,'0'), '0'), '0')) H6
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(7),NVL(A.HOL_TYPE,'0'), '0'), '0')) H7
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(8),NVL(A.HOL_TYPE,'0'), '0'), '0')) H8
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(9),NVL(A.HOL_TYPE,'0'), '0'), '0')) H9
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(10),NVL(A.HOL_TYPE,'0'), '0'), '0')) H10
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(11),NVL(A.HOL_TYPE,'0'), '0'), '0')) H11
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(12),NVL(A.HOL_TYPE,'0'), '0'), '0')) H12
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(13),NVL(A.HOL_TYPE,'0'), '0'), '0')) H13
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(14),NVL(A.HOL_TYPE,'0'), '0'), '0')) H14
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(15),NVL(A.HOL_TYPE,'0'), '0'), '0')) H15
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(16),NVL(A.HOL_TYPE,'0'), '0'), '0')) H16
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(17),NVL(A.HOL_TYPE,'0'), '0'), '0')) H17
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(18),NVL(A.HOL_TYPE,'0'), '0'), '0')) H18
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(19),NVL(A.HOL_TYPE,'0'), '0'), '0')) H19
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(20),NVL(A.HOL_TYPE,'0'), '0'), '0')) H20
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(21),NVL(A.HOL_TYPE,'0'), '0'), '0')) H21
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(22),NVL(A.HOL_TYPE,'0'), '0'), '0')) H22
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(23),NVL(A.HOL_TYPE,'0'), '0'), '0')) H23
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(24),NVL(A.HOL_TYPE,'0'), '0'), '0')) H24
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(25),NVL(A.HOL_TYPE,'0'), '0'), '0')) H25
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(26),NVL(A.HOL_TYPE,'0'), '0'), '0')) H26
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(27),NVL(A.HOL_TYPE,'0'), '0'), '0')) H27
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(28),NVL(A.HOL_TYPE,'0'), '0'), '0')) H28
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(29),NVL(A.HOL_TYPE,'0'), '0'), '0')) H29
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(30),NVL(A.HOL_TYPE,'0'), '0'), '0')) H30
  ,MAX(NVL(DECODE(A.WORK_DT,p_c(31),NVL(A.HOL_TYPE,'0'), '0'), '0')) H31
    FROM THR_WG_SCH_DETAIL a,THR_WORK_SHIFT b,THR_EMPLOYEE C,TCO_ORG D,THR_WORK_GROUP E
    WHERE a.DEL_IF=0 AND b.del_if=0 AND C.DEL_IF=0 AND D.DEL_IF=0 AND E.DEL_IF=0
        AND A.THR_EMP_PK=C.PK AND C.THR_WG_PK=E.PK AND C.TCO_ORG_PK=D.PK
        AND A.THR_WS_PK=b.pk
        AND NVL(A.IMPORT_SEQ,0)=p_imp_seq              
        GROUP BY  C.EMP_ID)man;

       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ST_HR_SEL_HRTI00500_0;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00700_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00700_0 
                                (
                                   P_TCO_ORG_PK varchar2,
                                   p_group_pk varchar2,
                                   p_thr_ws_pk varchar2,
                                   p_from varchar2,
                                   p_to varchar2,
                                   p_input varchar2,
                                   p_foreigner varchar2,
                                   p_list_k varchar2,
                                   p_data_type varchar,
                                   p_confirm varchar,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
    l_rtn_cur   sys_refcursor;
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    tmp number;

/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN
      
    --0: khong tinh cong cho ngay nghi viec, 1: tinh cong cho ngay nghi viec
    OPEN l_cur FOR
    SELECT A.NUM_4 FROM VHR_HR_CODE A
    WHERE A.ID='HR0006' AND A.CODE='11';

    FETCH l_cur INTO tmp;
    l_flag_exist:=l_cur%FOUND;
    IF l_flag_exist=FALSE THEN
        tmp:=0;
    END IF;    
    CLOSE l_cur;
         
         
         
    IF p_data_type ='5' THEN --SELECT ALL         
          open l_rtn_cur for
          SELECT A.PK,c.ORG_NM,gp.WORKGROUP_NM,A.EMP_ID, A.FULL_NAME,GW.THR_WS_PK
           ,NVL(WKD.DATE_IN,GW.WORK_DT),'0', WKD.TIME_IN
           ,DECODE(WKD.DATE_OUT,NULL,DECODE(WS.DURING_DAY,2,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.WORK_DT),WKD.DATE_OUT)
           ,'0',WKD.TIME_OUT
           ,WKD.WORK_TIME
           ,WKD.OVT,WKD.NT,WKD.NT2,WKD.NT3,WKD.HT,ABS.CODE, ABS.ABSENCE_TIME
           ,CASE WHEN A.END_PROBATION >= GW.WORK_DT THEN 0 ELSE hr_F_CAL_ALE_2(GW.WORK_DT,A.JOIN_DT,NVL(A.ALE_DAY_IN_YEAR,0),A.PK,NVL(ALE_PLUS,0)) END AS ALE    --KHONG HIEN ALE TRONG THOI GIAN THU VIEC
           ,WKD.PK,WKD.OVT_PK,ABS.PK,GW.WORK_DT,GP2.WORKGROUP_NM
           ,WKD.NT_PK,WKD.HT_PK
           ,GW.WORK_DT,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.HOL_TYPE
           ,NVL(WKD.MOD_CASE,'N'),WKD.NO_SCAN,'',WKD.NT2_PK,WKD.NT3_PK,WKD.OT_PLUS
           ,(case when nvl(gw.CLOSE_M_YN,'N')='Y' then 'M' when nvl(gw.CLOSE_YN,'N')='Y' then 'Y' else 'N'  end)
           ,gw.note_att,WKD.TEMP_OUT,WKD.TEMP_IN,WKD.TEMP_OUT2,WKD.TEMP_IN2,WKD.TEMP_WT,WKD.TEMP_OT,WKD.TEMP_NT,WKD.TEMP_NT2,WKD.TEMP_NT3,WKD.TEMP_HT
           ,nvl(gw.approve_yn,'N') 
          FROM THR_EMPLOYEE A, TCO_ORG C,THR_WORK_GROUP GP,THR_WG_SCH_DETAIL GW,THR_WORK_SHIFT WS,THR_WORK_GROUP GP2
                 ,(SELECT D.THR_EMP_PK AS THR_EMP_PK,D.WORK_DT AS W_DATE,MAX( D.TIME_IN) AS TIME_IN, MAX(D.TIME_OUT) AS TIME_OUT, MAX(D.WORK_TIME) AS WORK_TIME
               ,MAX(D.PK) AS PK,MAX(D.THR_WS_PK) AS THR_WS_PK
               ,SUM(DECODE(H.OT_TYPE,'OT',NVL(H.OT_TIME,0),0)) AS OVT
               ,SUM(DECODE(H.OT_TYPE,'NT',NVL(H.OT_TIME,0),0)) AS NT
               ,SUM(DECODE(H.OT_TYPE,'NT2',NVL(H.OT_TIME,0),0)) AS NT2
               ,SUM(DECODE(H.OT_TYPE,'NT3',NVL(H.OT_TIME,0),0)) AS NT3
                ,SUM(DECODE(H.OT_TYPE,'HT',NVL(H.OT_TIME,0),0)) AS HT
                 ,SUM(DECODE(H.OT_TYPE,'OT',H.PK,0)) AS OVT_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT',H.PK,0)) AS NT_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT2',H.PK,0)) AS NT2_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT3',H.PK,0)) AS NT3_PK
                 ,SUM(DECODE(H.OT_TYPE,'HT',H.PK,0)) AS HT_PK
                 ,MAX( D.DATE_IN) AS DATE_IN
                 ,MAX( D.DATE_OUT) AS DATE_OUT
                 ,MAX(CASE WHEN NVL(D.MOD_BYHAND_YN,'N')='Y'  THEN 'B'
                           WHEN NVL(H.MOD_BYHAND_YN,'N')='Y' THEN 'B'
                           WHEN NVL(D.MOD_AUTO_YN,'N')='Y' AND NVL(D.MOD_BYHAND_YN,'N')='N' THEN 'A'
                           WHEN NVL(H.MOD_AUTO_YN,'N')='Y' AND NVL(H.MOD_BYHAND_YN,'N')='N' THEN 'A'
                           ELSE 'N' END) MOD_CASE
                 ,D.NO_SCAN_FLAG AS NO_SCAN, max(h.OT_PLUS) as OT_PLUS
                 ,MAX(D.TEMP_OUT) TEMP_OUT,MAX(D.TEMP_IN) TEMP_IN,MAX(D.TEMP_OUT2) TEMP_OUT2,MAX(D.TEMP_IN2) TEMP_IN2
                 ,MAX(D.TEMP_WT) TEMP_WT,MAX(D.TEMP_OT) TEMP_OT
                 ,MAX(D.TEMP_NT) TEMP_NT,MAX(D.TEMP_NT2) TEMP_NT2,MAX(D.TEMP_NT3) TEMP_NT3,MAX(D.TEMP_HT) TEMP_HT
                    FROM THR_TIME_MACHINE D,THR_EXTRA_TIME H,THR_EMPLOYEE V
                  WHERE D.DEL_IF = 0 AND V.DEL_IF=0 
                  AND H.DEL_IF(+)=0 AND D.THR_EMP_PK=V.PK  
                  AND D.THR_EMP_PK=H.THR_EMP_PK(+)
                  AND D.WORK_DT=H.WORK_DT(+)
                  AND D.WORK_DT BETWEEN p_from AND p_to
                  AND (p_input IS NULL 
                     OR  (UPPER(V.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(V.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(V.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                  AND V.TCO_ORG_PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
                  GROUP BY  D.THR_EMP_PK, D.WORK_DT,D.NO_SCAN_FLAG) WKD
               ,(SELECT E.ABSENCE_DT AS ABS_DATE,E.THR_EMP_PK, E.ABSENCE_TYPE AS CODE, E.ABSENCE_TIME,E.PK
                   FROM THR_ABSENCE E,THR_EMPLOYEE F
                  WHERE E.DEL_IF = 0 AND F.DEL_IF=0  AND F.PK=E.THR_EMP_PK
                    AND E.ABSENCE_DT  BETWEEN p_from AND p_to
                    AND (p_input IS NULL 
                         OR  (UPPER(F.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(F.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(F.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                    AND F.TCO_ORG_PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
                ) ABS
         WHERE A.DEL_IF = 0 AND C.DEL_IF=0 AND GP.DEL_IF=0 AND GW.DEL_IF=0 AND WS.DEL_IF=0 AND GP2.DEL_IF=0
           AND A.PK=GW.THR_EMP_PK AND GW.THR_WS_PK=WS.PK AND GW.THR_WG_PK=GP2.PK 
           AND NVL(A.OLD_JOIN_DT,A.JOIN_DT) <= p_to
           AND NVL(A.LEFT_DT,'99999999') > TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')-tmp,'YYYYMMDD')
           AND A.TCO_ORG_PK = C.PK AND A.THR_WG_PK=GP.PK
           AND GW.WORK_DT BETWEEN p_from AND p_to
           AND GW.THR_EMP_PK = WKD.THR_EMP_PK(+)
           AND GW.THR_EMP_PK = ABS.THR_EMP_PK(+)
           AND GW.WORK_DT=WKD.W_DATE(+)
           AND GW.WORK_DT=ABS.ABS_DATE(+)
           AND DECODE(p_group_pk,'ALL',p_group_pk,GP.PK) = p_group_pk
           AND DECODE(p_thr_ws_pk,'ALL','ALL',WS.PK)=p_thr_ws_pk
           and decode(p_foreigner,'ALL','ALL',nvl(a.NATION,'01')) = p_foreigner 
           AND (p_list_k='ALL' OR A.PK IN(SELECT R.THR_EMP_PK
                                                 FROM THR_REGULATION R 
                                                 WHERE R.DEL_IF=0 AND R.THR_EMP_PK=A.PK
                                                    AND GW.WORK_DT>=R.START_DT AND NVL(R.END_DT,GW.WORK_DT)>=GW.WORK_DT)
                )
           AND C.PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
           AND A.PK NOT IN(SELECT AB.THR_EMP_PK FROM THR_ABSENCE_REG AB WHERE AB.DEL_IF=0
                        AND GW.WORK_DT BETWEEN AB.START_DT AND AB.END_DT AND AB.THR_EMP_PK=A.PK )
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           and decode(p_confirm,'ALL','ALL',nvl(GW.APPROVE_YN,'N')) = p_confirm
        ORDER BY GW.WORK_DT,C.ORG_NM,A.ID_NUM;

    ELSIF p_data_type='1' THEN --ABSENCE      
        open l_rtn_cur for
          SELECT A.PK,c.ORG_NM,gp.WORKGROUP_NM,A.EMP_ID, A.FULL_NAME,GW.THR_WS_PK
           ,GW.WORK_DT,'0', NULL TIME_IN
           ,DECODE(WS.DURING_DAY,2,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.WORK_DT)
           ,'0',NULL TIME_OUT
           ,NULL
           ,NULL,NULL,NULL,NULL,NULL,ABS.CODE, ABS.ABSENCE_TIME
           ,CASE WHEN A.END_PROBATION >= GW.WORK_DT THEN 0 ELSE hr_F_CAL_ALE_2(GW.WORK_DT,A.JOIN_DT,A.ALE_DAY_IN_YEAR,A.PK,NVL(ALE_PLUS,0)) END AS ALE    --KHONG HIEN ALE TRONG THOI GIAN THU VIEC
           ,NULL,NULL,ABS.PK,GW.WORK_DT,GP2.WORKGROUP_NM
           ,NULL,NULL
           ,GW.WORK_DT,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.HOL_TYPE
           ,NULL,NULL,'',NULL,NULL,NULL
           ,case when nvl(gw.CLOSE_M_YN,'N')='Y' then 'M' when nvl(gw.CLOSE_YN,'N')='Y' then 'Y' else 'N'  end 
           ,null,null,null,null,null,null,null,null,null,null,null
           ,nvl(gw.approve_yn,'N')
          FROM THR_EMPLOYEE A, TCO_ORG C,THR_WORK_GROUP GP,THR_WG_SCH_DETAIL GW,THR_WORK_SHIFT WS,THR_WORK_GROUP GP2
               ,(SELECT E.ABSENCE_DT AS ABS_DATE,E.THR_EMP_PK, E.ABSENCE_TYPE AS CODE, E.ABSENCE_TIME,E.PK
                   FROM THR_ABSENCE E,THR_EMPLOYEE F
                  WHERE E.DEL_IF = 0 AND F.DEL_IF=0  AND F.PK=E.THR_EMP_PK
                    AND E.ABSENCE_DT  BETWEEN p_from AND p_to
                    AND (p_input IS NULL 
                     OR  (UPPER(F.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(F.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(F.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                    AND F.TCO_ORG_PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
                ) ABS
         WHERE A.DEL_IF = 0 AND C.DEL_IF=0 AND GP.DEL_IF=0 AND GW.DEL_IF=0 AND WS.DEL_IF=0 AND GP2.DEL_IF=0
           AND A.PK=GW.THR_EMP_PK AND GW.THR_WS_PK=WS.PK AND GW.THR_WG_PK=GP2.PK 
           AND NVL(A.OLD_JOIN_DT,A.JOIN_DT) <= p_to
           AND NVL(A.LEFT_DT,'99999999') > TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')-tmp,'YYYYMMDD')
           AND A.TCO_ORG_PK = C.PK AND A.THR_WG_PK=GP.PK
           AND GW.WORK_DT BETWEEN p_from AND p_to
           AND GW.THR_EMP_PK = ABS.THR_EMP_PK
           AND GW.WORK_DT=ABS.ABS_DATE
           AND DECODE(p_group_pk,'ALL',p_group_pk,GP.PK) = p_group_pk
           AND DECODE(p_thr_ws_pk,'ALL','ALL',WS.PK)=p_thr_ws_pk
           and decode(p_foreigner,'ALL','ALL',nvl(a.NATION,'01')) = p_foreigner 
           AND (p_list_k='ALL' OR A.PK IN(SELECT R.THR_EMP_PK
                                                 FROM THR_REGULATION R 
                                                 WHERE R.DEL_IF=0 AND R.THR_EMP_PK=A.PK
                                                    AND GW.WORK_DT>=R.START_DT AND NVL(R.END_DT,GW.WORK_DT)>=GW.WORK_DT)
                )
           AND C.PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
           AND A.PK NOT IN(SELECT AB.THR_EMP_PK FROM THR_ABSENCE_REG AB WHERE AB.DEL_IF=0
                        AND GW.WORK_DT BETWEEN AB.START_DT AND AB.END_DT AND AB.THR_EMP_PK=A.PK )
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           and decode(p_confirm,'ALL','ALL',nvl(GW.APPROVE_YN,'N')) = p_confirm
        ORDER BY GW.WORK_DT,C.ORG_NM,A.ID_NUM;  
         
    ELSIF p_data_type='2' THEN --WORKING TIME
        open l_rtn_cur for
          SELECT A.PK,c.ORG_NM,gp.WORKGROUP_NM,A.EMP_ID, A.FULL_NAME,GW.THR_WS_PK
           ,NVL(WKD.DATE_IN,GW.WORK_DT),'0', WKD.TIME_IN
           ,DECODE(WKD.DATE_OUT,NULL,DECODE(WS.DURING_DAY,2,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.WORK_DT),WKD.DATE_OUT)
           ,'0',WKD.TIME_OUT
           ,WKD.WORK_TIME
           ,WKD.OVT,WKD.NT,WKD.NT2,WKD.NT3,WKD.HT,NULL, NULL
           ,CASE WHEN A.END_PROBATION >= GW.WORK_DT THEN 0 ELSE hr_F_CAL_ALE_2(GW.WORK_DT,A.JOIN_DT,A.ALE_DAY_IN_YEAR,A.PK,NVL(ALE_PLUS,0)) END AS ALE    --KHONG HIEN ALE TRONG THOI GIAN THU VIEC
           ,WKD.PK,WKD.OVT_PK,NULL,GW.WORK_DT,GP2.WORKGROUP_NM
           ,WKD.NT_PK,WKD.HT_PK
           ,GW.WORK_DT,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.HOL_TYPE
           ,NVL(WKD.MOD_CASE,'N'),WKD.NO_SCAN,'',WKD.NT2_PK,WKD.NT3_PK,WKD.OT_PLUS
           ,case when nvl(gw.CLOSE_M_YN,'N')='Y' then 'M' when nvl(gw.CLOSE_YN,'N')='Y' then 'Y' else 'N'  end 
           ,gw.note_att,WKD.TEMP_OUT,WKD.TEMP_IN,WKD.TEMP_OUT2,WKD.TEMP_IN2,WKD.TEMP_WT,WKD.TEMP_OT,WKD.TEMP_NT,WKD.TEMP_NT2,WKD.TEMP_NT3,WKD.TEMP_HT
           ,nvl(gw.approve_yn,'N')
          FROM THR_EMPLOYEE A, TCO_ORG C,THR_WORK_GROUP GP,THR_WG_SCH_DETAIL GW,THR_WORK_SHIFT WS,THR_WORK_GROUP GP2
                 ,(SELECT D.THR_EMP_PK AS THR_EMP_PK,D.WORK_DT AS W_DATE,MAX( D.TIME_IN) AS TIME_IN, MAX(D.TIME_OUT) AS TIME_OUT, MAX(D.WORK_TIME) AS WORK_TIME
               ,MAX(D.PK) AS PK,MAX(D.THR_WS_PK) AS THR_WS_PK
               ,SUM(DECODE(H.OT_TYPE,'OT',NVL(H.OT_TIME,0),0)) AS OVT
               ,SUM(DECODE(H.OT_TYPE,'NT',NVL(H.OT_TIME,0),0)) AS NT
               ,SUM(DECODE(H.OT_TYPE,'NT2',NVL(H.OT_TIME,0),0)) AS NT2
               ,SUM(DECODE(H.OT_TYPE,'NT3',NVL(H.OT_TIME,0),0)) AS NT3
                ,SUM(DECODE(H.OT_TYPE,'HT',NVL(H.OT_TIME,0),0)) AS HT
                 ,SUM(DECODE(H.OT_TYPE,'OT',H.PK,0)) AS OVT_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT',H.PK,0)) AS NT_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT2',H.PK,0)) AS NT2_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT3',H.PK,0)) AS NT3_PK
                 ,SUM(DECODE(H.OT_TYPE,'HT',H.PK,0)) AS HT_PK
                 ,MAX( D.DATE_IN) AS DATE_IN
                 ,MAX( D.DATE_OUT) AS DATE_OUT
                 ,MAX(CASE WHEN NVL(D.MOD_BYHAND_YN,'N')='Y'  THEN 'B'
                           WHEN NVL(H.MOD_BYHAND_YN,'N')='Y' THEN 'B'
                           WHEN NVL(D.MOD_AUTO_YN,'N')='Y' AND NVL(D.MOD_BYHAND_YN,'N')='N' THEN 'A'
                           WHEN NVL(H.MOD_AUTO_YN,'N')='Y' AND NVL(H.MOD_BYHAND_YN,'N')='N' THEN 'A'
                           ELSE 'N' END) MOD_CASE
                 ,D.NO_SCAN_FLAG AS NO_SCAN, max(h.OT_PLUS) as OT_PLUS
                  ,MAX(D.TEMP_OUT) TEMP_OUT,MAX(D.TEMP_IN) TEMP_IN,MAX(D.TEMP_OUT2) TEMP_OUT2,MAX(D.TEMP_IN2) TEMP_IN2
                 ,MAX(D.TEMP_WT) TEMP_WT,MAX(D.TEMP_OT) TEMP_OT
                 ,MAX(D.TEMP_NT) TEMP_NT,MAX(D.TEMP_NT2) TEMP_NT2,MAX(D.TEMP_NT3) TEMP_NT3,MAX(D.TEMP_HT) TEMP_HT
                    FROM THR_TIME_MACHINE D,THR_EXTRA_TIME H,THR_EMPLOYEE V
                  WHERE D.DEL_IF = 0 AND V.DEL_IF=0 
                  AND H.DEL_IF(+)=0 AND D.THR_EMP_PK=V.PK  
                  AND D.THR_EMP_PK=H.THR_EMP_PK(+)
                  AND D.WORK_DT=H.WORK_DT(+)
                  AND D.WORK_DT BETWEEN p_from AND p_to
                  AND (p_input IS NULL 
                     OR  (UPPER(V.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(V.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(V.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                   AND V.TCO_ORG_PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
                   AND D.TIME_IN IS NOT NULL AND D.TIME_OUT IS NOT NULL
                  GROUP BY  D.THR_EMP_PK, D.WORK_DT,D.NO_SCAN_FLAG) WKD
         WHERE A.DEL_IF = 0 AND C.DEL_IF=0 AND GP.DEL_IF=0 AND GW.DEL_IF=0 AND WS.DEL_IF=0 AND GP2.DEL_IF=0
           AND A.PK=GW.THR_EMP_PK AND GW.THR_WS_PK=WS.PK AND GW.THR_WG_PK=GP2.PK 
           AND NVL(A.OLD_JOIN_DT,A.JOIN_DT) <= p_to
           AND NVL(A.LEFT_DT,'99999999') > TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')-tmp,'YYYYMMDD')
           AND A.TCO_ORG_PK = C.PK AND A.THR_WG_PK=GP.PK
           AND GW.WORK_DT BETWEEN p_from AND p_to
           AND GW.THR_EMP_PK = WKD.THR_EMP_PK
           AND GW.WORK_DT=WKD.W_DATE
           AND DECODE(p_group_pk,'ALL',p_group_pk,GP.PK) = p_group_pk
           AND DECODE(p_thr_ws_pk,'ALL','ALL',WS.PK)=p_thr_ws_pk
           and decode(p_foreigner,'ALL','ALL',nvl(a.NATION,'01')) = p_foreigner 
           AND (p_list_k='ALL' OR A.PK IN(SELECT R.THR_EMP_PK
                                                 FROM THR_REGULATION R 
                                                 WHERE R.DEL_IF=0 AND R.THR_EMP_PK=A.PK
                                                    AND GW.WORK_DT>=R.START_DT AND NVL(R.END_DT,GW.WORK_DT)>=GW.WORK_DT)
                )
           AND C.PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
           AND A.PK NOT IN(SELECT AB.THR_EMP_PK FROM THR_ABSENCE_REG AB WHERE AB.DEL_IF=0
                        AND GW.WORK_DT BETWEEN AB.START_DT AND AB.END_DT AND AB.THR_EMP_PK=A.PK )
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           and decode(p_confirm,'ALL','ALL',nvl(GW.APPROVE_YN,'N')) = p_confirm                     
        ORDER BY GW.WORK_DT,C.ORG_NM,A.ID_NUM;

    ELSIF p_data_type='3' THEN --INCORRECT TIME
        open l_rtn_cur for
          SELECT A.PK,c.ORG_NM,gp.WORKGROUP_NM,A.EMP_ID, A.FULL_NAME,GW.THR_WS_PK
           ,NVL(WKD.DATE_IN,GW.WORK_DT),'0', WKD.TIME_IN
           ,DECODE(WKD.DATE_OUT,NULL,DECODE(WS.DURING_DAY,2,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.WORK_DT),WKD.DATE_OUT)
           ,'0',WKD.TIME_OUT
           ,WKD.WORK_TIME
           ,WKD.OVT,WKD.NT,WKD.NT2,WKD.NT3,WKD.HT,NULL, NULL
           ,CASE WHEN A.END_PROBATION >= GW.WORK_DT THEN 0 ELSE hr_F_CAL_ALE_2(GW.WORK_DT,A.JOIN_DT,A.ALE_DAY_IN_YEAR,A.PK,NVL(ALE_PLUS,0)) END AS ALE    --KHONG HIEN ALE TRONG THOI GIAN THU VIEC
           ,WKD.PK,WKD.OVT_PK,NULL,GW.WORK_DT,GP2.WORKGROUP_NM
           ,WKD.NT_PK,WKD.HT_PK
           ,GW.WORK_DT,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.HOL_TYPE
           ,NVL(WKD.MOD_CASE,'N'),WKD.NO_SCAN,'',WKD.NT2_PK,WKD.NT3_PK,WKD.OT_PLUS
           ,case when nvl(gw.CLOSE_M_YN,'N')='Y' then 'M' when nvl(gw.CLOSE_YN,'N')='Y' then 'Y' else 'N'  end 
           ,gw.note_att,WKD.TEMP_OUT,WKD.TEMP_IN,WKD.TEMP_OUT2,WKD.TEMP_IN2,WKD.TEMP_WT,WKD.TEMP_OT,WKD.TEMP_NT,WKD.TEMP_NT2,WKD.TEMP_NT3
           ,WKD.TEMP_HT,nvl(gw.approve_yn,'N')
          FROM THR_EMPLOYEE A, TCO_ORG C,THR_WORK_GROUP GP,THR_WG_SCH_DETAIL GW,THR_WORK_SHIFT WS,THR_WORK_GROUP GP2
                 ,(SELECT D.THR_EMP_PK AS THR_EMP_PK,D.WORK_DT AS W_DATE,MAX( D.TIME_IN) AS TIME_IN, MAX(D.TIME_OUT) AS TIME_OUT, MAX(D.WORK_TIME) AS WORK_TIME
               ,MAX(D.PK) AS PK,MAX(D.THR_WS_PK) AS THR_WS_PK
               ,SUM(DECODE(H.OT_TYPE,'OT',NVL(H.OT_TIME,0),0)) AS OVT
               ,SUM(DECODE(H.OT_TYPE,'NT',NVL(H.OT_TIME,0),0)) AS NT
               ,SUM(DECODE(H.OT_TYPE,'NT2',NVL(H.OT_TIME,0),0)) AS NT2
               ,SUM(DECODE(H.OT_TYPE,'NT3',NVL(H.OT_TIME,0),0)) AS NT3
                ,SUM(DECODE(H.OT_TYPE,'HT',NVL(H.OT_TIME,0),0)) AS HT
                 ,SUM(DECODE(H.OT_TYPE,'OT',H.PK,0)) AS OVT_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT',H.PK,0)) AS NT_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT2',H.PK,0)) AS NT2_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT3',H.PK,0)) AS NT3_PK
                 ,SUM(DECODE(H.OT_TYPE,'HT',H.PK,0)) AS HT_PK
                 ,MAX( D.DATE_IN) AS DATE_IN
                 ,MAX( D.DATE_OUT) AS DATE_OUT
                 ,MAX(CASE WHEN NVL(D.MOD_BYHAND_YN,'N')='Y'  THEN 'B'
                           WHEN NVL(H.MOD_BYHAND_YN,'N')='Y' THEN 'B'
                           WHEN NVL(D.MOD_AUTO_YN,'N')='Y' AND NVL(D.MOD_BYHAND_YN,'N')='N' THEN 'A'
                           WHEN NVL(H.MOD_AUTO_YN,'N')='Y' AND NVL(H.MOD_BYHAND_YN,'N')='N' THEN 'A'
                           ELSE 'N' END) MOD_CASE
                 ,D.NO_SCAN_FLAG AS NO_SCAN, max(h.OT_PLUS) as OT_PLUS
                  ,MAX(D.TEMP_OUT) TEMP_OUT,MAX(D.TEMP_IN) TEMP_IN,MAX(D.TEMP_OUT2) TEMP_OUT2,MAX(D.TEMP_IN2) TEMP_IN2
                 ,MAX(D.TEMP_WT) TEMP_WT,MAX(D.TEMP_OT) TEMP_OT
                 ,MAX(D.TEMP_NT) TEMP_NT,MAX(D.TEMP_NT2) TEMP_NT2,MAX(D.TEMP_NT3) TEMP_NT3,MAX(D.TEMP_HT) TEMP_HT
                    FROM THR_TIME_MACHINE D,THR_EXTRA_TIME H,THR_EMPLOYEE V
                  WHERE D.DEL_IF = 0 AND V.DEL_IF=0 
                  AND H.DEL_IF(+)=0 AND D.THR_EMP_PK=V.PK  
                  AND D.THR_EMP_PK=H.THR_EMP_PK(+)
                  AND D.WORK_DT=H.WORK_DT(+)
                  AND D.WORK_DT BETWEEN p_from AND p_to
                  AND (p_input IS NULL 
                     OR  (UPPER(V.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(V.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(V.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                   AND V.TCO_ORG_PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
                 AND ( (D.TIME_IN IS NULL AND D.TIME_OUT IS NOT NULL)
                        OR (D.TIME_IN IS NOT NULL AND D.TIME_OUT IS NULL)
                       )
                 -- AND D.THR_EMP_PK NOT IN(SELECT F.THR_EMP_PK FROM THR_ABSENCE F WHERE F.DEL_IF=0 AND F.ABSENCE_DT=D.WORK_DT AND F.THR_EMP_PK=D.THR_EMP_PK)
                  GROUP BY  D.THR_EMP_PK, D.WORK_DT,D.NO_SCAN_FLAG) WKD
         WHERE A.DEL_IF = 0 AND C.DEL_IF=0 AND GP.DEL_IF=0 AND GW.DEL_IF=0 AND WS.DEL_IF=0 AND GP2.DEL_IF=0
           AND A.PK=GW.THR_EMP_PK AND GW.THR_WS_PK=WS.PK AND GW.THR_WG_PK=GP2.PK 
           AND NVL(A.OLD_JOIN_DT,A.JOIN_DT) <= p_to
           AND NVL(A.LEFT_DT,'99999999') > TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')-tmp,'YYYYMMDD')
           AND A.TCO_ORG_PK = C.PK AND A.THR_WG_PK=GP.PK
           AND GW.WORK_DT BETWEEN p_from AND p_to
           AND GW.THR_EMP_PK = WKD.THR_EMP_PK
           AND GW.WORK_DT=WKD.W_DATE
           AND DECODE(p_group_pk,'ALL',p_group_pk,GP.PK) = p_group_pk
           AND DECODE(p_thr_ws_pk,'ALL','ALL',WS.PK)=p_thr_ws_pk
           and decode(p_foreigner,'ALL','ALL',nvl(a.NATION,'01')) = p_foreigner 
           AND (p_list_k='ALL' OR A.PK IN(SELECT R.THR_EMP_PK
                                                 FROM THR_REGULATION R 
                                                 WHERE R.DEL_IF=0 AND R.THR_EMP_PK=A.PK
                                                    AND GW.WORK_DT>=R.START_DT AND NVL(R.END_DT,GW.WORK_DT)>=GW.WORK_DT)
                )
           AND C.PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
           AND A.PK NOT IN(SELECT AB.THR_EMP_PK FROM THR_ABSENCE_REG AB WHERE AB.DEL_IF=0
                        AND GW.WORK_DT BETWEEN AB.START_DT AND AB.END_DT AND AB.THR_EMP_PK=A.PK )
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           and decode(p_confirm,'ALL','ALL',nvl(GW.APPROVE_YN,'N')) = p_confirm                       
        ORDER BY GW.WORK_DT,C.ORG_NM,A.ID_NUM;

    ELSIF p_data_type='4' THEN --data blank 

        open l_rtn_cur for
            SELECT A.PK,c.ORG_NM,gp.WORKGROUP_NM,A.EMP_ID, A.FULL_NAME,GW.THR_WS_PK
           ,GW.WORK_DT,'0', ''
           ,DECODE(WS.DURING_DAY,2,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.WORK_DT)
           ,'0',''
           ,''
           ,'','','','','', '',''
           ,CASE WHEN A.END_PROBATION >= GW.WORK_DT THEN 0 ELSE hr_F_CAL_ALE_2(GW.WORK_DT,A.JOIN_DT,A.ALE_DAY_IN_YEAR,A.PK,NVL(ALE_PLUS,0)) END AS ALE    --KHONG HIEN ALE TRONG THOI GIAN THU VIEC
           ,'','','',GW.WORK_DT,GP2.WORKGROUP_NM
           ,'',''
           ,GW.WORK_DT,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.HOL_TYPE
           ,'','','','','',''
           ,(case when nvl(gw.CLOSE_M_YN,'N')='Y' then 'M' when nvl(gw.CLOSE_YN,'N')='Y' then 'Y' else 'N'  end)
           ,gw.note_att,'','','','','','','','','',''
           ,nvl(gw.approve_yn,'N') 
          FROM THR_EMPLOYEE A, TCO_ORG C,THR_WORK_GROUP GP,THR_WG_SCH_DETAIL GW,THR_WORK_SHIFT WS,THR_WORK_GROUP GP2
         WHERE A.DEL_IF = 0 AND C.DEL_IF=0 AND GP.DEL_IF=0 AND GW.DEL_IF=0 AND WS.DEL_IF=0 AND GP2.DEL_IF=0
           AND A.PK=GW.THR_EMP_PK AND GW.THR_WS_PK=WS.PK AND GW.THR_WG_PK=GP2.PK 
           AND NVL(A.OLD_JOIN_DT,A.JOIN_DT) <= p_to
           AND NVL(A.LEFT_DT,'99999999') > TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')-tmp,'YYYYMMDD')
           AND A.TCO_ORG_PK = C.PK AND A.THR_WG_PK=GP.PK
           AND GW.WORK_DT BETWEEN p_from AND p_to
           AND DECODE(p_group_pk,'ALL',p_group_pk,GP.PK) = p_group_pk
           AND DECODE(p_thr_ws_pk,'ALL','ALL',WS.PK)=p_thr_ws_pk
           and decode(p_foreigner,'ALL','ALL',nvl(a.NATION,'01')) = p_foreigner 
           AND (p_list_k='ALL' OR A.PK IN(SELECT R.THR_EMP_PK
                                                 FROM THR_REGULATION R 
                                                 WHERE R.DEL_IF=0 AND R.THR_EMP_PK=A.PK
                                                    AND GW.WORK_DT>=R.START_DT AND NVL(R.END_DT,GW.WORK_DT)>=GW.WORK_DT)
                )
           AND C.PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
           AND A.PK NOT IN(SELECT AB.THR_EMP_PK FROM THR_ABSENCE_REG AB WHERE AB.DEL_IF=0
                        AND GW.WORK_DT BETWEEN AB.START_DT AND AB.END_DT AND AB.THR_EMP_PK=A.PK )
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           and decode(p_confirm,'ALL','ALL',nvl(GW.APPROVE_YN,'N')) = p_confirm
           AND GW.thr_emp_pk not in (select t.thr_emp_pk from thr_time_machine t where t.del_if =0 
                                        and T.THR_EMP_PK = GW.THR_EMP_PK
                                        and T.WORK_DT = GW.WORK_DT)
           AND GW.thr_emp_pk not in (select t.thr_emp_pk from thr_extra_time t where t.del_if =0 
                                        and T.THR_EMP_PK = GW.THR_EMP_PK
                                        and T.WORK_DT = GW.WORK_DT)
           AND GW.thr_emp_pk not in (select ab.thr_emp_pk from thr_absence ab where ab.del_if =0 
                                        and ab.THR_EMP_PK = GW.THR_EMP_PK
                                        and AB.ABSENCE_DT = GW.WORK_DT)  
        ORDER BY GW.WORK_DT,C.ORG_NM,A.ID_NUM;
        
    
    
    END IF;       

    

       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00701_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00701_0
                                (
                                   p_emp_id varchar2,
                                   p_from varchar2,
                                   p_to varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN

      open l_rtn_cur for
      SELECT A.LOCATION,b.EMP_ID,b.ID_NUM,a.WORK_DT,a.TIME,0,0,to_char(a.crt_dt,'DD/MM/YYYY-HH24:MI'),a.time_type
        ,nvl(T.HOL_TYPE, ' ')
      FROM THR_TIME_TEMP A,THR_EMPLOYEE B, thr_wg_sch_detail t
      WHERE B.DEL_IF=0 AND A.ID=B.ID_NUM and t.del_if=0
      and B.PK = T.THR_EMP_PK
      and A.WORK_DT = T.WORK_DT
      AND A.WORK_DT BETWEEN p_from and p_to
      and b.emp_id=p_emp_id
      order by a.WORK_DT,a.TIME;
       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00702_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00702_0
                               (
                                   p_shift_pk varchar2, --ko dung bien nay
                                   p_user_pk varchar2, --ko dung bien nay
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
  l_cur_rec number;
   l_cur sys_refcursor;
   l_flag_exist boolean;
BEGIN


    open l_cur for
                SELECT 1
                FROM THR_ROLE A
                WHERE A.DEL_IF=0 AND A.USER_PK=p_user_pk;


                FETCH l_cur INTO l_cur_rec;
                  l_flag_exist := l_cur%FOUND;
                CLOSE l_cur;


   if l_flag_exist=true then
            
         open l_rtn_cur for
      SELECT WS.SHIFT,WS.START_TIME,WS.END_TIME,WS.START_MEAL1,WS.END_MEAL1,WS.DURING_DAY,WS.PK,NVL(WS.WT_PLUS,0),WS.START_OT
      FROM THR_WORK_SHIFT WS
      WHERE WS.DEL_IF=0 AND WS.USE_YN='Y'
      and ws.tco_company_pk in (select g.tco_company_pk from thr_role r,tco_org g where r.del_if=0 and r.USER_PK=p_user_pk and g.del_if=0 and g.pk= r.tco_dept_pk )
            order by WS.SHIFT;
    else
      open l_rtn_cur for
      SELECT WS.SHIFT,WS.START_TIME,WS.END_TIME,WS.START_MEAL1,WS.END_MEAL1,WS.DURING_DAY,WS.PK,NVL(WS.WT_PLUS,0),WS.START_OT
      FROM THR_WORK_SHIFT WS
      WHERE WS.DEL_IF=0 AND WS.USE_YN='Y'
      order by WS.tco_company_pk ,WS.SHIFT ;
     end if;

    
       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00703_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00703_0
                               (
                                   p_abs_pk varchar2, --ko dung bien nay
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN

      open l_rtn_cur for
      select a.CODE,a.CODE_NM,a.CODE_FNM,a.CODE_KNM,a.NUM_1,a.NUM_2,a.CHAR_1
      from vhr_hr_code a
      where a.ID='HR0003'
      and code <> '04'
      order by code ;
       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00800_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00800_0
(
    p_tco_org_pk        varchar2,
    p_wg                varchar2,
    p_from              varchar2,
    p_to                varchar2,
    p_opt               varchar2,
    p_thr_ws_pk         varchar2,
    p_input             varchar2,
    p_m1                varchar2,
    p_m2                varchar2,
    p_nation            varchar2,
    p_status            varchar2,
    p_rtn_value    out   sys_refcursor
) IS
l_rtn_cur   sys_refcursor;
tmp number;

BEGIN

    IF p_opt=5 THEN --ALL 
 
              open l_rtn_cur for
              SELECT    B.ORG_NM,
                        wg.workgroup_nm, 
                        TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY'),
                        A.EMP_ID
                        ,A.FULL_NAME
                        ,C.DESCRIPTION 
                        ,D.TIME_IN
                        ,D.TIME_OUT
                        ,MAX(DECODE(D.HOL_TYPE, NULL, D.WT, '')) AS WT 
                        ,MAX(DECODE(D.HOL_TYPE, NULL, D.OT_XN,'')) AS OT 
                        ,MAX(D.NT) AS NT 
                        ,MAX(D.ONT) AS NT2 
                        ,MAX(DECODE(D.HOL_TYPE, 'SUN', D.OT_XN, '')) AS ST3 
                        ,MAX(DECODE(D.HOL_TYPE,'HOL',  D.OT_XN, '')) AS HT 
                        ,(case when MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >=0 then NULL 
                    else 
                            ABS(MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK))) 
                    END ) 
                        AS LATE_IN 
                        ,(case when MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >=0 then null 
                    else 
                        abs(MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK))) 
                    end)   AS EARLY_OUT 
                        ,MAX(D.MOD_BYHAND_YN ) as by_hand 
            ,MAX(D.MOD_BY) as mod_by 
            ,A.PK
            ,D.WORK_DT
            ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')
            ,null
            FROM THR_EMPLOYEE A,TCO_ORG B, THR_WORK_SHIFT C,THR_WORK_DATE D, thr_work_group wg
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0 AND D.DEL_IF=0 AND wg.del_if=0 and wg.pk=a.thr_wg_pk
            AND A.TCO_ORG_PK=B.PK AND A.PK=D.THR_EMP_PK AND C.PK=D.THR_WS_PK
            AND A.JOIN_DT<=D.WORK_DT
            AND (A.LEFT_DT>D.WORK_DT OR A.LEFT_DT IS NULL)
            AND DECODE(p_wg,'ALL',p_wg,a.THR_WG_PK ) = p_wg
            AND DECODE(p_nation,'ALL',p_nation,a.nation ) = p_nation
            AND DECODE(p_status,'ALL',p_status,a.status ) = p_status
            AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,C.PK)=p_thr_ws_pk
            AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
            AND D.WORK_DT BETWEEN p_from AND p_to
            GROUP BY B.ORG_NM,wg.workgroup_nm,D.WORK_DT,A.PK,A.EMP_ID,A.FULL_NAME,C.DESCRIPTION,D.TIME_IN,D.TIME_OUT,D.WT
             ORDER BY B.ORG_NM,wg.workgroup_nm,D.WORK_DT,A.EMP_ID;
    ELSIF p_opt=1 THEN  --INCORRECT TIME

         open l_rtn_cur for
              SELECT B.org_NM,
                     wg.workgroup_nm,
                     TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY'),
                     A.EMP_ID
                    ,A.FULL_NAME
                    ,C.DESCRIPTION
                    ,D.TIME_IN
                    ,D.TIME_OUT
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.WT, '')) AS WT 
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.OT_XN,'')) AS OT 
                    ,MAX(D.NT) AS NT 
                    ,MAX(D.ONT) AS NT2 
                    ,MAX(DECODE(D.HOL_TYPE, 'SUN', D.OT_XN, '')) AS ST3 
                    ,MAX(DECODE(D.HOL_TYPE,'HOL',  D.OT_XN, '')) AS HT
                    ,(case when MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >=0 then NULL 
                       else 
                           ABS(MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK))) 
                     END ) 
                        AS LATE_IN 
                    ,(case when MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >=0 then null 
                        else 
                            abs(MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK))) 
                      end)   AS EARLY_OUT 
                    ,MAX(D.MOD_BYHAND_YN ) as by_hand 
                    ,MAX(D.MOD_BY) as mod_by 
                    ,A.PK
                    ,D.WORK_DT
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')
                    ,null
            FROM THR_EMPLOYEE A,tco_org B, THR_WORK_SHIFT C,THR_WORK_DATE D, thr_work_group wg
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0 AND D.DEL_IF=0
            AND A.tco_org_PK=B.PK AND A.PK=D.THR_EMP_PK AND C.PK=D.THR_WS_PK and wg.del_if=0 and wg.pk=a.thr_wg_pk           
            AND A.JOIN_DT<=D.WORK_DT
            AND (A.LEFT_DT>D.WORK_DT OR A.LEFT_DT IS NULL)
            AND DECODE(p_wg,'ALL',p_wg,a.THR_WG_PK ) = p_wg
            AND DECODE(p_nation,'ALL',p_nation,a.nation ) = p_nation
            AND DECODE(p_status,'ALL',p_status,a.status ) = p_status
            AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,C.PK)=p_thr_ws_pk
            AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
            AND (D.TIME_IN IS NULL OR D.TIME_OUT IS NULL)
            AND D.WORK_DT BETWEEN p_from AND p_to
            GROUP BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.PK,A.EMP_ID,A.FULL_NAME,C.DESCRIPTION,D.TIME_IN,D.TIME_OUT,D.WT
               ORDER BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.EMP_ID;
      ELSIF p_opt=2 THEN  --LATELY  IN

         open l_rtn_cur for
              SELECT B.org_NM
                    ,wg.workgroup_nm
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY')
                    ,A.EMP_ID
                    ,A.FULL_NAME
                    ,C.DESCRIPTION
                    ,D.TIME_IN
                    ,D.TIME_OUT
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.WT, '')) AS WT 
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.OT_XN,'')) AS OT 
                    ,MAX(D.NT) AS NT 
                    ,MAX(D.ONT) AS NT2 
                    ,MAX(DECODE(D.HOL_TYPE, 'SUN', D.OT_XN, '')) AS ST3 
                    ,MAX(DECODE(D.HOL_TYPE,'HOL',  D.OT_XN, '')) AS HT 
                    ,(case when MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >=0 then NULL 
                        else 
                     ABS(MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK))) 
                         END ) 
                    AS LATE_IN 
                    ,(case when MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >=0 then null 
                        else 
                    abs(MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK))) 
                        end)   AS EARLY_OUT 
                    ,MAX(D.MOD_BYHAND_YN ) as by_hand 
                    ,MAX(D.MOD_BY) as mod_by
                    ,A.PK
                    ,D.WORK_DT
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')
                    ,null
            FROM THR_EMPLOYEE A,tco_org B, THR_WORK_SHIFT C,THR_WORK_DATE D, thr_work_group wg
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0 AND D.DEL_IF=0
            AND A.tco_org_PK=B.PK AND A.PK=D.THR_EMP_PK AND C.PK=D.THR_WS_PK and wg.del_if=0 and wg.pk=a.thr_wg_pk
            AND A.JOIN_DT<=D.WORK_DT
            AND (A.LEFT_DT>D.WORK_DT OR A.LEFT_DT IS NULL)
            AND DECODE(p_wg,'ALL',p_wg,a.THR_WG_PK ) = p_wg
            AND DECODE(p_nation,'ALL',p_nation,a.nation ) = p_nation
            AND DECODE(p_status,'ALL',p_status,a.status ) = p_status
            AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,C.PK)=p_thr_ws_pk
            AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
            AND HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)<0
            AND (Abs(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >= p_m1 OR p_m1 is null)
            AND (Abs(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) <= p_m2 OR p_m2 is null)
            AND D.WORK_DT BETWEEN p_from AND p_to
            GROUP BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.PK,A.EMP_ID,A.FULL_NAME,C.DESCRIPTION,D.TIME_IN,D.TIME_OUT,D.WT
               ORDER BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.EMP_ID;


    ELSIF p_opt=3 THEN  --EARLY  OUT

         open l_rtn_cur for
              SELECT B.org_NM
                    ,wg.workgroup_nm
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY')
                    ,A.EMP_ID
                    ,A.FULL_NAME
                    ,C.DESCRIPTION
                    ,D.TIME_IN
                    ,D.TIME_OUT
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.WT, '')) AS WT 
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.OT_XN,'')) AS OT 
                    ,MAX(D.NT) AS NT 
                    ,MAX(D.ONT) AS NT2 
                    ,MAX(DECODE(D.HOL_TYPE, 'SUN', D.OT_XN, '')) AS ST3 
                    ,MAX(DECODE(D.HOL_TYPE,'HOL',  D.OT_XN, '')) AS HT 
                    ,(case when MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >=0 then NULL 
                        else 
                    ABS(MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK))) 
                        END ) 
                        AS LATE_IN 
                    ,(case when MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >=0 then null 
                        else 
                    abs(MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK))) 
                        end)   
                        AS EARLY_OUT 
                    ,MAX(D.MOD_BYHAND_YN ) as by_hand 
                    ,MAX(D.MOD_BY) as mod_by 
                    ,A.PK
                    ,D.WORK_DT
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')
                    ,NULL
            FROM THR_EMPLOYEE A,tco_org B, THR_WORK_SHIFT C,THR_WORK_DATE D,  thr_work_group wg
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0 AND D.DEL_IF=0
            AND A.tco_org_PK=B.PK AND A.PK=D.THR_EMP_PK AND C.PK=D.THR_WS_PK and wg.del_if=0 and wg.pk=a.thr_wg_pk
            AND A.JOIN_DT<=D.WORK_DT
            AND (A.LEFT_DT>D.WORK_DT OR A.LEFT_DT IS NULL)
            AND DECODE(p_wg,'ALL',p_wg,a.THR_WG_PK ) = p_wg
            AND DECODE(p_nation,'ALL',p_nation,a.nation ) = p_nation
            AND DECODE(p_status,'ALL',p_status,a.status ) = p_status
            AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,C.PK)=p_thr_ws_pk
            AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
            AND HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)<0
            AND (abs(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >= p_m1 OR p_m1 is null)
            AND (abs(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) <= p_m2 OR p_m2 is null)
            AND D.WORK_DT BETWEEN p_from AND p_to
            GROUP BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.PK,A.EMP_ID,A.FULL_NAME,C.DESCRIPTION,D.TIME_IN,D.TIME_OUT,D.WT
            ORDER BY B.ORG_NM,wg.WORKGROUP_NM,D.WORK_DT,A.EMP_ID;

     ELSIF p_opt=4 THEN  --MOD BY HAND

         open l_rtn_cur for
              SELECT B.org_NM 
                    ,wg.workgroup_nm
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY')
                    ,A.EMP_ID
                    ,A.FULL_NAME
                    ,C.DESCRIPTION
                    ,D.TIME_IN
                    ,D.TIME_OUT
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.WT, '')) AS WT 
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.OT_XN,'')) AS OT 
                    ,MAX(D.NT) AS NT 
                    ,MAX(D.ONT) AS NT2 
                    ,MAX(DECODE(D.HOL_TYPE, 'SUN', D.OT_XN, '')) AS ST3 
                    ,MAX(DECODE(D.HOL_TYPE,'HOL',  D.OT_XN, '')) AS HT 
                    ,(case when MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >=0 then NULL 
                       else 
                           ABS(MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK))) 
                     END ) 
                        AS LATE_IN 
                    ,(case when MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >=0 then null 
                        else 
                            abs(MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK))) 
                      end)   AS EARLY_OUT 
                    ,MAX(D.MOD_BYHAND_YN ) as by_hand 
                    ,MAX(D.MOD_BY) as mod_by 
                    ,A.PK
                    ,D.WORK_DT
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')
                    ,null
            FROM THR_EMPLOYEE A,tco_org B, THR_WORK_SHIFT C,THR_WORK_DATE D, thr_work_group wg
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0 AND D.DEL_IF=0 
            AND A.tco_org_PK=B.PK AND A.PK=D.THR_EMP_PK AND C.PK=D.THR_WS_PK and wg.del_if=0 and wg.pk=a.thr_wg_pk
            AND A.JOIN_DT<=D.WORK_DT
            AND (A.LEFT_DT>D.WORK_DT OR A.LEFT_DT IS NULL)
            AND DECODE(p_wg,'ALL',p_wg,a.THR_WG_PK ) = p_wg
            AND DECODE(p_nation,'ALL',p_nation,a.nation ) = p_nation
            AND DECODE(p_status,'ALL',p_status,a.status ) = p_status
            AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,C.PK)=p_thr_ws_pk
            AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
            AND (NVL(D.MOD_BYHAND_YN,'N')='Y')
            AND D.WORK_DT BETWEEN p_from AND p_to
            GROUP BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.PK,A.EMP_ID,A.FULL_NAME,C.DESCRIPTION,D.TIME_IN,D.TIME_OUT,D.WT
              ORDER BY D.WORK_DT,B.org_NM,wg.workgroup_nm,A.EMP_ID;
     ELSIF p_opt=6 THEN  --EARLY or LATELY

         open l_rtn_cur for
              SELECT B.org_NM
                    ,wg.workgroup_nm
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY')
                    ,A.EMP_ID
                    ,A.FULL_NAME
                    ,C.DESCRIPTION
                    ,D.TIME_IN
                    ,D.TIME_OUT
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.WT, '')) AS WT 
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.OT_XN,'')) AS OT 
                    ,MAX(D.NT) AS NT 
                    ,MAX(D.ONT) AS NT2 
                    ,MAX(DECODE(D.HOL_TYPE, 'SUN', D.OT_XN, '')) AS ST3 
                    ,MAX(DECODE(D.HOL_TYPE,'HOL',  D.OT_XN, '')) AS HT 
                    ,(case when MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >=0 then NULL 
                       else 
                           ABS(MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK))) 
                     END ) 
                        AS LATE_IN 
                    ,(case when MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >=0 then null 
                        else 
                            abs(MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK))) 
                      end)   AS EARLY_OUT 
                    ,MAX(D.MOD_BYHAND_YN ) as by_hand 
                    ,MAX(D.MOD_BY) as mod_by 
                    ,A.PK
                    ,D.WORK_DT
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')
                    ,null
            FROM THR_EMPLOYEE A,tco_org B, THR_WORK_SHIFT C,THR_WORK_DATE D, thr_work_group wg
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0 AND D.DEL_IF=0 
            AND A.tco_org_PK=B.PK AND A.PK=D.THR_EMP_PK AND C.PK=D.THR_WS_PK and wg.del_if=0 and wg.pk=a.thr_wg_pk
            AND A.JOIN_DT<=D.WORK_DT
            AND (A.LEFT_DT>D.WORK_DT OR A.LEFT_DT IS NULL)
            AND DECODE(p_wg,'ALL',p_wg,a.THR_WG_PK ) = p_wg
            AND DECODE(p_nation,'ALL',p_nation,a.nation ) = p_nation
            AND DECODE(p_status,'ALL',p_status,a.status ) = p_status
            AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,C.PK)=p_thr_ws_pk
            AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
            AND (HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)<0
            or HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)<0)
            AND ( (
            (HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)<0 and (abs(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >= p_m1 OR p_m1 is null)
            AND (abs(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) <= p_m2 OR p_m2 is null))
            ) or (
            HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK) <0 and  (abs(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >= p_m1 OR p_m1 is null)
            AND (abs(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) <= p_m2 OR p_m2 is null)
            ))
            AND D.WORK_DT BETWEEN p_from AND p_to
            GROUP BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.PK,A.EMP_ID,A.FULL_NAME,C.DESCRIPTION,D.TIME_IN,D.TIME_OUT,D.WT
              ORDER BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.EMP_ID;
    
    ELSIF p_opt=7 THEN  --in time

        open l_rtn_cur for
              SELECT B.org_NM
                    ,wg.workgroup_nm
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY')
                    ,A.EMP_ID
                    ,A.FULL_NAME
                    ,C.DESCRIPTION
                    ,D.TIME_IN
                    ,D.TIME_OUT
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.WT, '')) AS WT 
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.OT_XN,'')) AS OT 
                    ,MAX(D.NT) AS NT 
                    ,MAX(D.ONT) AS NT2 
                    ,MAX(DECODE(D.HOL_TYPE, 'SUN', D.OT_XN, '')) AS ST3 
                    ,MAX(DECODE(D.HOL_TYPE,'HOL',  D.OT_XN, '')) AS HT 
                    ,(case when MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >=0 then NULL 
                       else 
                           ABS(MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK))) 
                     END ) 
                        AS LATE_IN 
                    ,(case when MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >=0 then null 
                        else 
                            abs(MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK))) 
                      end)   
                        AS EARLY_OUT 
                    ,MAX(D.MOD_BYHAND_YN ) as by_hand 
                    ,MAX(D.MOD_BY) as mod_by 
                    ,A.PK
                    ,D.WORK_DT
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')
                    ,NULL
            FROM THR_EMPLOYEE A,tco_org B, THR_WORK_SHIFT C,THR_WORK_DATE D, thr_work_group wg
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0 AND D.DEL_IF=0
            AND A.tco_org_PK=B.PK AND A.PK=D.THR_EMP_PK AND C.PK=D.THR_WS_PK and wg.del_if=0 and wg.pk=a.thr_wg_pk           
            AND A.JOIN_DT<=D.WORK_DT
            AND (A.LEFT_DT>D.WORK_DT OR A.LEFT_DT IS NULL)
            AND DECODE(p_wg,'ALL',p_wg,a.THR_WG_PK ) = p_wg
            AND DECODE(p_nation,'ALL',p_nation,a.nation ) = p_nation
            AND DECODE(p_status,'ALL',p_status,a.status ) = p_status
            AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,C.PK)=p_thr_ws_pk
            AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
            AND D.TIME_IN IS NOT NULL
            AND D.TIME_IN BETWEEN NVL(p_m1,D.TIME_IN) AND NVL(p_m2,D.TIME_IN)
            AND D.WORK_DT BETWEEN p_from AND p_to
            GROUP BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.PK,A.EMP_ID,A.FULL_NAME,C.DESCRIPTION,D.TIME_IN,D.TIME_OUT,D.WT
             ORDER BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.EMP_ID;
    
    ELSIF p_opt=8 THEN  --out time

        open l_rtn_cur for
              SELECT B.org_NM
                    ,wg.workgroup_nm
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY')
                    ,A.EMP_ID
                    ,A.FULL_NAME
                    ,C.DESCRIPTION
                    ,D.TIME_IN
                    ,D.TIME_OUT
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.WT, '')) AS WT 
                    ,MAX(DECODE(D.HOL_TYPE, NULL, D.OT_XN,'')) AS OT 
                    ,MAX(D.NT) AS NT 
                    ,MAX(D.ONT) AS NT2 
                    ,MAX(DECODE(D.HOL_TYPE, 'SUN', D.OT_XN, '')) AS ST3 
                    ,MAX(DECODE(D.HOL_TYPE,'HOL',  D.OT_XN, '')) AS HT 
                    ,(case when MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK)) >=0 then NULL 
                       else 
                           ABS(MAX(HR_LATELY_EARLY(D.WORK_DT,C.START_TIME,D.DATE_IN,D.TIME_IN,'IN',A.PK))) 
                     END ) 
                        AS LATE_IN 
                    ,(case when MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK)) >=0 then null 
                        else 
                            abs(MAX(HR_LATELY_EARLY(D.DATE_OUT,D.TIME_OUT,DECODE(C.DURING_DAY,1,D.WORK_DT,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')),C.END_TIME,'OUT',A.PK))) 
                      end)   
                        AS EARLY_OUT 
                    ,MAX(D.MOD_BYHAND_YN ) as by_hand 
                    ,MAX(D.MOD_BY) as mod_by 
                    ,A.PK
                    ,D.WORK_DT
                    ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD')
                    ,NULL
            FROM THR_EMPLOYEE A,tco_org B, THR_WORK_SHIFT C,THR_WORK_DATE D, thr_work_group wg
            WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND C.DEL_IF=0 AND D.DEL_IF=0  
            AND A.tco_org_PK=B.PK AND A.PK=D.THR_EMP_PK AND C.PK=D.THR_WS_PK and wg.del_if=0 and wg.pk=a.thr_wg_pk            
            AND A.JOIN_DT<=D.WORK_DT
            AND (A.LEFT_DT>D.WORK_DT OR A.LEFT_DT IS NULL)
            AND DECODE(p_wg,'ALL',p_wg,a.THR_WG_PK ) = p_wg
            AND DECODE(p_nation,'ALL',p_nation,a.nation ) = p_nation
            AND DECODE(p_status,'ALL',p_status,a.status ) = p_status
            AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,C.PK)=p_thr_ws_pk
            AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
            AND D.TIME_OUT IS NOT NULL
            AND D.TIME_OUT BETWEEN NVL(p_m1,D.TIME_OUT) AND NVL(p_m2,D.TIME_OUT)
            AND D.WORK_DT BETWEEN p_from AND p_to
            GROUP BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.PK,A.EMP_ID,A.FULL_NAME,C.DESCRIPTION,D.TIME_IN,D.TIME_OUT,D.WT
             ORDER BY B.org_NM,wg.workgroup_nm,D.WORK_DT,A.EMP_ID;
      END IF;


       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00800_1;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_sel_hrti00800_1
                                (
                                   p_tco_org_pk varchar2,
                                   p_wg varchar2,
                                   p_from varchar2,
                                   p_to varchar2,
                                   p_opt varchar2,
                                   p_val varchar2,
                                   p_wt_ot varchar2,
                                   p_input varchar2,
                                   p_nation varchar2,
                                   p_status varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) is
l_rtn_cur   sys_refcursor;
tmp number;

/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
begin
        open l_rtn_cur for
        select fin.org_nm,fin.workgroup_nm,fin.emp_id,fin.join_dt
                ,fin.full_name,fin.wt
                ,nullif(fin.ot,0),nullif(fin.nt,0),nullif(fin.ont,0),nullif(fin.st,0),nullif(fin.ht,0)
                ,nullif(fin.wt_ot,0),nullif(fin.ot_ht,0),nullif(fin.n_ot,0)
        from(
              select b.org_nm as org_nm,wg.workgroup_nm as workgroup_nm,a.emp_id as emp_id,a.join_dt as join_dt
            ,a.full_name as full_name,nvl(tm.wt,0) as wt
            ,nvl(ovt.ot,0) as ot
            ,nvl(ovt.nt,0) as nt
            ,nvl(ovt.ont,0) as ont
            ,nvl(ovt.st,0) as st
            ,nvl(ovt.ht,0) as ht
            ,nvl(tm.wt,0) + nvl(ovt.ot,0) as wt_ot
            ,nvl(ovt.ot,0)+nvl(ovt.ht,0) as ot_ht
            ,nvl(ovt.n_ot,0) as n_ot
            ,a.tco_org_pk as tco_org_pk
            from thr_employee a,tco_org b, thr_work_group wg
            ,(select f.pk as emp_pk
                    ,sum(nvl(m.wt,0)) as wt
                    from thr_work_date m,thr_employee f
                    where m.del_if=0 and f.del_if=0 and f.pk=m.thr_emp_pk
                    and decode(p_nation,'ALL',p_nation,f.nation ) = p_nation
                    and decode(p_status,'ALL',p_status,f.status ) = p_status
                     and (    f.tco_org_pk in (
                              select     g.pk
                                    from tco_org g
                                   where g.del_if = 0
                              start with g.pk =
                                            decode (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              connect by prior g.pk = g.p_pk)
                        or p_tco_org_pk = 'ALL')
                        and (p_input is null 
                             or  (upper(f.emp_id) like  '%' || upper(p_input)|| '%')
                             or  (upper(f.old_id ) like  '%' || upper(p_input)|| '%')
                             or  (upper(f.full_name) like  '%' || upper(p_input)|| '%'))
                        and m.work_dt between p_from and p_to
                    group by f.pk
                 ) tm
                ,(select f.pk as emp_pk
                    ,sum(decode(e.hol_type,'',nvl(e.ot_xn,0),0)) as ot
                    ,sum(decode(e.hol_type,'',nvl(e.nt,0),0)) as nt
                    ,sum(decode(e.hol_type,'',nvl(e.ont , 0),0)) as ont
                    ,sum(decode(e.hol_type,'SUN',e.ot_xn, 0)) as st
                    ,sum(decode(e.hol_type,'HOL',e.ot_xn, 0 )) as ht
                    ,(sum(e.nt)+sum(e.ont)) as n_ot
                    from thr_work_date e,thr_employee f,thr_work_shift s
                    where e.del_if=0 and f.del_if=0 and s.del_if=0 and f.pk=e.thr_emp_pk
                    and e.thr_ws_pk=s.pk
                    and decode(p_nation,'ALL',p_nation,f.nation ) = p_nation
                    and decode(p_status,'ALL',p_status,f.status ) = p_status
                     and (    f.tco_org_pk in (
                              select     g.pk
                                    from tco_org g
                                   where g.del_if = 0
                              start with g.pk =
                                            decode (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              connect by prior g.pk = g.p_pk)
                        or p_tco_org_pk = 'ALL')
                        and (p_input is null 
                             or  (upper(f.emp_id) like  '%' || upper(p_input)|| '%')
                             or  (upper(f.old_id ) like  '%' || upper(p_input)|| '%')
                             or  (upper(f.full_name) like  '%' || upper(p_input)|| '%'))
                        and e.work_dt between p_from and p_to
                    group by f.pk
                 ) ovt
            where a.del_if=0 and b.del_if=0
            and a.tco_org_pk=b.pk
            and a.pk=ovt.emp_pk(+)
            and a.pk=tm.emp_pk(+)
            and a.join_dt <= p_to
            and wg.pk=a.thr_wg_pk
            and wg.del_if=0
            and (a.left_dt>= p_from or a.left_dt is null)
            and decode(p_nation,'ALL',p_nation,a.nation ) = p_nation
            and decode(p_status,'ALL',p_status,a.status ) = p_status
            and decode(p_wg,'ALL',p_wg,a.thr_wg_pk) = p_wg
            and (    a.tco_org_pk in (
                              select     g.pk
                                    from tco_org g
                                   where g.del_if = 0
                              start with g.pk =
                                            decode (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              connect by prior g.pk = g.p_pk)
                        or p_tco_org_pk = 'ALL')
            and (p_input is null 
                 or  (upper(a.emp_id) like  '%' || upper(p_input)|| '%')
                 or  (upper(a.old_id ) like  '%' || upper(p_input)|| '%')
                 or  (upper(a.full_name) like  '%' || upper(p_input)|| '%'))
            )fin
            where ( p_val = '=' and decode(p_opt,'1',fin.wt,'2',fin.ot,'3',fin.ht,'4',fin.wt_ot,'5',fin.ot_ht)=nvl(p_wt_ot,0)
                        or p_val = '>' and decode(p_opt,'1',fin.wt,'2',fin.ot,'3',fin.ht,'4',fin.wt_ot,'5',fin.ot_ht)>nvl(p_wt_ot,0)
                        or p_val = '<' and decode(p_opt,'1',fin.wt,'2',fin.ot,'3',fin.ht,'4',fin.wt_ot,'5',fin.ot_ht)<nvl(p_wt_ot,0)
                        or p_val = '>=' and decode(p_opt,'1',fin.wt,'2',fin.ot,'3',fin.ht,'4',fin.wt_ot,'5',fin.ot_ht)>=nvl(p_wt_ot,0)
                        or p_val = '<=' and decode(p_opt,'1',fin.wt,'2',fin.ot,'3',fin.ht,'4',fin.wt_ot,'5',fin.ot_ht)<=nvl(p_wt_ot,0)
                        or nvl(p_wt_ot,0)=0)
            order by fin.org_nm,fin.workgroup_nm,fin.emp_id;
       p_rtn_value :=l_rtn_cur;

   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00800_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00800_2 (
   p_tco_org_pk          VARCHAR2,
   p_wg         VARCHAR2,
   p_year                 VARCHAR2,
   p_input          VARCHAR2,
   p_search_ot            VARCHAR2,
   p_ot                   VARCHAR2,
   p_nation               varchar2,
   p_status               varchar2,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
    IF p_search_ot='1' THEN
   OPEN l_rtn_cur FOR
      SELECT PR_OT.org_NM,PR_OT.EMP_ID,PR_OT.FULL_NAME,DECODE(PR_OT.T1,0,'-',PR_OT.T1),DECODE(PR_OT.T2,0,'-',PR_OT.T2)
        ,DECODE(PR_OT.T3,0,'-',PR_OT.T3),DECODE(PR_OT.T4,0,'-',PR_OT.T4),DECODE(PR_OT.T5,0,'-',PR_OT.T5),DECODE(PR_OT.T6,0,'-',PR_OT.T6)
        ,DECODE(PR_OT.T7,0,'-',PR_OT.T7),DECODE(PR_OT.T8,0,'-',PR_OT.T8),DECODE(PR_OT.T9,0,'-',PR_OT.T9),DECODE(PR_OT.T10,0,'-',PR_OT.T10)
        ,DECODE(PR_OT.T11,0,'-',PR_OT.T11),DECODE(PR_OT.T12,0,'-',PR_OT.T12)
        ,PR_OT.T1+PR_OT.T2+PR_OT.T3+PR_OT.T4+PR_OT.T5
        +PR_OT.T6+PR_OT.T7+PR_OT.T8+PR_OT.T9+PR_OT.T10+PR_OT.T11+PR_OT.T12 AS TOTAL
        ,PR_OT.PK
        FROM(
        SELECT B.org_NM AS org_NM,V.EMP_ID AS EMP_ID,V.FULL_NAME AS FULL_NAME, V.PK as PK
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'01',NVL(A.OT,0),0)) AS T1
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'02',NVL(A.OT,0),0)) AS T2
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'03',NVL(A.OT,0),0)) AS T3
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'04',NVL(A.OT,0),0)) AS T4
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'05',NVL(A.OT,0),0)) AS T5
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'06',NVL(A.OT,0),0)) AS T6
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'07',NVL(A.OT,0),0)) AS T7
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'08',NVL(A.OT,0),0)) AS T8
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'09',NVL(A.OT,0),0)) AS T9
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'10',NVL(A.OT,0),0)) AS T10
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'11',NVL(A.OT,0),0)) AS T11
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'12',NVL(A.OT,0),0))  AS T12
        FROM THR_WORK_DATE A,THR_EMPLOYEE V,tco_org B
        WHERE A.DEL_IF=0 AND V.DEL_IF=0 AND B.DEL_IF=0 
         AND A.THR_EMP_PK=V.PK AND V.tco_org_PK=B.PK
         AND SUBSTR(A.WORK_DT,1,4)=p_year
         AND DECODE(p_nation,'ALL',p_nation,v.nation ) = p_nation
         AND DECODE(p_status,'ALL',p_status,v.status ) = p_status
         AND DECODE(p_wg,'ALL',p_wg,v.thr_wg_pk) = p_wg
         AND (    V.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
          AND (p_input IS NULL 
                 OR  (UPPER(V.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(V.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(V.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
        GROUP BY B.org_NM,V.FULL_NAME,V.EMP_ID,V.PK
        HAVING SUM(NVL(A.OT,0))>=nvl(p_ot,0)
        ORDER BY B.org_NM,V.FULL_NAME ,V.EMP_ID
        )PR_OT;
    ELSE
        OPEN l_rtn_cur FOR
      SELECT PR_OT.org_NM,PR_OT.EMP_ID,PR_OT.FULL_NAME,DECODE(PR_OT.T1,0,'-',PR_OT.T1),DECODE(PR_OT.T2,0,'-',PR_OT.T2)
        ,DECODE(PR_OT.T3,0,'-',PR_OT.T3),DECODE(PR_OT.T4,0,'-',PR_OT.T4),DECODE(PR_OT.T5,0,'-',PR_OT.T5),DECODE(PR_OT.T6,0,'-',PR_OT.T6)
        ,DECODE(PR_OT.T7,0,'-',PR_OT.T7),DECODE(PR_OT.T8,0,'-',PR_OT.T8),DECODE(PR_OT.T9,0,'-',PR_OT.T9),DECODE(PR_OT.T10,0,'-',PR_OT.T10)
        ,DECODE(PR_OT.T11,0,'-',PR_OT.T11),DECODE(PR_OT.T12,0,'-',PR_OT.T12)
        ,PR_OT.T1+PR_OT.T2+PR_OT.T3+PR_OT.T4+PR_OT.T5
        +PR_OT.T6+PR_OT.T7+PR_OT.T8+PR_OT.T9+PR_OT.T10+PR_OT.T11+PR_OT.T12 AS TOTAL
        ,PR_OT.PK
        FROM(
        SELECT B.org_NM AS org_NM,V.EMP_ID AS EMP_ID,V.FULL_NAME AS FULL_NAME, V.PK as PK
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'01',NVL(A.OT,0),0)) AS T1
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'02',NVL(A.OT,0),0)) AS T2
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'03',NVL(A.OT,0),0)) AS T3
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'04',NVL(A.OT,0),0)) AS T4
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'05',NVL(A.OT,0),0)) AS T5
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'06',NVL(A.OT,0),0)) AS T6
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'07',NVL(A.OT,0),0)) AS T7
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'08',NVL(A.OT,0),0)) AS T8
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'09',NVL(A.OT,0),0)) AS T9
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'10',NVL(A.OT,0),0)) AS T10
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'11',NVL(A.OT,0),0)) AS T11
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'12',NVL(A.OT,0),0))  AS T12
        FROM THR_WORK_DATE A,THR_EMPLOYEE V,tco_org B
        WHERE A.DEL_IF=0 AND V.DEL_IF=0 AND B.DEL_IF=0
         AND A.THR_EMP_PK=V.PK AND V.tco_org_PK=B.PK
         AND SUBSTR(A.WORK_DT,1,4)=p_year
         AND DECODE(p_wg,'ALL',p_wg,v.thr_wg_pk) = p_wg
         AND DECODE(p_nation,'ALL',p_nation,v.nation ) = p_nation
         AND DECODE(p_status,'ALL',p_status,v.status ) = p_status
         AND (    V.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
          AND (p_input IS NULL 
                 OR  (UPPER(V.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(V.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(V.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))

        GROUP BY B.org_NM,V.FULL_NAME,V.EMP_ID,V.PK
        HAVING SUM(NVL(A.OT ,0))<nvl(p_ot,0)
        ORDER BY V.EMP_ID,B.org_NM,V.FULL_NAME
        )PR_OT;
    END IF;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00800_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00800_3 (
   p_tco_org_pk          VARCHAR2,
   p_wg         VARCHAR2,
   p_year                 VARCHAR2,
   p_search_by            VARCHAR2,
   p_search_temp          VARCHAR2,
   p_search_ot            VARCHAR2,
   p_ot                   VARCHAR2,
   p_nation               varchar2,
   p_status               varchar2,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
    IF p_search_ot='1' THEN
   OPEN l_rtn_cur FOR
      SELECT PR_OT.org_NM,PR_OT.EMP_ID,PR_OT.FULL_NAME,DECODE(PR_OT.T1,0,'-',PR_OT.T1),DECODE(PR_OT.T2,0,'-',PR_OT.T2)
        ,DECODE(PR_OT.T3,0,'-',PR_OT.T3),DECODE(PR_OT.T4,0,'-',PR_OT.T4),DECODE(PR_OT.T5,0,'-',PR_OT.T5),DECODE(PR_OT.T6,0,'-',PR_OT.T6)
        ,DECODE(PR_OT.T7,0,'-',PR_OT.T7),DECODE(PR_OT.T8,0,'-',PR_OT.T8),DECODE(PR_OT.T9,0,'-',PR_OT.T9),DECODE(PR_OT.T10,0,'-',PR_OT.T10)
        ,DECODE(PR_OT.T11,0,'-',PR_OT.T11),DECODE(PR_OT.T12,0,'-',PR_OT.T12)
        ,PR_OT.T1+PR_OT.T2+PR_OT.T3+PR_OT.T4+PR_OT.T5
        +PR_OT.T6+PR_OT.T7+PR_OT.T8+PR_OT.T9+PR_OT.T10+PR_OT.T11+PR_OT.T12 AS TOTAL
        ,PR_OT.PK
        FROM(
        SELECT B.org_NM AS org_NM,V.EMP_ID AS EMP_ID,V.FULL_NAME AS FULL_NAME, V.PK as PK
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'01',NVL(A.OT_TIME,0),0)) AS T1
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'02',NVL(A.OT_TIME,0),0)) AS T2
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'03',NVL(A.OT_TIME,0),0)) AS T3
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'04',NVL(A.OT_TIME,0),0)) AS T4
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'05',NVL(A.OT_TIME,0),0)) AS T5
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'06',NVL(A.OT_TIME,0),0)) AS T6
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'07',NVL(A.OT_TIME,0),0)) AS T7
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'08',NVL(A.OT_TIME,0),0)) AS T8
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'09',NVL(A.OT_TIME,0),0)) AS T9
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'10',NVL(A.OT_TIME,0),0)) AS T10
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'11',NVL(A.OT_TIME,0),0)) AS T11
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'12',NVL(A.OT_TIME,0),0))  AS T12
        FROM THR_EXTRA_TIME A,THR_EMPLOYEE V,tco_org B
        WHERE A.DEL_IF=0 AND V.DEL_IF=0 AND B.DEL_IF=0 AND A.OT_TYPE NOT IN ('NT','NT2')
         AND A.THR_EMP_PK=V.PK AND V.tco_org_PK=B.PK
         AND SUBSTR(A.WORK_DT,1,4)=p_year
         AND DECODE(p_nation,'ALL',p_nation,v.nation ) = p_nation
         AND DECODE(p_status,'ALL',p_status,v.status ) = p_status
         AND DECODE(p_wg,'ALL',p_wg,v.thr_wg_pk) = p_wg
         AND (    V.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (DECODE(p_search_by,'1',UPPER(V.EMP_ID),'2',V.ID_NUM,'3',UPPER(V.FULL_NAME)) LIKE '%'||UPPER(p_search_temp)
                        OR p_search_temp IS NULL)
        GROUP BY B.org_NM,V.FULL_NAME,V.EMP_ID,V.PK
        HAVING SUM(NVL(A.OT_TIME,0))>=nvl(p_ot,0)
        ORDER BY B.org_NM,V.FULL_NAME ,V.EMP_ID
        )PR_OT;
    ELSE
        OPEN l_rtn_cur FOR
      SELECT PR_OT.org_NM,PR_OT.EMP_ID,PR_OT.FULL_NAME,DECODE(PR_OT.T1,0,'-',PR_OT.T1),DECODE(PR_OT.T2,0,'-',PR_OT.T2)
        ,DECODE(PR_OT.T3,0,'-',PR_OT.T3),DECODE(PR_OT.T4,0,'-',PR_OT.T4),DECODE(PR_OT.T5,0,'-',PR_OT.T5),DECODE(PR_OT.T6,0,'-',PR_OT.T6)
        ,DECODE(PR_OT.T7,0,'-',PR_OT.T7),DECODE(PR_OT.T8,0,'-',PR_OT.T8),DECODE(PR_OT.T9,0,'-',PR_OT.T9),DECODE(PR_OT.T10,0,'-',PR_OT.T10)
        ,DECODE(PR_OT.T11,0,'-',PR_OT.T11),DECODE(PR_OT.T12,0,'-',PR_OT.T12)
        ,PR_OT.T1+PR_OT.T2+PR_OT.T3+PR_OT.T4+PR_OT.T5
        +PR_OT.T6+PR_OT.T7+PR_OT.T8+PR_OT.T9+PR_OT.T10+PR_OT.T11+PR_OT.T12 AS TOTAL
        ,PR_OT.PK
        FROM(
        SELECT B.org_NM AS org_NM,V.EMP_ID AS EMP_ID,V.FULL_NAME AS FULL_NAME, V.PK as PK
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'01',NVL(A.OT_TIME,0),0)) AS T1
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'02',NVL(A.OT_TIME,0),0)) AS T2
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'03',NVL(A.OT_TIME,0),0)) AS T3
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'04',NVL(A.OT_TIME,0),0)) AS T4
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'05',NVL(A.OT_TIME,0),0)) AS T5
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'06',NVL(A.OT_TIME,0),0)) AS T6
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'07',NVL(A.OT_TIME,0),0)) AS T7
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'08',NVL(A.OT_TIME,0),0)) AS T8
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'09',NVL(A.OT_TIME,0),0)) AS T9
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'10',NVL(A.OT_TIME,0),0)) AS T10
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'11',NVL(A.OT_TIME,0),0)) AS T11
        ,SUM(DECODE(SUBSTR(A.WORK_DT,5,2),'12',NVL(A.OT_TIME,0),0))  AS T12
        FROM THR_EXTRA_TIME A,THR_EMPLOYEE V,tco_org B
        WHERE A.DEL_IF=0 AND V.DEL_IF=0 AND B.DEL_IF=0 AND A.OT_TYPE<>'NT'
         AND A.THR_EMP_PK=V.PK AND V.tco_org_PK=B.PK
         AND SUBSTR(A.WORK_DT,1,4)=p_year
         AND DECODE(p_wg,'ALL',p_wg,v.thr_wg_pk) = p_wg
         AND DECODE(p_nation,'ALL',p_nation,v.nation ) = p_nation
         AND DECODE(p_status,'ALL',p_status,v.status ) = p_status
         AND (    V.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
            AND (DECODE(p_search_by,'1',UPPER(V.EMP_ID),'2',V.ID_NUM,'3',UPPER(V.FULL_NAME)) LIKE '%'||UPPER(p_search_temp)
                        OR p_search_temp IS NULL)

        GROUP BY B.org_NM,V.FULL_NAME,V.EMP_ID,V.PK
        HAVING SUM(NVL(A.OT_TIME,0))<nvl(p_ot,0)
        ORDER BY B.org_NM,V.FULL_NAME,V.EMP_ID
        )PR_OT;
    END IF;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00801_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00801_0
                                (
                                   p_emp_id varchar2,
                                   p_from varchar2,
                                   p_to varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN

      open l_rtn_cur for
      SELECT b.EMP_ID,b.ID_NUM,to_char(to_date(a.WORK_DT,'yyyymmdd'),'dd/mm/yyyy')
      ,A.TIME_IN,A.TIME_OUT,A.WORK_TIME
      ,MAX(DECODE(C.OT_TYPE,'OT',NVL(C.OT_TIME,0),0)) AS OT
    ,MAX(DECODE(C.OT_TYPE,'NT',NVL(C.OT_TIME,0),0)) AS NT
    ,MAX(DECODE(C.OT_TYPE,'HT',NVL(C.OT_TIME,0),0)) AS HT
      FROM THR_TIME_MACHINE A,THR_EMPLOYEE B,THR_EXTRA_TIME C
      WHERE B.DEL_IF=0 AND A.DEL_IF=0 AND C.DEL_IF(+)=0
      AND A.THR_EMP_PK=B.PK AND A.THR_EMP_PK=C.THR_EMP_PK(+)
      AND A.WORK_DT=C.WORK_DT(+)
      AND A.WORK_DT BETWEEN p_from and p_to
      AND b.emp_id=p_emp_id
      GROUP BY B.EMP_ID,B.ID_NUM,A.WORK_DT,A.TIME_IN,A.TIME_OUT,A.WORK_TIME
      order by A.WORK_DT;
       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00802_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00802_0
                                (
                                   p_emp_pk varchar2,
                                   p_ym varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN

    if length(p_ym)=4 then
      open l_rtn_cur for
      SELECT b.EMP_ID,b.ID_NUM,to_char(to_date(a.WORK_DT,'yyyymmdd'),'dd/mm/yyyy')
      ,A.TIME_IN,A.TIME_OUT,A.WORK_TIME
      ,MAX(DECODE(C.OT_TYPE,'OT',NVL(C.OT_TIME,0),0)) AS OT
    ,MAX(DECODE(C.OT_TYPE,'NT',NVL(C.OT_TIME,0),0)) AS NT
    ,MAX(DECODE(C.OT_TYPE,'HT',NVL(C.OT_TIME,0),0)) AS HT
      FROM THR_TIME_MACHINE A,THR_EMPLOYEE B,THR_EXTRA_TIME C
      WHERE B.DEL_IF=0 AND A.DEL_IF=0 AND C.DEL_IF(+)=0
      AND A.THR_EMP_PK=B.PK AND A.THR_EMP_PK=C.THR_EMP_PK(+)
      AND A.WORK_DT=C.WORK_DT(+)
      AND substr(A.WORK_DT,1,4)=p_ym
      AND b.pk=p_emp_pk
      GROUP BY B.EMP_ID,B.ID_NUM,A.WORK_DT,A.TIME_IN,A.TIME_OUT,A.WORK_TIME
      order by A.WORK_DT;
    else
            open l_rtn_cur for
          SELECT b.EMP_ID,b.ID_NUM,to_char(to_date(a.WORK_DT,'yyyymmdd'),'dd/mm/yyyy')
          ,A.TIME_IN,A.TIME_OUT,A.WORK_TIME
          ,MAX(DECODE(C.OT_TYPE,'OT',NVL(C.OT_TIME,0),0)) AS OT
        ,MAX(DECODE(C.OT_TYPE,'NT',NVL(C.OT_TIME,0),0)) AS NT
        ,MAX(DECODE(C.OT_TYPE,'HT',NVL(C.OT_TIME,0),0)) AS HT
          FROM THR_TIME_MACHINE A,THR_EMPLOYEE B,THR_EXTRA_TIME C
          WHERE B.DEL_IF=0 AND A.DEL_IF=0 AND C.DEL_IF(+)=0
          AND A.THR_EMP_PK=B.PK AND A.THR_EMP_PK=C.THR_EMP_PK(+)
          AND A.WORK_DT=C.WORK_DT(+)
          AND substr(A.WORK_DT,1,6)=p_ym
          AND b.pk=p_emp_pk
          GROUP BY B.EMP_ID,B.ID_NUM,A.WORK_DT,A.TIME_IN,A.TIME_OUT,A.WORK_TIME
          order by A.WORK_DT;

    end if;
       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI00900_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI00900_0
                                (
                                   p_tco_org_pk varchar2,
                                   p_thr_ws_pk varchar2,
                                   p_from varchar2,
                                   p_to varchar2,
                                   p_input varchar2,
                                   p_wg varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;
tmp number;

/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN

      open l_rtn_cur for
      SELECT    D.THR_EMP_PK AS THR_EMP_PK
                ,E.ORG_NM
                ,V.EMP_ID
                ,V.FULL_NAME
                ,S.DESCRIPTION
                ,TO_CHAR(TO_DATE(D.WORK_DT,'YYYYMMDD'),'DD/MM/YYYY') AS W_DATE
                ,MAX(DECODE(D.HOL_TYPE,'',D.WT,'SUN','','HOL','')) AS WT
                ,MAX(DECODE(D.HOL_TYPE,'',D.WT_RATE,'SUN','','HOL','')) AS WT_RATE
                ,MAX(DECODE(D.HOL_TYPE,'',D.OT,'SUN',D.OT,'HOL',D.OT )) AS OT
                ,MAX(DECODE(D.HOL_TYPE,'',D.OT_RATE,'SUN',D.OT_RATE,'HOL',D.OT_RATE )) AS OT_RATE
                ,MAX(DECODE(D.NT,0,'',D.NT )) AS NT
                ,MAX(DECODE(D.NT,0,'',D.NT_RATE )) AS NT_RATE
                ,MAX(DECODE(D.ONT ,0,'',D.ONT_RATE )) AS ONT
                ,MAX(DECODE(D.ONT,0,'',D.ONT_RATE )) AS ONT_RATE
                ,MAX(DECODE(D.HOL_TYPE,'SUN',D.WT,'',D.OT,'' )) AS ST
                ,MAX(DECODE(D.HOL_TYPE,'SUN',D.OT_RATE,'',D.OT_RATE,'' )) AS ST_RATE
                ,MAX(DECODE(D.HOL_TYPE,'HOL',D.WT,'','','SUN','' )) AS HT
                ,MAX(DECODE(D.HOL_TYPE,'HOL',D.OT_RATE,'' )) AS HT_RATE
                ,MAX(D.PK) AS WT_PK
                ,MAX(DECODE(D.OT,'',0,D.PK)) AS OT_PK
                ,MAX(DECODE(D.NT,'',0,D.PK)) AS NT_PK
                ,MAX(DECODE(D.ONT,'',0,D.PK)) AS ONT_PK
                ,MAX(DECODE(D.HOL_TYPE,'SUN',D.PK,0)) AS ST_PK
                ,MAX(DECODE(D.HOL_TYPE,'HT',D.PK,0)) AS HT_PK
                ,MAX(D.WORK_DT) AS WD_TEMP
        FROM THR_WORK_DATE D,THR_EMPLOYEE V,TCO_ORG E,THR_WORK_SHIFT S
          WHERE D.DEL_IF = 0 AND V.DEL_IF=0 AND E.DEL_IF=0 AND S.DEL_IF=0
          AND V.PK=D.THR_EMP_PK 
          AND V.TCO_ORG_PK=E.PK 
          AND D.THR_WS_PK=S.PK
          AND D.WT IS NOT NULL
          AND DECODE(p_thr_ws_pk,'ALL',p_thr_ws_pk,D.THR_WS_PK)=p_thr_ws_pk
          AND DECODE(p_wg,'ALL',p_wg,v.thr_wg_pk)=p_wg
          AND (p_input IS NULL 
                 OR  (UPPER(V.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(V.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(V.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
          AND (    v.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
         AND D.WORK_DT BETWEEN p_from AND p_to
     GROUP BY  D.THR_EMP_PK,D.WORK_DT,E.ORG_NM,V.EMP_ID,V.FULL_NAME,S.DESCRIPTION
     ORDER BY V.EMP_ID,E.ORG_NM,D.WORK_DT,D.THR_EMP_PK;
       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_0 (
   p_tco_org_pk          VARCHAR,
   p_wg         VARCHAR,
   p_input          VARCHAR,
   p_absence_type         VARCHAR,
   p_nation_type          VARCHAR,
   p_from_date            VARCHAR,
   p_to_date              VARCHAR,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
   OPEN l_rtn_cur FOR
      SELECT   e.org_nm, tw.workgroup_nm  , a.emp_id, a.full_name,
               (select remark from thr_work_shift where del_if=0 and pk=b.thr_ws_pk),
               hr_F_CAL_ALE_2(ABSENCE_DT,A.JOIN_DT,A.ALE_DAY_IN_YEAR,A.PK,nvl(a.ale_plus,0)) AS ale,
               b.absence_type,
               b.absence_dt,b.remark,
               b.absence_time,
               DECODE (b.company_pay_yn, 'Y', -1, 0), nvl(b.company_pay_rate,0) || '%',
               DECODE (b.insurance_pay_yn, 'Y', -1, 0), nvl(b.insurance_pay_rate,0)  || '%',
               b.pk, b.thr_emp_pk, a.thr_wg_pk,nvl(b.thr_absence_reg_pk,0),b.thr_ws_pk
               ,decode(nvl(company_allow,'N'),'N',0,-1)
               ,case when nvl(b.CLOSE_M_YN,'N')='Y' then 'M' when nvl(b.CLOSE_YN,'N')='Y' then 'Y' else 'N'  end
          FROM thr_employee a, thr_absence b,tco_org e -- thr_group c, comm.tco_dept d
            ,thr_work_group tw
         WHERE a.del_if = 0
           AND b.del_if = 0
           and e.del_If=0 and tw.del_if=0 and tw.pk=a.thr_wg_pk
           and e.pk=a.tco_org_pk
           AND a.pk = b.thr_emp_pk
           AND DECODE (p_wg, 'ALL', p_wg, tw.pk) =p_wg
           AND DECODE (p_absence_type, 'ALL', p_absence_type, b.absence_type) =
                                                                p_absence_type
           AND DECODE (p_nation_type, 'ALL', p_nation_type, a.nation) =
                                                                 p_nation_type
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           AND b.absence_dt between p_from_date and TO_CHAR(to_date(nvl(a.LEFT_DT,'30000101'),'yyyymmdd')-1, 'YYYYMMDD')
           AND b.absence_dt between p_from_date and p_to_date
           AND b.absence_dt between a.join_dt and p_to_date
          AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
      ORDER BY b.absence_dt, 1,2, a.emp_id, a.full_name;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_1 (
   p_tco_org_pk          VARCHAR,
   p_emp_id         VARCHAR,
   p_rtn_value      OUT   sys_refcursor
)
IS

   l_rtn_cur   sys_refcursor;
BEGIN
   OPEN l_rtn_cur FOR
      select '0',a.pk, c.org_id, a.emp_id, a.full_name, C.ORG_NM
      ,null shift_time
      from thr_employee a, tco_org c
      where a.del_if=0 and c.del_if=0
      and a.tco_org_pk = c.pk
      and (p_emp_id is null 
           or upper(a.emp_id) like '%'|| upper(p_emp_id) ||'%'
           or upper(a.full_name) like '%'|| upper(p_emp_id) ||'%')
      AND ( A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL') 
       AND A.STATUS = 'A'
       order by c.org_id, a.emp_id   
           ;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_2;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_sel_hrti01000_2 (
   p_tco_org_pk varchar2,
   p_emp_id varchar2,
   p_absence_type varchar2,
   p_from_date varchar2,
   p_to_date varchar2,
   p_rtn_value      out   sys_refcursor
) 
is
   l_rtn_cur   sys_refcursor;
begin
   open l_rtn_cur for
select rownum, 
       pk,
       thr_emp_pk,
       org_nm,
       emp_id,
       full_name,
       absence_dt,       
       start_time,
       end_time,
       absence_time,
       absence_type,
       reg_type,
       description,
       sequence_dt
     from
    (select p.pk,
           a.pk thr_emp_pk,
           c.org_nm,
           a.emp_id,
           a.full_name,
           p.absence_dt,
           p.start_time,
           p.end_time,
           p.absence_time,
           p.absence_type,
           p.reg_type,
           p.description,
           p.sequence_dt
    from thr_absence p,
         thr_employee a, 
         tco_org c
    where p.del_if = 0 and a.del_if=0 and c.del_if=0 
      and p.thr_emp_pk = a.pk
      and a.tco_org_pk = c.pk
      and p.reg_type = 1 --short term
      and p.absence_dt between nvl(p_from_date,'1') and nvl(p_to_date,'99999999')
      and decode(p_absence_type, 'ALL', 'ALL', p.absence_type ) = p_absence_type      
      and (p_emp_id is null 
           or upper(a.emp_id) like '%'|| upper(p_emp_id) ||'%'
           or upper(a.full_name) like '%'|| upper(p_emp_id) ||'%')
      and ( a.tco_org_pk in (
                              select     g.pk
                                    from tco_org g
                                   where g.del_if = 0
                              start with g.pk =
                                            decode (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              connect by prior g.pk = g.p_pk)
                        or p_tco_org_pk = 'ALL')
    order by  p.from_dt desc, c.org_id, a.emp_id);
   
   p_rtn_value := l_rtn_cur;
 
exception
   when others
   then
      raise;
end ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_3 (
   P_SEQUENCE VARCHAR2,
   P_RTN_VALUE      OUT   SYS_REFCURSOR
) 
IS
   L_RTN_CUR   SYS_REFCURSOR;
BEGIN
   OPEN L_RTN_CUR FOR
    SELECT 
          rownum,
           P.PK,
           A.PK,
           C.ORG_NM,
           A.EMP_ID,
           A.FULL_NAME,
           P.ABSENCE_DT,
           P.START_TIME,
           P.END_TIME,
           P.ABSENCE_TIME,
           P.ABSENCE_TYPE,
           P.REG_TYPE,
           P.DESCRIPTION,
           P.SEQUENCE_DT
    FROM THR_ABSENCE P,
         THR_EMPLOYEE A, 
         TCO_ORG C
    WHERE P.DEL_IF = 0
      AND P.THR_EMP_PK = A.PK
      AND A.DEL_IF=0 AND C.DEL_IF=0
      AND A.TCO_ORG_PK = C.PK
      AND P.SEQUENCE_DT = P_SEQUENCE
    ORDER BY P.FROM_DT, C.ORG_ID, A.EMP_ID;
   
   P_RTN_VALUE := L_RTN_CUR;
 
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_4;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_4 (
   P_TCO_ORG_PK VARCHAR2,
   P_EMP_ID VARCHAR2,
   P_ABSENCE_TYPE VARCHAR2,
   P_FROM_DATE VARCHAR2,
   P_TO_DATE VARCHAR2,
   P_RTN_VALUE      OUT   SYS_REFCURSOR
) 
IS
   L_RTN_CUR   SYS_REFCURSOR;
BEGIN
   OPEN L_RTN_CUR FOR
SELECT ROWNUM, 
       PK,
       THR_EMP_PK,
       ORG_NM,
       EMP_ID,
       FULL_NAME,
       START_DT,
       END_DT,
       ABSENCE_TYPE,
       DESCRIPTION,
       SEQUENCE_DT
     FROM
    (SELECT P.PK PK,
           A.PK THR_EMP_PK,
           C.ORG_NM,
           A.EMP_ID,
           A.FULL_NAME,
           P.START_DT,
           P.END_DT,
           P.ABSENCE_TYPE,
           P.DESCRIPTION,
           P.SEQUENCE_DT
    FROM THR_ABSENCE_REG P,
         THR_EMPLOYEE A, 
         TCO_ORG C
    WHERE P.DEL_IF = 0
      AND P.THR_EMP_PK = A.PK
--      AND P.START_DT between NVL(P_FROM_DATE,'1') and NVL(P_TO_DATE,'99999999')
      and (NVL(P_FROM_DATE,'1') between P.START_DT and P.END_DT
                or NVL(P_TO_DATE,'99999999') between P.START_DT and P.END_DT)
      AND DECODE(P_ABSENCE_TYPE, 'ALL', 'ALL', P.ABSENCE_TYPE ) = P_ABSENCE_TYPE
      AND A.DEL_IF=0 AND C.DEL_IF=0
      AND A.TCO_ORG_PK = C.PK
      AND (P_EMP_ID IS NULL 
           OR UPPER(A.EMP_ID) LIKE '%'|| UPPER(P_EMP_ID) ||'%'
           OR UPPER(A.FULL_NAME) LIKE '%'|| UPPER(P_EMP_ID) ||'%')
      AND ( A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
    ORDER BY  P.START_DT DESC, C.ORG_ID, A.EMP_ID);
   
   P_RTN_VALUE := L_RTN_CUR;
 
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_5;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01000_5 (
   P_SEQUENCE VARCHAR2,
   P_RTN_VALUE      OUT   SYS_REFCURSOR
) 
IS
   L_RTN_CUR   SYS_REFCURSOR;
BEGIN
   OPEN L_RTN_CUR FOR
    SELECT 
           rownum,
           P.PK PK,
           A.PK THR_EMP_PK,
           C.ORG_NM,
           A.EMP_ID,
           A.FULL_NAME,
           P.START_DT,
           P.END_DT,
           P.ABSENCE_TYPE,
           P.DESCRIPTION,
           P.SEQUENCE_DT
    FROM THR_ABSENCE_REG P,
         THR_EMPLOYEE A, 
         TCO_ORG C
    WHERE P.DEL_IF = 0
      AND P.THR_EMP_PK = A.PK
      AND A.DEL_IF=0 AND C.DEL_IF=0
      AND A.TCO_ORG_PK = C.PK
      AND P.SEQUENCE_DT = P_SEQUENCE
    ORDER BY P.START_DT, C.ORG_ID, A.EMP_ID;
   
   P_RTN_VALUE := L_RTN_CUR;
 
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01001_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01001_0 (
   p_tco_org_pk          VARCHAR,
   p_wg         VARCHAR,
   p_input          VARCHAR,
   p_absence_type         VARCHAR,
   p_from_date            VARCHAR,
   p_to_date              VARCHAR,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
   OPEN l_rtn_cur FOR
      
SELECT   0 AS sel, t.org_nm, tw.workgroup_nm, a.emp_id, a.full_name,
               p_absence_type, e.remark,
              b.work_dt,
                NULL AS ale, b.thr_emp_pk, e.remark, a.thr_wg_pk,e.pk
          FROM thr_employee a,
               tco_org t,
               THR_WG_SCH_DETAIL b,
               thr_work_shift e
               ,thr_work_group tw
         WHERE a.del_if = 0
           --AND c.del_if = 0
           AND b.del_if = 0
           and tw.del_if=0 and tw.pk=a.thr_wg_pk
           and t.DEL_IF=0 and t.pk=a.tco_org_pk
           AND e.del_if = 0
           AND e.pk = b.thr_ws_pk
           AND a.pk = b.thr_emp_pk
           and b.hol_type is null
           AND DECODE (p_wg, 'ALL', p_wg, tw.pk) =p_wg
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           AND (a.status = 'A' OR b.work_dt < a.left_dt)
           AND b.work_dt BETWEEN p_from_date AND p_to_date
           AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
           AND b.thr_emp_pk NOT IN (
                           SELECT ABS.thr_emp_pk
                             FROM thr_absence ABS
                            WHERE ABS.del_if = 0
                                  AND ABS.absence_dt = b.work_dt and abs.thr_emp_pk=b.thr_emp_pk)
           AND b.thr_emp_pk NOT IN (
                  SELECT t.thr_emp_pk
                    FROM thr_time_machine t
                   WHERE t.del_if = 0
                     AND t.work_dt = b.work_dt and t.thr_emp_pk=b.thr_emp_pk
                     AND t.work_time >= e.wt+nvl(e.wt_plus,0))
      ORDER BY b.work_dt, 1,2, a.emp_id, a.full_name;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01002_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01002_0 (
   p_tco_org_pk          VARCHAR,
   p_wg         VARCHAR,
   p_input          VARCHAR,
   p_absence_type         VARCHAR,
   p_from_date            VARCHAR,
   p_to_date              VARCHAR,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
   OPEN l_rtn_cur FOR
      SELECT   0 AS sel, org_nm, tw.workgroup_nm, a.emp_id, a.full_name,
               p_absence_type,
               p_from_date,
               p_to_date,
                a.pk,a.thr_wg_pk
          FROM thr_employee a,tco_org e
               ,thr_work_group tw
         WHERE a.del_if = 0
           and a.tco_org_pk=e.pk
           and tw.del_if=0 and tw.pk=a.thr_wg_pk
           and e.del_if=0
           AND DECODE (p_wg, 'ALL', p_wg, tw.pk) =p_wg
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           AND (a.status = 'A' OR p_to_date < a.left_dt)
           AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
           AND a.pk NOT IN (  -- Loai nhung vang khong phai Non scan 
                           SELECT ABS.thr_emp_pk
                             FROM thr_absence ABS
                            WHERE ABS.del_if = 0
                                  AND ABS.absence_dt between  p_from_date and p_to_date
                                  AND ABS.absence_type != '13' )
           AND a.pk NOT IN (
                  SELECT t.thr_emp_pk
                    FROM thr_time_machine t
                   WHERE t.del_if = 0
                     AND t.work_dt between p_from_date and p_to_date
                     )
      ORDER BY p_from_date,2,3, a.emp_id, a.full_name;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01003_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01003_0(
  p_thr_absence_reg_pk      varchar,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
   OPEN l_rtn_cur FOR
      SELECT   e.org_nm, tw.workgroup_nm, a.emp_id, a.full_name, (select remark from thr_work_shift where del_if=0 and pk=b.thr_ws_pk),
               b.absence_type,
               TO_CHAR (TO_DATE (b.absence_dt, 'yyyymmdd'), 'dd/mm/yyyy'),b.remark,
               b.absence_time,
               DECODE (b.company_pay_yn, 'Y', -1, 0), nvl(b.company_pay_rate,0) || '%',
               DECODE (b.insurance_pay_yn, 'Y', -1, 0), nvl(b.insurance_pay_rate,0)  || '%',
               NULL AS ale, b.pk, b.thr_emp_pk, a.thr_wg_pk ,nvl(b.thr_absence_reg_pk,0),b.thr_ws_pk
               ,decode(nvl(b.company_allow,'N'),'N',0,-1)
          FROM thr_employee a, thr_absence b, tco_org e --, thr_group c, comm.tco_dept d
          ,thr_work_group tw
         WHERE a.del_if = 0
           AND b.del_if = 0
           AND a.pk = b.thr_emp_pk
           and e.del_If=0
           and e.pk=a.tco_org_pk  and tw.del_if=0 and tw.pk=a.thr_wg_pk
           and thr_absence_reg_pk=p_thr_absence_reg_pk
      ORDER BY b.absence_dt, 1,2, a.emp_id, a.full_name;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01004_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01004_0
(
   p_seq              varchar,
   p_rtn_value      OUT   sys_refcursor
)
IS

   l_rtn_cur   sys_refcursor;
BEGIN
      OPEN l_rtn_cur FOR
      SELECT ROWNUM, 
       THR_EMP_PK,
       ORG_NM,
       EMP_ID,
       FULL_NAME,
       START_DT,
       END_DT,
       START_TIME,
       END_TIME,
       ABS_TIME,
       ABSENCE_TYPE,
       REG_TYPE,
       DESCRIPTION
     FROM
    (SELECT 
           A.PK THR_EMP_PK,
           C.ORG_NM,
           A.EMP_ID,
           A.FULL_NAME,
           P.FROM_DT START_DT,
           P.TO_DT END_DT,
           P.START_TIME,
           P.END_TIME,
           NVL(P.ABSENCE_TIME,0) ABS_TIME,
           P.ABSENCE_TYPE,
           P.REG_TYPE,
           P.DESCRIPTION
    FROM THR_ABSENCE P,
         THR_EMPLOYEE A, 
         TCO_ORG C
    WHERE P.DEL_IF = 0
      AND P.THR_EMP_PK = A.PK   
      AND A.DEL_IF=0 AND C.DEL_IF=0
      AND A.TCO_ORG_PK = C.PK
      AND P.SEQUENCE_DT = p_seq      
    ORDER BY A.EMP_ID);


   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01004_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01004_1 (
   p_tco_org_pk            VARCHAR2,
   p_status                VARCHAR2,
   p_emp_search            VARCHAR2,
   p_rtn_value       OUT SYS_REFCURSOR)
IS
   l_rtn_cur   SYS_REFCURSOR;
BEGIN
   OPEN l_rtn_cur FOR
  SELECT 0
               ,a.pk
               ,b.org_nm
               ,a.emp_id
               ,a.full_name
          FROM thr_employee a, tco_org b
         WHERE     a.del_if = 0
               AND b.del_if = 0
               and A.TCO_ORG_PK = b.pk
               and (   a.tco_org_pk in (
                              select     g.pk
                                    from tco_org g
                                   where g.del_if = 0
                              start with g.pk =
                                            decode (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              connect by prior g.pk = g.p_pk)
                        or p_tco_org_pk = 'ALL')
               and (p_emp_search is null 
                 or  (upper(a.emp_id) like  '%' || upper(p_emp_search)|| '%')
                 or  (upper(a.old_id ) like  '%' || upper(p_emp_search)|| '%')
                 or  (upper(a.full_name) like  '%' || upper(p_emp_search)|| '%'))
               and decode(p_status,'ALL','ALL',a.status)=p_status
      ORDER BY b.org_nm, a.emp_id;

   p_rtn_value := l_rtn_cur;
END ST_HR_SEL_HRTI01004_1;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01005_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01005_0
(
   p_seq              varchar,
   p_rtn_value      OUT   sys_refcursor
)
IS

   l_rtn_cur   sys_refcursor;
BEGIN
      OPEN l_rtn_cur FOR
      SELECT ROWNUM, 
       THR_EMP_PK,
       ORG_NM,
       EMP_ID,
       FULL_NAME,
       START_DT,
       END_DT,
       ABS_TIMES,
       ABSENCE_TYPE,
       DESCRIPTION
     FROM
    (SELECT 
           A.PK THR_EMP_PK,
           C.ORG_NM,
           A.EMP_ID,
           A.FULL_NAME,
           R.START_DT START_DT,
           R.END_DT END_DT,
           0 ABS_TIMES,
           R.ABSENCE_TYPE,

           R.DESCRIPTION
    FROM 
         THR_EMPLOYEE A, 
         TCO_ORG C,
         THR_ABSENCE_REG R
    WHERE 
     
        R.DEL_IF = 0
      AND R.THR_EMP_PK = A.PK   
      AND A.DEL_IF=0 AND C.DEL_IF=0
      AND A.TCO_ORG_PK = C.PK
      AND R.SEQUENCE_DT = p_seq      
    ORDER BY A.EMP_ID);


   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01100_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_sel_hrti01100_0(
   p_emp_id             varchar,
   p_tco_org_pk         varchar,
   p_wg                 varchar,
   p_status             varchar,
   p_from_date          varchar,
   p_to_date            varchar,
   p_absence_type       varchar,
   p_absence_kind       varchar,
   p_rtn_value      out   sys_refcursor
)
is

   l_rtn_cur   sys_refcursor;
begin
   open l_rtn_cur for
        select rownum, 
              t.*
             from
            (select a.pk,
                   c.org_nm,
                   a.emp_id,
                   a.full_name,
                   d.absence_dt,
                   d.absence_type,
                   d.start_time,
                   d.end_time,
                   d.absence_time,
                   d.reg_type,
                   d.description
            from thr_employee a, 
                 tco_org c,
                 thr_absence d
            where d.del_if = 0 and a.del_if=0 and c.del_if=0
              and d.thr_emp_pk = a.pk
              and d.absence_dt between nvl(p_from_date,'1') and nvl(p_to_date,'99999999')
              and (d.absence_type = p_absence_type or p_absence_type = 'ALL')
              and decode(p_status,'ALL','ALL',a.status)=p_status
              and decode(p_absence_kind,'ALL','ALL', d.reg_type) = p_absence_kind
              and decode (p_wg, 'ALL', p_wg, a.thr_wg_pk) = p_wg
              and a.tco_org_pk = c.pk
              and (p_emp_id is null 
                   or upper(a.emp_id) like '%'|| upper(p_emp_id) ||'%'
                   or upper(a.full_name) like '%'|| upper(p_emp_id) ||'%')
              and ( a.tco_org_pk in (
                                      select     g.pk
                                            from tco_org g
                                           where g.del_if = 0
                                      start with g.pk =
                                                    decode (p_tco_org_pk,
                                                            'ALL', 0,
                                                            p_tco_org_pk
                                                           )
                                      connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk = 'ALL')
            order by d.absence_dt, c.org_id, a.emp_id)t;
 
 p_rtn_value := l_rtn_cur;
exception
   when others
   then
      raise;
end;
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01100_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01100_1 (
   P_TCO_ORG_PK          VARCHAR,
   p_wg         VARCHAR,
   p_nation_type          VARCHAR,
   p_input          VARCHAR,
   p_absence_type         VARCHAR,
   p_print_type         VARCHAR,
   p_from_date            VARCHAR,
   p_to_date             VARCHAR,
   p_emp_type           VARCHAR,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN

     OPEN l_rtn_cur FOR
        SELECT   e.org_nm, tw.workgroup_nm, a.emp_id, a.full_name,
               absence.code_nm
               , b.start_dt
               ,b.end_dt
               ,b.remark,absence.code,b.date_2
          FROM thr_employee a, thr_absence_reg b,tco_org e--, thr_group c, comm.tco_dept d
             ,thr_work_group tw
           ,(select code,code_nm,num_1,num_2,num_3 from vhr_hr_code where id='HR0003') absence
           WHERE a.del_if = 0
               --AND c.del_if = 0
               AND b.del_if = 0
               --AND d.del_if = 0
               and tw.del_if=0 and tw.pk=a.thr_wg_pk
               AND b.absence_type=absence.code(+)
               AND b.thr_emp_pk=a.pk
               and a.tco_org_pk=e.pk
               --AND a.thr_group_pk = c.pk
               --AND d.pk = a.tco_dept_pk
               AND DECODE (p_wg, 'ALL', p_wg, tw.pk) =p_wg
               AND DECODE (p_absence_type, 'ALL', p_absence_type, b.absence_type) =
                                                                    p_absence_type
               AND DECODE (p_nation_type, 'ALL', p_nation_type, a.nation) =
                                                                     p_nation_type
               and ( (p_print_type='1' and   nvl(absence.num_1,0) >0) --company pay
                     or
                      (p_print_type='2' and   nvl(absence.num_1,0) =0) --company don't pay
                     or
                      (p_print_type='3' and   nvl(absence.num_2,0) >0) --insurance pay
                     or
                      (p_print_type='4' and   nvl(absence.num_2,0) =0) --insurance pay
                     or
                      (p_print_type='5' and   nvl(absence.num_3,0) =1) --permission
                     or
                      (p_print_type='6' and   nvl(absence.num_3,0) =0) --nonpermission
                     or
                      (p_print_type='ALL')
                   )
               AND (p_input IS NULL 
                     OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
--                AND  ( b.start_dt <= p_to_date and b.end_dt >= p_from_date)
                and b.start_dt between p_from_date and p_to_date
              AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
             AND DECODE (p_emp_type, 'ALL', p_emp_type, a.employee_type) =p_emp_type
          ORDER BY b.start_dt, 1,2, a.emp_id, a.full_name;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01100_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01100_2 (
   p_tco_org_pk          VARCHAR,
   p_wg         VARCHAR,
   p_nation_type          VARCHAR,
   p_input          VARCHAR,
   p_absence_type         VARCHAR,
   p_print_type           VARCHAR,
   p_from_date            VARCHAR,
   p_to_date              VARCHAR,
   p_days                 VARCHAR,
   p_value                 VARCHAR,
   p_emp_type           VARCHAR,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
   OPEN l_rtn_cur FOR
      SELECT   MAX (d.org_nm), MAX (tw.workgroup_nm), a.emp_id,
               MAX (a.full_name), absence.code_nm,
               min(b.absence_dt),
               max(b.absence_dt),
               '',ROUND(SUM(nvl(b.absence_time,0))/8,2), absence.code, b.thr_emp_pk
          FROM thr_employee a,
               thr_absence b,
               TCO_org d,
               (SELECT code, code_nm, num_1, num_2, num_3
                  FROM vhr_hr_code
                 WHERE ID = 'HR0003') absence
              ,thr_work_group tw
         WHERE a.del_if = 0

           AND b.del_if = 0
           AND d.del_if = 0
           AND b.absence_type = absence.code
           AND b.thr_emp_pk = a.pk
           AND tw.del_if=0 and tw.pk=a.thr_wg_pk
           AND d.pk = a.tco_org_pk
           AND DECODE (p_wg, 'ALL', p_wg, tw.pk) = p_wg
           AND DECODE (p_absence_type, 'ALL', p_absence_type, b.absence_type) =
                                                                p_absence_type
           AND DECODE (p_nation_type, 'ALL', p_nation_type, a.nation) =p_nation_type
           AND DECODE (p_emp_type, 'ALL', p_emp_type, a.employee_type) =p_emp_type
           AND (   (p_print_type = '1' AND NVL (absence.num_1, 0) > 0
                   )                                             --company pay
                OR (p_print_type = '2' AND NVL (absence.num_1, 0) = 0
                   )                                       --company don't pay
                OR (p_print_type = '3' AND NVL (absence.num_2, 0) > 0
                   )                                           --insurance pay
                OR (p_print_type = '4' AND NVL (absence.num_2, 0) = 0
                   )                                           --insurance pay
                OR (p_print_type = '5' AND NVL (absence.num_3, 0) = 1
                   )                                              --permission
                OR (p_print_type = '6' AND NVL (absence.num_3, 0) = 0
                   )                                           --nonpermission
                OR (p_print_type = 'ALL')
               )
           AND (p_input IS NULL 
                     OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
           AND (b.absence_dt BETWEEN p_from_date AND p_to_date)
           AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')
      GROUP BY emp_id, b.thr_emp_pk, absence.code_nm, absence.code
        HAVING ( (p_value = '>' and COUNT (*) > p_days)
                 OR (p_value = '<' and COUNT (*) < p_days)
                 OR (p_value = '=' and COUNT (*) = p_days)
                 OR (p_value = '>=' and COUNT (*) >= p_days)
                 OR (p_value = '<=' and COUNT (*) <= p_days)
                 OR p_days IS NULL)
      ORDER BY a.emp_id, absence.code_nm;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01100_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01100_3 (
   p_thr_emp_pk         VARCHAR,
   p_absence_type         VARCHAR,
   p_fromdate          VARCHAR,
   p_todate            VARCHAR,
   p_emp_type           VARCHAR,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
       OPEN l_rtn_cur FOR
          SELECT   absence.code_nm,
                   b.absence_dt,b.remark,
                   b.absence_time,
                   DECODE (b.company_pay_yn, 'Y', -1, 0), nvl(b.company_pay_rate,0) || '%',
                   DECODE (b.insurance_pay_yn, 'Y', -1, 0), nvl(b.insurance_pay_rate,0)  || '%'
                 FROM thr_employee a, thr_absence b
                ,(select code,code_nm,num_1,num_2,num_3 from vhr_hr_code where id='HR0003') absence
             WHERE a.del_if = 0
               AND b.del_if = 0
               AND b.absence_type=absence.code
               AND b.thr_emp_pk=a.pk
               and b.thr_emp_pk=p_thr_emp_pk
               and b.absence_type=p_absence_type
               AND DECODE (p_emp_type, 'ALL', p_emp_type, a.employee_type) =p_emp_type
               and b.absence_dt between p_fromdate and p_todate 
               ORDER BY b.absence_dt;
   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01200_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01200_0 (
   p_tco_org_pk            varchar2,
   p_wg                    varchar2,
   p_status                VARCHAR2,
   p_lday                  VARCHAR2,
   p_ale                   VARCHAR2,
   p_month                 VARCHAR2,
   p_input                 VARCHAR2,
   p_nation                VARCHAR2,
   p_from                  VARCHAR2,
   p_to                    VARCHAR2,
   p_left_from             VARCHAR2,
   p_left_to               VARCHAR2,
  
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN


   OPEN l_rtn_cur FOR
      SELECT   
                al.emp_pk,al.pay,Al.org_NM, al.emp_id, al.full_nm,
               TO_CHAR (TO_DATE (al.join_date, 'YYYYMMDD'), 'DD/MM/YYYY')
               ,al.total_unpay as ale_last_year
               ,al.annual_leave_days_in_year 
               ,alsum.ale_adjust
               ,case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)> p_month then  
                    HR_F_CAL_ALE(p_month,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
               end   AS al_real
               ,yearsum AS used,
               case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)>p_month then  
                    HR_F_CAL_ALE(p_month,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
              end
               - NVL(yearsum,0)+nvl(al.total_unpay,0) AS UNUSED,
               case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)> p_month then  
                    HR_F_CAL_ALE(SUBSTR(p_month,1,4)||'12',AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
               end - NVL(yearsum,0)+nvl(al.total_unpay,0) AS unused_in_yeaar,
               0 as pay,
               case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)>p_month then  
                    HR_F_CAL_ALE(p_month,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
              end
              - NVL(yearsum,0)+nvl(al.total_unpay,0) AS UNPAY,               
               decode(mon01,0,null,mon01), decode(mon02,0,null,mon02),
               decode(mon03,0,null,mon03), decode(mon04,0,null,mon04),
               decode(mon05,0,null,mon05), decode(mon06,0,null,mon06),
               decode(mon07,0,null,mon07), decode(mon08,0,null,mon08),
               decode(mon09,0,null,mon09), decode(mon10,0,null,mon10),
               decode(mon11,0,null,mon11), decode(mon12,0,null,mon12)
          FROM (SELECT b.pk AS group_pk, b.org_nm AS org_NM,
                       a.emp_id AS emp_id, a.full_name AS full_nm,
                       a.ale_day_in_year AS annual_leave_days_in_year,
                       a.join_dt AS join_date, a.pk AS emp_pk
                       ,c.ale_pay as ale_pay,a.al_pay_yn as al_pay_yn
                       ,c.total_unpay as total_unpay
                       ,decode(nvl(a.AL_PAY_YN,'N'),'Y','-1','0') as pay
                       ,a.LEFT_DT
                  FROM thr_employee a, tco_org b,thr_annual_leave c
            WHERE a.del_if = 0 and (a.LEFT_DT is null or substr(nvl(a.LEFT_DT,'30001010'),1,4) >= substr(p_month,1,4) )
                   AND b.del_if = 0
                   AND c.del_if(+)=0
                   and a.pk=c.thr_emp_pk(+)
                   and DECODE (p_nation, 'ALL', p_nation, a.nation ) =p_nation
                   and c.an_year(+)=TO_CHAR(ADD_MONTHS(TO_DATE(p_month,'YYYYMM'),-12),'YYYY') --du lieu nam truoc
                   AND a.tco_org_pk = b.pk
                   AND (DECODE (p_status, 'ALL', p_status,case when a.LEFT_DT is null or substr(a.LEFT_DT,1,6)>p_month then 'A'else 'R' end  ) =p_status)
                   AND (DECODE (p_wg, 'ALL', p_wg, a.thr_wg_pk ) =p_wg)
                   AND (p_input IS NULL 
                     OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                   AND ((p_from is null and p_to is null) or (a.join_dt between p_from and p_to)) 
                   AND ((p_left_from is null and p_left_to is null) or (a.left_dt between p_left_from and p_left_to  and a.left_dt is not null))
                   AND (    A.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                        OR P_TCO_ORG_PK = 'ALL')) al,
               (SELECT   e.emp_id emp_id, e.pk emp_pk,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'01', round(a.ale_hours/8,2),0)) mon01,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'02', round(a.ale_hours/8,2),0)) mon02,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'03', round(a.ale_hours/8,2),0)) mon03,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'04', round(a.ale_hours/8,2),0)) mon04,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'05', round(a.ale_hours/8,2),0)) mon05,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'06', round(a.ale_hours/8,2),0)) mon06,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'07', round(a.ale_hours/8,2),0)) mon07,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'08', round(a.ale_hours/8,2),0)) mon08,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'09', round(a.ale_hours/8,2),0)) mon09,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'10', round(a.ale_hours/8,2),0)) mon10,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'11', round(a.ale_hours/8,2),0)) mon11,
                         SUM (DECODE (SUBSTR (a.work_mon, 5, 2),'12', round(a.ale_hours/8,2),0)) mon12,
                         round(SUM (nvl(a.ale_hours,0)/8),2) yearsum,
                         round(SUM (nvl(a.AL_DAYS_PAID,0)),2) ale_adjust --don vi la ngay
                    FROM thr_current_ale a,thr_employee e
                   WHERE a.del_if=0 and e.del_if=0 and a.thr_emp_pk=e.pk 
                    and a.work_mon <= p_month
                     AND SUBSTR (a.work_mon, 1, 4) = SUBSTR (p_month, 1, 4)
                     AND (p_input IS NULL 
                         OR  (UPPER(E.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(E.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(E.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                     AND e.TCO_ORG_PK IN (
                              SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                GROUP BY e.emp_id, e.pk) alsum         
         WHERE al.emp_pk = alsum.emp_pk(+)
           AND (   ( case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)>p_month then  
                    HR_F_CAL_ALE(p_month,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
              end
              -NVL (yearsum,0)+nvl(al.total_unpay,0)>= p_ale
                    AND p_lday = '1'
                   )
                OR ( case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)>p_month then  
                    HR_F_CAL_ALE(p_month,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
                      end
              - NVL (yearsum, 0)+nvl(al.total_unpay,0) = p_ale
                    AND p_lday = '2'
                   )
                OR ( case when al.Left_dt is null or substr(nvl(al.left_dt,'30000101'),1,6)>p_month then  
                    HR_F_CAL_ALE(p_month,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(alsum.ale_adjust,0),al.emp_pk)
              end
              - NVL (yearsum, 0)+nvl(al.total_unpay,0)<= p_ale
                    AND p_lday = '3'
                   )
                OR p_ale IS NULL
               )
           AND al.join_date <=TO_CHAR (LAST_DAY (TO_DATE (p_month, 'YYYYMM')), 'YYYYMMDD')
      ORDER BY al.org_NM, al.emp_id;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01200_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01200_1 (
   p_tco_org_pk       VARCHAR2,
   p_wg               VARCHAR2,
   p_status           VARCHAR2,
   p_lday             VARCHAR2,
   p_ale              VARCHAR2,
   p_month            VARCHAR2,
   p_input            VARCHAR2,
   p_nation           VARCHAR2,
   p_from             VARCHAR2,
   p_to               VARCHAR2,
   p_left_from        VARCHAR2,
   p_left_to          VARCHAR2,
   p_rtn_value    OUT SYS_REFCURSOR)
IS
   /******************************************************************************
      NAME:       sp_get_user_entry_popup
      PURPOSE:

      REVISIONS:
      Ver        Date        Author           Description
      ---------  ----------  ---------------  ------------------------------------
      1.0        11/01/2008        1. Created this function.

   ******************************************************************************/
   l_rtn_cur   SYS_REFCURSOR;
BEGIN
   OPEN l_rtn_cur FOR
        SELECT A.THR_EMP_PK,
               DECODE (NVL (c.AL_PAY_YN, 'N'), 'Y', '-1', '0'),
               A.org_NM,
               A.EMP_ID,
               A.FULL_NAME,
               TO_CHAR (TO_DATE (A.JOIN_DT, 'YYYYMMDD'), 'DD/MM/YYYY'),
               A.ALE_LAST_YEAR,
               A.ALE_IN_YEAR,
               A.ALE_ADJUST,
               A.ALE_REAL,
               A.USED,
               A.UNUSED,
               A.UNUSED,
               CASE
                  WHEN NVL (A.EMPLOYEE_PAY, 0) > 0
                  THEN
                     -1 * NVL (A.EMPLOYEE_PAY, 0)
                  ELSE
                     NVL (A.ALE_PAY, 0)
               END,
               A.TOTAL_UNPAY,
               DECODE (A.JAN, 0, NULL, A.JAN),
               DECODE (A.FEB, 0, NULL, A.FEB),
               DECODE (A.MAR, 0, NULL, A.MAR),
               DECODE (A.APR, 0, NULL, A.APR),
               DECODE (A.MAY, 0, NULL, A.MAY),
               DECODE (A.JUN, 0, NULL, A.JUN),
               DECODE (A.JUL, 0, NULL, A.JUL),
               DECODE (A.AUG, 0, NULL, A.AUG),
               DECODE (A.SEP, 0, NULL, A.SEP),
               DECODE (A.OCT, 0, NULL, A.OCT),
               DECODE (A.NOV, 0, NULL, A.NOV),
               DECODE (A.DEC, 0, NULL, A.DEC)
          FROM THR_ANNUAL_LEAVE A, THR_ANNUAL_LEAVE B, THR_EMPLOYEE C
         WHERE     A.DEL_IF = 0
               AND B.DEL_IF(+) = 0
               AND C.DEL_IF = 0
               AND A.THR_EMP_PK = C.PK
               AND B.AN_YEAR(+) =
                      TO_CHAR (ADD_MONTHS (TO_DATE (p_month, 'YYYYMM'), -12),
                               'YYYY')
               AND A.THR_EMP_PK = B.THR_EMP_PK(+)
               AND A.AN_YEAR = SUBSTR (p_month, 1, 4)
               AND (p_input IS NULL 
                     OR  (UPPER(C.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(C.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(C.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
               AND (   A.TCO_ORG_PK IN
                          (    SELECT G.PK
                                 FROM TCO_ORG G
                                WHERE G.DEL_IF = 0
                           START WITH G.PK =
                                         DECODE (P_TCO_ORG_PK,
                                                 'ALL', 0,
                                                 P_TCO_ORG_PK)
                           CONNECT BY PRIOR G.PK = G.P_PK)
                    OR P_TCO_ORG_PK = 'ALL')
               AND (   (a.UNUSED >= p_ale AND p_lday = '1')
                    OR (a.UNUSED = p_ale AND p_lday = '2')
                    OR (a.UNUSED <= p_ale AND p_lday = '3')
                    OR p_ale IS NULL)
               AND (DECODE (p_wg, 'ALL', p_wg, c.thr_wg_pk) = p_wg)
               AND (DECODE (p_status, 'ALL', p_status, a.status) = p_status)
               AND (DECODE (p_nation, 'ALL', p_nation, c.nation) = p_nation)
               AND (   (p_from IS NULL AND p_to IS NULL)
                    OR (a.join_dt BETWEEN p_from AND p_to))
               AND (   (p_left_from IS NULL AND p_left_to IS NULL)
                    OR (    c.left_dt BETWEEN p_left_from AND p_left_to
                        AND c.left_dt IS NOT NULL))
      ORDER BY A.GROUP_NM, A.EMP_ID;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01200_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01200_2 (
   p_tco_org_pk          VARCHAR,
   p_wg                  VARCHAR,
   p_year                 VARCHAR,
   p_input          VARCHAR,
   p_status          VARCHAR,
   p_nation          VARCHAR,
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
BEGIN
   OPEN l_rtn_cur FOR

      SELECT  e.pk,
              nvl(e.AL_PAY_YN,'N'),
              d.org_nm,
              c.WORKGROUP_NM ,
              E.EMP_ID
              ,E.FULL_NAME,TO_CHAR(TO_DATE(E.JOIN_DT,'YYYYMMDD'),'DD/MM/YYYY')
              ,A.ALE_LAST_YEAR,
              A.ALE_IN_YEAR,
              A.ALE_ADJUST,
              A.ALE_REAL,
              A.USED,
              M.ALE_FOR_NEXT_YEAR,
              A.ALE_FOR_NEXT_YEAR
              ,M.BORROW_AL_NEXT_YEAR,
              A.BORROW_AL_NEXT_YEAR,A.UNUSED,A.ALE_PAY
              ,a.EMPLOYEE_PAY ,
              nvl(A.SALARY,0),
              a.EMPLOYEE_PAY_amt
              ,nvl(A.ALE_PAY_AMT,0),
              a.ALE_UNPAY,p_year
      FROM THR_EMPLOYEE E, THR_ANNUAL_LEAVE A,thr_work_group c,THR_ANNUAL_LEAVE M,tco_org d
      WHERE E.DEL_IF=0 AND A.DEL_IF=0  AND C.DEL_IF=0
      and d.del_if=0 and d.pk =e.tco_org_pk and e.thr_wg_pk=c.pk
      AND E.PK=A.THR_EMP_PK 
      AND A.AN_YEAR=p_year
      And M.del_if(+)=0
      and M.AN_YEAR(+)=p_year-1
      and A.THR_EMP_PK=M.THR_EMP_PK(+)
       AND DECODE (p_wg,'ALL',p_wg,e.thr_wg_pk)=p_wg
        AND DECODE (p_nation,'ALL',p_nation,e.nation)=p_nation
      AND (e.tco_org_pk IN ( SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =
                                            DECODE (P_TCO_ORG_PK,
                                                    'ALL', 0,
                                                    P_TCO_ORG_PK
                                                   )
                              CONNECT BY PRIOR G.PK = G.P_PK)
                OR p_tco_org_pk = 'ALL'
           )
     AND (p_input IS NULL 
         OR  (UPPER(E.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
         OR  (UPPER(E.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
         OR  (UPPER(E.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
      and ( p_status='ALL'  
            or(p_status='A' and nvl(a.status,'A')='A' and nvl(a.resign_pay_yn,'N')='N') --nguoi con lam viec
            or(p_status='R' and nvl(a.status,'A')='R' ) --nguoi nghi trong nam do
            or(p_status='Y' and nvl(a.resign_pay_yn,'N')='Y' ) --nguoi nghi trong nam moi nhung truoc khi process
     )  
     ORDER by A.EMP_ID;
   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01200_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01200_3 (
   p_tco_org_pk   varchar2,
   p_wg  varchar2,
   p_status               VARCHAR2,
   p_condition            VARCHAR2,
   p_ale                  VARCHAR2,
   p_month                VARCHAR2,
   p_input                VARCHAR2,
   p_nation                VARCHAR2,
   p_from                  VARCHAR2,
   p_to                    VARCHAR2,
   p_data_type              VARCHAR2,
   p_rtn_value      OUT   sys_refcursor
)
IS 

/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/
   l_rtn_cur   sys_refcursor;
   l_a1 varchar2(1);
   l_a2 varchar2(1);
   l_a3 varchar2(1);
   l_a4 varchar2(1);
   l_a5 varchar2(1);
   l_a6 varchar2(1);
   l_a7 varchar2(1);
   l_a8 varchar2(1);
   l_a9 varchar2(1);
   l_a10 varchar2(1);
   l_a11 varchar2(1);
   l_a12 varchar2(1);
   
BEGIN
    --header="pk|thr_emp_pk|Organization|Emp_ID|Name|D.O.J|AL Last Year|AL in Year|AL Plus|AL Real|Used|Unused
    --|Unused in Year|Ale Pay|Salary|Ale Pay Amount|Description"   

    IF p_data_type='01' THEN --NEW LIST
        SELECT MAX(L_ALLOW.l_a1),MAX(L_ALLOW.l_a2),MAX(L_ALLOW.l_a3),MAX(L_ALLOW.l_a4),MAX(L_ALLOW.l_a5)
        ,MAX(L_ALLOW.l_a6),MAX(L_ALLOW.l_a7),MAX(L_ALLOW.l_a8),MAX(L_ALLOW.l_a9),MAX(L_ALLOW.l_a10),MAX(L_ALLOW.l_a11)
        ,MAX(L_ALLOW.l_a12)
        INTO l_a1,l_a2,l_a3,l_a4,l_a5,l_a6,l_a7,l_a8,l_a9,l_a10,l_a11,l_a12
        FROM (
        SELECT (CASE WHEN V.CODE='A1' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a1
        ,(CASE WHEN V.CODE='A2' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a2
        ,(CASE WHEN V.CODE='A3' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a3
        ,(CASE WHEN V.CODE='A4' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a4
        ,(CASE WHEN V.CODE='A5' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a5
        ,(CASE WHEN V.CODE='A6' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a6
        ,(CASE WHEN V.CODE='A7' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a7
        ,(CASE WHEN V.CODE='A8' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a8
        ,(CASE WHEN V.CODE='A9' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a9
        ,(CASE WHEN V.CODE='A10' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a10
        ,(CASE WHEN V.CODE='A11' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a11
        ,(CASE WHEN V.CODE='A12' AND V.NUM_2=1 AND V.CHAR_1='Y' THEN 'Y' ELSE NULL END) l_a12
                FROM VHR_HR_CODE V WHERE V.ID='HR0019') L_ALLOW;
    

        OPEN l_rtn_cur FOR
            SELECT 0,hr.emp_pk,hr.org_NM, hr.emp_id, hr.full_nm
                ,hr.join_date
               ,hr.ale_last_year
               ,hr.annual_leave_days_in_year 
               ,hr.ale_plus,hr.al_real,hr.ale_used,hr.ale_UNUSED
               ,hr.unused_in_year,NULL ALE_PAY,hr.SALARY,null,null,null,null,p_month
            FROM (SELECT al.emp_pk,Al.org_NM, al.emp_id, al.full_nm
                ,al.join_date
               ,al.total_unpay as ale_last_year
               ,al.annual_leave_days_in_year 
               ,al.ale_plus
               ,(case when substr(nvl(al.left_dt,'99999999'),1,6)>p_month then  
                    HR_F_CAL_ALE(p_month,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk)
                end)   AS al_real
               ,al.yearsum AS ale_used
               ,(case when substr(nvl(al.left_dt,'99999999'),1,6)>p_month then  
                    HR_F_CAL_ALE(p_month,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk)
                end)- NVL(yearsum,0)+nvl(al.total_unpay,0) AS ale_UNUSED
               ,(case when substr(nvl(al.left_dt,'99999999'),1,6)>p_month then  
                    HR_F_CAL_ALE(SUBSTR(p_month,1,4)||'12',AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk)
                    else
                    HR_F_CAL_ALE_STOP(al.Left_dt,AL.JOIN_DATE,NVL(AL.ANNUAL_LEAVE_DAYS_IN_YEAR,0),NVL(AL.ALE_PLUS,0),al.emp_pk)
                end) - NVL(yearsum,0)+nvl(al.total_unpay,0) AS unused_in_year
                ,al.SALARY SALARY
          FROM (SELECT b.pk AS group_pk, b.org_nm AS org_NM,
                       a.emp_id AS emp_id, a.full_name AS full_nm,
                       a.ale_day_in_year AS annual_leave_days_in_year,
                       A.ALE_PLUS AS ALE_PLUS,
                       a.join_dt AS join_date, a.pk AS emp_pk
                       ,c.ale_pay as ale_pay,a.al_pay_yn as al_pay_yn
                       ,c.total_unpay as total_unpay
                       ,a.LEFT_DT
                       ,(SELECT round(SUM (nvl(USE_ALE.ale_hours,0)/8),2) 
                            FROM thr_current_ale USE_ALE 
                            WHERE USE_ALE.DEL_IF=0 
                            AND SUBSTR (USE_ALE.work_mon, 1, 4) = SUBSTR (p_month, 1, 4)
                            AND USE_ALE.THR_EMP_PK=A.PK
                         ) yearsum
                        ,(CASE WHEN nvl(s.SALARY_LEVEL2,0)=0 THEN NVL(A.BASIC_SAL,0) ELSE nvl(s.SALARY_LEVEL2,0) END)
                            + (CASE WHEN l_a1='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT1,0)=0 THEN nvl(A.ALLOW_AMT1,0) ELSE nvl(s.ALLOW_AMT1,0) END)
                            ELSE 0 END)
                            + (CASE WHEN l_a2='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT2,0)=0 THEN nvl(A.ALLOW_AMT2,0) ELSE nvl(s.ALLOW_AMT2,0) END)
                            ELSE 0 END)
                            + (CASE WHEN l_a3='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT3,0)=0 THEN nvl(A.ALLOW_AMT3,0) ELSE nvl(s.ALLOW_AMT3,0) END)
                            ELSE 0 END)
                           + (CASE WHEN l_a4='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT4,0)=0 THEN nvl(A.ALLOW_AMT4,0) ELSE nvl(s.ALLOW_AMT4,0) END)
                            ELSE 0 END) 
                            + (CASE WHEN l_a5='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT5,0)=0 THEN nvl(A.ALLOW_AMT5,0) ELSE nvl(s.ALLOW_AMT5,0) END)
                            ELSE 0 END)
                            + (CASE WHEN l_a6='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT6,0)=0 THEN nvl(A.ALLOW_AMT6,0) ELSE nvl(s.ALLOW_AMT6,0) END)
                            ELSE 0 END)
                            + (CASE WHEN l_a7='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT7,0)=0 THEN nvl(A.ALLOW_AMT7,0) ELSE nvl(s.ALLOW_AMT7,0) END)
                            ELSE 0 END)
                            + (CASE WHEN l_a8='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT8,0)=0 THEN nvl(A.ALLOW_AMT8,0) ELSE nvl(s.ALLOW_AMT8,0) END)
                            ELSE 0 END)
                            + (CASE WHEN l_a9='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT9,0)=0 THEN nvl(A.ALLOW_AMT9,0) ELSE nvl(s.ALLOW_AMT9,0) END)
                            ELSE 0 END)
                            + (CASE WHEN l_a10='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT10,0)=0 THEN nvl(A.ALLOW_AMT10,0) ELSE nvl(s.ALLOW_AMT10,0) END)
                            ELSE 0 END)
                            + (CASE WHEN l_a11='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT11,0)=0 THEN nvl(A.ALLOW_AMT11,0) ELSE nvl(s.ALLOW_AMT11,0) END)
                            ELSE 0 END)
                            + (CASE WHEN l_a12='Y' THEN 
                                (CASE WHEN nvl(s.ALLOW_AMT12,0)=0 THEN nvl(A.ALLOW_AMT12,0) ELSE nvl(s.ALLOW_AMT12,0) END)
                            ELSE 0 END) SALARY
                  FROM thr_employee a, tco_org b,thr_annual_leave c,thr_salary_manage s
            WHERE a.del_if = 0 
                   AND b.del_if = 0
                   AND c.del_if(+)=0 and s.del_if(+)=0
                   and a.pk=c.thr_emp_pk(+) and a.pk=s.thr_emp_pk(+) and s.work_mon(+)=p_month
                   and a.nation=(CASE WHEN p_nation='ALL' THEN a.nation ELSE p_nation END)
                   and c.an_year(+)=TO_CHAR(ADD_MONTHS(TO_DATE(p_month,'YYYYMM'),-12),'YYYY') --du lieu nam truoc
                   AND a.tco_org_pk = b.pk
                   AND NVL(a.LEFT_DT,'99999999')>=p_month||'01'
                   AND nvl(a.AL_PAY_YN,'N')='Y'
                   AND A.STATUS=(CASE WHEN p_status='ALL' THEN A.STATUS ELSE p_status END)
                   AND a.thr_wg_pk=(CASE WHEN p_wg='ALL' THEN a.thr_wg_pk ELSE TO_NUMBER(p_wg) END)
                   AND (p_input IS NULL 
                         OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                   AND a.join_dt BETWEEN nvl(p_from,'000000') and nvl(p_to,'999999')
                   AND A.JOIN_DT<= p_month||'01'
                   AND A.TCO_ORG_PK IN (SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                              CONNECT BY PRIOR G.PK = G.P_PK)
                   AND A.PK NOT IN(SELECT ALE.THR_EMP_PK FROM THR_MONTHLY_ALE ALE WHERE ALE.DEL_IF=0 AND ALE.WORK_MON=p_month
                                    AND ALE.THR_EMP_PK=A.PK)                               
                        ) al   
            ) hr                
         WHERE p_condition=(CASE WHEN p_condition='1' and hr.unused_in_year>=nvl(p_ale,-99) then '1'
                    WHEN p_condition='2' and hr.unused_in_year=nvl(p_ale,hr.unused_in_year) then '2'
                    WHEN p_condition='3' and hr.unused_in_year<=nvl(p_ale,99) then '3'
                    ELSE '0' END);
                    
    ELSE
         
        OPEN l_rtn_cur FOR
            SELECT hr.pk,hr.thr_emp_pk,hr.org_NM, hr.emp_id, hr.full_name
                ,hr.join_date
               ,hr.ale_last_year
               ,hr.annual_leave_days_in_year 
               ,hr.ale_plus,hr.al_real,hr.ale_used,hr.ale_UNUSED
               ,hr.unused_in_year,hr.ALE_PAY,hr.SALARY,hr.ALE_PAY_AMT
               ,case when nvl(hr.FIX_BYHAND_YN,'N')='N' then '' else '-1' end
               ,hr.adjust_type,hr.DESCRIPTION,hr.work_mon
            FROM THR_MONTHLY_ALE hr,THR_EMPLOYEE E
            WHERE hr.del_if=0 AND E.DEL_IF=0 AND E.PK=HR.THR_EMP_PK
            and hr.work_mon=p_month
            and hr.nation=(CASE WHEN p_nation='ALL' THEN hr.nation ELSE p_nation END)
                   AND NVL(hr.LEFT_DT,'99999999')>=p_month||'01'
                   AND E.STATUS=(CASE WHEN p_status='ALL' THEN E.STATUS ELSE p_status END)
                   AND E.thr_wg_pk=(CASE WHEN p_wg='ALL' THEN E.thr_wg_pk ELSE TO_NUMBER(p_wg) END)
                   AND (p_input IS NULL 
                         OR  (UPPER(E.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(E.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(E.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                   AND E.join_dt BETWEEN nvl(p_from,'000000') and nvl(p_to,'999999')
                   AND E.JOIN_DT<= p_month||'01'
                   AND E.TCO_ORG_PK IN (SELECT     G.PK
                                    FROM TCO_ORG G
                                   WHERE G.DEL_IF = 0
                              START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                              CONNECT BY PRIOR G.PK = G.P_PK)
            and p_condition=(CASE WHEN p_condition='1' and hr.unused_in_year>=nvl(p_ale,-99) then '1'
                    WHEN p_condition='2' and hr.unused_in_year=nvl(p_ale,hr.unused_in_year) then '2'
                    WHEN p_condition='3' and hr.unused_in_year<=nvl(p_ale,99) then '3'
                    ELSE '0' END);
         
    END IF;      

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01201_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01201_0
                                (
                                   p_emp_pk varchar2,
                                   p_mon varchar2,
                                   p_flag varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN
      IF p_flag='0' then
          open l_rtn_cur for
          SELECT b.FULL_NAME,b.EMP_ID,to_char(to_date(a.ABSENCE_DT,'yyyymmdd'),'dd/mm/yyyy'),a.ABSENCE_TIME
          FROM THR_ABSENCE A,THR_EMPLOYEE B
          WHERE B.DEL_IF=0 AND A.THR_EMP_PK=B.PK AND A.DEL_IF=0
          AND SUBSTR(hr_f_period_month_2(a.ABSENCE_DT,B.SAL_PERIOD),1,4)=SUBSTR(p_mon,1,4) AND A.ABSENCE_TYPE='01'
          AND B.PK=p_emp_pk
          order by A.ABSENCE_DT;
      ELSe 
        open l_rtn_cur for
          SELECT b.FULL_NAME,b.EMP_ID,to_char(to_date(a.ABSENCE_DT,'yyyymmdd'),'dd/mm/yyyy'),a.ABSENCE_TIME
          FROM THR_ABSENCE A,THR_EMPLOYEE B
          WHERE B.DEL_IF=0 AND A.THR_EMP_PK=B.PK AND A.DEL_IF=0
          AND hr_f_period_month_2(a.ABSENCE_DT,B.SAL_PERIOD)<=p_mon AND A.ABSENCE_TYPE='01'
          and  hr_f_period_month_2(a.ABSENCE_DT,B.SAL_PERIOD)=SUBSTR(p_mon,1,4)||lpad(p_flag,2,'0')
          AND B.PK=p_emp_pk
          order by A.ABSENCE_DT;
     END IF;

       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01202_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01202_0 (
   P_EMP_PK       VARCHAR,
   P_YEAR         VARCHAR2,
   P_RTN      OUT SYS_REFCURSOR)
IS
   TMPVAR    NUMBER;
   p_month   VARCHAR2 (10) := '';
BEGIN
   TMPVAR := 0;

   SELECT char_2
     INTO p_month
     FROM vhr_hr_code
    WHERE id = 'HR0006' AND code = '03';

   IF p_month > 6
   THEN
      p_month := (p_year) || p_month;
   ELSE
      p_month := (p_year + 1) || p_month;
   END IF;

   OPEN p_rtn FOR
      SELECT b.FULL_NAME,
             b.EMP_ID,
             b.JOIN_DT,
             a.SALARY_LEVEL1,
             a.SALARY_LEVEL2,
             a.CONFIRM_DT,
             a.ALLOW_AMT1,
             a.ALLOW_AMT2,
             a.ALLOW_AMT3,
             a.ALLOW_AMT4,
             a.ALLOW_AMT5,
             a.ALLOW_AMT6,
             a.ALLOW_AMT7,
             a.ALLOW_AMT8
        FROM thr_salary_manage a, thr_employee b
       WHERE     b.del_if = 0
             AND b.pk = a.thr_emp_pk
             AND a.WORK_MON = p_month
             AND a.del_if = 0
             AND a.THR_EMP_PK = p_emp_pk;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      -- CONSIDER LOGGING THE ERROR AND THEN RE-RAISE
      RAISE;
END;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01301_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01301_0 (                                        
   p_lst_emp_pk          VARCHAR2, 
   p_org_pk          VARCHAR2, 
   p_wg_pk          VARCHAR2, 
   p_input          VARCHAR2,  
   p_rtn_value      OUT   sys_refcursor
)
IS
/******************************************************************************
   NAME:       sp_get_user_entry_popup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        11/01/2008        1. Created this function.

******************************************************************************/  
   l_rtn_cur   sys_refcursor;   
   strSql          VARCHAR2(4000);  
   l_lst_emp_pk          VARCHAR2(400);  
  
BEGIN
        
           IF p_lst_emp_pk IS NOT NULL THEN
               l_lst_emp_pk := REPLACE(p_lst_emp_pk, ':', ''',''');   
                            
               strSql := ' SELECT   0 AS sel, b.org_nm, c.workgroup_nm,A.ID_NUM, a.emp_id, a.full_name,A.SEX,A.JOIN_DT,a.pk  ' ||
                    '         FROM thr_employee a ' ||
                    '               ,tco_org b                ' ||
                    '               ,thr_work_group c ' ||
                    '         WHERE a.del_if = 0            ' ||
                    '               AND b.del_if = 0 ' ||
                    '               AND c.del_if = 0 ' ||
                    '               and a.thr_wg_pk=c.pk ' ||
                    '               and a.tco_org_pk=b.pk ' ||
                    ' AND UPPER(a.emp_id) IN (''' || l_lst_emp_pk || ''') '||    
                     '                    and  decode('''||p_wg_pk||''',''ALL'',''ALL'',a.thr_wg_pk)='''||p_wg_pk||''' ' ||
                    '           AND (a.tco_org_pk IN (SELECT g.pk ' ||
                    '                                    FROM tco_org g ' ||
                    '                                   WHERE g.del_if = 0 ' ||
                    '                                  START WITH g.pk =DECODE ('''||p_org_pk||''',''ALL'', 0,'''||p_org_pk||''') ' ||
                    '                              CONNECT BY PRIOR g.pk = g.p_pk) ' ||
                    '                        OR '''||p_org_pk||''' = ''ALL'') ' ||  
                    '        AND ('''||p_input||''' IS NULL  ' ||
                    '               OR  (UPPER(A.EMP_ID) LIKE  ''%'' || UPPER('''||p_input||''')|| ''%'') ' ||
                    '               OR  (UPPER(A.OLD_ID ) LIKE  ''%'' || UPPER('''||p_input||''')|| ''%'')  ' ||
                    '               OR  (UPPER(A.FULL_NAME) LIKE  ''%'' || UPPER('''||p_input||''')|| ''%'')) ' ||
                    '        ORDER BY a.pk ';         
           ELSE
                strSql := ' SELECT   0 AS sel, b.org_nm, c.workgroup_nm,A.ID_NUM, a.emp_id, a.full_name,A.SEX,A.JOIN_DT,a.pk  ' ||
                    '         FROM thr_employee a ' ||
                    '               ,tco_org b                ' ||
                    '               ,thr_work_group c ' ||
                    '         WHERE a.del_if = 0            ' ||
                    '               AND b.del_if = 0 ' ||
                    '               AND c.del_if = 0 ' ||
                    '               and a.thr_wg_pk=c.pk ' ||
                    '               and a.tco_org_pk=b.pk ' ||                    
                     '                    and  decode('''||p_wg_pk||''',''ALL'',''ALL'',a.thr_wg_pk)='''||p_wg_pk||''' ' ||
                    '           AND (a.tco_org_pk IN (SELECT g.pk ' ||
                    '                                    FROM tco_org g ' ||
                    '                                   WHERE g.del_if = 0 ' ||
                    '                                  START WITH g.pk =DECODE ('''||p_org_pk||''',''ALL'', 0,'''||p_org_pk||''') ' ||
                    '                              CONNECT BY PRIOR g.pk = g.p_pk) ' ||
                    '                        OR '''||p_org_pk||''' = ''ALL'') ' ||  
                    '        AND ('''||p_input||''' IS NULL  ' ||
                    '               OR  (UPPER(A.EMP_ID) LIKE  ''%'' || UPPER('''||p_input||''')|| ''%'') ' ||
                    '               OR  (UPPER(A.OLD_ID ) LIKE  ''%'' || UPPER('''||p_input||''')|| ''%'')  ' ||
                    '               OR  (UPPER(A.FULL_NAME) LIKE  ''%'' || UPPER('''||p_input||''')|| ''%'')) ' ||  
                    '        ORDER BY a.pk ';  
           END IF;                         
                                          
        OPEN l_rtn_cur FOR strSql;                                   
        p_rtn_value := l_rtn_cur;         
EXCEPTION    
   WHEN NO_DATA_FOUND
   THEN
      NULL;
   WHEN OTHERS
   THEN
      RAISE;
END;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01400_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01400_0 
                                (
                                   P_TCO_ORG_PK varchar2,
                                   p_group_pk varchar2,
                                   p_from varchar2,
                                   p_to varchar2,
                                   p_input varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
    l_rtn_cur   sys_refcursor;
    l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    tmp number;

/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN
      
    --0: khong tinh cong cho ngay nghi viec, 1: tinh cong cho ngay nghi viec
    OPEN l_cur FOR
    SELECT A.NUM_4 FROM VHR_HR_CODE A
    WHERE A.ID='HR0006' AND A.CODE='11';

    FETCH l_cur INTO tmp;
    l_flag_exist:=l_cur%FOUND;
    IF l_flag_exist=FALSE THEN
        tmp:=0;
    END IF;    
    CLOSE l_cur;
         
         
       
          open l_rtn_cur for
          SELECT A.PK,c.ORG_NM,gp.WORKGROUP_NM,A.EMP_ID, A.FULL_NAME,GW.THR_WS_PK
           ,NVL(WKD.DATE_IN,GW.WORK_DT),'0', WKD.TIME_IN
           ,DECODE(WKD.DATE_OUT,NULL,DECODE(WS.DURING_DAY,2,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.WORK_DT),WKD.DATE_OUT)
           ,'0',WKD.TIME_OUT
           ,WKD.WORK_TIME
           ,WKD.OVT,WKD.NT,WKD.NT2,WKD.NT3,WKD.HT,ABS.CODE, ABS.ABSENCE_TIME
           ,CASE WHEN A.END_PROBATION >= GW.WORK_DT THEN 0 ELSE hr_F_CAL_ALE_2(GW.WORK_DT,A.JOIN_DT,A.ALE_DAY_IN_YEAR,A.PK,NVL(ALE_PLUS,0)) END AS ALE    --KHONG HIEN ALE TRONG THOI GIAN THU VIEC
           ,WKD.PK,WKD.OVT_PK,ABS.PK,GW.WORK_DT,GP2.WORKGROUP_NM
           ,WKD.NT_PK,WKD.HT_PK
           ,GW.WORK_DT,TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')+1,'YYYYMMDD'),GW.HOL_TYPE
           ,NVL(WKD.MOD_CASE,'N'),WKD.NO_SCAN,'',WKD.NT2_PK,WKD.NT3_PK,WKD.OT_PLUS
           ,(case when nvl(gw.CLOSE_M_YN,'N')='Y' then 'M' when nvl(gw.CLOSE_YN,'N')='Y' then 'Y' else 'N'  end)
           ,gw.note_att,WKD.TEMP_OUT,WKD.TEMP_IN,WKD.TEMP_OUT2,WKD.TEMP_IN2,WKD.TEMP_WT,WKD.TEMP_OT,WKD.TEMP_NT,WKD.TEMP_NT2,WKD.TEMP_NT3,WKD.TEMP_HT
           ,nvl(gw.approve_yn,'N') 
          FROM THR_EMPLOYEE A, TCO_ORG C,THR_WORK_GROUP GP,THR_WG_SCH_DETAIL GW,THR_WORK_SHIFT WS,THR_WORK_GROUP GP2
                 ,(SELECT D.THR_EMP_PK AS THR_EMP_PK,D.WORK_DT AS W_DATE,MAX( D.TIME_IN) AS TIME_IN, MAX(D.TIME_OUT) AS TIME_OUT, MAX(D.WORK_TIME) AS WORK_TIME
               ,MAX(D.PK) AS PK,MAX(D.THR_WS_PK) AS THR_WS_PK
               ,SUM(DECODE(H.OT_TYPE,'OT',NVL(H.OT_TIME,0),0)) AS OVT
               ,SUM(DECODE(H.OT_TYPE,'NT',NVL(H.OT_TIME,0),0)) AS NT
               ,SUM(DECODE(H.OT_TYPE,'NT2',NVL(H.OT_TIME,0),0)) AS NT2
               ,SUM(DECODE(H.OT_TYPE,'NT3',NVL(H.OT_TIME,0),0)) AS NT3
                ,SUM(DECODE(H.OT_TYPE,'HT',NVL(H.OT_TIME,0),0)) AS HT
                 ,SUM(DECODE(H.OT_TYPE,'OT',H.PK,0)) AS OVT_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT',H.PK,0)) AS NT_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT2',H.PK,0)) AS NT2_PK
                 ,SUM(DECODE(H.OT_TYPE,'NT3',H.PK,0)) AS NT3_PK
                 ,SUM(DECODE(H.OT_TYPE,'HT',H.PK,0)) AS HT_PK
                 ,MAX( D.DATE_IN) AS DATE_IN
                 ,MAX( D.DATE_OUT) AS DATE_OUT
                 ,MAX(CASE WHEN NVL(D.MOD_BYHAND_YN,'N')='Y'  THEN 'B'
                           WHEN NVL(H.MOD_BYHAND_YN,'N')='Y' THEN 'B'
                           WHEN NVL(D.MOD_AUTO_YN,'N')='Y' AND NVL(D.MOD_BYHAND_YN,'N')='N' THEN 'A'
                           WHEN NVL(H.MOD_AUTO_YN,'N')='Y' AND NVL(H.MOD_BYHAND_YN,'N')='N' THEN 'A'
                           ELSE 'N' END) MOD_CASE
                 ,D.NO_SCAN_FLAG AS NO_SCAN, max(h.OT_PLUS) as OT_PLUS
                 ,MAX(D.TEMP_OUT) TEMP_OUT,MAX(D.TEMP_IN) TEMP_IN,MAX(D.TEMP_OUT2) TEMP_OUT2,MAX(D.TEMP_IN2) TEMP_IN2
                 ,MAX(D.TEMP_WT) TEMP_WT,MAX(D.TEMP_OT) TEMP_OT
                 ,MAX(D.TEMP_NT) TEMP_NT,MAX(D.TEMP_NT2) TEMP_NT2,MAX(D.TEMP_NT3) TEMP_NT3,MAX(D.TEMP_HT) TEMP_HT
                    FROM THR_TIME_MACHINE D,THR_EXTRA_TIME H,THR_EMPLOYEE V
                  WHERE D.DEL_IF = 0 AND V.DEL_IF=0 
                  AND H.DEL_IF(+)=0 AND D.THR_EMP_PK=V.PK  
                  AND D.THR_EMP_PK=H.THR_EMP_PK(+)
                  AND D.WORK_DT=H.WORK_DT(+)
                  AND D.WORK_DT BETWEEN p_from AND p_to
                  AND (p_input IS NULL 
                     OR  (UPPER(V.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(V.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                     OR  (UPPER(V.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                  AND V.TCO_ORG_PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
                  GROUP BY  D.THR_EMP_PK, D.WORK_DT,D.NO_SCAN_FLAG) WKD
               ,(SELECT E.ABSENCE_DT AS ABS_DATE,E.THR_EMP_PK, E.ABSENCE_TYPE AS CODE, E.ABSENCE_TIME,E.PK
                   FROM THR_ABSENCE E,THR_EMPLOYEE F
                  WHERE E.DEL_IF = 0 AND F.DEL_IF=0  AND F.PK=E.THR_EMP_PK
                    AND E.ABSENCE_DT  BETWEEN p_from AND p_to
                    AND (p_input IS NULL 
                         OR  (UPPER(F.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(F.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                         OR  (UPPER(F.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
                    AND F.TCO_ORG_PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
                ) ABS
         WHERE A.DEL_IF = 0 AND C.DEL_IF=0 AND GP.DEL_IF=0 AND GW.DEL_IF=0 AND WS.DEL_IF=0 AND GP2.DEL_IF=0
           AND A.PK=GW.THR_EMP_PK AND GW.THR_WS_PK=WS.PK AND GW.THR_WG_PK=GP2.PK 
           AND NVL(A.OLD_JOIN_DT,A.JOIN_DT) <= p_to
           AND NVL(A.LEFT_DT,'99999999') > TO_CHAR(TO_DATE(GW.WORK_DT,'YYYYMMDD')-tmp,'YYYYMMDD')
           AND A.TCO_ORG_PK = C.PK AND A.THR_WG_PK=GP.PK
           AND GW.WORK_DT BETWEEN p_from AND p_to
           AND GW.THR_EMP_PK = WKD.THR_EMP_PK(+)
           AND GW.THR_EMP_PK = ABS.THR_EMP_PK(+)
           AND GW.WORK_DT=WKD.W_DATE(+)
           AND GW.WORK_DT=ABS.ABS_DATE(+)
           AND DECODE(p_group_pk,'ALL',p_group_pk,GP.PK) = p_group_pk
           AND C.PK IN (
                                      SELECT     G.PK
                                            FROM TCO_ORG G
                                           WHERE G.DEL_IF = 0
                                      START WITH G.PK =(CASE WHEN P_TCO_ORG_PK='ALL' THEN G.PK ELSE TO_NUMBER(P_TCO_ORG_PK) END)
                                      CONNECT BY PRIOR G.PK = G.P_PK)
           AND A.PK NOT IN(SELECT AB.THR_EMP_PK FROM THR_ABSENCE_REG AB WHERE AB.DEL_IF=0
                        AND GW.WORK_DT BETWEEN AB.START_DT AND AB.END_DT AND AB.THR_EMP_PK=A.PK )
           AND (p_input IS NULL 
                 OR  (UPPER(A.EMP_ID) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.OLD_ID ) LIKE  '%' || UPPER(p_input)|| '%')
                 OR  (UPPER(A.FULL_NAME) LIKE  '%' || UPPER(p_input)|| '%'))
        ORDER BY GW.WORK_DT,C.ORG_NM,A.ID_NUM;

    

    

       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01500_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01500_0(
p_company_pk varchar2,
p_rtn_value         OUT   sys_refcursor
) IS
tmpVar NUMBER;
/******************************************************************************
   NAME:       sp_sel_workgroup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        5/14/2009   Thach Bao Ky       1. Created this procedure.

******************************************************************************/
l_rtn_cur   sys_refcursor;
BEGIN
   OPEN l_rtn_cur FOR
      SELECT   g.workgroup_id, g.workgroup_nm, g.workgroup_fnm,  g.remark,g.seq, g.pk,tco_company_pk
        FROM thr_work_group g
       WHERE del_if = 0 and nvl(tco_company_pk, p_company_pk)=p_company_pk
    ORDER BY g.workgroup_id;

   p_rtn_value := l_rtn_cur;

   EXCEPTION
     WHEN NO_DATA_FOUND THEN
       NULL;
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ST_HR_SEL_HRTI01500_0;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01600_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01600_0 
(
   p_employee   varchar2,
   p_from       varchar2,
   p_to         varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_conditions varchar2,
   p_abs_type   varchar2,
   p_rtn_value    out   sys_refcursor
) IS
 
   l_resign_num number;
    
BEGIN
       
    select max(decode(nvl(a.num_4,0),0,-1,0))
    into l_resign_num 
    from vhr_hr_code a
    where a.id='HR0006' 
    and a.code='11' 
    and  nvl(tco_company_pk,99)= 99;
    
       open p_rtn_value for
       select rownum, t.*
       from (
       select a.pk,
              a.thr_emp_pk,
              a.emp_id,
              e.full_name,
              o.org_nm,
              s.shift,
              decode(a.hol_type, 'HOL', 'Holiday', 'SUN', 'Sunday', ''),
              a.work_dt,
              a.date_in,
              a.time_in,
              a.date_out,
              a.time_out,
              nullif(a.wt, 0),
              nullif(a.ot, 0),
              nullif(a.nt, 0),
              nullif(a.ont, 0),
              c.absence_type,
              nullif(c.absence_time, 0),
              a.description,
              a.mod_byhand_yn,
              a.mod_by ||decode(a.mod_by, null, null, ' * ') ||a.mod_dt, 
              nullif(a.wt_rate, 0),
              nullif(a.ot_rate, 0),
              nullif(a.nt_rate, 0), 
              nullif(a.ont_rate,0),
              c.company_pay_yn,
              nullif(c.company_pay_rate, 0),
              round(case when a.time_in is not null and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi') 
                        then (to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') - to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))*24*60
                   else null end) as lately_minute,
              round(case when a.time_out is not null and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                             < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi')
                        then (to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi') 
                                - to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi'))*24*60
                   else null end) as early_minute
       from thr_work_date a, tco_org o, thr_work_shift s, thr_employee e, thr_absence c
       where a.del_if=0 and o.del_if=0 and s.del_if=0 and e.del_if=0 and c.del_if(+)=0 
       and a.thr_emp_pk = c.thr_emp_pk(+)
       and a.work_dt = c.absence_dt(+)
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.thr_ws_pk = s.pk
       and a.work_dt between p_from and p_to 
       and a.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_thr_ws_pk,'ALL','ALL',a.thr_ws_pk)=p_thr_ws_pk
       and (p_conditions ='ALL'
           or (p_conditions = '1' and a.time_in is null)
           or (p_conditions = '2' and a.time_out is null)
           or (p_conditions = '3' and a.time_in is not null 
                                  and to_date(a.date_in || a.time_in, 'yyyymmddhh24:mi') > to_date(a.work_dt || s.start_time, 'yyyymmddhh24:mi'))
           or (p_conditions = '4' and a.time_out is not null 
                                  and to_date(a.date_out || a.time_out, 'yyyymmddhh24:mi') 
                                  < to_date(decode(s.during_day, 2, to_char(to_date(a.work_dt, 'yyyymmdd')+1, 'yyyymmdd'), a.work_dt) || s.end_time, 'yyyymmddhh24:mi'))
--           or(p_conditions = '5'  and e.emp_id in (Select f.emp_id 
--                                                    from thr_daily_ot_reg f
--                                                    where f.del_if = 0 
--                                                        and f.thr_emp_pk = e.pk
--                                                        and f.work_dt = a.work_dt))
            or (p_conditions ='5' and exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
             or (p_conditions ='6' and not exists ( select 1 from thr_daily_ot_reg f
                                                where f.del_if=0
                                                and f.thr_emp_pk = a.thr_emp_pk
                                                and f.work_dt = A.WORK_DT))
--           or(p_conditions = '6'  and e.emp_id not in (Select f.emp_id 
--                                                         from thr_daily_ot_reg f
--                                                         where f.del_if = 0 
--                                                            and f.thr_emp_pk = e.pk
--                                                            and f.work_dt = a.work_dt))
           )
       and (p_abs_type = 'ALL'
           or c.absence_type = p_abs_type)
       order by o.seq, a.work_dt, a.emp_id) t
       ;
        
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01601_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01601_0 
(p_emp_id          VARCHAR2,
p_work_date        VARCHAR2,       
p_from            VARCHAR2,
p_to              VARCHAR2,
p_rtn_value   OUT SYS_REFCURSOR)
IS
   l_rtn_cur   SYS_REFCURSOR;
BEGIN
   OPEN l_rtn_cur FOR
        SELECT A.LOCATION,
               b.EMP_ID,
               b.ID_NUM,
               a.WORK_DT,
               a.TIME,
               0,
               0,
               TO_CHAR (a.crt_dt, 'DD/MM/YYYY-HH24:MI'),
               a.time_type,
               NVL (T.HOL_TYPE, ' ')
          FROM THR_TIME_TEMP A, THR_EMPLOYEE B, thr_wg_sch_detail t, thr_work_shift s
         WHERE     B.DEL_IF = 0 and s.del_if=0
               and t.thr_ws_pk = S.PK
               AND A.ID = B.ID_NUM
               AND t.del_if = 0
               AND B.PK = T.THR_EMP_PK
               AND A.WORK_DT = T.WORK_DT
               AND A.WORK_DT BETWEEN nvl(p_from, p_work_date) 
                                AND decode(nvl(S.DURING_DAY, 1) , 1, nvl(p_to, p_work_date), to_char(to_date(nvl(p_to, p_work_date), 'yyyymmdd')+1, 'yyyymmdd'))
               AND b.emp_id = p_emp_id
      ORDER BY a.WORK_DT, a.TIME;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01602_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01602_0
                               (
                                   p_abs_pk varchar2, --ko dung bien nay
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN

      open l_rtn_cur for
      select a.CODE,a.CODE_NM,a.CODE_FNM,a.CODE_KNM,a.NUM_1,a.NUM_2,a.CHAR_1
      from vhr_hr_code a
      where a.ID='HR0003'
      order by code ;
       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01700_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_sel_hrti01700_0 
(
   p_employee   varchar2,
   p_month      varchar2,
   p_tco_org_pk varchar2,
   p_thr_ws_pk  varchar2,
   p_nation     varchar2,
   p_sal_period varchar2,
   p_rtn_value    out   sys_refcursor
) is
 
    
begin
       
       open p_rtn_value for
       select  null,--a.pk,
              o.org_nm,
              a.emp_id,
              e.full_name,
              o.org_nm,
              (select initcap(v.code_nm) from vhr_hr_code v where v.id='HR0008' and v.code = a.pos_type ),
              (select initcap(v.code_nm) from vhr_hr_code v where v.id='HR0010' and v.code = a.job_type ),
              to_char(to_date(a.work_mon, 'yyyymm'), 'mm/yyyy'),
              to_char(to_date(a.confirm_dt , 'yyyymmdd'), 'dd/mm/yyyy'),
              nullif(a.wt1,'0'),
              nullif(a.wt2,'0'),
              nullif(a.wt3,'0'),
              nullif(a.wt4,'0'),
              nullif(a.wt5,'0'),
              nullif(a.wt6,'0'),
              nullif(a.wt7,'0'),
              nullif(a.wt8,'0'),
              nullif(a.wt9,'0'),
              nullif(a.wt10,'0'),
              nullif(a.wt11,'0'),
              nullif(a.wt12,'0'),
              nullif(a.wt13,'0'),
              nullif(a.wt14,'0'),
              nullif(a.wt15,'0'),
              nullif(a.wt16,'0'),
              nullif(a.wt17,'0'),
              nullif(a.wt18,'0'),
              nullif(a.wt19,'0'),
              nullif(a.wt20,'0'),
              nullif(a.wt21,'0'),
              nullif(a.wt22,'0'),
              nullif(a.wt23,'0'),
              nullif(a.wt24,'0'),
              nullif(a.wt25,'0'),
              nullif(a.wt26,'0'),
              nullif(a.wt27,'0'),
              nullif(a.wt28,'0'),
              nullif(a.wt29,'0'),
              nullif(a.wt30,'0'),
              nullif(a.wt31,'0'),
              nullif(a.total_wt, 0),
              nullif(a.total_abs_ale, 0),
              nullif(a.total_abs_other_pay , 0),
              nullif(a.total_abs_pay, 0),
              nullif(a.total_abs_npay, 0),
              nullif(a.total_ot, 0) as ot_15,
              nullif(nvl(a.total_st, 0) + nvl(a.total_ost, 0), 0) as ot_20,
              nullif(nvl(a.total_ht, 0) + nvl(a.total_oht, 0), 0) as ot_30,
              nullif(nvl(a.total_nt30, 0) + nvl(a.total_nt60, 0) + nvl(a.total_nt90, 0), 0) as nt,
              nullif(nvl(a.total_nt45, 0) , 0) as nt2,
              nullif(nvl(a.total_wt, 0)  + nvl(a.total_abs_pay, 0), 0) as total_days,
              a.d1_type, a.d2_type, a.d3_type, a.d4_type, a.d5_type, a.d6_type, a.d7_type, a.d8_type, a.d9_type, a.d10_type,
              a.d11_type, a.d12_type, a.d13_type, a.d14_type, a.d15_type, a.d16_type, a.d17_type, a.d18_type, a.d19_type, a.d20_type,
              a.d21_type, a.d22_type, a.d23_type, a.d24_type, a.d25_type, a.d26_type, a.d27_type, a.d28_type, a.d29_type, a.d30_type, a.d31_type
       from thr_work_month a, tco_org o, thr_employee e
       where a.del_if=0 and o.del_if=0 and e.del_if=0 
       and a.thr_emp_pk = e.pk
       and a.tco_org_pk = o.pk
       and a.work_mon = p_month
       and (p_employee is null 
                     or  (upper(e.emp_id) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.old_id ) like  '%' || upper(p_employee)|| '%')
                     or  (upper(e.full_name) like  '%' || upper(p_employee)|| '%'))
       and a.tco_org_pk in (
                          select     g.pk
                                from tco_org g
                               where g.del_if = 0
                          start with g.pk =(case when p_tco_org_pk='ALL' then g.pk else to_number(p_tco_org_pk) end)
                          connect by prior g.pk = g.p_pk)
       and decode(p_nation,'ALL','ALL',e.nation )= p_nation
       and a.sal_period  = p_sal_period
       order by a.work_mon, o.org_nm , a.emp_id
       ;
        
   exception
     when others then
       -- Consider logging the error and then re-raise
       raise;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01700_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01700_1
(
   p_tco_org_pk varchar2,
   p_from_dt  varchar2,
   p_to_dt     varchar2,
   p_rtn_value    out   sys_refcursor
) IS
 
    
BEGIN
       
       open p_rtn_value for
       select substr(c.car_date,-2) 
       from thr_calendar c  
        where c.del_if=0  
        and c.car_date between p_from_dt and p_to_dt 
        and c.tco_company_pk = (select g.tco_company_pk 
                                               from tco_org g 
                                              where g.del_if = 0 and g.pk =  p_tco_org_pk)
        order by c.car_date 
       ;
        
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01800_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01800_0 (
   P_IMPORT_SEQ         VARCHAR2,
   P_RTN_VALUE       OUT   SYS_REFCURSOR
)
IS
   L_RTN_CUR   SYS_REFCURSOR;

BEGIN
   OPEN L_RTN_CUR FOR
   SELECT ROWNUM, T.*
FROM 
  (
        SELECT 
         a.pk 
        ,a.thr_emp_pk
        ,d.org_nm
        ,c.emp_id
        ,c.full_name
        ,(select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = c.pos_type )
        ,(select v.code_nm from vhr_hr_code v where v.id='HR0010' and v.code = c.job_type )
        ,a.work_dt
        ,a.start_time
        ,a.end_time
        ,nullif(a.ot, 0)
        ,a.description
        FROM THR_DAILY_OT_REG A, THR_EMPLOYEE C, TCO_ORG D
         WHERE A.DEL_IF = 0
            AND D.DEL_IF=0
           AND C.DEL_IF = 0
           AND A.THR_EMP_PK=C.PK
           AND C.TCO_ORG_PK = D.PK
           AND A.SEQUENCE_DT = P_IMPORT_SEQ
      ORDER BY A.WORK_DT ,D.ORG_NM,C.EMP_ID ) T;

   P_RTN_VALUE := L_RTN_CUR;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END  ST_HR_SEL_HRTI01800_0;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01800_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01800_1
                                (
                                   p_TCO_ORG_PK varchar2,
                                   p_employee   varchar2,
                                   p_status     varchar2,
                                   p_from_dt    varchar2,
                                   p_to_dt      varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
    l_rtn_cur   sys_refcursor;
    

BEGIN
      
OPEN l_rtn_cur FOR
SELECT ROWNUM, T.*
FROM 
  (SELECT a.pk 
        ,a.thr_emp_pk
        ,o.org_nm
        ,e.emp_id
        ,e.full_name
        ,(select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = a.pos_type )
        ,(select v.code_nm from vhr_hr_code v where v.id='HR0010' and v.code = a.job_type )
        ,a.work_dt
        ,a.start_time
        ,a.end_time
        ,nullif(a.ot, 0)
        ,a.description
  FROM thr_daily_ot_reg a, thr_employee e, tco_org o
  where a.del_if=0 and e.del_if=0 and o.del_if=0
  and a.thr_emp_pk = e.pk
  and e.TCO_ORG_PK = o.pk
  and a.work_dt between p_from_dt and p_to_dt 
  and ( e.tco_org_pk in (
                              select     g.pk
                                    from tco_org g
                                   where g.del_if = 0
                              start with g.pk =
                                            decode (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              connect by prior g.pk = g.p_pk)
            or p_tco_org_pk = 'ALL')
  and (   UPPER(e.emp_id) LIKE '%' || UPPER (TRIM (p_employee)) || '%'
                      OR  UPPER(e.full_name) LIKE '%' || UPPER (TRIM (p_employee)) || '%'
                      OR p_employee IS NULL)
  and decode(p_status,'ALL','ALL',e.status)=p_status
      ORDER BY A.WORK_DT ,O.ORG_NM, E.EMP_ID) T;
   
   

       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01801_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_sel_hrti01801_0
(
   p_seq              varchar,
   p_rtn_value      out   sys_refcursor
)
is

   l_rtn_cur   sys_refcursor;
begin
      open l_rtn_cur for
      select rownum, 
       t.*
     from
    (select 
          a.thr_emp_pk
          ,e.emp_id
          ,e.full_name
          ,e.tco_org_pk
          ,c.org_nm
          ,e.join_dt
          ,a.work_dt
          ,a.start_time
          ,a.end_time
          ,a.description
          ,a.sequence_dt
    from thr_daily_ot_reg a,
         thr_employee e, 
         tco_org c
    where a.del_if = 0 and e.del_if=0 and c.del_if=0
      and a.thr_emp_pk = e.pk   
      and e.tco_org_pk = c.pk
      and a.sequence_dt = p_seq      
    order by e.emp_id)t;


   p_rtn_value := l_rtn_cur;
exception
   when no_data_found
   then
      null;
   when others
   then
      -- Consider logging the error and then re-raise
      raise;
end;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01801_1;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_sel_hrti01801_1 (
   p_tco_org_pk             VARCHAR2,
   p_txt_emp                VARCHAR2,
   p_lst_status             VARCHAR2,
   p_rtn_value       OUT SYS_REFCURSOR)
IS
   l_rtn_cur   SYS_REFCURSOR;
/******************************************************************************
  POP UP GET ITEM
******************************************************************************/
BEGIN
   OPEN l_rtn_cur FOR
        SELECT '0',
               a.pk,
               a.emp_id,
               a.full_name,
               a.tco_org_pk,
               o.org_nm ,
               a.join_dt,
               null,
               null,
               null,
               null
          FROM thr_employee a, tco_org o
         WHERE     a.del_if = 0 and o.del_if=0
              and a.tco_org_pk = o.pk
               AND (   UPPER(a.emp_id) LIKE '%' || UPPER (TRIM (p_txt_emp)) || '%'
                      OR  UPPER(a.full_name) LIKE '%' || UPPER (TRIM (p_txt_emp)) || '%'
                      OR p_txt_emp IS NULL)
               AND (   a.tco_org_pk IN (
                              SELECT     g.pk
                                    FROM tco_org g
                                   WHERE g.del_if = 0
                              START WITH g.pk =
                                            DECODE (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_tco_org_pk = 'ALL')
               AND decode(p_lst_status,'ALL','ALL',a.status)=p_lst_status
      ORDER BY a.emp_id, a.full_name;

   p_rtn_value := l_rtn_cur;
END st_hr_sel_hrti01801_1;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01900_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01900_0
                                (
                                   p_sequence_dt  VARCHAR2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
    l_rtn_cur   sys_refcursor;
    

BEGIN
      
OPEN l_rtn_cur FOR
SELECT ROWNUM, T.*
FROM 
  (SELECT a.pk 
        ,a.thr_emp_pk
        ,o.org_nm
        ,e.emp_id
        ,e.full_name
        ,(select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = a.pos_type )
        ,(select v.code_nm from vhr_hr_code v where v.id='HR0010' and v.code = a.job_type )
        ,a.start_dt
        ,a.end_dt
        ,a.reason
        ,a.description
  FROM thr_att_time_auto a, thr_employee e, tco_org o
  where a.del_if=0 and e.del_if=0 and o.del_if=0
  and a.thr_emp_pk = e.pk
  and e.TCO_ORG_PK = o.pk
  and A.SEQUENCE_DT = p_sequence_dt
  ORDER BY A.START_DT ,O.ORG_NM, E.EMP_ID) T;
   
   

   p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01900_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI01900_1
                                (
                                   p_TCO_ORG_PK varchar2,
                                   p_employee   varchar2,
                                   p_status     varchar2,
                                   p_from_dt    varchar2,
                                   p_to_dt      varchar2,
                                   p_rtn_value    out   sys_refcursor
                                ) IS
    l_rtn_cur   sys_refcursor;
    

BEGIN
      
OPEN l_rtn_cur FOR
SELECT ROWNUM, T.*
FROM 
  (SELECT a.pk 
        ,a.thr_emp_pk
        ,o.org_nm
        ,e.emp_id
        ,e.full_name
        ,(select v.code_nm from vhr_hr_code v where v.id='HR0008' and v.code = a.pos_type )
        ,(select v.code_nm from vhr_hr_code v where v.id='HR0010' and v.code = a.job_type )
        ,a.start_dt
        ,a.end_dt
        ,a.reason
        ,a.description
  FROM thr_att_time_auto a, thr_employee e, tco_org o
  where a.del_if=0 and e.del_if=0 and o.del_if=0
  and a.thr_emp_pk = e.pk
  and e.TCO_ORG_PK = o.pk  
  and (a.start_dt between p_from_dt and p_to_dt      
       or a.end_dt between p_from_dt and p_to_dt
       or (a.end_dt is null and a.start_dt <= p_to_dt) 
       )
  and ( e.tco_org_pk in (
                              select     g.pk
                                    from tco_org g
                                   where g.del_if = 0
                              start with g.pk =
                                            decode (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              connect by prior g.pk = g.p_pk)
            or p_tco_org_pk = 'ALL')
  and (   UPPER(e.emp_id) LIKE '%' || UPPER (TRIM (p_employee)) || '%'
                      OR  UPPER(e.full_name) LIKE '%' || UPPER (TRIM (p_employee)) || '%'
                      OR p_employee IS NULL)
  and decode(p_status,'ALL','ALL',e.status)=p_status
      ORDER BY A.START_DT ,O.ORG_NM, E.EMP_ID) T;
   
   

       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01901_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_sel_hrti01901_0
(
   p_seq              varchar,
   p_rtn_value      out   sys_refcursor
)
is

   l_rtn_cur   sys_refcursor;
begin
      OPEN l_rtn_cur FOR
SELECT ROWNUM, T.*
FROM 
  (SELECT a.pk 
        ,e.emp_id
        ,e.full_name
        ,e.tco_org_pk
        ,o.org_nm
        ,e.join_dt
        ,a.start_dt
        ,a.end_dt
        ,a.reason
        ,a.description
        ,a.sequence_dt
  FROM thr_att_time_auto a, thr_employee e, tco_org o
  where a.del_if=0 and e.del_if=0 and o.del_if=0
  and a.thr_emp_pk = e.pk
  and e.TCO_ORG_PK = o.pk
  and A.SEQUENCE_DT = p_seq
 ORDER BY A.START_DT ,O.ORG_NM, E.EMP_ID) T;


   p_rtn_value := l_rtn_cur;
exception
   when no_data_found
   then
      null;
   when others
   then
      -- Consider logging the error and then re-raise
      raise;
end;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI01901_1;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_sel_hrti01901_1 (
   p_tco_org_pk             VARCHAR2,
   p_txt_emp                VARCHAR2,
   p_lst_status             VARCHAR2,
   p_rtn_value       OUT SYS_REFCURSOR)
IS
   l_rtn_cur   SYS_REFCURSOR;
/******************************************************************************
  POP UP GET ITEM
******************************************************************************/
BEGIN
   OPEN l_rtn_cur FOR
        SELECT '0',
               a.pk,
               a.emp_id,
               a.full_name,
               a.tco_org_pk,
               o.org_nm ,
               a.join_dt,
               null,
               null,
               null,
               null
          FROM thr_employee a, tco_org o
         WHERE     a.del_if = 0 and o.del_if=0
              and a.tco_org_pk = o.pk
               AND (   UPPER(a.emp_id) LIKE '%' || UPPER (TRIM (p_txt_emp)) || '%'
                      OR  UPPER(a.full_name) LIKE '%' || UPPER (TRIM (p_txt_emp)) || '%'
                      OR p_txt_emp IS NULL)
               AND (   a.tco_org_pk IN (
                              SELECT     g.pk
                                    FROM tco_org g
                                   WHERE g.del_if = 0
                              START WITH g.pk =
                                            DECODE (p_tco_org_pk,
                                                    'ALL', 0,
                                                    p_tco_org_pk
                                                   )
                              CONNECT BY PRIOR g.pk = g.p_pk)
                        OR p_tco_org_pk = 'ALL')
               AND decode(p_lst_status,'ALL','ALL',a.status)=p_lst_status
      ORDER BY a.emp_id, a.full_name;

   p_rtn_value := l_rtn_cur;
END st_hr_sel_hrti01901_1;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI02101_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI02101_0 
(p_emp_id          VARCHAR2,
p_work_date        VARCHAR2,       
p_from            VARCHAR2,
p_to              VARCHAR2,
p_rtn_value   OUT SYS_REFCURSOR)
IS
   l_rtn_cur   SYS_REFCURSOR;
BEGIN
   OPEN l_rtn_cur FOR
        SELECT A.LOCATION,
               b.EMP_ID,
               b.ID_NUM,
               a.WORK_DT,
               a.TIME,
               0,
               0,
               TO_CHAR (a.crt_dt, 'DD/MM/YYYY-HH24:MI'),
               a.time_type,
               NVL (T.HOL_TYPE, ' ')
          FROM THR_TIME_INOUT A, THR_EMPLOYEE B, thr_wg_sch_detail t
         WHERE     B.DEL_IF = 0
               AND A.ID = B.ID_NUM
               AND t.del_if = 0
               AND B.PK = T.THR_EMP_PK
               AND A.WORK_DT = T.WORK_DT
               AND A.WORK_DT BETWEEN nvl(p_from, p_work_date) AND nvl(p_to, p_work_date)
               AND b.emp_id = p_emp_id
      ORDER BY a.WORK_DT, a.TIME;

   p_rtn_value := l_rtn_cur;
EXCEPTION
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_SEL_HRTI02102_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_SEL_HRTI02102_0
                               (
                                   p_abs_pk varchar2, --ko dung bien nay
                                   p_rtn_value    out   sys_refcursor
                                ) IS
l_rtn_cur   sys_refcursor;


/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.
  ******************************************************************************/
BEGIN

      open l_rtn_cur for
      select a.CODE,a.CODE_NM,a.CODE_FNM,a.CODE_KNM,a.NUM_1,a.NUM_2,a.CHAR_1
      from vhr_hr_code a
      where a.ID='HR0003'
      order by code ;
       p_rtn_value :=l_rtn_cur;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI00100_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI00100_0
                            (
                                 p_action            varchar2
                                ,p_pk               number
                                ,p_shift            varchar2
                                ,p_start_time       varchar2
                                ,p_end_time         varchar2
                                ,p_wt               number
                                ,p_ot               number
                                ,p_nt               number
                                ,p_start_meal1      varchar2
                                ,p_end_meal1        varchar2
                                ,p_meal1_interval   number
                                ,p_start_meal2     varchar2
                                ,p_end_meal2       varchar2
                                ,p_meal2_interval  number
                                ,p_start_ot         varchar2
                                ,p_start_nt         varchar2
                                ,p_use_yn           number
                                ,p_description      varchar2
                                ,p_during_day       number
                                ,p_wt_plus          number
                                ,p_max_ot           number
                                ,p_wt_ty_le         varchar2
                                ,p_company_pk         varchar2
                                ,p_ot_c_yn          VARCHAR2 
                                ,p_max_c_ot         varchar2 
                                ,p_minute_mid       varchar2
                                ,p_note             varchar2          
                                ,p_crt_by           varchar2
                               -- ,p_rtn_pk     out   varchar2
                            ) IS
l_cnt_shift NUMBER;
l_exp1       exception;
l_flag_exist boolean:=FALSE;
l_cur_rec number;
l_cur sys_refcursor;
/******************************************************************************
   NAME:       sp_work_shift
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/12/2008          1. Created this procedure.

******************************************************************************/

BEGIN
    if p_action = 'INSERT'then
    
        IF NVL(p_during_day,1)>1 THEN
            IF p_start_time<=p_end_time THEN
                Raise_application_error(-20007, 'Start time and End time invalid');
            END IF;
        ELSE
            IF p_start_time>=p_end_time THEN
                Raise_application_error(-20007, 'Start time and End time invalid');
            END IF;    
        END IF;    
    
       insert into THR_WORK_SHIFT(PK,START_TIME,END_TIME,WT,OT,NT,SHIFT,DEL_IF,start_meal1,end_meal1,start_meal2
                ,end_meal2,DESCRIPTION,START_OT,START_NT,meal1_interval,meal2_interval,CRT_BY,CRT_DT
                ,USE_YN,DURING_DAY,WT_PLUS,max_ot,wt_plus_ty_le,tco_company_pk, OT_C_YN,note, mm_mid )
       values (THR_WORK_SHIFT_SEQ.NextVal,p_start_time,p_end_time,p_wt,p_ot,p_nt,p_shift,0,p_start_meal1
                ,p_end_meal1,p_start_meal2,p_end_meal2,p_shift||' - '||p_start_time||'-'||p_end_time
                ,p_start_ot,p_start_nt,p_meal1_interval,p_meal2_interval
                ,p_crt_by,sysdate,decode(p_use_yn,-1,'Y','N'),NVL(p_during_day,1)
                ,p_wt_plus,p_max_ot,upper(p_wt_ty_le),p_company_pk, UPPER(NVL(p_ot_c_yn,'N')),p_note, p_minute_mid);
                
                
                
     elsif p_action='UPDATE' then
        
        IF NVL(p_during_day,1)>1 THEN
            IF p_start_time<=p_end_time THEN
                Raise_application_error(-20007, 'Start time and End time invalid');
            END IF;
        ELSE
            IF p_start_time>=p_end_time THEN
                Raise_application_error(-20007, 'Start time and End time invalid');
            END IF;    
        END IF;    
     
        UPDATE  THR_WORK_SHIFT
        SET  START_TIME     = p_start_time ,
             END_TIME       = p_end_time,
             WT             = p_wt,
             OT             = p_ot,
             NT             = p_nt,
             SHIFT          = p_shift,
             START_OT       = p_start_ot,
             START_NT       = p_start_nt,
             description    = p_shift||' - '||p_start_time||'-'||p_end_time, --p_description,
             start_meal1    =p_start_meal1,
             end_meal1      = p_end_meal1,
             start_meal2   = p_start_meal2,
             end_meal2     = p_end_meal2,
             meal1_interval = p_meal1_interval,
             meal2_interval= p_meal2_interval,
             USE_YN         =decode(p_use_yn,-1,'Y','N'),
             DURING_DAY     =p_during_day,
             WT_PLUS        =p_wt_plus,
             max_ot         =p_max_ot,
             wt_plus_ty_le=upper(p_wt_ty_le),
             OT_C_YN     = UPPER(NVL(p_ot_c_yn,'N')),
             mm_mid     = p_minute_mid,
             MOD_BY = p_crt_by,
             MOD_DT = sysdate
             ,note=p_note
        WHERE PK = p_pk;

    else

        open l_cur for
        select 1 from THR_WG_SCH_DETAIL g
        where g.del_if=0 and g.thr_ws_pk=p_pk;
        fetch l_cur into l_cur_rec;
        l_flag_exist:=l_cur%FOUND;

        IF l_flag_exist=FALSE THEN
            update thr_work_shift a
            set a.del_if=a.pk
            where pk=p_pk;
        ELSE
             RAISE l_exp1;
        END IF;
       end if;

   EXCEPTION
     when l_exp1 then
        Raise_application_error(-20007, 'already have employee'||sqlerrm);
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI00201_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI00201_0 (
   p_action              VARCHAR,
   p_pk                 varchar,
   p_car_date           varchar,
   p_hol_type           varchar,
   p_hol_comment        varchar,
   p_remark             varchar,
   p_crt_by              VARCHAR


)
IS

--******************************************
  -- Create by    : huynhtruong
  -- Create date  : 22/03/2005
--******************************************
BEGIN
   IF p_action = 'UPDATE'
   THEN                                                             -- DELETE
       UPDATE  thr_CALENDAR  A
                                SET
                                       A.CAR_DATE = p_car_date,
                                                   A.HOL_TYPE = p_hol_type,
                                       A.HOL_COMMENT = p_hol_comment,
                                       A.REMARK = p_remark
                                  WHERE  A.PK = p_pk;
                                  
   END IF;
---------
EXCEPTION
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
      ROLLBACK WORK;
END ;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI00300_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI00300_0 (
   p_action     varchar2,
   p_work_dt     varchar2,
   p_thr_ws_pk   number,
   p_wg_pk  number,
   p_master_pk  number,
   p_day_type   varchar,
   p_crt_by                   varchar2

)
is
l_flag_exist boolean:=FALSE;
   l_cur_rec number;
   l_cur sys_refcursor;
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        4/17/2008   huynhtruong                    1. Created this function.

******************************************************************************/


begin

OPEN l_cur FOR
    SELECT 1 FROM THR_WG_SCH_DETAIL B 
                            WHERE B.DEL_IF=0 
                            and b.WORK_DT=p_work_dt
                            AND B.THR_WG_MASTER_PK=p_master_pk
                            AND (NVL(B.CLOSE_YN,'N')='Y' OR NVL(B.CLOSE_M_YN,'N')='Y' OR NVL(B.APPROVE_YN,'N')='Y')
                            AND ROWNUM=1;
                            

    FETCH l_cur INTO l_cur_rec;
    l_flag_exist:=l_cur%FOUND;
    CLOSE l_cur;
    
    IF l_flag_exist=FALSE THEN --CHUA APPROVE HOAC CHUA DONG




        if p_action='UPDATE' then
            --update master
            update THR_WG_SCH_MASTER a
            set a.THR_WS_PK=p_thr_ws_pk
                ,a.MOD_BY=p_crt_by
                ,a.HOL_TYPE=p_day_type
                ,a.mod_dt=sysdate
            where a.pk=p_master_pk;
--            AND A.PK IN(SELECT B.THR_WG_MASTER_PK FROM THR_WG_SCH_DETAIL B 
--                                WHERE B.DEL_IF=0 
--                                and b.WORK_DT=p_work_dt
--                                AND NVL(B.CLOSE_YN,'N')<>'Y'
--                                AND NVL(B.APPROVE_YN,'N')='N'
--                                AND B.THR_WG_MASTER_PK=A.PK
--                                );



            --update detail
            update THR_WG_SCH_DETAIL b
            set b.THR_WS_PK=p_thr_ws_pk
                ,b.HOL_TYPE=p_day_type
                ,b.MOD_BY=p_crt_by
                ,b.mod_dt=sysdate
            where b.del_if=0 and b.thr_wg_pk=p_wg_pk
            and b.WORK_DT=p_work_dt
            AND NVL(B.CLOSE_YN,'N')<>'Y'
            AND NVL(B.APPROVE_YN,'N')='N';

         elsif p_action='DELETE' then
                    --delete master
                    DELETE thr_wg_sch_master a
                    where a.pk=p_master_pk;
--                    AND A.PK IN(SELECT B.THR_WG_MASTER_PK FROM THR_WG_SCH_DETAIL B 
--                                WHERE B.DEL_IF=0 
--                                and b.WORK_DT=p_work_dt
--                                AND NVL(B.CLOSE_YN,'N')<>'Y'
--                                AND NVL(B.APPROVE_YN,'N')='N'
--                                AND B.THR_WG_MASTER_PK=A.PK
--                                );


                    --update detail
                    DELETE THR_WG_SCH_DETAIL b
                    where b.del_if=0 and b.thr_wg_pk=p_wg_pk
                    and b.WORK_DT=p_work_dt
                    AND NVL(B.CLOSE_YN,'N')<>'Y'
                    AND NVL(B.APPROVE_YN,'N')='N';
         end if;
    END IF;


exception
   when others then
      raise;
      ROLLBACK WORK;
end ;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI00300_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI00300_2
                            (p_action           varchar,
                             p_d1               varchar2,
                             p_d2               varchar2,
                             p_d3               varchar2,
                             p_d4               varchar2,
                             p_d5               varchar2,
                             p_d6               varchar2,
                             p_d7               varchar2,
                             p_d8               varchar2,
                             p_d9               varchar2,
                             p_d10               varchar2,
                             p_d11               varchar2,
                             p_d12               varchar2,
                             p_d13               varchar2,
                             p_d14               varchar2,
                             p_d15               varchar2,
                             p_d16               varchar2,
                             p_d17               varchar2,
                             p_d18               varchar2,
                             p_d19               varchar2,
                             p_d20               varchar2,
                             p_d21               varchar2,
                             p_d22               varchar2,
                             p_d23               varchar2,
                             p_d24               varchar2,
                             p_d25               varchar2,
                             p_d26               varchar2,
                             p_d27               varchar2,
                             p_d28               varchar2,
                             p_d29               varchar2,
                             p_d30               varchar2,
                             p_d31               varchar2,
                             P_THR_WG_PK          varchar2,
                             p_work_mon          varchar2,
                             p_from          varchar2,
                             p_to          varchar2,
                             p_crt_by         VARCHAR

                             )
                        IS
l_flag_exist boolean:=FALSE;
   l_cur_rec number;
   l_cur sys_refcursor;

l_exp1       exception;
TYPE NumArray IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;
TYPE Char_Array IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
p_d NumArray;
p_c Char_Array;
tmp     varchar2(2):='';
 l_company_pk number:=0;

/******************************************************************************
   NAME:       sp_upd_allow_kind2_rule
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.

******************************************************************************/


BEGIN
        p_d(1):=p_d1;  p_d(2):=p_d2;  p_d(3):=p_d3;  p_d(4):=p_d4; p_d(5):=p_d5; p_d(6):=p_d6;
        p_d(7):=p_d7;  p_d(8):=p_d8;  p_d(9):=p_d9;  p_d(10):=p_d10; p_d(11):=p_d11; p_d(12):=p_d12;
        p_d(13):=p_d13;  p_d(14):=p_d14;  p_d(15):=p_d15;  p_d(16):=p_d16; p_d(17):=p_d17; p_d(18):=p_d18;
        p_d(19):=p_d19;  p_d(20):=p_d20;  p_d(21):=p_d21;  p_d(22):=p_d22; p_d(23):=p_d23; p_d(24):=p_d24;
        p_d(25):=p_d25;  p_d(26):=p_d26;  p_d(27):=p_d27;  p_d(28):=p_d28; p_d(29):=p_d29; p_d(30):=p_d30;
        p_d(31):=p_d31;
        
select tco_company_pk into l_company_pk from THR_WORK_GROUP p where p.del_if=0 and p.pk=P_THR_WG_PK;

    FOR d IN 1..31 LOOP
        if to_number(substr(p_from,-2))+d-1>31 then
            tmp:=to_number(substr(p_from,-2))+d-1-31;
            if tmp<10 then
                p_c(d):=substr(p_to,1,6)||'0'||tmp;
            else
                p_c(d):=substr(p_to,1,6)||tmp;
            end if;
        else
            tmp:=to_number(substr(p_from,-2))+d-1;
            if tmp<10 then
                p_c(d):=substr(p_from,1,6)||'0'||tmp;
            else
                p_c(d):=substr(p_from,1,6)||tmp;
            end if;    
        end if;  

        IF p_d(d)=0 OR p_d(d) IS NULL THEN


            DELETE THR_WG_SCH_MASTER A
            WHERE A.DEL_IF=0 AND A.THR_WG_PK=P_THR_WG_PK
                AND A.WORK_DT=p_c(d)
                AND A.PK NOT IN(SELECT B.THR_WG_MASTER_PK FROM THR_WG_SCH_DETAIL B 
                                WHERE B.DEL_IF=0 AND B.THR_WG_PK=P_THR_WG_PK
                                AND B.WORK_DT=p_c(d) 
                                and (NVL(b.CLOSE_YN,'N')<>'Y' OR NVL(b.CLOSE_M_YN,'N')<>'Y' OR NVL(B.APPROVE_YN,'N')='N')
                                );
                

--            DELETE THR_WG_SCH_DETAIL B
--            WHERE B.DEL_IF=0 AND B.THR_WG_PK=P_THR_WG_PK
--                  AND B.WORK_DT=p_c(d) and NVL(b.CLOSE_YN,'N')<>'Y' AND NVL(b.CLOSE_M_YN,'N')<>'Y'
--                  AND NVL(B.APPROVE_YN,'N')='N';
                  

        ELSE
            OPEN l_cur FOR
            SELECT 1 FROM THR_WG_SCH_MASTER A
            WHERE A.DEL_IF=0 AND A.THR_WG_PK=P_THR_WG_PK
                AND A.WORK_DT=p_c(d);

            FETCH l_cur INTO l_cur_rec;
            l_flag_exist:=l_cur%FOUND;
            CLOSE l_cur;
            IF l_flag_exist=TRUE THEN -- CO ROI

                OPEN l_cur FOR
                SELECT 1 FROM THR_WG_SCH_MASTER A
                WHERE A.DEL_IF=0 AND A.THR_WG_PK=P_THR_WG_PK
                AND A.WORK_DT=p_c(d)
                AND A.THR_WS_PK=(SELECT S.PK FROM THR_WORK_SHIFT S  WHERE S.DEL_IF=0 AND S.SHIFT=p_d(d)  and S.TCO_COMPANY_PK =l_company_pk);

                FETCH l_cur INTO l_cur_rec;
                l_flag_exist:=l_cur%FOUND;
                CLOSE l_cur;

                IF l_flag_exist=FALSE THEN -- CO SUA SHIFT

                    UPDATE THR_WG_SCH_MASTER A
                    SET A.THR_WS_PK=(SELECT S.PK FROM THR_WORK_SHIFT S  WHERE S.DEL_IF=0 AND S.SHIFT=p_d(d)  and S.TCO_COMPANY_PK =l_company_pk)
                    WHERE A.DEL_IF=0 AND A.THR_WG_PK=P_THR_WG_PK
                    AND A.WORK_DT=p_c(d) ;

--                    UPDATE THR_WG_SCH_DETAIL B
--                    SET B.THR_WS_PK=(SELECT S.PK FROM THR_WORK_SHIFT S  WHERE S.DEL_IF=0 AND S.SHIFT=p_d(d)  and S.TCO_COMPANY_PK =l_company_pk)
--                    WHERE B.DEL_IF=0 AND B.THR_WG_PK=P_THR_WG_PK
--                    AND B.WORK_DT=p_c(d) and NVL(b.CLOSE_YN,'N')<>'Y' AND NVL(b.CLOSE_M_YN,'N')<>'Y'
--                    AND NVL(B.APPROVE_YN,'N')='N';

                END IF;


            ELSE --CHUA CO PHAI INSERT
                INSERT INTO THR_WG_SCH_MASTER
                (PK, THR_WG_PK, THR_WS_PK, WORK_DT, REMARK, DEL_IF, CRT_BY, CRT_DT, DAY_TYPE, HOL_TYPE)
                SELECT THR_WG_SCH_MASTER_SEQ.NEXTVAL,P_THR_WG_PK
                ,(SELECT S.PK FROM THR_WORK_SHIFT S  WHERE S.DEL_IF=0 AND S.SHIFT=p_d(d)  and S.TCO_COMPANY_PK =l_company_pk)
                ,p_c(d),'INSERT FROM MON SCHEDULE',0,p_crt_by,sysdate,C.DAY_TYPE, DECODE(P_THR_WG_PK , 4,  C.HOL_TYPE, NULL) 
                FROM THR_CALENDAR C
                WHERE C.DEL_IF=0 AND C.CAR_DATE=p_c(d) and nvl(c.tco_company_pk,l_company_pk)=l_company_pk ;

--                INSERT INTO THR_WG_SCH_DETAIL
--                (PK, THR_WG_MASTER_PK, THR_WG_PK, THR_WS_PK, THR_EMP_PK, WORK_DT, REMARK
--                    , DEL_IF, CRT_BY, CRT_DT, DAY_TYPE, HOL_TYPE, TCO_ORG_PK)
--                SELECT THR_WG_SCH_DETAIL_SEQ.NEXTVAL,A.PK,P_THR_WG_PK,A.THR_WS_PK,E.PK,p_c(d),'INSERT FROM MON SCHEDULE'
--                ,0,p_crt_by,sysdate,C.DAY_TYPE, DECODE(P_THR_WG_PK , 4,  C.HOL_TYPE, NULL), E.TCO_ORG_PK
--                FROM THR_CALENDAR C,THR_WG_SCH_MASTER A,THR_EMPLOYEE E
--                WHERE C.DEL_IF=0 AND A.DEL_IF=0 AND E.DEL_IF=0
--                     AND A.WORK_DT=C.CAR_DATE AND C.CAR_DATE=p_c(d)
--                    AND E.THR_WG_PK=A.THR_WG_PK AND A.THR_WG_PK=P_THR_WG_PK
--                    AND E.JOIN_DT<=p_c(d)
--                     and nvl(c.tco_company_pk,l_company_pk)=l_company_pk 
--                    AND (E.LEFT_DT>p_c(d) OR E.LEFT_DT IS NULL)
--                    AND E.PK NOT IN(SELECT G.THR_EMP_PK FROM THR_WG_SCH_DETAIL G 
--                        WHERE G.DEL_IF=0 AND G.WORK_DT=p_c(d) AND G.THR_EMP_PK=e.PK);

            END IF;


        END IF;

    END LOOP;



    commit;
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
        rollback work;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI00400_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI00400_0 (
   p_action             VARCHAR,
   p_new_wg_pk         VARCHAR,
   p_old_wg_pk         VARCHAR,
   p_work_dt            VARCHAR,
   p_hol_type           VARCHAR,
   p_thr_ws_pk          VARCHAR,
   p_thr_emp_pk         VARCHAR,
   p_THR_WG_SCH_DETAIL_pk   VARCHAR,
   p_crt_by             VARCHAR
)
IS
/****************************************************************NAME:       sp_work_shift
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/12/2008          1. Created this procedure.

******************************************************************************/
  l_check     exception;
  l_month_close VARCHAR2(1):='N';
BEGIN
   select ST_hr_f_check_month_close_2( ST_hr_F_PERIOD_MONTH_2(p_work_dt,SAL_PERIOD),'2',e.SAL_PERIOD ,e.tco_org_pk  ) into l_month_close  
   from thr_employee e where e.del_if=0 and e.pk=p_thr_emp_pk ;

       IF l_month_close='Y' THEN
            RAISE l_check;
       END IF;

   IF p_THR_WG_SCH_DETAIL_pk IS NOT NULL THEN
      IF p_new_wg_pk <> p_old_wg_pk THEN  --CHANGE GROUP
         DELETE THR_WG_SCH_DETAIL a
          WHERE del_if = 0
            AND thr_emp_pk = p_thr_emp_pk
            AND work_dt >= p_work_dt
            AND NVL(A.CLOSE_YN,'N')<>'Y' and NVL(A.CLOSE_M_YN,'N')<>'Y'
            AND NVL(A.APPROVE_YN,'N')='N';

         --INSERT NEW SCHEDULE OF NEW GROUP
         INSERT INTO THR_WG_SCH_DETAIL
                     (pk, thr_wg_master_pk, thr_WG_PK, thr_ws_pk,
                      thr_emp_pk, work_dt, remark, del_if, crt_by, crt_dt,day_type,hol_type)
            SELECT THR_WG_SCH_DETAIL_seq.NEXTVAL,GW.thr_wg_master_pk,GW.thr_WG_PK,GW.THR_WS_PK
            ,GW.THR_EMP_PK,GW.WORK_DT,GW.RM,GW.DEL_IF,GW.CRT_BY,GW.CRT_DT,GW.DAY_TYPE,GW.HOL_TYPE
            FROM
            (
            SELECT  a.pk AS thr_wg_master_pk,
                   p_new_wg_pk AS thr_WG_PK, a.thr_ws_pk AS thr_ws_pk,
                   b.pk AS thr_emp_pk, a.work_dt AS WORK_DT, 'AUTO FROM CHANGING WG' AS RM,
                   0 AS DEL_IF, p_crt_by AS CRT_BY, SYSDATE AS CRT_DT,a.hol_type as hol_type,a.day_type as day_type
              FROM THR_WG_SCH_MASTER a, thr_employee b
             WHERE a.del_if = 0
               AND b.del_if = 0
               AND a.work_dt >= p_work_dt
               AND b.pk NOT IN (SELECT g.thr_emp_pk
                                  FROM THR_WG_SCH_DETAIL g
                                 WHERE g.del_if = 0 AND g.work_dt = a.work_dt and g.thr_emp_pk=b.pk)
               AND b.join_dt <= a.work_dt
               AND b.pk = p_thr_emp_pk
               AND a.thr_WG_PK = p_new_wg_pk
               AND (b.left_dt IS NULL OR b.left_dt > a.work_dt)
               ORDER BY A.WORK_DT) GW;

         --CHANGING GROUP AND DEPT OF THR_EMPLOYY
         UPDATE thr_employee
            SET thr_WG_PK = p_new_wg_pk,
                mod_by = p_crt_by,
                mod_dt = SYSDATE
          WHERE del_if = 0 AND p_thr_emp_pk = pk;

      ELSE                                          --CHANGE OTHER NNFORMATION
         UPDATE THR_WG_SCH_DETAIL a
            SET a.thr_ws_pk = p_thr_ws_pk,
                a.mod_by = p_crt_by,
                a.mod_dt = SYSDATE,
                a.remark = 'CHANGING SHIFT FROM SCHEDULE DETAIL',
                a.hol_type=p_hol_type
          WHERE del_if = 0 AND pk = p_THR_WG_SCH_DETAIL_pk
          AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
          AND NVL(A.APPROVE_YN,'N')='N';

      END IF;
   ELSE
      INSERT INTO THR_WG_SCH_DETAIL
                  (pk, thr_wg_master_pk, thr_WG_PK, thr_ws_pk, thr_emp_pk,
                   work_dt, remark, del_if, crt_by, crt_dt,day_type,hol_type)
         SELECT THR_WG_SCH_DETAIL_seq.NEXTVAL, a.pk AS thr_wg_master_pk,
                b.thr_WG_PK AS thr_WG_PK, p_thr_ws_pk AS thr_ws_pk,
                b.pk AS thr_emp_pk, a.work_dt, 'INPUT FROM SCHEDULE DETAIL', 0,
                p_crt_by, SYSDATE,a.day_type,a.hol_type
           FROM THR_WG_SCH_MASTER a, thr_employee b
          WHERE a.del_if = 0
            AND b.del_if = 0
            AND a.work_dt = p_work_dt
            AND b.pk = p_thr_emp_pk
            AND a.thr_WG_PK = b.thr_WG_PK
            AND b.pk NOT IN (SELECT g.thr_emp_pk
                                  FROM THR_WG_SCH_DETAIL g
                                 WHERE g.del_if = 0 AND g.work_dt = a.work_dt and g.thr_emp_pk=b.pk);

   END IF;
EXCEPTION
    WHEN l_check THEN
      raise_application_error(-20019,'');
   WHEN OTHERS THEN
      RAISE;
      ROLLBACK WORK;
END;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI00400_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI00400_3
                            (p_action           varchar,
                             p_emp_pk           varchar2,   
                             p_d1               varchar2,
                             p_d2               varchar2,
                             p_d3               varchar2,
                             p_d4               varchar2,
                             p_d5               varchar2,
                             p_d6               varchar2,
                             p_d7               varchar2,
                             p_d8               varchar2,
                             p_d9               varchar2,
                             p_d10               varchar2,
                             p_d11               varchar2,
                             p_d12               varchar2,
                             p_d13               varchar2,
                             p_d14               varchar2,
                             p_d15               varchar2,
                             p_d16               varchar2,
                             p_d17               varchar2,
                             p_d18               varchar2,
                             p_d19               varchar2,
                             p_d20               varchar2,
                             p_d21               varchar2,
                             p_d22               varchar2,
                             p_d23               varchar2,
                             p_d24               varchar2,
                             p_d25               varchar2,
                             p_d26               varchar2,
                             p_d27               varchar2,
                             p_d28               varchar2,
                             p_d29               varchar2,
                             p_d30               varchar2,
                             p_d31               varchar2,
                             p_work_mon          varchar2,
                             p_from          varchar2,
                             p_to          varchar2,
                             p_crt_by         VARCHAR

                             )
                        IS
l_flag_exist boolean:=FALSE;
   l_cur_rec number;
   l_cur sys_refcursor;


TYPE NumArray IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;
TYPE Char_Array IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
p_d NumArray;
p_c Char_Array;
tmp     varchar2(2):='';
l_exp1       exception;


/******************************************************************************
   NAME:       sp_upd_allow_kind2_rule
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. Created this procedure.

******************************************************************************/


BEGIN
        p_d(1):=p_d1;  p_d(2):=p_d2;  p_d(3):=p_d3;  p_d(4):=p_d4; p_d(5):=p_d5; p_d(6):=p_d6;
        p_d(7):=p_d7;  p_d(8):=p_d8;  p_d(9):=p_d9;  p_d(10):=p_d10; p_d(11):=p_d11; p_d(12):=p_d12;
        p_d(13):=p_d13;  p_d(14):=p_d14;  p_d(15):=p_d15;  p_d(16):=p_d16; p_d(17):=p_d17; p_d(18):=p_d18;
        p_d(19):=p_d19;  p_d(20):=p_d20;  p_d(21):=p_d21;  p_d(22):=p_d22; p_d(23):=p_d23; p_d(24):=p_d24;
        p_d(25):=p_d25;  p_d(26):=p_d26;  p_d(27):=p_d27;  p_d(28):=p_d28; p_d(29):=p_d29; p_d(30):=p_d30;
        p_d(31):=p_d31;


    FOR d IN 1..31 LOOP
        if to_number(substr(p_from,-2))+d-1>31 then
            tmp:=to_number(substr(p_from,-2))+d-1-31;
            if tmp<10 then
                p_c(d):=substr(p_to,1,6)||'0'||tmp;
            else
                p_c(d):=substr(p_to,1,6)||tmp;
            end if;
        else
            tmp:=to_number(substr(p_from,-2))+d-1;
            if tmp<10 then
                p_c(d):=substr(p_from,1,6)||'0'||tmp;
            else
                p_c(d):=substr(p_from,1,6)||tmp;
            end if;    
        end if;    

        IF p_d(d)=0 OR p_d(d) IS NULL THEN

            DELETE THR_WG_SCH_DETAIL B
            WHERE B.DEL_IF=0 AND B.THR_EMP_PK=P_EMP_PK
                  AND B.WORK_DT=p_c(d) and NVL(b.CLOSE_YN,'N')<>'Y' AND NVL(b.CLOSE_M_YN,'N')<>'Y';

            UPDATE THR_TIME_MACHINE B
            SET B.DEL_IF=B.PK
                ,B.REMARK='CHANGE MONTH SCHEDULE DETAIL'
                ,B.MOD_BY=p_crt_by
                ,B.MOD_DT=SYSDATE
            WHERE B.DEL_IF=0 AND B.THR_EMP_PK=P_EMP_PK
                  AND B.WORK_DT=p_c(d) and NVL(b.CLOSE_YN,'N')<>'Y' AND NVL(b.CLOSE_M_YN,'N')<>'Y';

            DELETE THR_EXTRA_TIME B
            WHERE B.DEL_IF=0 AND B.THR_EMP_PK=P_EMP_PK
                  AND B.WORK_DT=p_c(d) and NVL(b.CLOSE_YN,'N')<>'Y' AND NVL(b.CLOSE_M_YN,'N')<>'Y';

        ELSE
            OPEN l_cur FOR
            SELECT 1 FROM THR_WG_SCH_DETAIL A
            WHERE A.DEL_IF=0 AND A.THR_EMP_PK=P_EMP_PK
                AND A.WORK_DT=p_c(d);

            FETCH l_cur INTO l_cur_rec;
            l_flag_exist:=l_cur%FOUND;
            CLOSE l_cur;
            
            IF l_flag_exist=TRUE THEN -- CO ROI 

                OPEN l_cur FOR
                SELECT 1 FROM THR_WG_SCH_DETAIL A,THR_WORK_SHIFT S,thr_employee e
                WHERE A.DEL_IF=0 AND S.DEL_IF=0 AND A.THR_EMP_PK=P_EMP_PK and e.del_if=0 and e.pk=P_EMP_PK
                AND A.WORK_DT=p_c(d) and S.TCO_COMPANY_PK=E.TCO_COMPANY_PK
                AND A.THR_WS_PK=S.PK AND S.SHIFT=p_d(d);

                FETCH l_cur INTO l_cur_rec;
                l_flag_exist:=l_cur%FOUND;
                CLOSE l_cur;

                IF l_flag_exist=FALSE THEN -- CO SUA SHIFT 

                    UPDATE THR_WG_SCH_DETAIL B
                    SET B.THR_WS_PK=(SELECT S.PK FROM THR_WORK_SHIFT S,thr_employee e WHERE S.DEL_IF=0 AND S.SHIFT=p_d(d) and e.del_if=0 and E.TCO_COMPANY_PK=S.TCO_COMPANY_PK and e.pk=P_EMP_PK )
                    WHERE B.DEL_IF=0 AND B.THR_EMP_PK=P_EMP_PK
                    AND B.WORK_DT=p_c(d) and NVL(b.CLOSE_YN,'N')<>'Y' AND NVL(b.CLOSE_M_YN,'N')<>'Y';

                END IF;


            ELSE --CHUA CO PHAI KIEM TRA INSERT  
                
                OPEN l_cur FOR
                SELECT 1 FROM THR_EMPLOYEE A,THR_WG_SCH_MASTER B
                WHERE A.DEL_IF=0 AND B.DEL_IF=0 
                AND A.PK=P_EMP_PK AND A.THR_WG_PK=B.THR_WG_PK
                AND B.WORK_DT=p_c(d);
                

                FETCH l_cur INTO l_cur_rec;
                l_flag_exist:=l_cur%FOUND;
                CLOSE l_cur;
                
                IF l_flag_exist=TRUE THEN -- DA CO LICH O MASTER  
            

                    INSERT INTO THR_WG_SCH_DETAIL
                    (PK, THR_WG_MASTER_PK, THR_WG_PK, THR_WS_PK, THR_EMP_PK, WORK_DT, REMARK
                        , DEL_IF, CRT_BY, CRT_DT, DAY_TYPE, HOL_TYPE)
                    SELECT THR_WG_SCH_DETAIL_SEQ.NEXTVAL,B.PK,A.THR_WG_PK
                    ,(SELECT S.PK FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND S.SHIFT=p_d(d) and A.TCO_COMPANY_PK=S.TCO_COMPANY_PK  )
                    ,A.PK,p_c(d),'INSERT FROM SCH MON DETAIL'
                    ,0,p_crt_by,sysdate,B.DAY_TYPE,B.HOL_TYPE
                    FROM THR_EMPLOYEE A,THR_WG_SCH_MASTER B
                        WHERE A.DEL_IF=0 AND B.DEL_IF=0 
                        AND A.PK=P_EMP_PK AND A.THR_WG_PK=B.THR_WG_PK
                        AND B.WORK_DT=p_c(d)
                        AND A.JOIN_DT<=p_c(d)
                        AND (A.LEFT_DT>p_c(d) OR A.LEFT_DT IS NULL)
                        AND A.PK NOT IN(SELECT G.THR_EMP_PK FROM THR_WG_SCH_DETAIL G WHERE G.DEL_IF=0 AND G.WORK_DT=p_c(d) AND G.THR_EMP_PK=P_EMP_PK);
                        
                    
               ELSE
                    -- CHUA CO LICH O MASTER 
--                    RAISE l_exp1;
                    INSERT INTO THR_WG_SCH_DETAIL(PK, THR_WG_PK, THR_WS_PK, THR_EMP_PK, WORK_DT
                                    , HOL_TYPE, DAY_TYPE, THR_WG_MASTER_PK, TCO_ORG_PK, SALARY_TYPE
                                    , DEL_IF, CRT_BY, CRT_DT, REMARK)
                        SELECT THR_WG_SCH_DETAIL_SEQ.NEXTVAL, E.THR_WG_PK, NULL, E.PK, p_c(d)
                                                , C.HOL_TYPE, C.DAY_TYPE, NULL, E.TCO_ORG_PK , E.SALARY_TYPE
                                                , 0, p_crt_by, sysdate, 'INSERT FROM IMPORT WITH NULL MASTER GROUP'
                        FROM THR_EMPLOYEE E, THR_CALENDAR C
                        WHERE E.DEL_IF=0 AND C.DEL_IF=0
                        AND C.TCO_COMPANY_PK = 99
                        AND C.CAR_DATE = p_c(d)
                        AND E.JOIN_DT<=p_c(d)
                        AND (E.LEFT_DT>p_c(d) OR E.LEFT_DT IS NULL)
                        AND E.PK=P_EMP_PK
                        AND E.PK NOT IN(SELECT G.THR_EMP_PK FROM THR_WG_SCH_DETAIL G WHERE G.DEL_IF=0 AND G.WORK_DT=p_c(d) AND G.THR_EMP_PK=P_EMP_PK);
               END IF;         

            END IF;


        END IF;

    END LOOP;



    commit;
   EXCEPTION
    WHEN l_exp1 THEN
      raise_application_error (-20030,'Please make schedule for workgroup first');
   WHEN OTHERS   THEN
      raise_application_error (-20030,'have error:'|| SQLERRM);
      ROLLBACK WORK;   
      RETURN;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI00400_4;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI00400_4 (
   P_NO               VARCHAR,
   P_EMP_ID           VARCHAR,
   P_FULL_NAME        VARCHAR,
   P_FROM_DT          VARCHAR,
   P_TO_DT            VARCHAR,
   P_SHIFT            VARCHAR,
   P_1                VARCHAR,
   P_2                VARCHAR,
   P_3                VARCHAR,
   P_4                VARCHAR,
   P_5                VARCHAR,
   P_SEQUENCE_DT      VARCHAR,
   P_CRT_BY           VARCHAR,
   P_RTN_VALUE    OUT VARCHAR
)
IS
/****************************************************************NAME:       sp_work_shift
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/12/2008          1. Created this procedure.

******************************************************************************/
  L_MONTH_CLOSE VARCHAR2(1):='N';
  L_EMP_PK      NUMBER:= 0;
  L_COMPANY_PK  NUMBER;
  L_THR_WS_PK   NUMBER:=0;
  L_FROM_DT VARCHAR2(8);
  L_TO_DT VARCHAR2(8);
BEGIN
    
    SELECT PK, TO_CHAR(TO_DATE(P_FROM_DT, 'DD/MM/YYYY'), 'YYYYMMDD'), TO_CHAR(TO_DATE(P_TO_DT, 'DD/MM/YYYY'), 'YYYYMMDD'), E.TCO_COMPANY_PK
     INTO L_EMP_PK,L_FROM_DT,L_TO_DT,L_COMPANY_PK
     FROM THR_EMPLOYEE E WHERE E.DEL_IF=0 AND upper(E.EMP_ID)=upper(P_EMP_ID) ;
    
    SELECT A.PK INTO L_THR_WS_PK 
    FROM THR_WORK_SHIFT A
    WHERE A.DEL_IF = 0 AND NVL(A.TCO_COMPANY_PK,L_COMPANY_PK)=L_COMPANY_PK AND A.SHIFT = P_SHIFT;

    UPDATE THR_WG_SCH_DETAIL A
    SET A.THR_WS_PK  = DECODE(L_THR_WS_PK, 0 ,A.THR_WS_PK, L_THR_WS_PK),
        A.REMARK     = 'CHANGING SHIFT FROM SCHEDULE DETAIL (IMPORT EXCEL)',
        A.MOD_BY     = P_CRT_BY,
       A.IMPORT_SEQ = P_SEQUENCE_DT,
        A.MOD_DT     = SYSDATE
      WHERE DEL_IF = 0 AND A.THR_EMP_PK = L_EMP_PK
      AND A.WORK_DT BETWEEN L_FROM_DT AND L_TO_DT
      AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
      AND NVL(A.APPROVE_YN,'N')='N';

    P_RTN_VALUE := '1';
    
EXCEPTION
   WHEN OTHERS THEN
     P_RTN_VALUE := '0';
END;
 
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI00700_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI00700_0 (
   p_action     varchar2,
   p_thr_emp_pk     varchar2, --0  
   p_thr_ws_pk   varchar2, --5  
   p_date_in   varchar2,   --6 
   p_time_in   varchar2,   --8  
   p_date_out   varchar2,   --9  
   p_time_out   varchar2,  --11 
   p_work_time   varchar2, -- 12 
   p_ot   varchar2,   --13
   p_nt   varchar2,   --14  
   p_nt2   varchar2,   --15   
   p_nt3   varchar2,   --16
   p_ht   varchar2,   --17  
   p_absence_type   varchar2, --18  
   p_absence_time   number, -- 19 
   p_work_time_pk   varchar2,  --21  
   p_ot_pk   varchar2,          --22   
   p_absence_pk   varchar2,     --23    
   p_nt_pk   varchar2,          --26 
   p_ht_pk   varchar2,          --27  
   p_work_dt   varchar2, --  28 
   p_day_type   varchar2, --30  day_type
   p_no_can_flag    varchar2, --32 
   p_status         varchar2, --33 
   p_nt2_pk         varchar2, --34  
   p_nt3_pk         varchar2, --35
   p_ot_plus        varchar2, --36
   p_note_att       varchar2,--38
   p_temp_out        varchar2,--39
   p_temp_in        varchar2,--40
   p_temp_out2        varchar2,--41
   p_temp_in2        varchar2,--42
   p_temp_wt        varchar2,--43
   p_temp_ot        varchar2,--44
   p_temp_nt        varchar2,--45
   p_temp_nt2        varchar2,--46
   p_temp_nt3        varchar2,--47
   p_temp_ht        varchar2,--48
   p_approve_yn     varchar2,--49
   p_crt_by                   varchar2

)
is

   l_error      varchar2(2);
   l_wt_allow       number;
   l_wt             number;
   l_temp_wt             number;
   l_temp_ot             number;
   l_temp_nt             number;
   l_temp_nt2             number;
   l_temp_ht             number;
   l_reg_type       varchar2(2);

   l_wt_rate         number;
   l_ot_rate         number;
   l_nt30_rate         number;
   l_nt45_rate         number;
   l_nt45_2_rate       number;
   l_nt60_rate         number;
   l_nt90_rate         number;

   l_ht_rate         number;
   l_ost_rate         number;
   l_oht_rate         number;
   l_abs_rate         number;
   l_ins_rate         number;
   l_st_rate         number;

   l_month_close varchar2(100):='N';
   l_kind_ot    varchar2(100):='';
   l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_check     exception;
    l_shift_wt  number;
    l_ot_plus number;
    l_ot_limit number;
    L_COMPANY varchar2(300);
   l_pro varchar2(200):='';
  l_string varchar2(2000):='';
  l_ot_allow_yn   varchar2(1):='';
  p_end_meal  varchar(5):='00:00';
  l_company_pk  number;
  l_wt_condition1 number;
  l_wt_condition2 number;
  l_wt_add  number;
  l_wt_plus  number;
   L_THR_ATT_MODIFY_PK NUMBER;
  L_THR_ABSENCE_MODIFY_PK NUMBER;
  
begin

    IF P_STATUS IS NULL OR P_STATUS NOT IN (1,2) OR P_APPROVE_YN='Y' THEN --1: sua cong va vang , 2: chi sua vang
        RETURN;
    END IF;

OPEN l_cur FOR select 'Y' from thr_wg_sch_detail g where g.del_if=0 and g.work_dt=p_work_dt and g.thr_emp_pk =p_thr_emp_pk 
        and (nvl(g.close_m_yn,'N')='Y' or nvl(g.close_yn,'N')='Y' or nvl(g.APPROVE_YN,'N')='Y');
 
    FETCH l_cur INTO l_month_close;
    CLOSE l_cur;
    if l_month_close='Y' then
      return;
    end if;
   
--khong kiem tra dong nay vi da duoc kiem tra tren from roi
   
/*     l_month_close:=sf_check_month_close(p_work_dt,'01');

       IF l_month_close='Y' THEN
            RAISE l_check;
       END IF;
    
*/
         --dua doan nay len dau, vi gap loi khong co rate neu chi update cot NOTE        02/08/2015 
        SELECT
         SUM(DECODE(C.CODE,'01',C.NUM_1,0)) AS WT
        ,SUM(DECODE(C.CODE,'02',C.NUM_1,0)) AS OT
        ,SUM(DECODE(C.CODE,'03',C.NUM_1,0)) AS NT30
        ,SUM(DECODE(C.CODE,'04',C.NUM_1,0)) AS NT45
        ,SUM(DECODE(C.CODE,'05',C.NUM_1,0)) AS NT60
        ,SUM(DECODE(C.CODE,'06',C.NUM_1,0)) AS NT90
        ,SUM(DECODE(C.CODE,'07',C.NUM_1,0)) AS HT
        ,SUM(DECODE(C.CODE,'08',C.NUM_1,0)) AS OST
        ,SUM(DECODE(C.CODE,'09',C.NUM_1,0)) AS OHT
        ,SUM(DECODE(C.CODE,'10',C.NUM_1,0)) AS ST
        ,SUM(DECODE(C.CODE,'13',C.NUM_1,0)) AS NT45_2
         INTO l_wt_rate,l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate
         ,l_oht_rate,l_st_rate,l_nt45_2_rate
         FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
         WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
         AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y';
                 
         --added: 12-06-2015 : truong
         select nvl(max(NVL(A.NUM_1,0)),0),nvl(max(NVL(A.NUM_2,0)),0),nvl(max(NVL(A.NUM_3,0)),99)
         INTO l_wt_add,l_wt_condition1,l_wt_condition2 
         FROM THR_CODE_DETAIL A WHERE A.DEL_IF=0 AND A.USE_YN='Y' AND A.MASTER_ID='HR0208' AND A.CODE='01';

         SELECT  E.TCO_COMPANY_PK INTO l_company_pk  
            FROM THR_EMPLOYEE E 
            WHERE E.DEL_IF=0 AND E.PK= p_thr_emp_pk ; 
            
            l_error:='00';
            IF P_STATUS=1 OR P_ACTION='DELETE' THEN --INSERT DATA INTO MODIFIED TABLE 
                        --   raise_application_error(-20002,'');
                
                SELECT THR_ATTENDANCE_MODIFY_SEQ.NEXTVAL INTO L_THR_ATT_MODIFY_PK FROM DUAL;  
                
                 
                             
                INSERT INTO THR_ATTENDANCE_MODIFY
                (PK, THR_EMP_PK, WORK_DT, HOL_TYPE, DAY_TYPE, TIME_IN_O,DATE_IN_O, TIME_OUT_O ,DATE_OUT_O
                , WORK_TIME_O,THR_WS_PK_O
                ,OT_O,NT_O,NT2_O,NT3_O,HT_O,DEL_IF,CRT_DT,CRT_BY,REMARK
                ,TEMP_OUT, TEMP_IN, TEMP_OUT2, TEMP_IN2, TEMP_WT, TEMP_OT, TEMP_NT, TEMP_NT2, TEMP_NT3
                , TEMP_HT --V4 MOI CO CAI NAY
                )
                SELECT L_THR_ATT_MODIFY_PK, A.PK, P_WORK_DT, B.HOL_TYPE, B.DAY_TYPE, TM.TIME_IN,TM.DATE_IN, TM.TIME_OUT ,TM.DATE_OUT
                , TM.WORK_TIME,B.THR_WS_PK
                ,E.OT,E.NT,E.NT2,E.NT3,E.HT,0,SYSDATE,P_CRT_BY,'AUTO'
                ,TM.TEMP_OUT,TM.TEMP_IN,TM.TEMP_OUT2,TM.TEMP_IN2,TM.TEMP_WT,TM.TEMP_OT,TM.TEMP_NT,TM.TEMP_NT2,TM.TEMP_NT3
                ,TM.TEMP_HT--V4 MOI CO CAINAY
                FROM THR_EMPLOYEE A,THR_TIME_MACHINE TM,THR_WG_SCH_DETAIL B
                ,(SELECT T.THR_EMP_PK ,MAX(DECODE(T.OT_TYPE,'OT',T.OT_TIME)) OT
                    ,MAX(DECODE(T.OT_TYPE,'HT',T.OT_TIME)) HT
                    ,MAX(DECODE(T.OT_TYPE,'NT',T.OT_TIME)) NT
                    ,MAX(DECODE(T.OT_TYPE,'NT2',T.OT_TIME)) NT2
                    ,MAX(DECODE(T.OT_TYPE,'NT3',T.OT_TIME)) NT3
                    FROM THR_EXTRA_TIME T WHERE T.DEL_IF=0 AND T.WORK_DT=P_WORK_DT
                    AND T.THR_EMP_PK=P_THR_EMP_PK GROUP BY T.THR_EMP_PK) E 
                WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND TM.DEL_IF(+)=0 
                AND B.THR_EMP_PK=A.PK 
                AND TM.THR_EMP_PK(+)=B.THR_EMP_PK
               AND TM.WORK_DT(+)=B.WORK_DT
                AND B.THR_EMP_PK=E.THR_EMP_PK(+)
                AND B.WORK_DT=P_WORK_DT
                AND B.THR_EMP_PK=P_THR_EMP_PK
                AND A.PK=P_THR_EMP_PK
                AND NVL(TM.CLOSE_YN,'N')<>'Y' AND NVL(TM.CLOSE_YN,'N')<>'Y';
            END IF ; 
            
            
            IF P_ACTION='DELETE' THEN --INSERT DATA INTO MODIFIED TABLE 
                    
                    IF P_ABSENCE_PK IS NOT NULL THEN 
                    
                        INSERT INTO THR_ABSENCE_MODIFY A
                       (A.PK,A.THR_EMP_PK,A.ABSENCE_DT,A.THR_WS_PK,DEL_IF,CRT_DT,CRT_BY
                       ,A.ABSENCE_TIME,A.ABSENCE_TYPE,A.ABSENCE_TIME_O,ABSENCE_TYPE_O
                       )
                       SELECT 
                       THR_ABSENCE_MODIFY_SEQ.NEXTVAL,P_THR_EMP_PK,P_WORK_DT,B.THR_WS_PK,0,SYSDATE
                       ,P_CRT_BY
                       ,NULL,NULL,B.ABSENCE_TIME,B.ABSENCE_TYPE
                       FROM THR_ABSENCE B
                       WHERE  B.DEL_IF=0
                       AND B.PK=P_ABSENCE_PK;
                    END IF;
                    

                    UPDATE THR_ABSENCE ABS
                    SET ABS.DEL_IF=ABS.PK
                   ,ABS.REMARK=p_crt_by ||'DELETE'
                   ,ABS.MOD_DT=SYSDATE
                   ,ABS.MOD_BY=p_crt_by
                   WHERE ABS.DEL_IF=0 AND ABS.ABSENCE_DT=p_work_dt AND ABS.THR_EMP_PK=p_thr_emp_pk
                   AND NVL(ABS.CLOSE_YN,'N')<>'Y' and NVL(ABS.CLOSE_M_YN,'N')<>'Y';

                   UPDATE THR_TIME_MACHINE T
                   SET T.DEL_IF=T.PK
                   ,T.REMARK=p_crt_by ||'DELETE'
                   ,T.MOD_DT=SYSDATE
                   ,T.MOD_BY=p_crt_by
                   WHERE T.DEL_IF=0 AND T.WORK_DT=p_work_dt AND T.THR_EMP_PK=p_thr_emp_pk
                   AND NVL(T.CLOSE_YN,'N')<>'Y' and NVL(T.CLOSE_M_YN,'N')<>'Y';

                    DELETE THR_EXTRA_TIME EX
                    WHERE EX.DEL_IF=0 AND EX.WORK_DT=p_work_dt AND EX.THR_EMP_PK=p_thr_emp_pk
                    AND NVL(EX.CLOSE_YN,'N')<>'Y' and NVL(EX.CLOSE_M_YN,'N')<>'Y';
                    
                    UPDATE THR_WG_SCH_DETAIL G
                     SET G.MOD_BY=p_crt_by||'DEL NOTE'
                        ,G.MOD_DT=SYSDATE
                        ,G.NOTE_ATT=''
                     WHERE G.DEL_IF=0 AND G.WORK_DT=p_work_dt AND G.THR_EMP_PK=p_thr_emp_pk
                     AND (G.THR_WS_PK<>p_thr_ws_pk or nvl(G.NOTE_ATT,' ')<>nvl(p_note_att,' ')) 
                     AND NVL(G.CLOSE_YN,'N')<>'Y' AND NVL(G.CLOSE_M_YN,'N')<>'Y';

            END IF;
            l_error:='01';
         IF p_action='UPDATE' THEN
         
                UPDATE THR_WG_SCH_DETAIL G
                 SET G.THR_WS_PK=p_thr_ws_pk
                    ,G.MOD_BY=p_crt_by||'FROM ATT ABS'
                    ,G.MOD_DT=SYSDATE
                    ,G.NOTE_ATT=p_note_att
                 WHERE G.DEL_IF=0 AND G.WORK_DT=p_work_dt AND G.THR_EMP_PK=p_thr_emp_pk
                 AND (G.THR_WS_PK<>p_thr_ws_pk or nvl(G.NOTE_ATT,' ')<>nvl(p_note_att,' ')) 
                 AND NVL(G.CLOSE_YN,'N')<>'Y' AND NVL(G.CLOSE_M_YN,'N')<>'Y';
         
                SELECT NVL(S.WT,8)+NVL(S.WT_PLUS,0),s.END_MEAL1,NVL(S.WT_PLUS,0) INTO l_shift_wt,p_end_meal,l_wt_plus
                            FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND S.PK=p_thr_ws_pk;

                SELECT V.CODE INTO l_kind_ot FROM VHR_HR_CODE V WHERE V.ID='HR0038'; --KIEM TRA XEM SU DUNG LOAI TINH OT NAO
                
                select nvl(d.CHAR_2,'N') INTO l_ot_allow_yn ---Kiem tra xem co tinh tang ca cho WT Allow hay ko -- 
                from thr_code_master m, thr_code_detail d
                where d.DEL_IF=0
                and m.DEL_IF=0
                and m.pk=d.THR_CODE_MASTER_PK
                and d.CODE='02'
                and m.ID='HR0038';
                
            IF P_STATUS=1 THEN    

                IF  p_time_in IS NULL AND p_time_out IS NULL  THEN
                    DELETE THR_TIME_MACHINE T
                    WHERE T.DEL_IF=0 AND T.WORK_DT=p_work_dt AND T.THR_EMP_PK=p_thr_emp_pk
                    AND NVL(T.CLOSE_YN,'N')<>'Y' AND NVL(T.CLOSE_M_YN,'N')<>'Y';

                    DELETE THR_EXTRA_TIME EX
                    WHERE EX.DEL_IF=0 AND EX.WORK_DT=p_work_dt AND EX.THR_EMP_PK=p_thr_emp_pk
                    AND NVL(EX.CLOSE_YN,'N')<>'Y' AND NVL(EX.CLOSE_M_YN,'N')<>'Y';
                END IF;
                
                open l_cur for
                SELECT MAX(NVL(L.REG_HOURS,0)), MAX(L.REG_TYPE)
                FROM THR_REGULATION L
                WHERE L.DEL_IF=0 AND L.THR_EMP_PK=p_thr_emp_pk
                GROUP BY L.THR_EMP_PK
                HAVING MAX(L.START_DT)<=p_work_dt
                AND MAX(L.END_DT)>=p_work_dt;

                 FETCH l_cur INTO l_wt_allow, l_reg_type;
                  l_flag_exist := l_cur%FOUND;
                CLOSE l_cur;

                IF l_flag_exist=FALSE THEN
                    l_wt_allow:=0;
                    l_reg_type:='';
                END IF;


                 
                 UPDATE THR_ABSENCE A
                    SET A.THR_WS_PK = p_thr_ws_pk
                        ,A.MOD_BY = p_crt_by||'UPDATE FROM ATT ABS'
                        ,A.MOD_DT = SYSDATE
                    WHERE A.DEL_IF=0 AND A.ABSENCE_DT= p_work_dt 
                        AND A.THR_EMP_PK = p_thr_emp_pk
                        AND A.THR_WS_PK <> p_thr_ws_pk
                        AND NVL(A.CLOSE_YN,'N') <>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';

            IF (p_time_in IS NOT NULL OR p_time_out IS NOT NULL) THEN -- 1
                 IF p_work_time IS NULL THEN --AUTO CALCULATE ---          2
                        SELECT (case 
                           when l_reg_type='01'  
                           then  HR_SF_GET_WT_COM(to_char(to_date(p_date_in||p_time_in,'yyyymmdd HH24:MI')-l_wt_allow/24,'yyyymmddHH24:MI')--date in 
                                        ,p_date_out||p_time_out--date out 
                                        ,p_thr_ws_pk,p_work_dt, l_company_pk)
                           when l_reg_type='03' and p_time_out<p_end_meal
                               then HR_SF_GET_WT_COM(p_date_in||p_time_in,p_date_out||p_time_out,p_thr_ws_pk,p_work_dt, l_company_pk)+l_wt_allow
                               when l_reg_type='03' and p_time_out>p_end_meal
                               then HR_SF_GET_WT_COM(p_date_in||p_time_in--date in 
                                            ,to_char(to_date(p_date_out||p_time_out,'yyyymmdd HH24:MI')+l_wt_allow/24,'yyyymmddHH24:MI')--date out 
                                            ,p_thr_ws_pk,p_work_dt, l_company_pk)  
                           when l_reg_type='04' 
                           then HR_SF_GET_WT_COM(p_date_in||p_time_in,p_date_out||p_time_out,p_thr_ws_pk,p_work_dt, l_company_pk)+l_wt_allow
                           else HR_SF_GET_WT_COM(p_date_in||p_time_in,p_date_out||p_time_out,p_thr_ws_pk,p_work_dt, l_company_pk)
                           end)-HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,0,0,0,0,p_thr_ws_pk,p_work_dt,'WT')
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,0,0,0,0,p_thr_ws_pk,p_work_dt,'WT') temp_wt
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,p_temp_ot,0,0,0,p_thr_ws_pk,p_work_dt,'OT') temp_ot
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,p_temp_ot,p_temp_nt,p_temp_nt2,p_temp_ht,p_thr_ws_pk,p_work_dt,'NT') temp_nt
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,p_temp_ot,p_temp_nt,p_temp_nt2,p_temp_ht,p_thr_ws_pk,p_work_dt,'NT2') temp_nt2
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,p_temp_ot,p_temp_nt,p_temp_nt2,p_temp_ht,p_thr_ws_pk,p_work_dt,'HT') temp_ht                                                                       
                          INTO l_wt,l_temp_wt,l_temp_ot,l_temp_nt,l_temp_nt2,l_temp_ht FROM DUAL ;  
                      
                          IF NVL(l_wt_allow,0)>0 AND l_wt<l_shift_wt THEN
                                l_wt:=l_wt-l_wt_allow;
                          END IF;
                          
                          IF l_wt_add<>0 AND l_wt>=l_wt_condition1 AND l_wt<=l_wt_condition2 and NVL(l_wt_plus,0)<>0 THEN -- ap dung dieu cho nhung ca co wt plus
                                l_wt:=l_wt+l_wt_add;                               
                          END IF;
                          
                      
                        IF p_work_time_pk IS NULL THEN --CHUA CO PHAI INSERT --- 3
                            
                            l_error:='02';
                            INSERT INTO THR_TIME_MACHINE(PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN
                               , TIME_OUT, WORK_TIME, PAY_RATE, MOD_BYHAND_YN
                               , REMARK, DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_AUTO_YN,NO_SCAN_FLAG,DAY_TYPE,HOL_TYPE
                               ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OUT,TEMP_IN,TEMP_OUT2,TEMP_IN2,TEMP_WT,TEMP_OT,TEMP_NT,TEMP_NT2,TEMP_HT,ID_NUM
                               )
                                 SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,p_thr_emp_pk,G.THR_WG_PK ,p_work_dt,p_thr_ws_pk,p_time_in,p_time_out
                                    ,(CASE  WHEN p_day_type IS NOT NULL THEN 0
                                            WHEN p_day_type IS NULL AND l_wt >=l_shift_wt 
                                                THEN l_shift_wt
                                            ELSE  l_wt 
                                    END)-- work_time 
                                     ,l_wt_rate,'N', 'INS AUTO FROM ATT_ABS1 ',0,SYSDATE,p_crt_by,nvl(p_date_in,p_work_dt),nvl(p_date_out,p_work_dt),'Y',p_no_can_flag
                                    ,G.DAY_TYPE,G.HOL_TYPE
                                    ,0,0--, hr_f_get_week(g.WORK_DT), hr_f_get_month_week(g.WORK_DT)
                                    ,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2
                                    ,l_temp_wt
                                    ,l_temp_ot
                                    ,l_temp_nt
                                    ,l_temp_nt2
                                    ,(CASE WHEN G.HOL_TYPE IS NOT NULL THEN l_temp_ht ELSE NULL END)
                                    ,E.ID_NUM
                                  FROM THR_WG_SCH_DETAIL G,THR_EMPLOYEE E
                                   WHERE G.del_if=0 AND E.DEL_IF=0 AND G.THR_EMP_PK=E.PK
                                    AND G.THR_EMP_PK=p_thr_emp_pk AND NVL(G.CLOSE_YN,'N')<>'Y' AND NVL(G.CLOSE_M_YN,'N')<>'Y'
                                   AND g.THR_EMP_PK NOT IN(SELECT EX.THR_EMP_PK  FROM THR_TIME_MACHINE EX WHERE EX.DEL_IF=0 AND EX.WORK_DT=p_work_dt
                                                                                 AND EX.THR_EMP_PK=p_thr_emp_pk)
                                   AND g.WORK_DT=p_work_dt;
                                
                        ELSE --CO RUI THI UPDATE
                            l_error:='03';
                           UPDATE THR_TIME_MACHINE TM
                                SET TM.THR_WS_PK= p_thr_ws_pk
                                 ,TM.TIME_IN=p_time_in
                                ,TM.DATE_IN=p_date_in
                                 ,TM.TIME_OUT=p_time_out
                                 ,TM.DATE_OUT=p_date_out
                                 ,TM.WORK_TIME=(CASE WHEN TM.HOL_TYPE IS NULL and l_wt >=l_shift_wt THEN l_shift_wt
                                             WHEN TM.HOL_TYPE IS NULL and l_wt <l_shift_wt  THEN l_wt
                                            ELSE 0 END)
                                 ,TM.TEMP_OUT=p_temp_out
                                 ,TM.TEMP_IN=p_temp_in
                                 ,TM.TEMP_OUT2=p_temp_out2
                                 ,TM.TEMP_IN2=p_temp_in2
                                 ,TM.TEMP_WT=l_temp_wt
                                 ,TM.TEMP_OT=l_temp_ot
                                 ,TM.TEMP_NT=l_temp_nt
                                 ,TM.TEMP_NT2=l_temp_nt2
                                 ,TM.TEMP_HT =(CASE WHEN TM.HOL_TYPE IS NOT NULL THEN l_temp_ht ELSE NULL END)           
                                 ,TM.REMARK= 'UPDATE AUTO FROM ATT_ABS2'
                                 ,TM.MOD_BYHAND_YN='N'
                                 ,TM.MOD_AUTO_YN='Y'
                                 ,TM.MOD_BY=p_crt_by
                                 ,TM.MOD_DT=SYSDATE
                                 ,TM.NO_SCAN_FLAG=p_no_can_flag
                                WHERE TM.DEL_IF=0 AND TM.WORK_DT=p_work_dt AND TM.THR_EMP_PK=p_thr_emp_pk
                                AND NVL(TM.CLOSE_YN,'N')<>'Y' AND NVL(TM.CLOSE_YN,'N')<>'Y';

                            

                        END IF; --3

                 ELSE --INPUT BY HAND --
                         IF p_work_time_pk IS NULL THEN --CHUA CO PHAI INSERT ---
                            l_error:='04';
                            INSERT INTO THR_TIME_MACHINE(PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN
                               , TIME_OUT, WORK_TIME, PAY_RATE, MOD_BYHAND_YN, MOD_BY
                               , REMARK, DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_AUTO_YN,NO_SCAN_FLAG,DAY_TYPE,HOL_TYPE
                               ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OUT,TEMP_IN,TEMP_OUT2,TEMP_IN2,TEMP_WT,TEMP_OT,TEMP_NT,TEMP_NT2,TEMP_HT,ID_NUM
                               )
                                 SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,p_thr_emp_pk,G.THR_WG_PK,p_work_dt,p_thr_ws_pk,p_time_in,p_time_out
                                         ,p_work_time
                                         ,l_wt_rate,'Y', p_crt_by,'INS BYHAND FROM ATT_ABS3',0,SYSDATE,p_crt_by,nvl(p_date_in,p_work_dt),nvl(p_date_out,p_work_dt),'N',p_no_can_flag
                                         ,G.DAY_TYPE,G.HOL_TYPE
                                         ,0,0--, hr_f_get_week(g.WORK_DT), hr_f_get_month_week(g.WORK_DT)
                                         ,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2
                                        ,p_temp_wt
                                        ,p_temp_ot
                                        ,p_temp_nt
                                        ,p_temp_nt2
                                        ,(CASE WHEN G.HOL_TYPE IS NOT NULL THEN p_temp_ht ELSE NULL END)
                                         ,E.ID_NUM
                               FROM THR_WG_SCH_DETAIL G,THR_EMPLOYEE E
                                WHERE G.del_if=0 AND E.DEL_IF=0 AND G.THR_EMP_PK=E.PK 
                                AND G.THR_EMP_PK=p_thr_emp_pk  AND NVL(G.CLOSE_YN,'N')<>'Y'  AND NVL(G.CLOSE_M_YN,'N')<>'Y'
                                AND g.THR_EMP_PK NOT IN(SELECT EX.THR_EMP_PK  FROM THR_TIME_MACHINE EX WHERE EX.DEL_IF=0 AND EX.WORK_DT=p_work_dt
                                                                                 AND EX.THR_EMP_PK=p_thr_emp_pk)
                                AND g.WORK_DT=p_work_dt;

                        ELSE --CO ROI THI UPDATE

                                UPDATE THR_TIME_MACHINE TM
                                SET TM.THR_WS_PK=p_thr_ws_pk
                                    ,TM.TIME_IN=p_time_in
                                   ,TM.DATE_IN=p_date_in
                                  ,TM.TIME_OUT=p_time_out
                                 ,TM.DATE_OUT=p_date_out
                                 ,TM.WORK_TIME=(CASE WHEN p_date_in IS NULL OR p_time_out IS NULL THEN NULL ELSE p_work_time END)
                                 ,TM.TEMP_OUT=p_temp_out
                                 ,TM.TEMP_IN=p_temp_in
                                 ,TM.TEMP_OUT2=p_temp_out2
                                 ,TM.TEMP_IN2=p_temp_in2
                                 ,TM.TEMP_WT=p_temp_wt
                                 ,TM.TEMP_OT=p_temp_ot
                                 ,TM.TEMP_NT=p_temp_nt
                                 ,TM.TEMP_NT2=p_temp_nt2
                                 ,TM.TEMP_HT =(CASE WHEN TM.HOL_TYPE IS NOT NULL THEN p_temp_ht ELSE NULL END)          
                                 ,TM.REMARK= 'INPUT BY HAND FROM ATT_ABS4'
                                 ,TM.MOD_BYHAND_YN='Y'
                                 ,TM.MOD_AUTO_YN='N'
                                 ,TM.MOD_BY=p_crt_by
                                 ,TM.MOD_DT=SYSDATE
                                 ,TM.NO_SCAN_FLAG=p_no_can_flag
                                WHERE TM.DEL_IF=0 AND TM.WORK_DT=p_work_dt AND TM.THR_EMP_PK=p_thr_emp_pk
                                 AND (NVL(TM.THR_WS_PK,0) <> NVL(p_thr_ws_pk,0)
                                        OR nvl(TM.TIME_IN,' ') <> nvl(p_time_in,' ')
                                        OR nvl(TM.DATE_IN,' ') <> nvl(p_date_in,' ')
                                        OR nvl(TM.TIME_OUT,' ') <> nvl(p_time_out,' ')
                                        OR nvl(TM.DATE_OUT,'') <> nvl(p_date_out,'')
                                        OR nvl(TM.WORK_TIME,0) <> nvl(p_work_time,1)
                                        OR NVL(TM.TEMP_OUT,' ')<>NVL(p_temp_out,' ')
                                        OR NVL(TM.TEMP_IN,' ')<>NVL(p_temp_in,' ')
                                        OR NVL(TM.TEMP_OUT2,' ')<>NVL(p_temp_out2,' ')
                                        OR NVL(TM.TEMP_IN2,' ')<>NVL(p_temp_in2,' ')
                                        OR NVL(TM.TEMP_WT,0)<>NVL(p_temp_wt,0)
                                        OR NVL(TM.TEMP_OT,0)<>NVL(p_temp_ot,0)
                                        OR NVL(TM.TEMP_NT,0)<>NVL(p_temp_nt,0)
                                        OR NVL(TM.TEMP_NT2,0)<>NVL(p_temp_nt2,0)
                                        OR NVL(TM.TEMP_HT,0)<>NVL(p_temp_ht,0)
                                        )
                                        AND NVL(TM.CLOSE_YN,'N')<>'Y' AND NVL(TM.CLOSE_M_YN,'N')<>'Y';
                            
                        END IF;


                    END IF;--2
                END IF; --1
            END IF; --end phan cong
            
            L_ERROR:='05';
            SELECT THR_ABSENCE_MODIFY_SEQ.NEXTVAL INTO L_THR_ABSENCE_MODIFY_PK FROM DUAL;

            IF p_day_type IS NULL AND p_absence_type IS NOT NULL THEN

                SELECT NVL(B.NUM_1,0),NVL(B.NUM_2,0) INTO l_abs_rate,l_ins_rate FROM VHR_HR_CODE B WHERE B.ID='HR0003' AND B.CODE=p_absence_type;
                
                --KIEM TRA CO SU THAY DOI VANG 
                
               INSERT INTO THR_ABSENCE_MODIFY A
               (A.PK,A.THR_EMP_PK,A.ABSENCE_DT,A.THR_WS_PK,DEL_IF,CRT_DT,CRT_BY
               ,A.ABSENCE_TIME,A.ABSENCE_TYPE,A.ABSENCE_TIME_O,ABSENCE_TYPE_O
               )
               SELECT 
               L_THR_ABSENCE_MODIFY_PK,P_THR_EMP_PK,P_WORK_DT,P_THR_WS_PK,0,SYSDATE
               ,P_CRT_BY
               ,NULL,NULL,B.ABSENCE_TIME,B.ABSENCE_TYPE
               FROM THR_EMPLOYEE A,THR_ABSENCE B
               WHERE A.DEL_IF=0 AND B.DEL_IF(+)=0
               AND A.PK=P_THR_EMP_PK
               AND B.THR_EMP_PK(+)=A.PK
               AND B.PK(+)=P_ABSENCE_PK;

                IF p_absence_time=0 THEN --USER MUON XOA VANG
                    DELETE THR_ABSENCE A
                    WHERE A.DEL_IF=0 AND A.ABSENCE_DT=p_work_dt
                          AND A.THR_EMP_PK=p_thr_emp_pk
                          AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';

                ELSIF p_absence_pk IS NULL THEN --CHUA CO PHAI INSERT
                    IF l_abs_rate=0 THEN -- VANG KO CO HUONG LUONG
                        INSERT INTO THR_ABSENCE  --AUTO INSERT ABSENT LIST
                         (PK, THR_EMP_PK, THR_WG_PK, THR_WS_PK,ABSENCE_TYPE,ABSENCE_DT, ABSENCE_TIME
                         , COMPANY_PAY_YN, COMPANY_PAY_RATE,INSURANCE_PAY_YN,INSURANCE_PAY_RATE
                         , REMARK, DEL_IF, CRT_DT, CRT_BY)
                        SELECT THR_ABSENCE_SEQ.NEXTVAL,A.PK,A.THR_WG_PK,p_thr_ws_pk,p_absence_type,p_work_dt
                        ,(CASE WHEN NVL(p_absence_time,NVL(S.WT,8)+NVL(S.WT_PLUS,0)-nvl(c.work_time,0))>8 THEN 8 ELSE NVL(p_absence_time,NVL(S.WT,8)+NVL(S.WT_PLUS,0)-nvl(c.work_time,0)) end)
                               ,'N',0,DECODE(l_ins_rate,0,'N','Y'),l_ins_rate,'INS FROM ATT_ABS', 0, SYSDATE, p_crt_by
                          FROM THR_EMPLOYEE A,THR_TIME_MACHINE C,THR_WORK_SHIFT S
                         WHERE A.DEL_IF = 0 AND S.DEL_IF=0 AND S.PK=p_thr_ws_pk
                           AND C.DEL_IF(+)=0 AND C.WORK_DT(+) = p_work_dt AND A.PK=C.THR_EMP_PK(+)
                           AND A.PK NOT IN (SELECT E.THR_EMP_PK
                                              FROM THR_ABSENCE E
                                             WHERE E.DEL_IF = 0
                                               AND E.ABSENCE_DT = p_work_dt
                                               AND E.THR_EMP_PK=p_thr_emp_pk)
                           AND A.PK NOT IN(SELECT t.thr_emp_pk FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                            AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk AND NVL(T.WORK_TIME,0)=NVL(S.WT,8))
                           AND A.PK=p_thr_emp_pk;
                    ELSE --VANG HUONG LUONG
                        INSERT INTO THR_ABSENCE  --AUTO INSERT ABSENT LIST
                         (PK, THR_EMP_PK, THR_WG_PK, THR_WS_PK,ABSENCE_TYPE,ABSENCE_DT, ABSENCE_TIME
                         , COMPANY_PAY_YN, COMPANY_PAY_RATE
                         , REMARK, DEL_IF, CRT_DT, CRT_BY)
                        SELECT THR_ABSENCE_SEQ.NEXTVAL,A.PK,A.THR_WG_PK,p_thr_ws_pk,p_absence_type,p_work_dt,(CASE WHEN NVL(p_absence_time,NVL(S.WT,8)+NVL(S.WT_PLUS,0)-nvl(c.work_time,0))>8 THEN 8 ELSE NVL(p_absence_time,NVL(S.WT,8)+NVL(S.WT_PLUS,0)-nvl(c.work_time,0)) end )
                               ,'Y',l_abs_rate,'INS FROM ATT_ABS', 0, SYSDATE, p_crt_by
                          FROM THR_EMPLOYEE A,THR_TIME_MACHINE C,THR_WORK_SHIFT S
                         WHERE A.DEL_IF = 0 AND S.DEL_IF=0 AND S.PK=p_thr_ws_pk
                           AND C.DEL_IF(+)=0 AND C.WORK_DT(+) = p_work_dt AND A.PK=C.THR_EMP_PK(+)
                           AND A.PK NOT IN (SELECT E.THR_EMP_PK
                                              FROM THR_ABSENCE E
                                             WHERE E.DEL_IF = 0
                                               AND E.ABSENCE_DT = p_work_dt
                                               AND E.THR_EMP_PK=p_thr_emp_pk)
                           AND A.PK NOT IN(SELECT t.thr_emp_pk FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                            AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk AND NVL(T.WORK_TIME,0)=NVL(S.WT,8))
                           AND A.PK=p_thr_emp_pk;
                    END IF;

                 ELSE --UPDATE

                                DELETE THR_ABSENCE A
                                WHERE A.PK=p_absence_pk --AND A.ABSENCE_TYPE<>'01'
                                AND A.THR_EMP_PK IN(SELECT M.THR_EMP_PK 
                                                    FROM THR_TIME_MACHINE M 
                                                    WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt 
                                                    AND M.TIME_IN IS NOT NULL AND M.TIME_OUT IS NOT NULL
                                                    AND NVL(M.WORK_TIME,0)=l_shift_wt
                                                    AND M.THR_EMP_PK=p_thr_emp_pk)
                                AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';  

                                IF p_absence_time IS NULL THEN --AUTO


                                    IF l_abs_rate=0 THEN
                                         UPDATE THR_ABSENCE A
                                        SET A.ABSENCE_TYPE=p_absence_type
                                            ,A.ABSENCE_TIME=(case when l_shift_wt>8 then 8 else l_shift_wt end)
                                            ,A.COMPANY_PAY_RATE=0
                                            ,A.COMPANY_PAY_YN='N'
                                            ,A.INSURANCE_PAY_YN=DECODE(l_ins_rate,0,'N','Y')
                                            ,A.INSURANCE_PAY_RATE=l_ins_rate
                                            ,A.MOD_BY=p_crt_by||'-UPDATE AUTO'
                                            ,A.MOD_DT=SYSDATE
                                        WHERE A.DEL_IF=0 AND A.PK=p_absence_pk
                                        AND A.THR_EMP_PK NOT IN(SELECT T.THR_EMP_PK
                                                 FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                                AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk)
                                         AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';
                                    ELSE

                                        UPDATE THR_ABSENCE A
                                        SET A.ABSENCE_TYPE=p_absence_type
                                            ,A.ABSENCE_TIME=l_shift_wt-NVL((SELECT NVL(T.WORK_TIME,0)
                                                                        FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                                                        AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk and nvl(t.WORK_TIME,0)<l_shift_wt
                                                                        and nvl(t.WORK_TIME,0)>0),0)
                                            ,A.COMPANY_PAY_RATE=l_abs_rate
                                            ,A.COMPANY_PAY_YN='Y'
                                            ,A.MOD_BY=p_crt_by||'-UPDATE AUTO'
                                            ,A.MOD_DT=SYSDATE
                                        WHERE A.DEL_IF=0 AND A.PK=p_absence_pk
                                         AND A.THR_EMP_PK NOT IN(SELECT T.THR_EMP_PK
                                                 FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                                AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk AND NVL(T.WORK_TIME,0)=l_shift_wt)
                                                AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';
                                
                                        UPDATE THR_ABSENCE A
                                        SET A.ABSENCE_TIME=8
                                        WHERE A.DEL_IF=0 AND A.PK=p_absence_pk
                                              and nvl(A.ABSENCE_TIME,0)>8
                                             AND NVL(A.CLOSE_YN,'N')<>'Y'AND NVL(A.CLOSE_M_YN,'N')<>'Y';        
                                        
                                    END IF;
                               ELSE

                                    UPDATE THR_ABSENCE A
                                    SET A.ABSENCE_TYPE=p_absence_type
                                        ,A.ABSENCE_TIME=p_absence_time
                                        ,A.COMPANY_PAY_RATE=l_abs_rate
                                        ,A.COMPANY_PAY_YN=DECODE(l_abs_rate,0,'N','Y')
                                         ,A.INSURANCE_PAY_YN=DECODE(l_ins_rate,0,'N','Y')
                                         ,A.INSURANCE_PAY_RATE=l_ins_rate
                                        ,A.MOD_BY=p_crt_by||'-UPDATE BYHAND'
                                        ,A.MOD_DT=SYSDATE
                                    WHERE A.DEL_IF=0 AND A.PK=p_absence_pk
                                    AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';

                               END IF;
                       --   END IF;

                END IF;
                
                BEGIN
                  -- raise_application_error(-20002,L_THR_ABSENCE_MODIFY_PK);
                    UPDATE THR_ABSENCE_MODIFY A
                    SET (ABSENCE_TIME,ABSENCE_TYPE,REMARK)=(SELECT B.ABSENCE_TIME,B.ABSENCE_TYPE,'UPDATE ABSENCE' FROM THR_ABSENCE B 
                                                        WHERE B.DEL_IF=0 AND B.ABSENCE_DT=P_WORK_DT
                                                        AND B.THR_EMP_PK=P_THR_EMP_PK)
                    WHERE A.DEL_IF=0 AND A.PK=L_THR_ABSENCE_MODIFY_PK
                    AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK FROM THR_ABSENCE B 
                                            WHERE B.DEL_IF=0 AND B.ABSENCE_DT=P_WORK_DT
                                            AND B.THR_EMP_PK=A.THR_EMP_PK)
                    ;
                    
                    UPDATE THR_ABSENCE A
                    SET  THR_ABSENCE_MODIFY_PK=L_THR_ABSENCE_MODIFY_PK
                    WHERE A.DEL_IF=0 AND A.ABSENCE_DT=P_WORK_DT AND A.THR_EMP_PK=P_THR_EMP_PK
                    AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK FROM THR_ABSENCE_MODIFY B 
                                            WHERE B.DEL_IF=0 
                                            AND (NVL(B.ABSENCE_TIME,0)<> NVL(B.ABSENCE_TIME_O,0)
                                            OR NVL(B.ABSENCE_TYPE,' ')<> NVL(B.ABSENCE_TYPE_O,' ') ) 
                                            AND B.PK=L_THR_ABSENCE_MODIFY_PK
                                            AND B.THR_EMP_PK=A.THR_EMP_PK);
                                            
                    UPDATE THR_ABSENCE_MODIFY A
                    SET DEL_IF=PK
                    WHERE A.DEL_IF=0 
                    AND NVL(A.ABSENCE_TIME,0)= NVL(A.ABSENCE_TIME_O,0)
                    AND NVL(A.ABSENCE_TYPE,' ')= NVL(A.ABSENCE_TYPE_O,' ')
                    AND A.PK=L_THR_ABSENCE_MODIFY_PK;
                                        
                END ;
                
                
                
           ELSIF p_absence_type IS NULL THEN
                IF P_ABSENCE_PK IS NOT NULL THEN 
                   INSERT INTO THR_ABSENCE_MODIFY A
                   (A.PK,A.THR_EMP_PK,A.ABSENCE_DT,A.THR_WS_PK,DEL_IF,CRT_DT,CRT_BY
                   ,A.ABSENCE_TIME,A.ABSENCE_TYPE,A.ABSENCE_TIME_O,ABSENCE_TYPE_O
                   )
                   SELECT 
                   L_THR_ABSENCE_MODIFY_PK,P_THR_EMP_PK,P_WORK_DT,P_THR_WS_PK,0,SYSDATE
                   ,P_CRT_BY
                   ,NULL,NULL,B.ABSENCE_TIME,B.ABSENCE_TYPE
                   FROM THR_ABSENCE B
                   WHERE B.DEL_IF=0
                   AND B.PK=P_ABSENCE_PK; 
                    
                    UPDATE  THR_ABSENCE A
                    SET DEL_IF=PK
                    ,MOD_BY=P_CRT_BY
                    ,MOD_DT=SYSDATE
                    WHERE A.PK=P_ABSENCE_PK
                    AND NVL(A.CLOSE_YN,'N')<>'Y';
                END IF;
           END IF;

             --XU LY TANG CA
            --DELETE GIO TANG CA NEU CO
            DELETE THR_EXTRA_TIME A
            WHERE A.DEL_IF=0 AND  A.WORK_DT=p_work_dt --AND NVL(A.MOD_BYHAND_YN,'N')<>'Y'
            AND A.THR_EMP_PK=p_thr_emp_pk
            AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';


            IF p_work_time IS NULL THEN --AUTO CALCULATE ---
                   --NGAY LE, CN
                         INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'HT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_HT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT, l_company_pk)-NVL(B.TEMP_HT,0)>0 
                                        THEN
                                            HR_SF_GET_HT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT, l_company_pk)-NVL(B.TEMP_HT,0)
                                        ELSE 0 END) AS HT
                                   ,DECODE(B.HOL_TYPE,'HOL',l_ht_rate,l_st_rate)
                                   ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry ATT_ABS1',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_HT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_HT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='HT'
                                                        AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;


                         INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                             + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                             -NVL(B.TEMP_OT,0)>0 
                                             THEN   HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                                     + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                                    -NVL(B.TEMP_OT,0) 
                                             ELSE 0 END) OT      
                                   ,(CASE WHEN NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_oht_rate  ELSE l_ost_rate END) AS RATE
                                   ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry ATT_ABS1',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0
                                   ,B.TEMP_OT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND (CASE WHEN HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                             + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                             -NVL(B.TEMP_OT,0)>0 
                                             THEN   HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                                     + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                                    -NVL(B.TEMP_OT,0) 
                                             ELSE 0 END) >0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                                        AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;
                       
                            -- NT
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)
                                             + HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT,0)>0
                                        THEN HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)
                                             + HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT,0)
                                        ELSE 0 END) AS NT
                                   ,(CASE WHEN  NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_nt90_rate ELSE l_nt60_rate END )
                                   ,C.START_NT, B.TIME_OUT, 'N','Auto Entry ATT_ABS2',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0-- , hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)
                                             + HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               --AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;

                    --NGAY THUONG

                           INSERT INTO THR_EXTRA_TIME
                        (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                        , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                        , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                        ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                        )
                        SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                              ,(CASE WHEN (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  HR_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot, l_company_pk) 
                                  + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                     WHEN l_ot_allow_yn='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                     ELSE HR_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                            + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                               END) -NVL(B.TEMP_OT,0)>0 
                                    THEN (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  HR_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot, l_company_pk) 
                                                  + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                                     WHEN l_ot_allow_yn='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                                     ELSE HR_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                                            + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                               END) -NVL(B.TEMP_OT,0)
                              ELSE 0 END) AS OT
                               ,l_ot_rate
                               ,C.START_OT, B.TIME_OUT, 'N','Auto Entry ATT_ABS3',0,SYSDATE, p_crt_by
                               ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                              ,0,0-- , hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                              ,B.TEMP_OT
                          FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C,
                          (SELECT R.THR_EMP_PK, decode(r.REG_TYPE,'03',nvl(R.REG_HOURS,0),0) as reg_hour, 1 AS FLAG
                              , decode(r.REG_TYPE,'04',1,0) as reg_04
                        FROM THR_REGULATION R 
                        WHERE R.DEL_IF=0 AND p_work_dt BETWEEN R.START_DT AND R.END_DT) allow
                         WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                           AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                           and b.THR_EMP_PK = allow.thr_emp_pk(+)
                           AND B.WORK_DT = p_work_dt
                           AND (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  HR_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot, l_company_pk) 
                                            + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                     WHEN l_ot_allow_yn='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                     ELSE HR_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                            + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                               END)-NVL(B.TEMP_OT,0)>0
                           AND B.TIME_OUT IS NOT NULL
                           AND B.TIME_IN IS NOT NULL
                           AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                             WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                             AND D.THR_EMP_PK=p_thr_emp_pk)
                           AND NVL(A.OT_YN,'Y')='Y'
                           AND B.THR_EMP_PK=p_thr_emp_pk
                           AND B.HOL_TYPE IS NULL;

                              -- NT  
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT,0)>0
                                        THEN  HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT,0)
                                        ELSE 0 END) AS NT
                                   ,l_nt30_rate
                                   ,C.START_NT, B.TIME_OUT, 'N','Auto Entry ATT_ABS4',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                              -- AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;
                       
                           -- NT2 LOAI 1  1 NGAY CO 2 LOAI NT KHAC RATE 
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT2', B.thr_wg_pk ,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT2,0)>0
                                        THEN HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT2,0)
                                        ELSE 0 END)  AS NT
                                   ,l_nt45_rate
                                   ,C.START_NT, B.TIME_OUT, 'N','Auto Entry ATT_ABS4',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT2
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT2'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL
                               AND (C.DURING_DAY=2 
                                OR (C.DURING_DAY=1 AND C.START_NT<=C.START_OT)
                               );
                               
                            -- NT2 LOAI 2  1 NGAY CO 2 LOAI NT KHAC RATE 
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT3', B.thr_wg_pk ,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT3,0)>0
                                        THEN HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT3,0)
                                        ELSE 0 END)  AS NT
                                   ,l_nt45_2_rate
                                   ,C.START_NT, B.TIME_OUT, 'N','Auto Entry ATT_ABS4',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT3
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT3'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL
                               AND C.DURING_DAY=1 AND C.START_NT>C.START_OT;   
                               
                               
                       
           ELSE --INPUT BY HAND
                 --NGAY LE, CN
                      INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'HT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_ht AS HT
                                   ,DECODE(B.HOL_TYPE,'HOL',l_ht_rate,l_st_rate)
                                   ,B.TIME_IN, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_HT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='HT'
                                                        AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_ht,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;

                          INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_ot AS HT
                                   ,(CASE WHEN p_day_type='HOL' THEN l_oht_rate ELSE l_ost_rate END) as rate
                                   ,B.TIME_IN, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_OT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                                        AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_ht,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;


                            -- NT
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_nt AS NT
                                   ,(CASE WHEN  p_day_type='HOL' THEN l_nt90_rate ELSE l_nt60_rate END )
                                   ,C.START_NT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                                AND NVL(p_nt,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;
                               
                --NGAY THUONG
                        INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                  ,p_ot AS OT,l_ot_rate
                                   ,C.START_OT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_OT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_ot,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;

                              -- NT 
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_nt AS NT
                                   ,l_nt30_rate
                                   ,C.START_NT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_nt,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;
                       
                              -- NT2 
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT2', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_nt2 AS NT
                                   ,l_nt45_rate
                                   ,C.START_NT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT2
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT2'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_nt2,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;
                    
                                              -- NT2 LOAI 2 (NT3)
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT3', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_nt3 AS NT
                                   ,l_nt45_2_rate
                                   ,C.START_NT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT3
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT3'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_nt3,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;                               
    

           END IF; --AUTO 
           
           L_ERROR:='08';
            --INSERT NEW DATA WHEN DATA IS CHANGED
            UPDATE THR_ATTENDANCE_MODIFY F
             SET   ( TIME_IN,DATE_IN, TIME_OUT ,DATE_OUT
                , WORK_TIME,THR_WS_PK
               ,OT,NT,NT2,NT3,HT
                ,F.TEMP_OUT,F.TEMP_IN,F.TEMP_OUT2,F.TEMP_IN2,F.TEMP_WT
                ,F.TEMP_OT,F.TEMP_NT,F.TEMP_NT2,F.TEMP_NT3,F.TEMP_HT--V4MOICOCAINAY
                )
                =(            
                    SELECT TM.TIME_IN,TM.DATE_IN, TM.TIME_OUT ,TM.DATE_OUT
                    , TM.WORK_TIME,B.THR_WS_PK
                    ,E.OT,E.NT,E.NT2,E.NT3,E.HT
                    ,TM.TEMP_OUT,TM.TEMP_IN,TM.TEMP_OUT2,TM.TEMP_IN2,TM.TEMP_WT
                    ,TM.TEMP_OT,TM.TEMP_NT,TM.TEMP_NT2,TM.TEMP_NT3,TM.TEMP_HT--V4MOICOCAINAY
                    FROM THR_EMPLOYEE A,THR_TIME_MACHINE TM,THR_WG_SCH_DETAIL B
                    ,(SELECT T.THR_EMP_PK ,MAX(DECODE(T.OT_TYPE,'OT',T.OT_TIME)) OT
                        ,MAX(DECODE(T.OT_TYPE,'HT',T.OT_TIME)) HT
                        ,MAX(DECODE(T.OT_TYPE,'NT',T.OT_TIME)) NT
                        ,MAX(DECODE(T.OT_TYPE,'NT2',T.OT_TIME)) NT2
                        ,MAX(DECODE(T.OT_TYPE,'NT3',T.OT_TIME)) NT3
                        FROM THR_EXTRA_TIME T WHERE T.DEL_IF=0 AND T.WORK_DT=P_WORK_DT
                        AND T.THR_EMP_PK=P_THR_EMP_PK GROUP BY T.THR_EMP_PK) E 
                    WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND TM.DEL_IF(+)=0  
                    AND B.THR_EMP_PK=A.PK 
                    AND TM.THR_EMP_PK(+)=B.THR_EMP_PK
                    AND TM.WORK_DT(+)=B.WORK_DT
                    AND B.THR_EMP_PK=E.THR_EMP_PK(+)
                    AND B.WORK_DT=P_WORK_DT
                    AND B.THR_EMP_PK=P_THR_EMP_PK
                    AND A.PK=P_THR_EMP_PK
                    ) 
                WHERE   F.DEL_IF=0 AND F.WORK_DT=P_WORK_DT AND F.THR_EMP_PK=P_THR_EMP_PK
                AND PK=L_THR_ATT_MODIFY_PK
                 ;
                    L_ERROR:='09';
                 UPDATE THR_TIME_MACHINE A  
                 SET THR_ATTENDANCE_MODIFY_PK=L_THR_ATT_MODIFY_PK
                 WHERE A.DEL_IF=0 
                 AND A.WORK_DT=P_WORK_DT
                 AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
                 AND A.THR_EMP_PK=P_THR_EMP_PK;
                    
         END IF; --UPDATE





exception
    WHEN l_check THEN
      raise_application_error(-20019,'');
    when others then
      raise_application_error(-20002,l_error||SQLERRM);
      ROLLBACK WORK;
end ;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI00900_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI00900_0 (
   p_action     varchar2,
   p_thr_emp_pk     varchar2, --0
   p_wt_rate   varchar2,   --7
   p_ot_rate   varchar2,   -- 9
   p_nt_rate   varchar2,   -- 11
   p_nt2_rate   varchar2,  --13
   p_nt3_rate   varchar2,  --16  
   p_ht_rate   varchar2,  --17  
   p_wt_pk   varchar2, -- 18
   p_ot_pk   varchar2,   --19
   p_nt_pk   varchar2,  --20
   p_nt2_pk   varchar2,    --21
   p_nt3_pk   varchar2,    --22 
   p_ht_pk   varchar2,   --23 
   p_work_dt   varchar2,  --24
   p_crt_by                   varchar2

)
is
/******************************************************************************
   NAME:
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        4/17/2008   huynhtruong                    1. Created this function.

******************************************************************************/
   l_error      varchar2(2);


   l_month_close varchar2(1):='';


begin

    /*
     l_month_close:=sf_check_month_close(p_work_dt,'01');

       IF l_month_close='Y' THEN
            RAISE_APPLICATION_ERROR(-20019,'');
       END IF;
    /**/
    l_error:='00';
    IF p_action='UPDATE' THEN
    
        UPDATE thr_work_date a
        SET a.wt_rate = p_wt_rate
          , a.ot_rate = p_ot_rate
          , a.nt_rate = p_nt_rate
          , a.ont_rate = p_nt2_rate
        ,A.REMARK='CHANGED RATE'
        ,A.MOD_BY=p_crt_by
        ,A.MOD_DT=SYSDATE
        , A.MOD_BYHAND_YN = 'Y'
        WHERE A.DEL_IF=0 AND A.PK = p_wt_pk
              AND (NVL(A.wt_rate,0)<> NVL(p_wt_rate,0)
                  OR NVL(A.ot_rate,0)<> NVL(p_ot_rate,0)
                  OR NVL(A.nt_rate,0)<> NVL(p_nt_rate,0)
                  OR NVL(A.ont_rate,0)<> NVL(p_nt2_rate,0)) 
              AND NVL(A.CLOSE_YN,'N')<>'Y';
/*
        UPDATE THR_EXTRA_TIME A
        SET A.PAY_RATE=p_ot_rate
            ,A.REMARK='CHANGED RATE'
            ,A.MOD_BY=p_crt_by
            ,A.MOD_DT=SYSDATE
        WHERE A.DEL_IF=0 AND A.PK=p_ot_pk
              AND NVL(A.PAY_RATE,0)<>NVL(p_ot_rate,0)
              AND A.OT_TYPE='OT'
              AND NVL(A.CLOSE_YN,'N')<>'Y';

        UPDATE THR_EXTRA_TIME A
        SET A.PAY_RATE=p_nt_rate
            ,A.REMARK='CHANGED RATE'
            ,A.MOD_BY=p_crt_by
            ,A.MOD_DT=SYSDATE
        WHERE A.DEL_IF=0 AND A.PK=p_nt_pk
              AND NVL(A.PAY_RATE,0)<>NVL(p_nt_rate,0)
              AND A.OT_TYPE='NT'
              AND NVL(A.CLOSE_YN,'N')<>'Y';
              
        UPDATE THR_EXTRA_TIME A
        SET A.PAY_RATE=p_nt2_rate
            ,A.REMARK='CHANGED RATE'
            ,A.MOD_BY=p_crt_by
            ,A.MOD_DT=SYSDATE
        WHERE A.DEL_IF=0 AND A.PK=p_nt2_pk
              AND NVL(A.PAY_RATE,0)<>NVL(p_nt2_rate,0)
              AND A.OT_TYPE='NT2'
              AND NVL(A.CLOSE_YN,'N')<>'Y';
              
        
        UPDATE THR_EXTRA_TIME A
        SET A.PAY_RATE=p_nt3_rate
            ,A.REMARK='CHANGED RATE'
            ,A.MOD_BY=p_crt_by
            ,A.MOD_DT=SYSDATE
        WHERE A.DEL_IF=0 AND A.PK=p_nt3_pk
              AND NVL(A.PAY_RATE,0)<>NVL(p_nt3_rate,0)
              AND A.OT_TYPE='NT3'
              AND NVL(A.CLOSE_YN,'N')<>'Y';      


        UPDATE THR_EXTRA_TIME A
        SET A.PAY_RATE=p_ht_rate
            ,A.REMARK='CHANGED RATE'
            ,A.MOD_BY=p_crt_by
            ,A.MOD_DT=SYSDATE
        WHERE A.DEL_IF=0 AND A.PK=p_ht_pk
              AND NVL(A.PAY_RATE,0)<>NVL(p_ht_rate,0)
              AND A.OT_TYPE='HT'
              AND NVL(A.CLOSE_YN,'N')<>'Y';
*/

    END IF;
exception
   when others then
     -- raise_application_error (-2002,'code:'||l_error||sqlerrm);
      raise;
      ROLLBACK WORK;
end ;
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01000_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01000_0 (
   P_ACTION               VARCHAR,
   P_EMP_ID               VARCHAR,
   P_ABSENCE_TYPE         VARCHAR,
   P_ABSENCE_DT           VARCHAR,
   P_REMARK               VARCHAR,
   P_ABSENCE_TIME         VARCHAR,
   P_COMPANY_PAY_YN       VARCHAR,
   P_COMPANY_PAY_RATE     VARCHAR,
   P_INSURANCE_PAY_YN     VARCHAR,
   P_INSURANCE_PAY_RATE   VARCHAR,
   P_PK                   VARCHAR,
   P_THR_EMP_PK           VARCHAR,
   P_THR_WG_PK         VARCHAR,
   P_THR_WS_PK            VARCHAR,
   P_COMPANY_ALLOW        VARCHAR,
   P_CRT_BY               VARCHAR
)
IS
/****************************************************************NAME:       sp_work_shift
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/12/2008          1. Created this procedure.

******************************************************************************/
   L_ABSENCE_DT           VARCHAR2 (8);
   L_COMPANY_PAY_YN       VARCHAR2 (1);
   L_COMPANY_PAY_RATE     NUMBER;
   L_INSURANCE_PAY_YN     VARCHAR2 (1);
   L_INSURANCE_PAY_RATE   NUMBER;
   L_OLD_ABSENCE_TYPE     VARCHAR2(30):='';
   L_OLD_ABSENCE_TIME     NUMBER:=0;
   L_MASTER_PK            NUMBER;
   L_WORK_TIME            NUMBER;
   L_START_DT             VARCHAR2 (8);
   L_END_DT               VARCHAR2 (8);
   L_ABSENCE_TYPE_REG     VARCHAR2 (30);
   L_COUNT_CLOSE          NUMBER;
   L_EXP                  EXCEPTION;
   L_EXP_WT               EXCEPTION;
   L_MONTH_CLOSE            VARCHAR2(1):='N';
   L_EXP_CLOSE            EXCEPTION;
   L_SHIFT_WT             NUMBER;
   L_CUR SYS_REFCURSOR;
   L_THR_ABSENCE_MODIFY_PK NUMBER;
BEGIN
   --l_absence_dt := TO_CHAR (TO_DATE (p_absence_dt, 'DD/MM/YYYY'), 'YYYYMMDD');
   L_ABSENCE_DT:=P_ABSENCE_DT;

OPEN L_CUR FOR SELECT 'Y' FROM THR_WG_SCH_DETAIL G 
WHERE G.DEL_IF=0 AND G.THR_EMP_PK=P_THR_EMP_PK AND G.WORK_DT=P_ABSENCE_DT 
AND (NVL(G.CLOSE_M_YN,'N')='Y' OR NVL(G.CLOSE_YN,'N')='Y') ;
FETCH   L_CUR INTO L_MONTH_CLOSE;
CLOSE L_CUR;
 

---------------------------
--check close month
  ---select sf_check_month_close(l_absence_dt,'01') into l_month_close from dual;
  IF L_MONTH_CLOSE='Y' THEN
--    raise l_exp_close;
        RETURN;
  END IF;
---------------------------
   SELECT (CASE WHEN NVL (A.NUM_1, 0) <= 0 THEN 'N'
              ELSE 'Y' END)
          , NVL (A.NUM_1, 0)
          ,(CASE WHEN NVL (A.NUM_2, 0) <= 0 THEN 'N'
              ELSE 'Y'
           END)
          , NVL (A.NUM_2, 0)
     INTO L_COMPANY_PAY_YN, L_COMPANY_PAY_RATE,
          L_INSURANCE_PAY_YN, L_INSURANCE_PAY_RATE
     FROM VHR_HR_CODE A
    WHERE A.ID = 'HR0003' AND CODE = P_ABSENCE_TYPE;

    IF P_THR_WS_PK IS NULL THEN
        L_SHIFT_WT:=8;
    ELSE
        SELECT (CASE WHEN NVL(S.WT,8)+NVL(S.WT_PLUS,0)>8 THEN 8
                ELSE NVL(S.WT,8)+NVL(S.WT_PLUS,0) END) INTO L_SHIFT_WT
        FROM THR_WORK_SHIFT S
        WHERE S.DEL_IF=0 AND S.PK=P_THR_WS_PK;
    END IF;

   --checking data of working time
   SELECT MAX (WORK_TIME)
     INTO L_WORK_TIME
     FROM THR_TIME_MACHINE
    WHERE DEL_IF = 0 AND WORK_DT = L_ABSENCE_DT AND THR_EMP_PK = P_THR_EMP_PK;

   IF NVL (L_WORK_TIME, 0) + NVL (P_ABSENCE_TIME, L_SHIFT_WT) > L_SHIFT_WT
   THEN
      RAISE L_EXP_WT;
   END IF;

   IF (P_ACTION = 'INSERT')
   THEN
      
                          
      INSERT INTO THR_ABSENCE
                  (PK, THR_EMP_PK, THR_WG_PK, THR_WS_PK, ABSENCE_DT,
                   ABSENCE_TIME, COMPANY_PAY_YN, COMPANY_PAY_RATE,
                   INSURANCE_PAY_YN, INSURANCE_PAY_RATE, REMARK, DEL_IF,
                   CRT_DT, CRT_BY, ABSENCE_TYPE,COMPANY_ALLOW)
         SELECT THR_ABSENCE_SEQ.NEXTVAL, P_THR_EMP_PK, P_THR_WG_PK,
                P_THR_WS_PK, L_ABSENCE_DT, NVL (P_ABSENCE_TIME, L_SHIFT_WT),
                L_COMPANY_PAY_YN, L_COMPANY_PAY_RATE, L_INSURANCE_PAY_YN,
                L_INSURANCE_PAY_RATE, P_REMARK, 0, SYSDATE, P_CRT_BY,
                P_ABSENCE_TYPE,DECODE(P_COMPANY_ALLOW,'0','N','Y')
           FROM DUAL
          WHERE P_THR_EMP_PK NOT IN (
                               SELECT THR_EMP_PK
                                 FROM THR_ABSENCE
                                WHERE DEL_IF = 0
                                      AND ABSENCE_DT = L_ABSENCE_DT);
   ELSIF (P_ACTION = 'UPDATE')
   THEN
      --check old absence type
      SELECT ABSENCE_TYPE,ABSENCE_TIME
        INTO L_OLD_ABSENCE_TYPE,L_OLD_ABSENCE_TIME
        FROM THR_ABSENCE
       WHERE DEL_IF = 0
         AND THR_EMP_PK = P_THR_EMP_PK
         AND ABSENCE_DT = L_ABSENCE_DT;

      SELECT A.THR_ABSENCE_REG_PK
        INTO L_MASTER_PK
        FROM THR_ABSENCE A
       WHERE DEL_IF = 0 AND PK = P_PK;
     
        
      IF L_MASTER_PK IS NOT NULL AND L_OLD_ABSENCE_TYPE <> P_ABSENCE_TYPE
      THEN
         --get start date and end date of registing absence
         SELECT START_DT, END_DT,
                (SELECT CODE_NM
                   FROM VHR_HR_CODE A
                  WHERE A.ID = 'HR0003' AND CODE = ABSENCE_TYPE)
           INTO L_START_DT, L_END_DT,
                L_ABSENCE_TYPE_REG
           FROM THR_ABSENCE_REG
          WHERE DEL_IF = 0 AND PK = L_MASTER_PK;

         RAISE L_EXP;                     --can't update detail of master here
      ELSE
         
            UPDATE THR_ABSENCE
               --lay gia tri company pay and insurance pay following new absence
            SET THR_WS_PK = P_THR_WS_PK,
                COMPANY_PAY_YN = L_COMPANY_PAY_YN,
                COMPANY_PAY_RATE = L_COMPANY_PAY_RATE,
                INSURANCE_PAY_YN = L_INSURANCE_PAY_YN,
                INSURANCE_PAY_RATE = L_INSURANCE_PAY_RATE,
                REMARK = P_REMARK,
                ABSENCE_TYPE = P_ABSENCE_TYPE,
                absence_time = NVL (p_absence_time, 8),
                COMPANY_ALLOW=DECODE(P_COMPANY_ALLOW,'0','N','Y'),
                MOD_DT = SYSDATE,
                MOD_BY = P_CRT_BY||'- FROM SHOFT ABS'
                
             WHERE DEL_IF = 0 AND PK = P_PK
             AND NVL(CLOSE_YN,'N')<>'Y' AND NVL(CLOSE_M_YN,'N')<>'Y'
             AND NVL(APPROVE_YN,'N')='N';
          
      END IF;
   ELSE --DELETE
   
      BEGIN 
            
           INSERT INTO THR_ABSENCE_MODIFY A
           (A.PK,A.THR_EMP_PK,A.ABSENCE_DT,A.THR_WS_PK,DEL_IF,CRT_DT,CRT_BY
           ,A.ABSENCE_TIME,ABSENCE_TYPE,A.ABSENCE_TIME_O,ABSENCE_TYPE_O,REMARK
           )
           SELECT 
               THR_ABSENCE_MODIFY_SEQ.NEXTVAL,B.THR_EMP_PK,P_ABSENCE_DT,P_THR_WS_PK,0,SYSDATE,P_CRT_BY
               ,NULL,NULL,B.ABSENCE_TIME,B.ABSENCE_TYPE,'DELETE ABSENCE'
               FROM THR_ABSENCE B
               WHERE B.DEL_IF=0 AND B.ABSENCE_DT=P_ABSENCE_DT 
               AND B.THR_EMP_PK=P_THR_EMP_PK; 
      END;    
      UPDATE THR_ABSENCE
         SET DEL_IF = PK,
             MOD_BY = P_CRT_BY,
             MOD_DT = SYSDATE
       WHERE DEL_IF = 0 AND PK = P_PK
       AND NVL(CLOSE_YN,'N')<>'Y' AND NVL(CLOSE_M_YN,'N')<>'Y'
       AND ABSENCE_TYPE NOT IN ('04') 
       AND NVL(APPROVE_YN,'N')='N';
        
   END IF;
   --KIEM TRA DE INSERT VAO BANG THEO DOI
   IF P_ACTION IN ('INSERT','UPDATE') AND (NVL(P_ABSENCE_TIME,0) <> NVL(L_OLD_ABSENCE_TIME,0) OR NVL(P_ABSENCE_TYPE,' ') <> NVL(L_OLD_ABSENCE_TYPE,' ')) THEN
        SELECT THR_ABSENCE_MODIFY_SEQ.NEXTVAL INTO L_THR_ABSENCE_MODIFY_PK FROM DUAL;
        INSERT INTO THR_ABSENCE_MODIFY A
       (A.PK,A.THR_EMP_PK,A.ABSENCE_DT,A.THR_WS_PK,DEL_IF,CRT_DT,CRT_BY
       ,A.ABSENCE_TIME_O,ABSENCE_TYPE_O,A.ABSENCE_TIME,ABSENCE_TYPE
       )
       SELECT 
       L_THR_ABSENCE_MODIFY_PK,B.THR_EMP_PK,P_ABSENCE_DT,P_THR_WS_PK,0,SYSDATE,P_CRT_BY
       ,L_OLD_ABSENCE_TIME,L_OLD_ABSENCE_TYPE,B.ABSENCE_TIME,B.ABSENCE_TYPE
       FROM THR_EMPLOYEE A,THR_ABSENCE B
       WHERE A.DEL_IF=0 AND B.DEL_IF(+)=0 AND B.ABSENCE_DT(+)=P_ABSENCE_DT
       AND A.PK=B.THR_EMP_PK(+) AND A.PK=P_THR_EMP_PK; 
       
       UPDATE THR_ABSENCE A
       SET THR_ABSENCE_MODIFY_PK=L_THR_ABSENCE_MODIFY_PK
       WHERE A.DEL_IF=0 AND A.ABSENCE_DT=P_ABSENCE_DT
       AND A.THR_EMP_PK=P_THR_EMP_PK;
   END IF ;
EXCEPTION
   WHEN L_EXP
   THEN
      RAISE_APPLICATION_ERROR (-20018,
                                  'Employee ID is '
                               || P_EMP_ID
                               || ' and absence at '
                               || P_ABSENCE_DT
                               || ',belonged to long term absence between '
                               || TO_CHAR (TO_DATE (L_START_DT, 'yyyymmdd'),
                                           'dd/mm/yyyy'
                                          )
                               || ' and '
                               || TO_CHAR (TO_DATE (L_END_DT, 'yyyymmdd'),
                                           'dd/mm/yyyy'
                                          )
                               || ' with '
                               || L_ABSENCE_TYPE_REG
                               || ' reason.'
                              );
      ROLLBACK;
   WHEN L_EXP_WT
   THEN
      RAISE_APPLICATION_ERROR
            (-20018,
                'Employee ID is '
             || P_EMP_ID
             || ',absence at '
             || P_ABSENCE_DT
             || ', have working time and absence time  are larger than 8 hours!'
            );
      ROLLBACK;
   WHEN L_EXP_CLOSE
   THEN
      RAISE_APPLICATION_ERROR (-20019,
                                  'Employee ID is '
                               || P_EMP_ID
                               || ',absence at '
                               || P_ABSENCE_DT
                              );
      ROLLBACK;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01000_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01000_1 (
   p_action         VARCHAR,
   p_emp_id         VARCHAR,
   p_absence_type   VARCHAR,
   p_start_dt       VARCHAR,
   p_end_dt         VARCHAR,
   p_remark         VARCHAR,
   p_pk             VARCHAR,
   p_thr_emp_pk     VARCHAR,
   p_thr_wg_pk   VARCHAR,
   p_not_return_health_card VARCHAR,
   p_date_2     VARCHAR,
   p_crt_by         VARCHAR
)
IS
/****************************************************************NAME:       sp_work_shift
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/12/2008          1. Created this procedure.

******************************************************************************/
   l_company_pay_yn       VARCHAR2 (1);
   l_company_pay_rate     NUMBER;
   l_insurance_pay_yn     VARCHAR2 (1);
   l_insurance_pay_rate   NUMBER;
   l_old_start_dt         varchar2(8);
   l_old_end_dt           varchar2(8);
   l_master_pk            NUMBER;
   l_max_pk               NUMBER;
   l_work_time            NUMBER;
   l_count                NUMBER;
   l_thr_absence_reg_pk   NUMBER;
   l_start_dt             varchar2(8); --start date of p_pk
   l_end_dt             varchar2(8);--end date of p_pk
   l_exp_wt               EXCEPTION;
   l_exp_abs              EXCEPTION;
   l_exp_close            EXCEPTION;
   l_flag_exist           BOOLEAN;
   l_cur_rec              NUMBER;
   l_cur                  sys_refcursor;
   l_company_pk number:=0;
BEGIN
---------------------------
l_start_dt:=p_start_dt;
l_end_dt:=p_end_dt;
select e.tco_company_pk into l_company_pk  from thr_employee e where e.del_if=0 and e.del_if=0 and e.pk=p_thr_emp_pk;
--check close month
    if p_pk is not null then
        select start_dt,end_dt into l_start_dt,l_end_dt
        from thr_absence_reg
        where del_if=0 and pk=p_pk;
    end if;

    --checking salary close of start_dt
    OPEN l_cur FOR
         SELECT 1
           FROM thr_close t
          WHERE del_if = 0
            AND t.close_yn = 'Y'
            AND (   (p_start_dt BETWEEN t.from_dt AND t.to_dt and p_pk is null) --checking  about p_start_dt if insert action
            or    (l_start_dt BETWEEN t.from_dt AND t.to_dt and p_pk is not null and ( l_start_dt <> p_start_dt or p_action='DELETE' ))) --checking  about p_start_dt if update or delete  action
            and T.TCO_COMPANY_PK =l_company_pk;
            --AND t.ID = '01';
      FETCH l_cur
       INTO l_cur_rec;

      l_flag_exist := l_cur%FOUND;

      CLOSE l_cur;

      IF l_flag_exist
      THEN
         RAISE l_exp_close;
      END IF;
      --checking salary close of end_dt
    OPEN l_cur FOR
         SELECT 1
           FROM thr_close t
          WHERE del_if = 0
            AND t.close_yn = 'Y'
            AND (   (p_end_dt BETWEEN t.from_dt AND t.to_dt and p_pk is null) --checking  about p_end_dt if insert action
            or    (l_end_dt BETWEEN t.from_dt AND t.to_dt and p_pk is not null and (l_end_dt <> p_end_dt or p_action='DELETE')) ) --checking  about p_end_dt if update or delete  action
            and T.TCO_COMPANY_PK= l_company_pk;
      FETCH l_cur
       INTO l_cur_rec;

      l_flag_exist := l_cur%FOUND;

      CLOSE l_cur;

      IF l_flag_exist
      THEN
         RAISE l_exp_close;
      END IF;
   ---------------------------
   SELECT (CASE
              WHEN NVL (a.num_1, 0) <= 0
                 THEN 'N'
              ELSE 'Y'
           END), NVL (a.num_1, 0),
          (CASE
              WHEN NVL (a.num_2, 0) <= 0
                 THEN 'N'
              ELSE 'Y'
           END
          ), NVL (a.num_2, 0)
     INTO l_company_pay_yn, l_company_pay_rate,
          l_insurance_pay_yn, l_insurance_pay_rate
     FROM vhr_hr_code a
    WHERE a.ID = 'HR0003' AND code = p_absence_type;

   IF (p_action <> 'DELETE')
   THEN
      --checking absence in thr_absence_reg table
      SELECT MAX (pk)
        INTO l_max_pk
        FROM thr_absence_reg
       WHERE del_if = 0
         AND thr_emp_pk = p_thr_emp_pk
         AND start_dt <= p_end_dt
         AND end_dt >= p_start_dt
         AND ROWNUM <= 1
         AND (pk <> p_pk OR p_pk IS NULL);

      IF l_max_pk > 0
      THEN                                                   --already regiter
         SELECT start_dt, end_dt
           INTO l_old_start_dt, l_old_end_dt
           FROM thr_absence_reg
          WHERE del_if = 0 AND pk = l_max_pk;

         RAISE l_exp_abs;
      END IF;

      --checking working time in thr_time_machine table
      SELECT sum (nvl(work_time,0))
        INTO l_count
        FROM thr_time_machine
       WHERE del_if = 0
         AND thr_emp_pk = p_thr_emp_pk
         AND work_dt BETWEEN p_start_dt AND p_end_dt
         AND ROWNUM <= 1;

      IF l_count > 0
      THEN                                                 --have working time
         RAISE l_exp_wt;
      END IF;
   END IF;

   IF (p_action = 'INSERT')
   THEN
      --checking salary close
      OPEN l_cur FOR
         SELECT 1
           FROM thr_close t
          WHERE del_if = 0
            AND t.close_yn = 'Y'
            AND (   p_start_dt BETWEEN t.from_dt AND t.to_dt
                 OR p_end_dt BETWEEN t.from_dt AND t.to_dt
                )
            and T.TCO_COMPANY_PK = l_company_pk;

      FETCH l_cur
       INTO l_cur_rec;

      l_flag_exist := l_cur%FOUND;

      CLOSE l_cur;

      IF l_flag_exist
      THEN
         RAISE l_exp_close;
      END IF;

      --delete detail absence
      UPDATE thr_absence
         SET del_if = pk,
             mod_by = p_crt_by||'- MODIFY FROM REG LONG TIME ABS1',
             mod_dt = SYSDATE
       WHERE del_if = 0
         AND absence_dt BETWEEN l_start_dt AND l_end_dt
         AND thr_emp_pk = p_thr_emp_pk;


      --insert master absence
      SELECT thr_absence_reg_seq.NEXTVAL
        INTO l_thr_absence_reg_pk
        FROM DUAL;

      INSERT INTO thr_absence_reg
                  (pk, thr_emp_pk, thr_wg_pk, start_dt, end_dt, remark,
                   del_if, crt_dt, crt_by, absence_type,not_return_health_card,date_2)
         SELECT l_thr_absence_reg_pk, p_thr_emp_pk, p_thr_wg_pk,
                p_start_dt, p_end_dt, p_remark, 0, SYSDATE, p_crt_by,
                p_absence_type,decode(p_not_return_health_card,-1,'Y','N'),p_date_2
           FROM DUAL;

      --insert detail absence
      INSERT INTO thr_absence
                  (pk, thr_emp_pk, thr_wg_pk, absence_dt, absence_time,
                   company_pay_yn, company_pay_rate, insurance_pay_yn,
                   insurance_pay_rate, remark, del_if, crt_dt, crt_by,
                   absence_type, thr_absence_reg_pk)
         SELECT thr_absence_seq.NEXTVAL, p_thr_emp_pk, p_thr_wg_pk,
                car_date, 8, l_company_pay_yn, l_company_pay_rate,
                l_insurance_pay_yn, l_insurance_pay_rate, p_remark, 0,
                SYSDATE, p_crt_by||'- MODIFY FROM REG LONG TIME ABS2', p_absence_type, l_thr_absence_reg_pk
           FROM thr_calendar
          WHERE del_if = 0 AND car_date BETWEEN p_start_dt AND p_end_dt and nvl(TCO_COMPANY_PK,l_company_pk) = l_company_pk
          AND (NVL(l_company_pay_yn,'N')='N' OR (NVL(l_company_pay_yn,'N')='Y' AND DAY_TYPE<>'1'))
          AND p_thr_emp_pk NOT IN(SELECT THR_EMP_PK FROM THR_ABSENCE A WHERE A.DEL_IF=0 AND A.ABSENCE_DT=CAR_DATE);

   ELSIF (p_action = 'UPDATE')
   THEN
      --delete detail absence
      UPDATE thr_absence
         SET del_if = pk,
             mod_by = p_crt_by||'- MODIFY FROM REG LONG TIME ABS3',
             mod_dt = SYSDATE
       WHERE del_if = 0
         AND absence_dt BETWEEN l_start_dt AND l_end_dt
         AND thr_emp_pk = p_thr_emp_pk;


      UPDATE thr_absence_reg
         SET start_dt = p_start_dt,
             end_dt = p_end_dt,
             remark = p_remark,
             mod_dt = SYSDATE,
             mod_by = p_crt_by,
             not_return_health_card=decode(p_not_return_health_card,-1,'Y','N'),
             absence_type = p_absence_type,
             date_2=p_date_2
       WHERE del_if = 0 AND pk = p_pk;


      --insert detail absence
      INSERT INTO thr_absence
                  (pk, thr_emp_pk, thr_wg_pk, absence_dt, absence_time,
                   company_pay_yn, company_pay_rate, insurance_pay_yn,
                   insurance_pay_rate, remark, del_if, crt_dt, crt_by,
                   absence_type, thr_absence_reg_pk)
         SELECT thr_absence_seq.NEXTVAL, p_thr_emp_pk, p_thr_wg_pk,
                car_date, 8, l_company_pay_yn, l_company_pay_rate,
                l_insurance_pay_yn, l_insurance_pay_rate, p_remark, 0,
                SYSDATE, p_crt_by||'- MODIFY FROM REG LONG TIME ABS4', p_absence_type, p_pk
           FROM thr_calendar
          WHERE del_if = 0 AND car_date BETWEEN p_start_dt AND p_end_dt and nvl(TCO_COMPANY_PK,l_company_pk) = l_company_pk
            AND (NVL(l_company_pay_yn,'N')='N' OR (NVL(l_company_pay_yn,'N')='Y' AND DAY_TYPE<>'1'))
          AND p_thr_emp_pk NOT IN(SELECT THR_EMP_PK FROM THR_ABSENCE A WHERE A.DEL_IF=0 AND A.ABSENCE_DT=CAR_DATE
          and a.thr_emp_pk=p_thr_emp_pk);


      update thr_absence
      set close_yn='Y'
      where del_if=0 and thr_absence_reg_pk=p_pk
      and absence_dt in(select car_date from thr_calendar a,thr_close b
                        where a.del_if = 0 AND a.car_date BETWEEN p_start_dt AND p_end_dt and nvl(a.TCO_COMPANY_PK,l_company_pk) = l_company_pk
                        and b.del_if=0 and a.CAR_DATE between b.from_dt and b.to_dt and b.close_yn='Y');

   ELSE
      UPDATE thr_absence_reg
         SET del_if = pk,
             mod_by = p_crt_by,
             mod_dt = SYSDATE
       WHERE del_if = 0 AND pk = p_pk;

      --delete detail absence
      UPDATE thr_absence
         SET del_if = pk,
             mod_by = p_crt_by||'- MODIFY FROM REG LONG TIME ABS5',
             mod_dt = SYSDATE
       WHERE del_if = 0 AND thr_absence_reg_pk = p_pk;
   END IF;
EXCEPTION
   WHEN l_exp_abs
   THEN
      raise_application_error (-20020,
                                  'Employee ID is '
                               || p_emp_id
                               || ' had registered between '
                               || TO_CHAR (TO_DATE (l_old_start_dt,
                                                    'yyyymmdd'),
                                           'dd/mm/yyyy'
                                          )
                               || ' and '
                               || TO_CHAR (TO_DATE (l_old_end_dt, 'yyyymmdd'),
                                           'dd/mm/yyyy'
                                          )
                              );
      ROLLBACK;
   WHEN l_exp_wt
   THEN
      raise_application_error (-20021,
                                  'Employee ID is '
                               || p_emp_id
                               || ', have working time between '
                               || TO_CHAR (TO_DATE (p_start_dt, 'yyyymmdd'),
                                           'dd/mm/yyyy'
                                          )
                               || ' and '
                               || TO_CHAR (TO_DATE (p_end_dt, 'yyyymmdd'),
                                           'dd/mm/yyyy'
                                          )
                              );
      ROLLBACK;
   WHEN l_exp_close
   THEN
      raise_application_error (-20019,
                                  'data in month is closed '
                               || TO_CHAR (TO_DATE (l_start_dt,
                                                    'yyyymmdd'),
                                           'dd/mm/yyyy'
                                          )
                               || ' and '
                               || TO_CHAR (TO_DATE (l_end_dt, 'yyyymmdd'),
                                           'dd/mm/yyyy'
                                          )
                              );
      ROLLBACK;
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      RAISE;
END;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01000_2;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_upd_hrti01000_2 (
   p_action     varchar2,
   P_NO varchar2,
   p_thr_absence_pk varchar2,
   p_thr_emp_pk varchar2, 
   p_org_name varchar2,
   p_employee_id varchar2,
   p_employee_name varchar2,
   p_absence_date varchar2,
   p_start_hours varchar2,
   p_end_hours varchar2,
   p_hours      number,
   p_absence_type varchar2,
   p_reg_type varchar2,
   p_description varchar2,
   p_sequence   varchar2,
   p_crt_by varchar2

) 
is
   l_error     varchar2(2);
   l_thr_wg_pk number;
   l_check_from     number;
   l_check_to     number;
   l_abs_date  number;
   l_com_rate  number;
   l_ins_rate  number;
   l_absence_period_pk number;
   l_hours     number;
   l_total_hours  number;
   l_thr_abs_reg_pk number:=0;
   l_check_upd  number;
   
   l_thr_abs_period_pk number;
   l_work_dt    varchar2(8);
   l_from_dt    varchar2(8);
   l_to_dt      varchar2(8);
   l_count1      number;
   l_count2      number;
begin


    
 if p_action <> 'DELETE' then
    --VALIDATE TRUOC KHI XU LY DU LIEU
    if p_absence_type is null then 
        raise_application_error(-20019, 'VUI LÒNG NHẬP LOẠI VẮNG TẠI DÒNG NHÂN VIÊN - '||p_employee_id);
    end if;
    
    if nvl(p_hours, 0) = 0  then 
        raise_application_error(-20019, 'VUI LÒNG NHẬP SỐ GIỜ NGHỈ TRONG NGÀY CỦA NHÂN VIÊN - '||p_employee_id);
    end if;
    
--     if nvl(p_hours, 0) > nvl(p_shift_time, 0)  then 
--        raise_application_error(-20019, 'SỐ GIỜ NGHỈ KHÔNG THỂ LỚN HƠN SỐ GIỜ CA LÀM VIỆC CỦA NHÂN VIÊN - '||p_employee_id);
--    end if;
        
    select max(v.num_1), max(v.num_2)
    into l_com_rate, l_ins_rate 
    from vhr_hr_code v
    where v.id='HR0003' and v.code = p_absence_type;
    
--    IF p_start_hours IS NOT NULL AND p_end_hours IS NOT NULL THEN
--    
--        l_hours:= (TO_DATE(p_end_hours, 'HH24:MI') -  TO_DATE(p_start_hours, 'HH24:MI'))*24 
--                        - CASE WHEN TO_DATE(p_end_hours, 'HH24:MI') > TO_DATE('12:30', 'HH24:MI') 
--                                AND TO_DATE(p_start_hours, 'HH24:MI') < TO_DATE('11:30', 'HH24:MI')  
--                                THEN 1 ELSE 0 END;
--    ELSE
--        l_hours:= 8;
--    END IF;

     select max(e.thr_wg_pk) into l_thr_wg_pk 
            from thr_employee e 
        where e.pk = p_thr_emp_pk and del_if = 0;

 end if;

 if p_action <> 'INSERT' then
    select max(a.pk), max(a.work_dt)  into l_thr_abs_period_pk, l_work_dt 
        from thr_work_date a
        where a.del_if=0
        and a.thr_absence_pk = p_thr_absence_pk;
        
    if l_thr_abs_period_pk is not null then
        raise_application_error(-20019, 'ĐÃ TỒN TẠI KIỂU VẮNG VỚI NHÂN VIÊN NÀY TẠI CHẤM CÔNG - NGÀY '||to_char(to_date(l_work_dt, 'yyyymmdd'),'dd/mm/yyyy'));
    end if;
 end if;

            
    if p_action = 'UPDATE'
    then                                 
--       l_check_upd:= 1;                                    
            if p_reg_type = 1 then -- DAI HAN                                                  
                    update thr_absence a
                set     
                       A.ABSENCE_TYPE = p_absence_type
                      , A.START_TIME = p_start_hours
                      , A.END_TIME = p_end_hours
                      , A.DESCRIPTION = p_description
                      , A.SEQUENCE_DT = p_sequence
                      , a.mod_by = p_crt_by
                      , a.mod_dt = sysdate
                      , a.remark = 'USER UPDATE DATA'
                      where a.del_if = 0
                      and a.pk = p_thr_absence_pk
                      and a.absence_dt = p_absence_date ;                
                
            end if;
           
         
                           
    elsif p_action = 'DELETE'
    then
        
       
         
        update thr_absence a
        set A.DEL_IF = a.pk
        , A.MOD_BY = p_crt_by
        , A.MOD_DT = sysdate
        , A.REMARK = 'DELETE FROM ABSENCE ENTRY'
        where a.del_if=0
        and a.pk = p_thr_absence_pk;
        
       
        
    end if;
    
      
EXCEPTION
    
    WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20002,SQLERRM);
      ROLLBACK WORK;
end ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01000_3;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_upd_hrti01000_3 (
   p_action     varchar2,
   P_NO varchar2,
   p_thr_absence_pk varchar2,
   p_thr_emp_pk varchar2, 
   p_org_name varchar2,
   p_employee_id varchar2,
   p_employee_name varchar2,
   p_absence_date varchar2,
   p_start_hours varchar2,
   p_end_hours varchar2,
   p_hours      number,
   p_absence_type varchar2,
   p_reg_type varchar2,
   p_description varchar2,
   p_sequence   varchar2,
   p_crt_by varchar2

) 
is
   l_error     varchar2(2);
   l_thr_wg_pk number;
   l_check_from     number;
   l_check_to     number;
   l_abs_date  number;
   l_com_rate  number;
   l_ins_rate  number;
   l_absence_period_pk number;
   l_hours     number;
   l_total_hours  number;
   l_thr_abs_reg_pk number:=0;
   l_check_upd  number;
   
   l_thr_abs_period_pk number;
   l_work_dt    varchar2(8);
   l_from_dt    varchar2(8);
   l_to_dt      varchar2(8);
   l_count1      number;
   l_count2      number;
begin


    
 if p_action <> 'DELETE' then
    --VALIDATE TRUOC KHI XU LY DU LIEU
    if p_absence_type is null then 
        raise_application_error(-20019, 'VUI LÒNG NHẬP LOẠI VẮNG TẠI DÒNG NHÂN VIÊN - '||p_employee_id);
    end if;
    
    if nvl(p_hours, 0) = 0  then 
        raise_application_error(-20019, 'VUI LÒNG NHẬP SỐ GIỜ NGHỈ TRONG NGÀY CỦA NHÂN VIÊN - '||p_employee_id);
    end if;
    
--     if nvl(p_hours, 0) > nvl(p_shift_time, 0)  then 
--        raise_application_error(-20019, 'SỐ GIỜ NGHỈ KHÔNG THỂ LỚN HƠN SỐ GIỜ CA LÀM VIỆC CỦA NHÂN VIÊN - '||p_employee_id);
--    end if;
        
    select max(v.num_1), max(v.num_2)
    into l_com_rate, l_ins_rate 
    from vhr_hr_code v
    where v.id='HR0003' and v.code = p_absence_type;
    
--    IF p_start_hours IS NOT NULL AND p_end_hours IS NOT NULL THEN
--    
--        l_hours:= (TO_DATE(p_end_hours, 'HH24:MI') -  TO_DATE(p_start_hours, 'HH24:MI'))*24 
--                        - CASE WHEN TO_DATE(p_end_hours, 'HH24:MI') > TO_DATE('12:30', 'HH24:MI') 
--                                AND TO_DATE(p_start_hours, 'HH24:MI') < TO_DATE('11:30', 'HH24:MI')  
--                                THEN 1 ELSE 0 END;
--    ELSE
--        l_hours:= 8;
--    END IF;

     select max(e.thr_wg_pk) into l_thr_wg_pk 
            from thr_employee e 
        where e.pk = p_thr_emp_pk and del_if = 0;

 end if;

 if p_action <> 'INSERT' then
    select max(a.pk), max(a.work_dt)  into l_thr_abs_period_pk, l_work_dt 
        from thr_work_date a
        where a.del_if=0
        and a.thr_absence_pk = p_thr_absence_pk;
        
    if l_thr_abs_period_pk is not null then
        raise_application_error(-20019, 'ĐÃ TỒN TẠI KIỂU VẮNG VỚI NHÂN VIÊN NÀY TẠI CHẤM CÔNG - NGÀY '||to_char(to_date(l_work_dt, 'yyyymmdd'),'dd/mm/yyyy'));
    end if;
 end if;

            
    if p_action = 'UPDATE'
    then                                 
--       l_check_upd:= 1;                                    
            if p_reg_type = 1 then -- DAI HAN                                                  
                    update thr_absence a
                set     
                       A.ABSENCE_TYPE = p_absence_type
                      , A.START_TIME = p_start_hours
                      , A.END_TIME = p_end_hours
                      , A.DESCRIPTION = p_description
                      , A.SEQUENCE_DT = p_sequence
                      , a.mod_by = p_crt_by
                      , a.mod_dt = sysdate
                      , a.remark = 'USER UPDATE DATA'
                      where a.del_if = 0
                      and a.pk = p_thr_absence_pk
                      and a.absence_dt = p_absence_date ;                
                
            end if;
           
         
                           
    elsif p_action = 'DELETE'
    then
        
       
         
        update thr_absence a
        set A.DEL_IF = a.pk
        , A.MOD_BY = p_crt_by
        , A.MOD_DT = sysdate
        , A.REMARK = 'DELETE FROM ABSENCE ENTRY'
        where a.del_if=0
        and a.pk = p_thr_absence_pk;
        
       
        
    end if;
    
      
EXCEPTION
    
    WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20002,SQLERRM);
      ROLLBACK WORK;
end ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01000_4;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_upd_hrti01000_4 (
   p_action     varchar2,
   p_thr_absence_reg_pk varchar2,
   p_thr_emp_pk varchar2,
   p_from_date varchar2,
   p_to_date varchar2,
   p_absence_type varchar2,
   p_description varchar2,
   p_sequence   varchar2,
   p_crt_by varchar2

) 
is
   l_error     varchar2(2);
   l_thr_wg_pk number;
   l_check_from     number;
   l_check_to     number;
   l_abs_date  number;
   l_com_rate  number;
   l_ins_rate  number;
   l_absence_period_pk number;
   l_hours     number;
   l_total_hours  number;
   l_thr_abs_reg_pk number:=0;
   l_check_upd  number;
   
   l_absence_type number;
   l_work_dt    varchar2(10);
   l_dt_new      number;
   l_dt_old      number;
   l_count1      number;
   l_count2      number;
begin


    
 if p_action <> 'DELETE' then
    --VALIDATE TRUOC KHI XU LY DU LIEU
    if p_absence_type is null then 
        raise_application_error(-20019, 'VUI LÒNG NH?P LO?I V?NG T?I DÒNG NHÂN VIÊN - ');
    end if;
    
    if p_from_date is null then 
        raise_application_error(-20019, 'VUI LÒNG NH?P NGÀY B?T Ð?U T?I DÒNG MÃ NHÂN VIÊN - ');
    end if;
    
    if p_to_date is null then 
        raise_application_error(-20019, 'VUI LÒNG NH?P NGÀY K?T THÚC T?I DÒNG MÃ NHÂN VIÊN - ');
    end if;
    
    if p_to_date < p_from_date  then 
        raise_application_error(-20019, 'NGÀY K?T PH?I L?N HON HO?C B?NG NGÀY B?T Ð?U T?I DÒNG MÃ NHÂN VIÊN - ');
    end if;
    
    if p_from_date is null  then 
        raise_application_error(-20019, 'VUI LÒNG NH?P NGÀY B?T Ð?U T?I DÒNG MÃ NHÂN VIÊN - ');
    end if;
    
    if p_to_date is null  then 
        raise_application_error(-20019, 'VUI LÒNG NH?P NGÀY K?T THÚC T?I DÒNG MÃ NHÂN VIÊN - ');
    end if;
    

    
--     if nvl(p_hours, 0) > nvl(p_shift_time, 0)  then 
--        raise_application_error(-20019, 'S? GI? NGH? KHÔNG TH? L?N HON S? GI? CA LÀM VI?C C?A NHÂN VIÊN - ');
--    end if;

    select max(a.pk) into l_check_from 
    from thr_absence_period a
    where a.del_if=0
    and p_from_date between a.start_dt and a.end_dt
    and a.thr_emp_pk = p_thr_emp_pk
    and nvl(a.pk, 0) <>  nvl(p_thr_absence_reg_pk, 0);
    
    select max(a.pk) into l_check_to
    from thr_absence_period a
    where a.del_if=0
    and  p_to_date between a.start_dt and a.end_dt
    and a.thr_emp_pk = p_thr_emp_pk
    and nvl(a.pk, 0) <>  nvl(p_thr_absence_reg_pk, 0);
    
    if l_check_from is not null then
        raise_application_error(-20019, 'NGÀY '|| to_char(to_date(p_from_date, 'yyyymmdd'), 'dd/mm/yyyy') || ' B? VI PH?M D? LI?U');
    end if;
    
    if l_check_to is not null then
        raise_application_error(-20019, 'NGÀY '|| to_char(to_date(p_to_date, 'yyyymmdd'), 'dd/mm/yyyy') || ' B? VI PH?M D? LI?U');
    end if;
    
    
     
        
    select max(v.num_1), max(v.num_2)
    into l_com_rate, l_ins_rate 
    from vhr_hr_code v
    where v.id='HR0003' and v.code = p_absence_type;
    
--    IF p_start_hours IS NOT NULL AND p_end_hours IS NOT NULL THEN
--    
--        l_hours:= (TO_DATE(p_end_hours, 'HH24:MI') -  TO_DATE(p_start_hours, 'HH24:MI'))*24 
--                        - CASE WHEN TO_DATE(p_end_hours, 'HH24:MI') > TO_DATE('12:30', 'HH24:MI') 
--                                AND TO_DATE(p_start_hours, 'HH24:MI') < TO_DATE('11:30', 'HH24:MI')  
--                                THEN 1 ELSE 0 END;
--    ELSE
--        l_hours:= 8;
--    END IF;

     select max(e.thr_wg_pk) into l_thr_wg_pk 
            from thr_employee e 
        where e.pk = p_thr_emp_pk and del_if = 0;

 end if;

-- if p_action <> 'INSERT' then
--    select max(a.pk), max(a.work_dt)  into l_thr_abs_period_pk, l_work_dt 
--        from thr_work_date a
--        where a.del_if=0
--        and a.pk = p_thr_absence_reg_pk;
--        
--    if l_thr_abs_period_pk is not null then
--        raise_application_error(-20019, 'ÐÃ T?N T?I KI?U V?NG V?I NHÂN VIÊN NÀY T?I CH?M CÔNG - NGÀY '||to_char(to_date(l_work_dt, 'yyyymmdd'),'dd/mm/yyyy'));
--    end if;
-- end if;
                
    if p_action = 'UPDATE'
    then                            
--       l_check_upd:= 1;
--         if l_check_upd is not null then-- CO UPDATE
         select count(a.work_dt) into l_count1 from thr_work_date a where a.del_if = 0 and a.work_dt between p_from_date and p_to_date and a.thr_emp_pk = p_thr_emp_pk;
        
        select round(to_date(p_to_date,'yyyymmdd') - to_date(p_from_date,'yyyymmdd') + 1) into l_count2 from dual;
        
--        if l_count1 <> l_count2 then
--            raise_application_error(-20009,'CHƯA CÓ LỊCH LÀM VIỆC ĐẦY ĐỦ. VUI LÒNG KIỂM TRA LẠI');
--        end if;
        select to_number(R.ABSENCE_TYPE ) into l_absence_type from thr_absence_reg r where r.del_if = 0 and r.pk = p_thr_absence_reg_pk;
        select round(to_date(R.END_DT,'yyyymmdd')-to_date(R.START_DT,'yyyymmdd')+1) into l_dt_old from thr_absence_reg r where r.del_if =0 and R.THR_EMP_PK = p_thr_emp_pk and R.pk = p_thr_absence_reg_pk;              
        select round(to_date(p_to_date,'yyyymmdd')-to_date(p_from_date,'yyyymmdd')+1) into l_dt_new from dual;
--        raise_application_error(-20009,to_number(p_absence_type));
       
         if (l_dt_old <> l_dt_new) or (l_absence_type<>to_number(p_absence_type)) then
                                                                   
                    update thr_absence_reg a
                       set a.del_if = a.pk 
                       , a.mod_by = p_crt_by
                       , a.mod_dt = sysdate
                       , a.remark = 'DELETE BY USER UPDATE DATA' 
                       where a.del_if=0
                       and a.pk = p_thr_absence_reg_pk;
                                             
                   update thr_absence a
                       set a.del_if = a.pk 
                       , a.mod_by = p_crt_by
                       , a.mod_dt = sysdate
                       , a.remark = 'DELETE BY USER UPDATE DATA' 
                       where a.del_if=0
                       and A.THR_ABSENCE_REG_PK = p_thr_absence_reg_pk;
                
                    select thr_absence_reg_seq.nextval into l_thr_abs_reg_pk from dual;
                    select A.THR_WG_PK into l_thr_wg_pk  from thr_employee a where a.del_if = 0 and a.pk = p_thr_emp_pk;
                                        
                    insert into thr_absence_reg(pk, thr_emp_pk, thr_wg_pk, absence_type, start_dt, end_dt
                                                , del_if, crt_by, crt_dt, remark,description)
                    values (l_thr_abs_reg_pk,  p_thr_emp_pk, l_thr_wg_pk, p_absence_type, p_from_date, p_to_date
                                            , 0, p_crt_by, sysdate, 'AUTO INSERT FROM ABSENCE ENTRY',p_description);
                                                                                    
                    insert into thr_absence(pk, thr_absence_reg_pk, thr_emp_pk, thr_wg_pk, thr_ws_pk, absence_type
                                 , company_pay_yn, company_pay_rate, insurance_pay_yn, insurance_pay_rate
                                 , absence_dt, del_if, crt_dt, crt_by, remark, description)  
                        select thr_absence_seq.nextval, nullif(l_thr_abs_reg_pk, 0), e.pk, e.thr_wg_pk, null, p_absence_type
                                        , decode(nvl(l_com_rate, 0), 0, 'N', 'Y') , l_com_rate, decode(nvl(l_ins_rate, 0), 0, 'N', 'Y') , l_ins_rate
                                        ,d.car_date, 0, sysdate, p_crt_by, 'AUTO INSERT FROM ABSENCE ENTRY', p_description
                        from thr_employee e, thr_calendar d
                        where e.del_if=0 and d.del_if=0
                        and d.tco_company_pk = 99
                        and d.car_date between p_from_date and p_to_date
        --            AND D.HOL_TYPE IS NULL
                        and e.pk = p_thr_emp_pk;
        else
            --raise_application_error(-20009,'test');
                    update thr_absence_reg a
                    set A.DESCRIPTION = p_description
--                        A.ABSENCE_TYPE = p_absence_type
                    where a.del_if = 0
                        and A.pk = p_thr_absence_reg_pk
                        and A.THR_EMP_PK = p_thr_emp_pk;
            
        
        end if;
                              
           update thr_work_date a
            set a.absence_type = null
               ,a.absence_time = null
               ,a.absence_pay_rate = null
               ,a.absence_pay_yn = null
               ,a.abs_long_yn = null
            where a.del_if=0
            and a.thr_emp_pk = p_thr_emp_pk
            and a.work_dt between p_from_date and p_to_date
            and a.hol_type is null
            and a.thr_absence_pk = p_thr_absence_reg_pk;
           
           update thr_work_date a
            set a.absence_type = p_absence_type
               ,a.absence_pay_rate = l_com_rate
               ,a.absence_pay_yn = decode(nvl(l_com_rate, 0), 0, 'N', 'Y')
               ,a.abs_long_yn = 'Y'
               ,a.mod_by_abs = p_crt_by
               ,a.mod_dt_abs = sysdate
               ,a.remark_abs = 'MOD BY FROM HR.2.10'
            where a.del_if=0
            and a.thr_emp_pk = p_thr_emp_pk
            and a.work_dt between p_from_date and p_to_date
            and a.hol_type is null;
           
--        end if; 
        
        
    elsif p_action = 'DELETE'
    then
                    
        update thr_absence_reg  A
        set A.DEL_IF = a.pk
        , A.MOD_BY = p_crt_by
        , A.MOD_DT = sysdate
        , A.REMARK = 'DELETE FROM ABSENCE ENTRY'
        where a.del_if=0
        and a.pk = p_thr_absence_reg_pk; 
         
        update thr_absence a
        set A.DEL_IF = a.pk
        , A.MOD_BY = p_crt_by
        , A.MOD_DT = sysdate
        , A.REMARK = 'DELETE FROM ABSENCE ENTRY'
        where a.del_if=0
        and A.THR_ABSENCE_REG_PK = p_thr_absence_reg_pk;
        
        
        
    end if;
    
      
--EXCEPTION
--    
--    WHEN OTHERS THEN
--      RAISE_APPLICATION_ERROR(-20002,SQLERRM);
--      ROLLBACK WORK;
end ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01000_5;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_upd_hrti01000_5 (
   p_action     varchar2,
   P_NO varchar2,
   p_thr_absence_pk varchar2,
   p_thr_emp_pk varchar2, 
   p_org_name varchar2,
   p_employee_id varchar2,
   p_employee_name varchar2,
   p_absence_date varchar2,
   p_start_hours varchar2,
   p_end_hours varchar2,
   p_hours      number,
   p_absence_type varchar2,
   p_reg_type varchar2,
   p_description varchar2,
   p_sequence   varchar2,
   p_crt_by varchar2

) 
is
   l_error     varchar2(2);
   l_thr_wg_pk number;
   l_check_from     number;
   l_check_to     number;
   l_abs_date  number;
   l_com_rate  number;
   l_ins_rate  number;
   l_absence_period_pk number;
   l_hours     number;
   l_total_hours  number;
   l_thr_abs_reg_pk number:=0;
   l_check_upd  number;
   
   l_thr_abs_period_pk number;
   l_work_dt    varchar2(8);
   l_from_dt    varchar2(8);
   l_to_dt      varchar2(8);
   l_count1      number;
   l_count2      number;
begin


    
 if p_action <> 'DELETE' then
    --VALIDATE TRUOC KHI XU LY DU LIEU
    if p_absence_type is null then 
        raise_application_error(-20019, 'VUI LÒNG NHẬP LOẠI VẮNG TẠI DÒNG NHÂN VIÊN - '||p_employee_id);
    end if;
    
    if nvl(p_hours, 0) = 0  then 
        raise_application_error(-20019, 'VUI LÒNG NHẬP SỐ GIỜ NGHỈ TRONG NGÀY CỦA NHÂN VIÊN - '||p_employee_id);
    end if;
    
--     if nvl(p_hours, 0) > nvl(p_shift_time, 0)  then 
--        raise_application_error(-20019, 'SỐ GIỜ NGHỈ KHÔNG THỂ LỚN HƠN SỐ GIỜ CA LÀM VIỆC CỦA NHÂN VIÊN - '||p_employee_id);
--    end if;
        
    select max(v.num_1), max(v.num_2)
    into l_com_rate, l_ins_rate 
    from vhr_hr_code v
    where v.id='HR0003' and v.code = p_absence_type;
    
--    IF p_start_hours IS NOT NULL AND p_end_hours IS NOT NULL THEN
--    
--        l_hours:= (TO_DATE(p_end_hours, 'HH24:MI') -  TO_DATE(p_start_hours, 'HH24:MI'))*24 
--                        - CASE WHEN TO_DATE(p_end_hours, 'HH24:MI') > TO_DATE('12:30', 'HH24:MI') 
--                                AND TO_DATE(p_start_hours, 'HH24:MI') < TO_DATE('11:30', 'HH24:MI')  
--                                THEN 1 ELSE 0 END;
--    ELSE
--        l_hours:= 8;
--    END IF;

     select max(e.thr_wg_pk) into l_thr_wg_pk 
            from thr_employee e 
        where e.pk = p_thr_emp_pk and del_if = 0;

 end if;

 if p_action <> 'INSERT' then
    select max(a.pk), max(a.work_dt)  into l_thr_abs_period_pk, l_work_dt 
        from thr_work_date a
        where a.del_if=0
        and a.thr_absence_pk = p_thr_absence_pk;
        
    if l_thr_abs_period_pk is not null then
        raise_application_error(-20019, 'ĐÃ TỒN TẠI KIỂU VẮNG VỚI NHÂN VIÊN NÀY TẠI CHẤM CÔNG - NGÀY '||to_char(to_date(l_work_dt, 'yyyymmdd'),'dd/mm/yyyy'));
    end if;
 end if;

            
    if p_action = 'UPDATE'
    then                                 
--       l_check_upd:= 1;                                    
            if p_reg_type = 1 then -- DAI HAN                                                  
                    update thr_absence a
                set     
                       A.ABSENCE_TYPE = p_absence_type
                      , A.START_TIME = p_start_hours
                      , A.END_TIME = p_end_hours
                      , A.DESCRIPTION = p_description
                      , A.SEQUENCE_DT = p_sequence
                      , a.mod_by = p_crt_by
                      , a.mod_dt = sysdate
                      , a.remark = 'USER UPDATE DATA'
                      where a.del_if = 0
                      and a.pk = p_thr_absence_pk
                      and a.absence_dt = p_absence_date ;                
                
            end if;
           
         
                           
    elsif p_action = 'DELETE'
    then
        
       
         
        update thr_absence a
        set A.DEL_IF = a.pk
        , A.MOD_BY = p_crt_by
        , A.MOD_DT = sysdate
        , A.REMARK = 'DELETE FROM ABSENCE ENTRY'
        where a.del_if=0
        and a.pk = p_thr_absence_pk;
        
       
        
    end if;
    
      
EXCEPTION
    
    WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20002,SQLERRM);
      ROLLBACK WORK;
end ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01004_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_upd_hrti01004_0 (
   p_action              varchar,
   p_thr_emp_pk          number,      
   p_from_date           varchar2, 
   p_to_date             varchar2,
   p_start_hours         varchar2,  
   p_end_hours           varchar2,
   p_hours               varchar2,
   p_absence_type        varchar2,
   p_reg_type            varchar2, 
   p_description         varchar2,
   p_seq                 varchar2,  
   p_crt_by              varchar
)
is

    l_exp   exception;
    l_exp_larger exception;
     l_error     varchar2(2);
   l_thr_wg_pk number;
   l_check_from     number;
   l_check_to     number;
   l_abs_date  number;
   l_com_rate  number;
   l_ins_rate  number;
   l_absence_pk number;
   l_hours     number;
   l_total_hours  number;
   l_thr_abs_reg_pk number:=0;
   l_check_upd  number;
   
   l_thr_abs_period_pk number;
   l_work_dt    varchar2(8);
   l_from_dt    varchar2(8);
   l_to_dt      varchar2(8);
   l_count1      number;
   l_count2      number;
    
begin
   if p_action = 'INSERT' then
        l_from_dt := p_from_date;
        l_to_dt := p_to_date;   
  
        select max(a.absence_dt) into l_abs_date
        from thr_absence a
        where a.del_if=0
        and a.absence_dt between p_from_date and p_to_date
        and a.thr_emp_pk = p_thr_emp_pk;
        
       if l_abs_date is not null then
--            raise_application_error(-20009, 'ĐÃ CÓ DỮ LIỆU VẮNG NGÀY  '|| to_char(to_date(l_abs_date, 'yyyymmdd'), 'dd/mm/yyyy'));
             update thr_absence a
             set a.del_if= a.pk
                , a.mod_by = p_crt_by
                , a.mod_dt = sysdate
                , a.remark = 'DELETE BY IMPORT SHORT ABSENCE'
             where a.del_if=0
                and a.thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0
                                and e.pk = p_thr_emp_pk)
                and a.absence_dt between l_from_dt and l_to_dt;
      end if;
        
        for l_cur in (select a.car_date from thr_calendar a
                        where a.del_if=0
                        and A.TCO_COMPANY_PK =99
                        and a.car_date between p_from_date and p_to_date)
        loop
                select max(b.work_dt) into l_work_dt
                    from thr_wg_sch_detail b
                    where b.del_if=0
                    and b.work_dt = l_cur.car_date
                    and b.thr_emp_pk = p_thr_emp_pk; 
                    
                if l_work_dt is null then
                   raise_application_error(-20009,'CHƯA CÓ LỊCH LÀM VIỆC VÀO NGÀY '||l_cur.car_date||'. VUI LÒNG KIỂM TRA LẠI');
                end if;
                
        end loop ;
                                 
            select thr_absence_seq.nextval into l_absence_pk from dual;        
            insert into thr_absence(pk, thr_absence_period_pk, thr_emp_pk, thr_wg_pk, thr_ws_pk, absence_type, absence_time
                             , company_pay_yn, company_pay_rate, insurance_pay_yn, insurance_pay_rate
                             , absence_dt, start_time, end_time, del_if, crt_dt, crt_by, remark, description
                             , reg_type,sequence_dt,from_dt,to_dt, short_nm, week_no)  
          select l_absence_pk, nullif(l_thr_abs_reg_pk, 0), e.pk, e.thr_wg_pk, null, p_absence_type, p_hours
                            , decode(nvl(l_com_rate, 0), 0, 'N', 'Y') , l_com_rate, decode(nvl(l_ins_rate, 0), 0, 'N', 'Y') , l_ins_rate
                            , d.work_dt, p_start_hours, p_end_hours, 0, sysdate, p_crt_by, 'AUTO INSERT FROM ABSENCE ENTRY', p_description
                            , 1,p_seq,p_from_date,p_to_date
                            , (select v.char_1 from vhr_hr_code v where v.id='HR0003' and v.code = p_absence_type) as short_nm
                            , HR_F_GET_WEEKS(d.work_dt)
            from thr_employee e, thr_wg_sch_detail d
            where e.del_if=0 and d.del_if=0
            and d.thr_emp_pk = e.pk
            and d.work_dt between p_from_date and p_to_date
--            and d.hol_type is null
            and e.pk = p_thr_emp_pk;
                       
      end if;
      
 
---------
exception
    when l_exp
   then
      -- CONSIDER LOGGING THE ERROR AND THEN RE-RAISE
      raise_application_error(-20024,'EMPLOYEE ID HAVE HISTORY REGULATION WITH START DATE ' );
      rollback work;
    when l_exp_larger
    then 
      raise_application_error(-20024,'EMPLOYEE ID HAVE START DATE LARGER THAN END DATE ');
   when others
   then
      -- CONSIDER LOGGING THE ERROR AND THEN RE-RAISE
      raise_application_error(-20024,sqlerrm );
      rollback work;
end;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01005_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_upd_hrti01005_0 (
   p_action              varchar,
   p_thr_emp_pk          number,      
   p_from_dt             varchar2, 
   p_to_dt               varchar2,
   p_hours               varchar2,
   p_absence_type        varchar2,
   p_reg_type            varchar2, 
   p_description         varchar2,
   p_sequence_dt         varchar2,  
   p_crt_by              varchar
)
is

    l_exp   exception;
    l_exp_larger exception;
     l_error     varchar2(2);
   l_thr_wg_pk number;
   l_check_from     number;
   l_check_to     number;
   l_abs_date  number;
   l_com_rate  number;
   l_ins_rate  number;
   l_absence_period_pk number;
   l_hours     number;
   l_total_hours  number;
   l_thr_abs_reg_pk number:=0;
   l_check_upd  number;
   
   l_thr_abs_period_pk number;
   l_work_dt    varchar2(8);
   l_from_dt    varchar2(8);
   l_to_dt      varchar2(8);
   l_count1      number;
   l_count2      number;
    
begin
    if p_action = 'INSERT' then
--  Check emp id in thr_employee    

        l_from_dt := p_from_dt;
        l_to_dt := p_to_dt;   
          
        select nvl(max(v.num_1), 0), nvl(max(v.num_2), 0) 
        into l_com_rate, l_ins_rate 
        from vhr_hr_code v 
        where v.id='HR0008' and v.code = p_absence_type;
   
       update thr_absence a
       set a.del_if= a.pk
       , a.mod_by = p_crt_by
       , a.mod_dt = sysdate
       , a.remark = 'DELETE BY IMPORT LONG ABSENCE'
       where a.del_if=0
       and a.thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0
                                and e.pk = p_thr_emp_pk)
       and a.absence_dt between l_from_dt and l_to_dt;
       
        select thr_absence_reg_seq.nextval into l_thr_abs_reg_pk from dual;
      

        insert into thr_absence_reg(pk, thr_emp_pk, thr_wg_pk, absence_type, start_dt, end_dt
                                    , del_if, crt_by, crt_dt, remark, sequence_dt)
         select l_thr_abs_reg_pk,  e.pk, e.thr_wg_pk, p_absence_type
                                , l_from_dt
                                , l_to_dt
                                , 0, p_crt_by, sysdate, 'AUTO INSERT FROM ABSENCE ENTRY', p_sequence_dt
         from thr_employee e
         where e.del_if=0
         and e.pk = p_thr_emp_pk
         and not exists (select a.thr_emp_pk from thr_absence_reg a
                            where a.del_if=0
                            and a.thr_emp_pk = e.pk
                            and a.start_dt = l_from_dt
                            and a.end_dt = l_to_dt)
         ;
                                            
         insert into thr_absence(pk, thr_absence_reg_pk, thr_emp_pk, thr_wg_pk, thr_ws_pk, absence_type, absence_time
                         , company_pay_yn, company_pay_rate, insurance_pay_yn, insurance_pay_rate
                         , absence_dt, del_if, crt_dt, crt_by, remark, description
                         , reg_type, sequence_dt, from_dt, to_dt, short_nm)  
        select thr_absence_seq.nextval, nullif(l_thr_abs_reg_pk, 0), e.pk, e.thr_wg_pk, null, p_absence_type, p_hours
                        , decode(nvl(l_com_rate, 0), 0, 'N', 'Y') , l_com_rate, decode(nvl(l_ins_rate, 0), 0, 'N', 'Y') , l_ins_rate
                        ,d.car_date, 0, sysdate, p_crt_by, 'AUTO INSERT FROM ABSENCE ENTRY', p_description
                        ,2, p_sequence_dt, l_from_dt, l_to_dt
                        , (select v.char_1 from vhr_hr_code v where v.id='HR0003' and v.code = p_absence_type) as short_nm
        from thr_employee e, thr_calendar d
        where e.del_if=0 and d.del_if=0
        and d.tco_company_pk = 99
        and d.car_date between l_from_dt and l_to_dt
        and e.pk = p_thr_emp_pk;
    end if;

/*
   if p_action = 'INSERT' then        
  
        select max(a.absence_dt) into l_abs_date
        from thr_absence a
        where a.del_if=0
        and a.absence_dt between p_from_date and p_to_date
        and a.thr_emp_pk = p_thr_emp_pk;
        
        if l_check_from is not null then
            raise_application_error(-20009, 'ĐÃ CÓ DỮ LIỆU VẮNG NGÀY  '|| to_char(to_date(l_abs_date, 'yyyymmdd'), 'dd/mm/yyyy'));
        end if;
        
        select count(a.work_dt) into l_count1 from thr_work_date a where a.del_if = 0 and a.work_dt between p_from_date and p_to_date and a.thr_emp_pk = p_thr_emp_pk;
        
        select round(to_date(p_to_date,'yyyymmdd') - to_date(p_from_date,'yyyymmdd') + 1) into l_count2 from dual;
        

            
          
            
                select thr_absence_reg_seq.nextval into l_thr_abs_reg_pk from dual;
                select A.THR_WG_PK into l_thr_wg_pk  from thr_employee a where a.del_if = 0 and a.pk = p_thr_emp_pk;
                 
                insert into thr_absence_reg(pk, thr_emp_pk, thr_wg_pk, absence_type, start_dt, end_dt
                                            , del_if, crt_by, crt_dt, remark)
                values (l_thr_abs_reg_pk,  p_thr_emp_pk, l_thr_wg_pk, p_absence_type, p_from_date, p_to_date
                                        , 0, p_crt_by, sysdate, 'AUTO INSERT FROM ABSENCE ENTRY');
                                        
                 insert into thr_absence(pk, thr_absence_reg_pk, thr_emp_pk, thr_wg_pk, thr_ws_pk, absence_type, absence_time
                                 , company_pay_yn, company_pay_rate, insurance_pay_yn, insurance_pay_rate
                                 , absence_dt, del_if, crt_dt, crt_by, remark, description
                                 , reg_type, sequence_dt, from_dt, to_dt, short_nm)  
                select thr_absence_seq.nextval, nullif(l_thr_abs_reg_pk, 0), e.pk, e.thr_wg_pk, null, p_absence_type, p_hours
                                , decode(nvl(l_com_rate, 0), 0, 'N', 'Y') , l_com_rate, decode(nvl(l_ins_rate, 0), 0, 'N', 'Y') , l_ins_rate
                                ,d.car_date, 0, sysdate, p_crt_by, 'AUTO INSERT FROM ABSENCE ENTRY', p_description
                                ,2, p_seq, p_from_date, p_to_date
                                , (select v.char_1 from vhr_hr_code v where v.id='HR0003' and v.code = p_absence_type) as short_nm
                from thr_employee e, thr_calendar d
                where e.del_if=0 and d.del_if=0
                and d.tco_company_pk = 99
                and d.car_date between p_from_date and p_to_date
    --            AND D.HOL_TYPE IS NULL
                and e.pk = p_thr_emp_pk;                       
                                        
        end if;
        */
   
     
---------
exception
    when l_exp
   then
      -- CONSIDER LOGGING THE ERROR AND THEN RE-RAISE
      raise_application_error(-20024,'EMPLOYEE ID HAVE HISTORY REGULATION WITH START DATE ' );
      rollback work;
    when l_exp_larger
    then 
      raise_application_error(-20024,'EMPLOYEE ID HAVE START DATE LARGER THAN END DATE ');
   when others
   then
      -- CONSIDER LOGGING THE ERROR AND THEN RE-RAISE
      raise_application_error(-20024,sqlerrm );
      rollback work;
end;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01200_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01200_0
                                (
                                    P_ACTION VARCHAR2,
                                    P_EMP_PK VARCHAR,
                                    P_PAY VARCHAR,
                                    p_ale_in_year VARCHAR2,
                                    P_ALE_PLUS  VARCHAR,
                                    P_CRT_BY   VARCHAR2
                                    
                                ) IS
L_FLAG_EXIST BOOLEAN:=FALSE;
   L_CUR_REC NUMBER;
   L_CUR SYS_REFCURSOR;

/******************************************************************************
   NAME:       SP_SEL_THR_GROUP
   PURPOSE:

   REVISIONS:
   VER        DATE        AUTHOR           DESCRIPTION
   ---------  ----------  ---------------  ------------------------------------
   1.0        3/19/2008          1. CREATED THIS PROCEDURE.
  ******************************************************************************/
BEGIN
IF P_ACTION='UPDATE' THEN 
UPDATE THR_EMPLOYEE E 
SET E.AL_PAY_YN=DECODE(P_PAY,'-1','Y','N')
    ,E.ALE_DAY_IN_YEAR=nvl(p_ale_in_year,12)
    --,E.ALE_PLUS=NVL(P_ALE_PLUS,0) ko su dung tu t12-2015
WHERE E.PK=P_EMP_PK AND E.DEL_IF=0 ;
END IF;
   EXCEPTION
     WHEN OTHERS THEN
       -- CONSIDER LOGGING THE ERROR AND THEN RE-RAISE
       RAISE;
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01200_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01200_2
(
    p_action    varchar,
    emp_pk        varchar,
    com_pay     number,
    emp_pay     number,
    l_year        varchar,
    p_ctr        varchar
)
is
    tmpvar             number;
    l_cur             sys_refcursor;
    l_cur_rec         varchar(6) := '';
    l_flag_exist     boolean := false;
    l_sal_mon_ale     varchar(8) := '';
    l_ale_pit_rate     number := 100;
    l_days             number := 0;
begin
    if p_action = 'UPDATE' then
        --xac dinh thoi thang luong
        select nvl(a.num_2, 0)
        into   l_ale_pit_rate
        from   vhr_hr_code a
        where  a.id = 'HR0006' and a.code = '03';

        --xac dinh emp pay khong can tra
        open l_cur for
            select 1
            from   vhr_hr_code m
            where  m.id = 'HR0122' and m.code = '03';

        fetch l_cur into   l_days;

        if l_cur%found then
            select nvl(m.num_1, 0)
            into   l_days
            from   vhr_hr_code m
            where  m.id = 'HR0122' and m.code = '03';
        end if;


        -- update kiem tra du lieu update co hop le hay khong

        update thr_annual_leave m
        set    m.employee_pay =
                   (case
                        when nvl(m.unused, 0) + nvl(m.borrow_al_next_year, 0) - nvl(m.ale_for_next_year, 0) < 0 then
                            (case
                                 when (case
                                           when abs
                                                (
                                                      nvl(m.unused, 0)
                                                    + nvl(m.borrow_al_next_year, 0)
                                                    - nvl(m.ale_for_next_year, 0)
                                                ) >= l_days then
                                                 abs
                                                 (
                                                       nvl(m.unused, 0)
                                                     + nvl(m.borrow_al_next_year, 0)
                                                     - nvl(m.ale_for_next_year, 0)
                                                 )
                                               - l_days
                                           else
                                               0
                                       end) < emp_pay then
                                     (case
                                          when abs
                                               (
                                                   nvl(m.unused, 0) + nvl(m.borrow_al_next_year, 0) - nvl(m.ale_for_next_year, 0)
                                               ) >= l_days then
                                                abs
                                                (
                                                      nvl(m.unused, 0)
                                                    + nvl(m.borrow_al_next_year, 0)
                                                    - nvl(m.ale_for_next_year, 0)
                                                )
                                              - l_days
                                          else
                                              0
                                      end)
                                 else
                                     emp_pay
                             end)
                        else
                            0
                    end),
               m.ale_pay =
                   (case
                        when nvl(m.unused, 0) + nvl(m.borrow_al_next_year, 0) - nvl(m.ale_for_next_year, 0) > 0 then
                            case
                                when abs(nvl(m.unused, 0) + nvl(m.borrow_al_next_year, 0) - nvl(m.ale_for_next_year, 0)) <
                                         com_pay then
                                    abs(nvl(m.unused, 0) + nvl(m.borrow_al_next_year, 0) - nvl(m.ale_for_next_year, 0))
                                else
                                    com_pay
                            end
                        else
                            0
                    end)
        where       m.del_if = 0
               and m.thr_emp_pk = emp_pk
               and l_year = m.an_year
               and nvl(m.close_yn, 'N') = 'N'
               and m.thr_emp_pk not in (select b.pk
                                        from   thr_employee b
                                        where  b.del_if = 0 and (nvl(b.al_pay_yn, 'N') = 'N' and b.pk = emp_pk))
               and m.status = 'A'
               and nvl(m.resign_pay_yn, 'N') <> 'Y';

        --tinh lai anualeve
        -- xoa AMt
        update thr_annual_leave a
        set    a.ale_pay_amt = 0, a.employee_pay_amt = 0
        where       a.del_if = 0
               and a.an_year = l_year
               and a.ale_pay >= 0
               and a.thr_emp_pk = emp_pk
               and nvl(a.close_yn, 'N') = 'N'
               and a.thr_emp_pk not in (select b.pk
                                        from   thr_employee b
                                        where  b.del_if = 0 and nvl(b.al_pay_yn, 'N') = 'N' and b.pk = emp_pk)
               and a.status = 'A';

        -- Tinh tien company pay
        update thr_annual_leave a
        set    (a.ale_pay_amt) = nvl(a.salary, 0) * nvl(l_ale_pit_rate, 100) * nvl(a.ale_pay, 0) / 2600
        where       a.del_if = 0
               and a.an_year = l_year
               and a.ale_pay >= 0
               and a.thr_emp_pk = emp_pk
               and nvl(a.close_yn, 'N') = 'N'
               and a.thr_emp_pk not in (select b.pk
                                        from   thr_employee b
                                        where  b.del_if = 0 and nvl(b.al_pay_yn, 'N') = 'N' and b.pk = emp_pk)
               and a.status = 'A';

        -- Tinh tien employee pay
        update thr_annual_leave a
        set    (a.employee_pay_amt) = (nvl(a.salary, 0) * nvl(a.employee_pay, 0) / 26)
        where       a.del_if = 0
               and a.an_year = l_year
               and nvl(a.employee_pay, 0) > 0
               and a.thr_emp_pk = emp_pk
               and nvl(a.close_yn, 'N') = 'N'
               and a.thr_emp_pk not in (select b.pk
                                        from   thr_employee b
                                        where  b.del_if = 0 and nvl(b.al_pay_yn, 'N') = 'N' and b.pk = emp_pk)
               and a.status = 'A';

        ---    set ?cho tai khoang
        update thr_annual_leave a
        set    a.ale_pay_amt = -1 * nvl(a.employee_pay_amt, 0)
        where       nvl(a.employee_pay_amt, 0) > 0
               and a.del_if = 0
               and a.thr_emp_pk = emp_pk
               and nvl(a.close_yn, 'N') = 'N'
               and a.thr_emp_pk not in (select b.pk
                                        from   thr_employee b
                                        where  b.del_if = 0 and nvl(b.al_pay_yn, 'N') = 'N' and b.pk = emp_pk)
               and a.status = 'A';


        -- xac dinh lai unpay cho ca hai truong hop used
        update thr_annual_leave a
        set    a.ale_unpay =
                     nvl(a.unused, 0)
                   + nvl(a.borrow_al_next_year, 0)
                   - nvl(a.ale_for_next_year, 0)
                   - nvl(a.ale_pay, 0)
                   + nvl(a.employee_pay, 0),
                a.total_unpay =
                     nvl(a.unused, 0)
                   + nvl(a.borrow_al_next_year, 0)
                   - nvl(a.ale_for_next_year, 0)
                   - nvl(a.ale_pay, 0)
                   + nvl(a.employee_pay, 0)
        where       a.del_if = 0
               and a.an_year = l_year
               and a.thr_emp_pk = emp_pk
               and nvl(a.close_yn, 'N') = 'N'
               and a.thr_emp_pk not in (select b.pk
                                        from   thr_employee b
                                        where  b.del_if = 0 and nvl(b.al_pay_yn, 'N') = 'N' and b.pk = emp_pk)
               and a.status = 'A';

        --update lai unpay cho truong hop ALE_UNPAY<0 ma emp khong can tra
        if l_cur%found then
            update thr_annual_leave a
            set    a.ale_unpay = case when abs(a.ale_unpay) > l_days then (a.ale_unpay) + l_days else 0 end,
                a.total_unpay = case when abs(a.ale_unpay) > l_days then (a.ale_unpay) + l_days else 0 end
            where       a.del_if = 0
                   and a.an_year = l_year
                   and nvl(a.ale_unpay, 0) < 0
                   and a.thr_emp_pk = emp_pk
                   and nvl(a.close_yn, 'N') = 'N'
                   and a.thr_emp_pk not in (select b.pk
                                            from   thr_employee b
                                            where  b.del_if = 0 and nvl(b.al_pay_yn, 'N') = 'N' and b.pk = emp_pk)
                   and a.status = 'A';
        end if;



        -- xac dinh lai unpay cho ca hai truong hop used
        update thr_annual_leave a
        set    a.total_unpay = nvl(a.ale_unpay, 0) + nvl(a.ale_for_next_year, 0) - nvl(a.borrow_al_next_year, 0)
        where       a.del_if = 0
               and a.an_year = l_year
               and a.thr_emp_pk = emp_pk
               and nvl(a.close_yn, 'N') = 'N'
               and a.thr_emp_pk not in (select b.pk
                                        from   thr_employee b
                                        where  b.del_if = 0 and nvl(b.al_pay_yn, 'N') = 'N' and b.pk = emp_pk)
               and a.status = 'A';
    end if;
exception
    when no_data_found then
        null;
    when others then
        -- Consider logging the error and then re-raise
        raise;
end;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01200_3;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01200_3
(
--"pk|thr_emp_pk|Organization|Emp_ID|Name|D.O.J|AL Last Year|AL in Year|AL Plus|AL Real
--|Used|Unused|Unused in Year|Ale Pay|Salary|Ale Pay Amount|Description"   
p_action varchar
,p_pk varchar
,p_thr_emp_pk varchar
,p_organization varchar
,p_3 varchar 
,p_4 varchar
,p_5 varchar
,p_al_last_year varchar
,p_al_in_year varchar
,p_al_plus varchar
,p_al_real varchar
,p_al_use varchar
,p_al_unuse varchar
,p_al_unuse_in_year varchar
,p_al_pay   varchar
,p_salary   varchar
,p_al_pay_amt varchar
,p_by_hand    NUMBER
,p_adj_type varchar
,p_description varchar
,p_work_mon    varchar
,p_crt_by varchar
)
 IS
l_check_mon varchar2(1);

l_days number:=0;
l_company_pk number;
l_day_in_month  number;
l_from varchar2(8);
l_to varchar2(8);
BEGIN


        if p_action='UPDATE' OR p_action='DELETE' then

            SELECT A.TCO_COMPANY_PK INTO l_company_pk from THR_EMPLOYEE A WHERE A.DEL_IF=0 AND A.PK=p_thr_emp_pk;
            
            --check month close
            SELECT NVL(max(S.CLOSE_YN),'N'),MAX(S.FROM_DT),MAX(S.TO_DT) INTO l_check_mon,l_from,l_to
            FROM THR_CLOSE S
            WHERE S.DEL_IF=0 AND S.MONTH_CLOSE=p_work_mon AND S.TCO_COMPANY_PK=l_company_pk
            AND S.KIND_OF_SALARY=1;--C/KY CHINH
            
            
            IF l_check_mon='Y' THEN
                RAISE_APPLICATION_ERROR(-20002, 'This month closed!' );
            END IF;
            
            SELECT NVL(V.NUM_5,0) INTO l_days FROM VHR_HR_CODE V WHERE V.ID='HR0006' AND V.CODE='03';
            
        END IF;            
        

        if p_action='UPDATE' then
            
            
            IF l_days=0 THEN -- TINH THEO SO NGAY TRONG THANG
                SELECT COUNT(*) INTO l_day_in_month
                FROM THR_CALENDAR A
                WHERE A.DEL_IF=0 AND NVL(A.HOL_TYPE,' ')<>'SUN'
                AND A.CAR_DATE BETWEEN l_from and l_to 
                and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk;
            ELSE
                l_day_in_month:=l_days;
            END IF;
        
            IF nvl(p_pk,0)=0 THEN --INSERT MOI
                INSERT INTO THR_MONTHLY_ALE
                (PK, WORK_MON, THR_EMP_PK, ALE_PAY, SALARY, ALE_PAY_AMT, REMARK, DEL_IF
                ,CRT_BY, CRT_DT, ALE_LAST_YEAR, ANNUAL_LEAVE_DAYS_IN_YEAR, ALE_PLUS, AL_REAL
                , ALE_USED, ALE_UNUSED, UNUSED_IN_YEAR, DESCRIPTION, TCO_ORG_PK, ORG_NM, EMP_ID, FULL_NAME
                , JOIN_DATE, THR_WG_PK, LEFT_DT, NATION, ID_NUM,ADJUST_TYPE)
                SELECT THR_MONTHLY_ALE_SEQ.NEXTVAL,p_work_mon,A.PK,p_al_pay,p_salary
                ,ROUND(NVL(p_salary,0)*NVL(p_al_pay,0)/l_day_in_month,0) ALE_PAY_AMT
                ,NULL REMARK,0, p_crt_by,SYSDATE,p_al_last_year,p_al_in_year,p_al_plus
                ,p_al_real,p_al_use,p_al_unuse,p_al_unuse_in_year,p_description
                ,a.tco_org_pk,p_organization,a.emp_id,a.full_name,a.join_dt,a.thr_wg_pk,a.left_dt
                ,a.nation,a.id_num,nvL(p_adj_type,'1')
                FROM THR_EMPLOYEE A
                WHERE A.DEL_IF=0 AND A.PK=p_thr_emp_pk;
                
            ELSE 
            
                UPDATE THR_MONTHLY_ALE A
                SET A.ALE_PAY=p_al_pay
                ,a.adjust_type=nvl(p_adj_type,'1')
                ,a.FIX_BYHAND_YN= case when p_by_hand='-1' then 'Y' else 'N' end
                ,A.ALE_PAY_AMT=(CASE WHEN nvl(p_adj_type,'1')=1 THEN 
                                        ( CASE WHEN NVL(p_by_hand,0) =-1 
                                                THEN To_number(p_al_pay_amt) ELSE ROUND(NVL(p_salary,0)*NVL(p_al_pay,0)/l_day_in_month,0)  
                                         END ) 
                                ELSE 0 
                                    END)
                ,A.MOD_BY=p_crt_by
                ,A.MOD_DT=SYSDATE
                WHERE A.PK=p_pk;     
                   
            END IF;
            
            INSERT INTO thr_current_ale
            (PK, THR_EMP_PK, WORK_MON, ALE_HOURS, DEL_IF, CRT_DT, CRT_BY,AL_DAYS_PAID)
            SELECT thr_current_ale_SEQ.NEXTVAL,A.PK,p_work_mon,0,0,SYSDATE,p_crt_by,p_al_pay
            FROM THR_EMPLOYEE A
            WHERE A.DEL_IF=0 AND A.PK=p_thr_emp_pk
            AND A.PK NOT IN(SELECT B.THR_EMP_PK FROM thr_current_ale B WHERE B.DEL_IF=0 
                            AND B.WORK_MON=p_work_mon AND B.THR_EMP_PK=A.PK);
            
            UPDATE thr_current_ale A
            SET A.AL_DAYS_PAID=p_al_pay
            where a.del_if=0 and a.work_mon=p_work_mon
            and a.thr_emp_pk=p_thr_emp_pk;
            

        ELSIF p_action='DELETE' then
        
            update thr_current_ale a
            set a.AL_DAYS_PAID=0
            where a.del_if=0 and a.work_mon=p_work_mon
            and a.thr_emp_pk=p_thr_emp_pk;
        
            UPDATE THR_MONTHLY_ALE A
                SET A.DEL_IF=A.PK
                ,A.MOD_BY=p_crt_by
                ,A.MOD_DT=SYSDATE
                WHERE A.PK=p_pk;   
        end if;


   EXCEPTION
     WHEN NO_DATA_FOUND THEN
       NULL;
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01400_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01400_0 (
   p_action     varchar2,
   p_thr_emp_pk     varchar2, --0  
   p_thr_ws_pk   varchar2, --5  
   p_date_in   varchar2,   --6 
   p_time_in   varchar2,   --8  
   p_date_out   varchar2,   --9  
   p_time_out   varchar2,  --11 
   p_work_time   varchar2, -- 12 
   p_ot   varchar2,   --13
   p_nt   varchar2,   --14  
   p_nt2   varchar2,   --15   
   p_nt3   varchar2,   --16
   p_ht   varchar2,   --17  
   p_absence_type   varchar2, --18  
   p_absence_time   number, -- 19 
   p_work_time_pk   varchar2,  --21  
   p_ot_pk   varchar2,          --22   
   p_absence_pk   varchar2,     --23    
   p_nt_pk   varchar2,          --26 
   p_ht_pk   varchar2,          --27  
   p_work_dt   varchar2, --  28 
   p_day_type   varchar2, --30  day_type
   p_no_can_flag    varchar2, --32 
   p_status         varchar2, --33 
   p_nt2_pk         varchar2, --34  
   p_nt3_pk         varchar2, --35
   p_ot_plus        varchar2, --36
   p_note_att       varchar2,--38
   p_temp_out        varchar2,--39
   p_temp_in        varchar2,--40
   p_temp_out2        varchar2,--41
   p_temp_in2        varchar2,--42
   p_temp_wt        varchar2,--43
   p_temp_ot        varchar2,--44
   p_temp_nt        varchar2,--45
   p_temp_nt2        varchar2,--46
   p_temp_nt3        varchar2,--47
   p_temp_ht        varchar2,--48
   p_approve_yn     varchar2,--49
   p_crt_by                   varchar2

)
is

   l_error      varchar2(2);
   l_wt_allow       number;
   l_wt             number;
   l_temp_wt             number;
   l_temp_ot             number;
   l_temp_nt             number;
   l_temp_nt2             number;
   l_temp_ht             number;
   l_reg_type       varchar2(2);

   l_wt_rate         number;
   l_ot_rate         number;
   l_nt30_rate         number;
   l_nt45_rate         number;
   l_nt45_2_rate       number;
   l_nt60_rate         number;
   l_nt90_rate         number;

   l_ht_rate         number;
   l_ost_rate         number;
   l_oht_rate         number;
   l_abs_rate         number;
   l_ins_rate         number;
   l_st_rate         number;

   l_month_close varchar2(100):='N';
   l_kind_ot    varchar2(100):='';
   l_flag_exist boolean:=FALSE;
    l_cur_rec number;
    l_cur sys_refcursor;
    l_check     exception;
    l_shift_wt  number;
    l_ot_plus number;
    l_ot_limit number;
    L_COMPANY varchar2(300);
   l_pro varchar2(200):='';
  l_string varchar2(2000):='';
  l_ot_allow_yn   varchar2(1):='';
  p_end_meal  varchar(5):='00:00';
  l_company_pk  number;
  l_wt_condition1 number;
  l_wt_condition2 number;
  l_wt_add  number;
  l_wt_plus  number;
   L_THR_ATT_MODIFY_PK NUMBER;
  L_THR_ABSENCE_MODIFY_PK NUMBER;
  
begin

     IF P_STATUS IS NULL OR P_STATUS NOT IN (1,2) OR P_APPROVE_YN='Y' THEN --1: sua cong va vang , 2: chi sua vang
        RETURN;
    END IF;

OPEN l_cur FOR select 'Y' from thr_wg_sch_detail g where g.del_if=0 and g.work_dt=p_work_dt and g.thr_emp_pk =p_thr_emp_pk 
        and (nvl(g.close_m_yn,'N')='Y' or nvl(g.close_yn,'N')='Y' or nvl(g.APPROVE_YN,'N')='Y');
 
    FETCH l_cur INTO l_month_close;
    CLOSE l_cur;
    if l_month_close='Y' then
      return;
    end if;
   
--khong kiem tra dong nay vi da duoc kiem tra tren from roi
   
/*     l_month_close:=sf_check_month_close(p_work_dt,'01');

       IF l_month_close='Y' THEN
            RAISE l_check;
       END IF;
    
*/
         --dua doan nay len dau, vi gap loi khong co rate neu chi update cot NOTE        02/08/2015 
        SELECT
         SUM(DECODE(C.CODE,'01',C.NUM_1,0)) AS WT
        ,SUM(DECODE(C.CODE,'02',C.NUM_1,0)) AS OT
        ,SUM(DECODE(C.CODE,'03',C.NUM_1,0)) AS NT30
        ,SUM(DECODE(C.CODE,'04',C.NUM_1,0)) AS NT45
        ,SUM(DECODE(C.CODE,'05',C.NUM_1,0)) AS NT60
        ,SUM(DECODE(C.CODE,'06',C.NUM_1,0)) AS NT90
        ,SUM(DECODE(C.CODE,'07',C.NUM_1,0)) AS HT
        ,SUM(DECODE(C.CODE,'08',C.NUM_1,0)) AS OST
        ,SUM(DECODE(C.CODE,'09',C.NUM_1,0)) AS OHT
        ,SUM(DECODE(C.CODE,'10',C.NUM_1,0)) AS ST
        ,SUM(DECODE(C.CODE,'13',C.NUM_1,0)) AS NT45_2
         INTO l_wt_rate,l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate
         ,l_oht_rate,l_st_rate,l_nt45_2_rate
         FROM THR_CODE_DETAIL C,THR_CODE_MASTER D
         WHERE C.DEL_IF=0 AND D.DEL_IF=0 AND C.THR_CODE_MASTER_PK=D.PK
         AND D.ID='HR0028' AND NVL(D.USE_YN,'N')='Y';
                 
         --added: 12-06-2015 : truong
         select nvl(max(NVL(A.NUM_1,0)),0),nvl(max(NVL(A.NUM_2,0)),0),nvl(max(NVL(A.NUM_3,0)),99)
         INTO l_wt_add,l_wt_condition1,l_wt_condition2 
         FROM THR_CODE_DETAIL A WHERE A.DEL_IF=0 AND A.USE_YN='Y' AND A.MASTER_ID='HR0208' AND A.CODE='01';

         SELECT  E.TCO_COMPANY_PK INTO l_company_pk  
            FROM THR_EMPLOYEE E 
            WHERE E.DEL_IF=0 AND E.PK= p_thr_emp_pk ; 
            
            l_error:='00';
            IF P_STATUS=1 OR P_ACTION='DELETE' THEN --INSERT DATA INTO MODIFIED TABLE 
                        --   raise_application_error(-20002,'');
                
                SELECT THR_ATTENDANCE_MODIFY_SEQ.NEXTVAL INTO L_THR_ATT_MODIFY_PK FROM DUAL;  
                
                 
                             
                INSERT INTO THR_ATTENDANCE_MODIFY
                (PK, THR_EMP_PK, WORK_DT, HOL_TYPE, DAY_TYPE, TIME_IN_O,DATE_IN_O, TIME_OUT_O ,DATE_OUT_O
                , WORK_TIME_O,THR_WS_PK_O
                ,OT_O,NT_O,NT2_O,NT3_O,HT_O,DEL_IF,CRT_DT,CRT_BY,REMARK
                ,TEMP_OUT, TEMP_IN, TEMP_OUT2, TEMP_IN2, TEMP_WT, TEMP_OT, TEMP_NT, TEMP_NT2, TEMP_NT3
                , TEMP_HT --V4 MOI CO CAI NAY
                )
                SELECT L_THR_ATT_MODIFY_PK, A.PK, P_WORK_DT, B.HOL_TYPE, B.DAY_TYPE, TM.TIME_IN,TM.DATE_IN, TM.TIME_OUT ,TM.DATE_OUT
                , TM.WORK_TIME,B.THR_WS_PK
                ,E.OT,E.NT,E.NT2,E.NT3,E.HT,0,SYSDATE,P_CRT_BY,'AUTO'
                ,TM.TEMP_OUT,TM.TEMP_IN,TM.TEMP_OUT2,TM.TEMP_IN2,TM.TEMP_WT,TM.TEMP_OT,TM.TEMP_NT,TM.TEMP_NT2,TM.TEMP_NT3
                ,TM.TEMP_HT--V4 MOI CO CAINAY
                FROM THR_EMPLOYEE A,THR_TIME_MACHINE TM,THR_WG_SCH_DETAIL B
                ,(SELECT T.THR_EMP_PK ,MAX(DECODE(T.OT_TYPE,'OT',T.OT_TIME)) OT
                    ,MAX(DECODE(T.OT_TYPE,'HT',T.OT_TIME)) HT
                    ,MAX(DECODE(T.OT_TYPE,'NT',T.OT_TIME)) NT
                    ,MAX(DECODE(T.OT_TYPE,'NT2',T.OT_TIME)) NT2
                    ,MAX(DECODE(T.OT_TYPE,'NT3',T.OT_TIME)) NT3
                    FROM THR_EXTRA_TIME T WHERE T.DEL_IF=0 AND T.WORK_DT=P_WORK_DT
                    AND T.THR_EMP_PK=P_THR_EMP_PK GROUP BY T.THR_EMP_PK) E 
                WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND TM.DEL_IF(+)=0 
                AND B.THR_EMP_PK=A.PK 
                AND TM.THR_EMP_PK(+)=B.THR_EMP_PK
               AND TM.WORK_DT(+)=B.WORK_DT
                AND B.THR_EMP_PK=E.THR_EMP_PK(+)
                AND B.WORK_DT=P_WORK_DT
                AND B.THR_EMP_PK=P_THR_EMP_PK
                AND A.PK=P_THR_EMP_PK
                AND NVL(TM.CLOSE_YN,'N')<>'Y' AND NVL(TM.CLOSE_YN,'N')<>'Y';
            END IF ; 
            
            
            IF P_ACTION='DELETE' THEN --INSERT DATA INTO MODIFIED TABLE 
                    
                    IF P_ABSENCE_PK IS NOT NULL THEN 
                    
                        INSERT INTO THR_ABSENCE_MODIFY A
                       (A.PK,A.THR_EMP_PK,A.ABSENCE_DT,A.THR_WS_PK,DEL_IF,CRT_DT,CRT_BY
                       ,A.ABSENCE_TIME,A.ABSENCE_TYPE,A.ABSENCE_TIME_O,ABSENCE_TYPE_O
                       )
                       SELECT 
                       THR_ABSENCE_MODIFY_SEQ.NEXTVAL,P_THR_EMP_PK,P_WORK_DT,B.THR_WS_PK,0,SYSDATE
                       ,P_CRT_BY
                       ,NULL,NULL,B.ABSENCE_TIME,B.ABSENCE_TYPE
                       FROM THR_ABSENCE B
                       WHERE  B.DEL_IF=0
                       AND B.PK=P_ABSENCE_PK;
                    END IF;
                    

                    UPDATE THR_ABSENCE ABS
                    SET ABS.DEL_IF=ABS.PK
                   ,ABS.REMARK=p_crt_by ||'DELETE'
                   ,ABS.MOD_DT=SYSDATE
                   ,ABS.MOD_BY=p_crt_by
                   WHERE ABS.DEL_IF=0 AND ABS.ABSENCE_DT=p_work_dt AND ABS.THR_EMP_PK=p_thr_emp_pk
                   AND NVL(ABS.CLOSE_YN,'N')<>'Y' and NVL(ABS.CLOSE_M_YN,'N')<>'Y';

                   UPDATE THR_TIME_MACHINE T
                   SET T.DEL_IF=T.PK
                   ,T.REMARK=p_crt_by ||'DELETE'
                   ,T.MOD_DT=SYSDATE
                   ,T.MOD_BY=p_crt_by
                   WHERE T.DEL_IF=0 AND T.WORK_DT=p_work_dt AND T.THR_EMP_PK=p_thr_emp_pk
                   AND NVL(T.CLOSE_YN,'N')<>'Y' and NVL(T.CLOSE_M_YN,'N')<>'Y';

                    DELETE THR_EXTRA_TIME EX
                    WHERE EX.DEL_IF=0 AND EX.WORK_DT=p_work_dt AND EX.THR_EMP_PK=p_thr_emp_pk
                    AND NVL(EX.CLOSE_YN,'N')<>'Y' and NVL(EX.CLOSE_M_YN,'N')<>'Y';
                    
                    UPDATE THR_WG_SCH_DETAIL G
                     SET G.MOD_BY=p_crt_by||'DEL NOTE'
                        ,G.MOD_DT=SYSDATE
                        ,G.NOTE_ATT=''
                     WHERE G.DEL_IF=0 AND G.WORK_DT=p_work_dt AND G.THR_EMP_PK=p_thr_emp_pk
                     AND (G.THR_WS_PK<>p_thr_ws_pk or nvl(G.NOTE_ATT,' ')<>nvl(p_note_att,' ')) 
                     AND NVL(G.CLOSE_YN,'N')<>'Y' AND NVL(G.CLOSE_M_YN,'N')<>'Y';

            END IF;
            l_error:='01';
         IF p_action='UPDATE' THEN
         
                UPDATE THR_WG_SCH_DETAIL G
                 SET G.THR_WS_PK=p_thr_ws_pk
                    ,G.MOD_BY=p_crt_by||'FROM ATT ABS'
                    ,G.MOD_DT=SYSDATE
                    ,G.NOTE_ATT=p_note_att
                 WHERE G.DEL_IF=0 AND G.WORK_DT=p_work_dt AND G.THR_EMP_PK=p_thr_emp_pk
                 AND (G.THR_WS_PK<>p_thr_ws_pk or nvl(G.NOTE_ATT,' ')<>nvl(p_note_att,' ')) 
                 AND NVL(G.CLOSE_YN,'N')<>'Y' AND NVL(G.CLOSE_M_YN,'N')<>'Y';
         
                SELECT NVL(S.WT,8)+NVL(S.WT_PLUS,0),s.END_MEAL1,NVL(S.WT_PLUS,0) INTO l_shift_wt,p_end_meal,l_wt_plus
                            FROM THR_WORK_SHIFT S WHERE S.DEL_IF=0 AND S.PK=p_thr_ws_pk;

                SELECT V.CODE INTO l_kind_ot FROM VHR_HR_CODE V WHERE V.ID='HR0038'; --KIEM TRA XEM SU DUNG LOAI TINH OT NAO
                
                select nvl(d.CHAR_2,'N') INTO l_ot_allow_yn ---Kiem tra xem co tinh tang ca cho WT Allow hay ko -- 
                from thr_code_master m, thr_code_detail d
                where d.DEL_IF=0
                and m.DEL_IF=0
                and m.pk=d.THR_CODE_MASTER_PK
                and d.CODE='02'
                and m.ID='HR0038';
                
            IF P_STATUS=1 THEN    

                IF  p_time_in IS NULL AND p_time_out IS NULL  THEN
                    DELETE THR_TIME_MACHINE T
                    WHERE T.DEL_IF=0 AND T.WORK_DT=p_work_dt AND T.THR_EMP_PK=p_thr_emp_pk
                    AND NVL(T.CLOSE_YN,'N')<>'Y' AND NVL(T.CLOSE_M_YN,'N')<>'Y';

                    DELETE THR_EXTRA_TIME EX
                    WHERE EX.DEL_IF=0 AND EX.WORK_DT=p_work_dt AND EX.THR_EMP_PK=p_thr_emp_pk
                    AND NVL(EX.CLOSE_YN,'N')<>'Y' AND NVL(EX.CLOSE_M_YN,'N')<>'Y';
                END IF;
                
                open l_cur for
                SELECT MAX(NVL(L.REG_HOURS,0)), MAX(L.REG_TYPE)
                FROM THR_REGULATION L
                WHERE L.DEL_IF=0 AND L.THR_EMP_PK=p_thr_emp_pk
                GROUP BY L.THR_EMP_PK
                HAVING MAX(L.START_DT)<=p_work_dt
                AND MAX(L.END_DT)>=p_work_dt;

                 FETCH l_cur INTO l_wt_allow, l_reg_type;
                  l_flag_exist := l_cur%FOUND;
                CLOSE l_cur;

                IF l_flag_exist=FALSE THEN
                    l_wt_allow:=0;
                    l_reg_type:='';
                END IF;


                 
                 UPDATE THR_ABSENCE A
                    SET A.THR_WS_PK = p_thr_ws_pk
                        ,A.MOD_BY = p_crt_by||'UPDATE FROM ATT ABS'
                        ,A.MOD_DT = SYSDATE
                    WHERE A.DEL_IF=0 AND A.ABSENCE_DT= p_work_dt 
                        AND A.THR_EMP_PK = p_thr_emp_pk
                        AND A.THR_WS_PK <> p_thr_ws_pk
                        AND NVL(A.CLOSE_YN,'N') <>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';

            IF (p_time_in IS NOT NULL OR p_time_out IS NOT NULL) THEN -- 1
                 IF p_work_time IS NULL THEN --AUTO CALCULATE ---          2
                        SELECT (case 
                           when l_reg_type='01'  
                           then  HR_SF_GET_WT_COM(to_char(to_date(p_date_in||p_time_in,'yyyymmdd HH24:MI')-l_wt_allow/24,'yyyymmddHH24:MI')--date in 
                                        ,p_date_out||p_time_out--date out 
                                        ,p_thr_ws_pk,p_work_dt, l_company_pk)
                           when l_reg_type='03' and p_time_out<p_end_meal
                               then HR_SF_GET_WT_COM(p_date_in||p_time_in,p_date_out||p_time_out,p_thr_ws_pk,p_work_dt, l_company_pk)+l_wt_allow
                               when l_reg_type='03' and p_time_out>p_end_meal
                               then HR_SF_GET_WT_COM(p_date_in||p_time_in--date in 
                                            ,to_char(to_date(p_date_out||p_time_out,'yyyymmdd HH24:MI')+l_wt_allow/24,'yyyymmddHH24:MI')--date out 
                                            ,p_thr_ws_pk,p_work_dt, l_company_pk)  
                           when l_reg_type='04' 
                           then HR_SF_GET_WT_COM(p_date_in||p_time_in,p_date_out||p_time_out,p_thr_ws_pk,p_work_dt, l_company_pk)+l_wt_allow
                           else HR_SF_GET_WT_COM(p_date_in||p_time_in,p_date_out||p_time_out,p_thr_ws_pk,p_work_dt, l_company_pk)
                           end)-HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,0,0,0,0,p_thr_ws_pk,p_work_dt,'WT')
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,0,0,0,0,p_thr_ws_pk,p_work_dt,'WT') temp_wt
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,p_temp_ot,0,0,0,p_thr_ws_pk,p_work_dt,'OT') temp_ot
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,p_temp_ot,p_temp_nt,p_temp_nt2,p_temp_ht,p_thr_ws_pk,p_work_dt,'NT') temp_nt
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,p_temp_ot,p_temp_nt,p_temp_nt2,p_temp_ht,p_thr_ws_pk,p_work_dt,'NT2') temp_nt2
                            ,HR_GET_TEMP_HOUR_V4(l_company_pk,p_time_in,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2,p_temp_wt,p_temp_ot,p_temp_nt,p_temp_nt2,p_temp_ht,p_thr_ws_pk,p_work_dt,'HT') temp_ht                                                                       
                          INTO l_wt,l_temp_wt,l_temp_ot,l_temp_nt,l_temp_nt2,l_temp_ht FROM DUAL ;  
                      
                          IF NVL(l_wt_allow,0)>0 AND l_wt<l_shift_wt THEN
                                l_wt:=l_wt-l_wt_allow;
                          END IF;
                          
                          IF l_wt_add<>0 AND l_wt>=l_wt_condition1 AND l_wt<=l_wt_condition2 and NVL(l_wt_plus,0)<>0 THEN -- ap dung dieu cho nhung ca co wt plus
                                l_wt:=l_wt+l_wt_add;                               
                          END IF;
                          
                      
                        IF p_work_time_pk IS NULL THEN --CHUA CO PHAI INSERT --- 3
                            
                            l_error:='02';
                            INSERT INTO THR_TIME_MACHINE(PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN
                               , TIME_OUT, WORK_TIME, PAY_RATE, MOD_BYHAND_YN
                               , REMARK, DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_AUTO_YN,NO_SCAN_FLAG,DAY_TYPE,HOL_TYPE
                               ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OUT,TEMP_IN,TEMP_OUT2,TEMP_IN2,TEMP_WT,TEMP_OT,TEMP_NT,TEMP_NT2,TEMP_HT,ID_NUM
                               )
                                 SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,p_thr_emp_pk,G.THR_WG_PK ,p_work_dt,p_thr_ws_pk,p_time_in,p_time_out
                                    ,(CASE  WHEN p_day_type IS NOT NULL THEN 0
                                            WHEN p_day_type IS NULL AND l_wt >=l_shift_wt 
                                                THEN l_shift_wt
                                            ELSE  l_wt 
                                    END)-- work_time 
                                     ,l_wt_rate,'N', 'INS AUTO FROM ATT_ABS1 ',0,SYSDATE,p_crt_by,nvl(p_date_in,p_work_dt),nvl(p_date_out,p_work_dt),'Y',p_no_can_flag
                                    ,G.DAY_TYPE,G.HOL_TYPE
                                    ,0,0--, hr_f_get_week(g.WORK_DT), hr_f_get_month_week(g.WORK_DT)
                                    ,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2
                                    ,l_temp_wt
                                    ,l_temp_ot
                                    ,l_temp_nt
                                    ,l_temp_nt2
                                    ,(CASE WHEN G.HOL_TYPE IS NOT NULL THEN l_temp_ht ELSE NULL END)
                                    ,E.ID_NUM
                                  FROM THR_WG_SCH_DETAIL G,THR_EMPLOYEE E
                                   WHERE G.del_if=0 AND E.DEL_IF=0 AND G.THR_EMP_PK=E.PK
                                    AND G.THR_EMP_PK=p_thr_emp_pk AND NVL(G.CLOSE_YN,'N')<>'Y' AND NVL(G.CLOSE_M_YN,'N')<>'Y'
                                   AND g.THR_EMP_PK NOT IN(SELECT EX.THR_EMP_PK  FROM THR_TIME_MACHINE EX WHERE EX.DEL_IF=0 AND EX.WORK_DT=p_work_dt
                                                                                 AND EX.THR_EMP_PK=p_thr_emp_pk)
                                   AND g.WORK_DT=p_work_dt;
                                
                        ELSE --CO RUI THI UPDATE
                            l_error:='03';
                           UPDATE THR_TIME_MACHINE TM
                                SET TM.THR_WS_PK= p_thr_ws_pk
                                 ,TM.TIME_IN=p_time_in
                                ,TM.DATE_IN=p_date_in
                                 ,TM.TIME_OUT=p_time_out
                                 ,TM.DATE_OUT=p_date_out
                                 ,TM.WORK_TIME=(CASE WHEN TM.HOL_TYPE IS NULL and l_wt >=l_shift_wt THEN l_shift_wt
                                             WHEN TM.HOL_TYPE IS NULL and l_wt <l_shift_wt  THEN l_wt
                                            ELSE 0 END)
                                 ,TM.TEMP_OUT=p_temp_out
                                 ,TM.TEMP_IN=p_temp_in
                                 ,TM.TEMP_OUT2=p_temp_out2
                                 ,TM.TEMP_IN2=p_temp_in2
                                 ,TM.TEMP_WT=l_temp_wt
                                 ,TM.TEMP_OT=l_temp_ot
                                 ,TM.TEMP_NT=l_temp_nt
                                 ,TM.TEMP_NT2=l_temp_nt2
                                 ,TM.TEMP_HT =(CASE WHEN TM.HOL_TYPE IS NOT NULL THEN l_temp_ht ELSE NULL END)           
                                 ,TM.REMARK= 'UPDATE AUTO FROM ATT_ABS2'
                                 ,TM.MOD_BYHAND_YN='N'
                                 ,TM.MOD_AUTO_YN='Y'
                                 ,TM.MOD_BY=p_crt_by
                                 ,TM.MOD_DT=SYSDATE
                                 ,TM.NO_SCAN_FLAG=p_no_can_flag
                                WHERE TM.DEL_IF=0 AND TM.WORK_DT=p_work_dt AND TM.THR_EMP_PK=p_thr_emp_pk
                                AND NVL(TM.CLOSE_YN,'N')<>'Y' AND NVL(TM.CLOSE_YN,'N')<>'Y';

                            

                        END IF; --3

                 ELSE --INPUT BY HAND --
                         IF p_work_time_pk IS NULL THEN --CHUA CO PHAI INSERT ---
                            l_error:='04';
                            INSERT INTO THR_TIME_MACHINE(PK, THR_EMP_PK, THR_WG_PK, WORK_DT, THR_WS_PK, TIME_IN
                               , TIME_OUT, WORK_TIME, PAY_RATE, MOD_BYHAND_YN, MOD_BY
                               , REMARK, DEL_IF, CRT_DT, CRT_BY, DATE_IN, DATE_OUT,MOD_AUTO_YN,NO_SCAN_FLAG,DAY_TYPE,HOL_TYPE
                               ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OUT,TEMP_IN,TEMP_OUT2,TEMP_IN2,TEMP_WT,TEMP_OT,TEMP_NT,TEMP_NT2,TEMP_HT,ID_NUM
                               )
                                 SELECT THR_TIME_MACHINE_SEQ.NEXTVAL,p_thr_emp_pk,G.THR_WG_PK,p_work_dt,p_thr_ws_pk,p_time_in,p_time_out
                                         ,p_work_time
                                         ,l_wt_rate,'Y', p_crt_by,'INS BYHAND FROM ATT_ABS3',0,SYSDATE,p_crt_by,nvl(p_date_in,p_work_dt),nvl(p_date_out,p_work_dt),'N',p_no_can_flag
                                         ,G.DAY_TYPE,G.HOL_TYPE
                                         ,0,0--, hr_f_get_week(g.WORK_DT), hr_f_get_month_week(g.WORK_DT)
                                         ,p_temp_out,p_temp_in,p_temp_out2,p_temp_in2
                                        ,p_temp_wt
                                        ,p_temp_ot
                                        ,p_temp_nt
                                        ,p_temp_nt2
                                        ,(CASE WHEN G.HOL_TYPE IS NOT NULL THEN p_temp_ht ELSE NULL END)
                                         ,E.ID_NUM
                               FROM THR_WG_SCH_DETAIL G,THR_EMPLOYEE E
                                WHERE G.del_if=0 AND E.DEL_IF=0 AND G.THR_EMP_PK=E.PK 
                                AND G.THR_EMP_PK=p_thr_emp_pk  AND NVL(G.CLOSE_YN,'N')<>'Y'  AND NVL(G.CLOSE_M_YN,'N')<>'Y'
                                AND g.THR_EMP_PK NOT IN(SELECT EX.THR_EMP_PK  FROM THR_TIME_MACHINE EX WHERE EX.DEL_IF=0 AND EX.WORK_DT=p_work_dt
                                                                                 AND EX.THR_EMP_PK=p_thr_emp_pk)
                                AND g.WORK_DT=p_work_dt;

                        ELSE --CO ROI THI UPDATE

                                UPDATE THR_TIME_MACHINE TM
                                SET TM.THR_WS_PK=p_thr_ws_pk
                                    ,TM.TIME_IN=p_time_in
                                   ,TM.DATE_IN=p_date_in
                                  ,TM.TIME_OUT=p_time_out
                                 ,TM.DATE_OUT=p_date_out
                                 ,TM.WORK_TIME=(CASE WHEN p_date_in IS NULL OR p_time_out IS NULL THEN NULL ELSE p_work_time END)
                                 ,TM.TEMP_OUT=p_temp_out
                                 ,TM.TEMP_IN=p_temp_in
                                 ,TM.TEMP_OUT2=p_temp_out2
                                 ,TM.TEMP_IN2=p_temp_in2
                                 ,TM.TEMP_WT=p_temp_wt
                                 ,TM.TEMP_OT=p_temp_ot
                                 ,TM.TEMP_NT=p_temp_nt
                                 ,TM.TEMP_NT2=p_temp_nt2
                                 ,TM.TEMP_HT =(CASE WHEN TM.HOL_TYPE IS NOT NULL THEN p_temp_ht ELSE NULL END)          
                                 ,TM.REMARK= 'INPUT BY HAND FROM ATT_ABS4'
                                 ,TM.MOD_BYHAND_YN='Y'
                                 ,TM.MOD_AUTO_YN='N'
                                 ,TM.MOD_BY=p_crt_by
                                 ,TM.MOD_DT=SYSDATE
                                 ,TM.NO_SCAN_FLAG=p_no_can_flag
                                WHERE TM.DEL_IF=0 AND TM.WORK_DT=p_work_dt AND TM.THR_EMP_PK=p_thr_emp_pk
                                 AND (NVL(TM.THR_WS_PK,0) <> NVL(p_thr_ws_pk,0)
                                        OR nvl(TM.TIME_IN,' ') <> nvl(p_time_in,' ')
                                        OR nvl(TM.DATE_IN,' ') <> nvl(p_date_in,' ')
                                        OR nvl(TM.TIME_OUT,' ') <> nvl(p_time_out,' ')
                                        OR nvl(TM.DATE_OUT,'') <> nvl(p_date_out,'')
                                        OR nvl(TM.WORK_TIME,0) <> nvl(p_work_time,1)
                                        OR NVL(TM.TEMP_OUT,' ')<>NVL(p_temp_out,' ')
                                        OR NVL(TM.TEMP_IN,' ')<>NVL(p_temp_in,' ')
                                        OR NVL(TM.TEMP_OUT2,' ')<>NVL(p_temp_out2,' ')
                                        OR NVL(TM.TEMP_IN2,' ')<>NVL(p_temp_in2,' ')
                                        OR NVL(TM.TEMP_WT,0)<>NVL(p_temp_wt,0)
                                        OR NVL(TM.TEMP_OT,0)<>NVL(p_temp_ot,0)
                                        OR NVL(TM.TEMP_NT,0)<>NVL(p_temp_nt,0)
                                        OR NVL(TM.TEMP_NT2,0)<>NVL(p_temp_nt2,0)
                                        OR NVL(TM.TEMP_HT,0)<>NVL(p_temp_ht,0)
                                        )
                                        AND NVL(TM.CLOSE_YN,'N')<>'Y' AND NVL(TM.CLOSE_M_YN,'N')<>'Y';
                            
                        END IF;


                    END IF;--2
                END IF; --1
            END IF; --end phan cong
            
            L_ERROR:='05';
            SELECT THR_ABSENCE_MODIFY_SEQ.NEXTVAL INTO L_THR_ABSENCE_MODIFY_PK FROM DUAL;

            IF p_day_type IS NULL AND p_absence_type IS NOT NULL THEN

                SELECT NVL(B.NUM_1,0),NVL(B.NUM_2,0) INTO l_abs_rate,l_ins_rate FROM VHR_HR_CODE B WHERE B.ID='HR0003' AND B.CODE=p_absence_type;
                
                --KIEM TRA CO SU THAY DOI VANG 
                
               INSERT INTO THR_ABSENCE_MODIFY A
               (A.PK,A.THR_EMP_PK,A.ABSENCE_DT,A.THR_WS_PK,DEL_IF,CRT_DT,CRT_BY
               ,A.ABSENCE_TIME,A.ABSENCE_TYPE,A.ABSENCE_TIME_O,ABSENCE_TYPE_O
               )
               SELECT 
               L_THR_ABSENCE_MODIFY_PK,P_THR_EMP_PK,P_WORK_DT,P_THR_WS_PK,0,SYSDATE
               ,P_CRT_BY
               ,NULL,NULL,B.ABSENCE_TIME,B.ABSENCE_TYPE
               FROM THR_EMPLOYEE A,THR_ABSENCE B
               WHERE A.DEL_IF=0 AND B.DEL_IF(+)=0
               AND A.PK=P_THR_EMP_PK
               AND B.THR_EMP_PK(+)=A.PK
               AND B.PK(+)=P_ABSENCE_PK;

                IF p_absence_time=0 THEN --USER MUON XOA VANG
                    DELETE THR_ABSENCE A
                    WHERE A.DEL_IF=0 AND A.ABSENCE_DT=p_work_dt
                          AND A.THR_EMP_PK=p_thr_emp_pk
                          AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';

                ELSIF p_absence_pk IS NULL THEN --CHUA CO PHAI INSERT
                    IF l_abs_rate=0 THEN -- VANG KO CO HUONG LUONG
                        INSERT INTO THR_ABSENCE  --AUTO INSERT ABSENT LIST
                         (PK, THR_EMP_PK, THR_WG_PK, THR_WS_PK,ABSENCE_TYPE,ABSENCE_DT, ABSENCE_TIME
                         , COMPANY_PAY_YN, COMPANY_PAY_RATE,INSURANCE_PAY_YN,INSURANCE_PAY_RATE
                         , REMARK, DEL_IF, CRT_DT, CRT_BY)
                        SELECT THR_ABSENCE_SEQ.NEXTVAL,A.PK,A.THR_WG_PK,p_thr_ws_pk,p_absence_type,p_work_dt
                        ,(CASE WHEN NVL(p_absence_time,NVL(S.WT,8)+NVL(S.WT_PLUS,0)-nvl(c.work_time,0))>8 THEN 8 ELSE NVL(p_absence_time,NVL(S.WT,8)+NVL(S.WT_PLUS,0)-nvl(c.work_time,0)) end)
                               ,'N',0,DECODE(l_ins_rate,0,'N','Y'),l_ins_rate,'INS FROM ATT_ABS', 0, SYSDATE, p_crt_by
                          FROM THR_EMPLOYEE A,THR_TIME_MACHINE C,THR_WORK_SHIFT S
                         WHERE A.DEL_IF = 0 AND S.DEL_IF=0 AND S.PK=p_thr_ws_pk
                           AND C.DEL_IF(+)=0 AND C.WORK_DT(+) = p_work_dt AND A.PK=C.THR_EMP_PK(+)
                           AND A.PK NOT IN (SELECT E.THR_EMP_PK
                                              FROM THR_ABSENCE E
                                             WHERE E.DEL_IF = 0
                                               AND E.ABSENCE_DT = p_work_dt
                                               AND E.THR_EMP_PK=p_thr_emp_pk)
                           AND A.PK NOT IN(SELECT t.thr_emp_pk FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                            AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk AND NVL(T.WORK_TIME,0)=NVL(S.WT,8))
                           AND A.PK=p_thr_emp_pk;
                    ELSE --VANG HUONG LUONG
                        INSERT INTO THR_ABSENCE  --AUTO INSERT ABSENT LIST
                         (PK, THR_EMP_PK, THR_WG_PK, THR_WS_PK,ABSENCE_TYPE,ABSENCE_DT, ABSENCE_TIME
                         , COMPANY_PAY_YN, COMPANY_PAY_RATE
                         , REMARK, DEL_IF, CRT_DT, CRT_BY)
                        SELECT THR_ABSENCE_SEQ.NEXTVAL,A.PK,A.THR_WG_PK,p_thr_ws_pk,p_absence_type,p_work_dt,(CASE WHEN NVL(p_absence_time,NVL(S.WT,8)+NVL(S.WT_PLUS,0)-nvl(c.work_time,0))>8 THEN 8 ELSE NVL(p_absence_time,NVL(S.WT,8)+NVL(S.WT_PLUS,0)-nvl(c.work_time,0)) end )
                               ,'Y',l_abs_rate,'INS FROM ATT_ABS', 0, SYSDATE, p_crt_by
                          FROM THR_EMPLOYEE A,THR_TIME_MACHINE C,THR_WORK_SHIFT S
                         WHERE A.DEL_IF = 0 AND S.DEL_IF=0 AND S.PK=p_thr_ws_pk
                           AND C.DEL_IF(+)=0 AND C.WORK_DT(+) = p_work_dt AND A.PK=C.THR_EMP_PK(+)
                           AND A.PK NOT IN (SELECT E.THR_EMP_PK
                                              FROM THR_ABSENCE E
                                             WHERE E.DEL_IF = 0
                                               AND E.ABSENCE_DT = p_work_dt
                                               AND E.THR_EMP_PK=p_thr_emp_pk)
                           AND A.PK NOT IN(SELECT t.thr_emp_pk FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                            AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk AND NVL(T.WORK_TIME,0)=NVL(S.WT,8))
                           AND A.PK=p_thr_emp_pk;
                    END IF;

                 ELSE --UPDATE

                                DELETE THR_ABSENCE A
                                WHERE A.PK=p_absence_pk --AND A.ABSENCE_TYPE<>'01'
                                AND A.THR_EMP_PK IN(SELECT M.THR_EMP_PK 
                                                    FROM THR_TIME_MACHINE M 
                                                    WHERE M.DEL_IF=0 AND M.WORK_DT=p_work_dt 
                                                    AND M.TIME_IN IS NOT NULL AND M.TIME_OUT IS NOT NULL
                                                    AND NVL(M.WORK_TIME,0)=l_shift_wt
                                                    AND M.THR_EMP_PK=p_thr_emp_pk)
                                AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';  

                                IF p_absence_time IS NULL THEN --AUTO


                                    IF l_abs_rate=0 THEN
                                         UPDATE THR_ABSENCE A
                                        SET A.ABSENCE_TYPE=p_absence_type
                                            ,A.ABSENCE_TIME=(case when l_shift_wt>8 then 8 else l_shift_wt end)
                                            ,A.COMPANY_PAY_RATE=0
                                            ,A.COMPANY_PAY_YN='N'
                                            ,A.INSURANCE_PAY_YN=DECODE(l_ins_rate,0,'N','Y')
                                            ,A.INSURANCE_PAY_RATE=l_ins_rate
                                            ,A.MOD_BY=p_crt_by||'-UPDATE AUTO'
                                            ,A.MOD_DT=SYSDATE
                                        WHERE A.DEL_IF=0 AND A.PK=p_absence_pk
                                        AND A.THR_EMP_PK NOT IN(SELECT T.THR_EMP_PK
                                                 FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                                AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk)
                                         AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';
                                    ELSE

                                        UPDATE THR_ABSENCE A
                                        SET A.ABSENCE_TYPE=p_absence_type
                                            ,A.ABSENCE_TIME=l_shift_wt-NVL((SELECT NVL(T.WORK_TIME,0)
                                                                        FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                                                        AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk and nvl(t.WORK_TIME,0)<l_shift_wt
                                                                        and nvl(t.WORK_TIME,0)>0),0)
                                            ,A.COMPANY_PAY_RATE=l_abs_rate
                                            ,A.COMPANY_PAY_YN='Y'
                                            ,A.MOD_BY=p_crt_by||'-UPDATE AUTO'
                                            ,A.MOD_DT=SYSDATE
                                        WHERE A.DEL_IF=0 AND A.PK=p_absence_pk
                                         AND A.THR_EMP_PK NOT IN(SELECT T.THR_EMP_PK
                                                 FROM THR_TIME_MACHINE T WHERE T.DEL_IF=0
                                                AND T.WORK_DT=p_work_dt AND t.thr_emp_pk=p_thr_emp_pk AND NVL(T.WORK_TIME,0)=l_shift_wt)
                                                AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';
                                
                                        UPDATE THR_ABSENCE A
                                        SET A.ABSENCE_TIME=8
                                        WHERE A.DEL_IF=0 AND A.PK=p_absence_pk
                                              and nvl(A.ABSENCE_TIME,0)>8
                                             AND NVL(A.CLOSE_YN,'N')<>'Y'AND NVL(A.CLOSE_M_YN,'N')<>'Y';        
                                        
                                    END IF;
                               ELSE

                                    UPDATE THR_ABSENCE A
                                    SET A.ABSENCE_TYPE=p_absence_type
                                        ,A.ABSENCE_TIME=p_absence_time
                                        ,A.COMPANY_PAY_RATE=l_abs_rate
                                        ,A.COMPANY_PAY_YN=DECODE(l_abs_rate,0,'N','Y')
                                         ,A.INSURANCE_PAY_YN=DECODE(l_ins_rate,0,'N','Y')
                                         ,A.INSURANCE_PAY_RATE=l_ins_rate
                                        ,A.MOD_BY=p_crt_by||'-UPDATE BYHAND'
                                        ,A.MOD_DT=SYSDATE
                                    WHERE A.DEL_IF=0 AND A.PK=p_absence_pk
                                    AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';

                               END IF;
                       --   END IF;

                END IF;
                
                BEGIN
                  -- raise_application_error(-20002,L_THR_ABSENCE_MODIFY_PK);
                    UPDATE THR_ABSENCE_MODIFY A
                    SET (ABSENCE_TIME,ABSENCE_TYPE,REMARK)=(SELECT B.ABSENCE_TIME,B.ABSENCE_TYPE,'UPDATE ABSENCE' FROM THR_ABSENCE B 
                                                        WHERE B.DEL_IF=0 AND B.ABSENCE_DT=P_WORK_DT
                                                        AND B.THR_EMP_PK=P_THR_EMP_PK)
                    WHERE A.DEL_IF=0 AND A.PK=L_THR_ABSENCE_MODIFY_PK
                    AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK FROM THR_ABSENCE B 
                                            WHERE B.DEL_IF=0 AND B.ABSENCE_DT=P_WORK_DT
                                            AND B.THR_EMP_PK=A.THR_EMP_PK)
                    ;
                    
                    UPDATE THR_ABSENCE A
                    SET  THR_ABSENCE_MODIFY_PK=L_THR_ABSENCE_MODIFY_PK
                    WHERE A.DEL_IF=0 AND A.ABSENCE_DT=P_WORK_DT AND A.THR_EMP_PK=P_THR_EMP_PK
                    AND A.THR_EMP_PK IN (SELECT B.THR_EMP_PK FROM THR_ABSENCE_MODIFY B 
                                            WHERE B.DEL_IF=0 
                                            AND (NVL(B.ABSENCE_TIME,0)<> NVL(B.ABSENCE_TIME_O,0)
                                            OR NVL(B.ABSENCE_TYPE,' ')<> NVL(B.ABSENCE_TYPE_O,' ') ) 
                                            AND B.PK=L_THR_ABSENCE_MODIFY_PK
                                            AND B.THR_EMP_PK=A.THR_EMP_PK);
                                            
                    UPDATE THR_ABSENCE_MODIFY A
                    SET DEL_IF=PK
                    WHERE A.DEL_IF=0 
                    AND NVL(A.ABSENCE_TIME,0)= NVL(A.ABSENCE_TIME_O,0)
                    AND NVL(A.ABSENCE_TYPE,' ')= NVL(A.ABSENCE_TYPE_O,' ')
                    AND A.PK=L_THR_ABSENCE_MODIFY_PK;
                                        
                END ;
                
                
                
           ELSIF p_absence_type IS NULL THEN
                IF P_ABSENCE_PK IS NOT NULL THEN 
                   INSERT INTO THR_ABSENCE_MODIFY A
                   (A.PK,A.THR_EMP_PK,A.ABSENCE_DT,A.THR_WS_PK,DEL_IF,CRT_DT,CRT_BY
                   ,A.ABSENCE_TIME,A.ABSENCE_TYPE,A.ABSENCE_TIME_O,ABSENCE_TYPE_O
                   )
                   SELECT 
                   L_THR_ABSENCE_MODIFY_PK,P_THR_EMP_PK,P_WORK_DT,P_THR_WS_PK,0,SYSDATE
                   ,P_CRT_BY
                   ,NULL,NULL,B.ABSENCE_TIME,B.ABSENCE_TYPE
                   FROM THR_ABSENCE B
                   WHERE B.DEL_IF=0
                   AND B.PK=P_ABSENCE_PK; 
                    
                    UPDATE  THR_ABSENCE A
                    SET DEL_IF=PK
                    ,MOD_BY=P_CRT_BY
                    ,MOD_DT=SYSDATE
                    WHERE A.PK=P_ABSENCE_PK
                    AND NVL(A.CLOSE_YN,'N')<>'Y';
                END IF;
           END IF;

             --XU LY TANG CA
            --DELETE GIO TANG CA NEU CO
            DELETE THR_EXTRA_TIME A
            WHERE A.DEL_IF=0 AND  A.WORK_DT=p_work_dt --AND NVL(A.MOD_BYHAND_YN,'N')<>'Y'
            AND A.THR_EMP_PK=p_thr_emp_pk
            AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y';


            IF p_work_time IS NULL THEN --AUTO CALCULATE ---
                   --NGAY LE, CN
                         INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'HT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_HT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT, l_company_pk)-NVL(B.TEMP_HT,0)>0 
                                        THEN
                                            HR_SF_GET_HT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT, l_company_pk)-NVL(B.TEMP_HT,0)
                                        ELSE 0 END) AS HT
                                   ,DECODE(B.HOL_TYPE,'HOL',l_ht_rate,l_st_rate)
                                   ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry ATT_ABS1',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_HT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_HT_COM(B.DATE_IN||B.TIME_IN,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='HT'
                                                        AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;


                         INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                             + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                             -NVL(B.TEMP_OT,0)>0 
                                             THEN   HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                                     + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                                    -NVL(B.TEMP_OT,0) 
                                             ELSE 0 END) OT      
                                   ,(CASE WHEN NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_oht_rate  ELSE l_ost_rate END) AS RATE
                                   ,B.TIME_IN, B.TIME_OUT, 'N','Auto Entry ATT_ABS1',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0
                                   ,B.TEMP_OT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND (CASE WHEN HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                             + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                             -NVL(B.TEMP_OT,0)>0 
                                             THEN   HR_SF_GET_OT_COM(C.START_OT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                                     + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                                    -NVL(B.TEMP_OT,0) 
                                             ELSE 0 END) >0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                                        AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;
                       
                            -- NT
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)
                                             + HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT,0)>0
                                        THEN HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)
                                             + HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT,0)
                                        ELSE 0 END) AS NT
                                   ,(CASE WHEN  NVL(B.HOL_TYPE,'NOR')='HOL' THEN l_nt90_rate ELSE l_nt60_rate END )
                                   ,C.START_NT, B.TIME_OUT, 'N','Auto Entry ATT_ABS2',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0-- , hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)
                                             + HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               --AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;

                    --NGAY THUONG

                           INSERT INTO THR_EXTRA_TIME
                        (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                        , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                        , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                        ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                        )
                        SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                              ,(CASE WHEN (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  HR_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot, l_company_pk) 
                                  + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                     WHEN l_ot_allow_yn='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                     ELSE HR_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                            + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                               END) -NVL(B.TEMP_OT,0)>0 
                                    THEN (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  HR_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot, l_company_pk) 
                                                  + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                                     WHEN l_ot_allow_yn='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                                     ELSE HR_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                                            + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                               END) -NVL(B.TEMP_OT,0)
                              ELSE 0 END) AS OT
                               ,l_ot_rate
                               ,C.START_OT, B.TIME_OUT, 'N','Auto Entry ATT_ABS3',0,SYSDATE, p_crt_by
                               ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                              ,0,0-- , hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                              ,B.TEMP_OT
                          FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C,
                          (SELECT R.THR_EMP_PK, decode(r.REG_TYPE,'03',nvl(R.REG_HOURS,0),0) as reg_hour, 1 AS FLAG
                              , decode(r.REG_TYPE,'04',1,0) as reg_04
                        FROM THR_REGULATION R 
                        WHERE R.DEL_IF=0 AND p_work_dt BETWEEN R.START_DT AND R.END_DT) allow
                         WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                           AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                           and b.THR_EMP_PK = allow.thr_emp_pk(+)
                           AND B.WORK_DT = p_work_dt
                           AND (CASE WHEN NVL(ALLOW.FLAG,0)=0 THEN  HR_SF_GET_OT_COM(C.START_OT,b.DATE_OUT||B.TIME_OUT ,C.PK, B.WORK_DT,l_kind_ot, l_company_pk) 
                                            + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                                     WHEN l_ot_allow_yn='N' OR NVL(ALLOW.REG_04,0)=1 THEN 0
                                     ELSE HR_SF_GET_OT_COM( TO_CHAR(to_date(p_work_dt||C.END_TIME,'YYYYMMDDHH24:MI')-NVL(ALLOW.REG_HOUR,0)/24,'HH24:MI')
                                                    ,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,l_kind_ot, l_company_pk) 
                                            + HR_GET_C_OT_V4(B.DATE_IN||B.TIME_IN,p_work_dt||C.START_TIME,C.PK,p_work_dt, l_company_pk)
                               END)-NVL(B.TEMP_OT,0)>0
                           AND B.TIME_OUT IS NOT NULL
                           AND B.TIME_IN IS NOT NULL
                           AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                             WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                             AND D.THR_EMP_PK=p_thr_emp_pk)
                           AND NVL(A.OT_YN,'Y')='Y'
                           AND B.THR_EMP_PK=p_thr_emp_pk
                           AND B.HOL_TYPE IS NULL;

                              -- NT  
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, THR_WG_PK, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.THR_WG_PK,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT,0)>0
                                        THEN  HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT,0)
                                        ELSE 0 END) AS NT
                                   ,l_nt30_rate
                                   ,C.START_NT, B.TIME_OUT, 'N','Auto Entry ATT_ABS4',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_NT1_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                              -- AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;
                       
                           -- NT2 LOAI 1  1 NGAY CO 2 LOAI NT KHAC RATE 
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT2', B.thr_wg_pk ,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT2,0)>0
                                        THEN HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT2,0)
                                        ELSE 0 END)  AS NT
                                   ,l_nt45_rate
                                   ,C.START_NT, B.TIME_OUT, 'N','Auto Entry ATT_ABS4',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT2
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT2'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL
                               AND (C.DURING_DAY=2 
                                OR (C.DURING_DAY=1 AND C.START_NT<=C.START_OT)
                               );
                               
                            -- NT2 LOAI 2  1 NGAY CO 2 LOAI NT KHAC RATE 
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT3', B.thr_wg_pk ,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,(CASE WHEN HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT3,0)>0
                                        THEN HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)-NVL(B.TEMP_NT3,0)
                                        ELSE 0 END)  AS NT
                                   ,l_nt45_2_rate
                                   ,C.START_NT, B.TIME_OUT, 'N','Auto Entry ATT_ABS4',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'Y',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT3
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND HR_SF_GET_NT2_COM(C.START_NT,B.DATE_OUT||B.TIME_OUT,C.PK,B.WORK_DT,B.DATE_IN||B.TIME_IN, l_company_pk)>0
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT3'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL
                               AND C.DURING_DAY=1 AND C.START_NT>C.START_OT;   
                               
                               
                       
           ELSE --INPUT BY HAND
                 --NGAY LE, CN
                      INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'HT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_ht AS HT
                                   ,DECODE(B.HOL_TYPE,'HOL',l_ht_rate,l_st_rate)
                                   ,B.TIME_IN, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_HT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='HT'
                                                        AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_ht,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;

                          INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_ot AS HT
                                   ,(CASE WHEN p_day_type='HOL' THEN l_oht_rate ELSE l_ost_rate END) as rate
                                   ,B.TIME_IN, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_OT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                                        AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_ht,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;


                            -- NT
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_nt AS NT
                                   ,(CASE WHEN  p_day_type='HOL' THEN l_nt90_rate ELSE l_nt60_rate END )
                                   ,C.START_NT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                                AND NVL(p_nt,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NOT NULL;
                               
                --NGAY THUONG
                        INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'OT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                  ,p_ot AS OT,l_ot_rate
                                   ,C.START_OT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_OT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='OT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_ot,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;

                              -- NT 
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_nt AS NT
                                   ,l_nt30_rate
                                   ,C.START_NT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_nt,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;
                       
                              -- NT2 
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT2', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_nt2 AS NT
                                   ,l_nt45_rate
                                   ,C.START_NT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT2
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT2'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_nt2,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;
                    
                                              -- NT2 LOAI 2 (NT3)
                           INSERT INTO THR_EXTRA_TIME
                            (PK, THR_EMP_PK, OT_TYPE, thr_wg_pk, THR_WS_PK, WORK_DT, START_TIME, END_TIME
                            , OT_TIME, PAY_RATE, START_TIME_ORG, END_TIME_ORG, MOD_BYHAND_YN
                            , REMARK, DEL_IF, CRT_DT, CRT_BY,DAY_TYPE,HOL_TYPE,MOD_AUTO_YN,DATE_OUT
                            ,WEEK_NUM,WEEK_NUM_IN_MONTH,TEMP_OT
                            )
                            SELECT THR_EXTRA_TIME_SEQ.NEXTVAL,B.THR_EMP_PK,'NT3', B.thr_wg_pk,B.THR_WS_PK,B.WORK_DT,C.START_OT,B.TIME_OUT
                                   ,p_nt3 AS NT
                                   ,l_nt45_2_rate
                                   ,C.START_NT, B.TIME_OUT, 'Y','INPUT BY HAND',0,SYSDATE, p_crt_by
                                   ,B.DAY_TYPE,B.HOL_TYPE,'N',B.DATE_OUT
                                   ,0,0--, hr_f_get_week(B.WORK_DT), hr_f_get_month_week(B.WORK_DT)
                                   ,B.TEMP_NT3
                              FROM THR_EMPLOYEE A,THR_TIME_MACHINE B, THR_WORK_SHIFT C
                             WHERE A.DEL_IF=0 AND B.DEL_IF = 0 AND C.DEL_IF = 0
                               AND B.THR_WS_PK = C.PK AND A.PK=B.THR_EMP_PK
                               AND B.WORK_DT = p_work_dt
                               AND B.TIME_OUT IS NOT NULL
                               AND B.TIME_IN IS NOT NULL
                               AND B.THR_EMP_PK NOT IN (SELECT D.THR_EMP_PK FROM THR_EXTRA_TIME D
                                                 WHERE D.DEL_IF = 0 AND D.WORK_DT = p_work_dt AND D.OT_TYPE='NT3'
                                                 AND D.THR_EMP_PK=p_thr_emp_pk)
                               AND NVL(A.OT_YN,'Y')='Y'
                               AND NVL(p_nt3,-1)>=0
                               AND B.THR_EMP_PK=p_thr_emp_pk
                               AND B.HOL_TYPE IS NULL;                               
    

           END IF; --AUTO 
           
           L_ERROR:='08';
            --INSERT NEW DATA WHEN DATA IS CHANGED
            UPDATE THR_ATTENDANCE_MODIFY F
             SET   ( TIME_IN,DATE_IN, TIME_OUT ,DATE_OUT
                , WORK_TIME,THR_WS_PK
               ,OT,NT,NT2,NT3,HT
                ,F.TEMP_OUT,F.TEMP_IN,F.TEMP_OUT2,F.TEMP_IN2,F.TEMP_WT
                ,F.TEMP_OT,F.TEMP_NT,F.TEMP_NT2,F.TEMP_NT3,F.TEMP_HT--V4MOICOCAINAY
                )
                =(            
                    SELECT TM.TIME_IN,TM.DATE_IN, TM.TIME_OUT ,TM.DATE_OUT
                    , TM.WORK_TIME,B.THR_WS_PK
                    ,E.OT,E.NT,E.NT2,E.NT3,E.HT
                    ,TM.TEMP_OUT,TM.TEMP_IN,TM.TEMP_OUT2,TM.TEMP_IN2,TM.TEMP_WT
                    ,TM.TEMP_OT,TM.TEMP_NT,TM.TEMP_NT2,TM.TEMP_NT3,TM.TEMP_HT--V4MOICOCAINAY
                    FROM THR_EMPLOYEE A,THR_TIME_MACHINE TM,THR_WG_SCH_DETAIL B
                    ,(SELECT T.THR_EMP_PK ,MAX(DECODE(T.OT_TYPE,'OT',T.OT_TIME)) OT
                        ,MAX(DECODE(T.OT_TYPE,'HT',T.OT_TIME)) HT
                        ,MAX(DECODE(T.OT_TYPE,'NT',T.OT_TIME)) NT
                        ,MAX(DECODE(T.OT_TYPE,'NT2',T.OT_TIME)) NT2
                        ,MAX(DECODE(T.OT_TYPE,'NT3',T.OT_TIME)) NT3
                        FROM THR_EXTRA_TIME T WHERE T.DEL_IF=0 AND T.WORK_DT=P_WORK_DT
                        AND T.THR_EMP_PK=P_THR_EMP_PK GROUP BY T.THR_EMP_PK) E 
                    WHERE A.DEL_IF=0 AND B.DEL_IF=0 AND TM.DEL_IF(+)=0  
                    AND B.THR_EMP_PK=A.PK 
                    AND TM.THR_EMP_PK(+)=B.THR_EMP_PK
                    AND TM.WORK_DT(+)=B.WORK_DT
                    AND B.THR_EMP_PK=E.THR_EMP_PK(+)
                    AND B.WORK_DT=P_WORK_DT
                    AND B.THR_EMP_PK=P_THR_EMP_PK
                    AND A.PK=P_THR_EMP_PK
                    ) 
                WHERE   F.DEL_IF=0 AND F.WORK_DT=P_WORK_DT AND F.THR_EMP_PK=P_THR_EMP_PK
                AND PK=L_THR_ATT_MODIFY_PK
                 ;
                    L_ERROR:='09';
                 UPDATE THR_TIME_MACHINE A  
                 SET THR_ATTENDANCE_MODIFY_PK=L_THR_ATT_MODIFY_PK
                 WHERE A.DEL_IF=0 
                 AND A.WORK_DT=P_WORK_DT
                 AND NVL(A.CLOSE_YN,'N')<>'Y' AND NVL(A.CLOSE_M_YN,'N')<>'Y'
                 AND A.THR_EMP_PK=P_THR_EMP_PK;
                    
         END IF; --UPDATE





exception
    WHEN l_check THEN
      raise_application_error(-20019,'');
    when others then
      raise_application_error(-20002,l_error||SQLERRM);
      ROLLBACK WORK;
end ;
 
 
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01500_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01500_0(
    p_action        varchar,
    p_workgroup_id  varchar,
    p_workgroup_nm  varchar,
    p_workgroup_fnm varchar2,
    p_remark        varchar,
    p_seq           number,
    p_thr_work_group_pk number,
    p_company_pk number,
    p_crt_by        varchar
) IS
tmpVar NUMBER;
 l_flag_exist boolean:=FALSE;
   l_cur_rec number;
   l_cur sys_refcursor;

   have_emp   exception;
/******************************************************************************
   NAME:       sp_upd_workgroup
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        5/14/2009   Thach Bao Ky       1. Created this procedure.

******************************************************************************/
BEGIN
    IF p_action = 'INSERT' THEN
        INSERT INTO THR_WORK_GROUP
        (PK, WORKGROUP_NM, workgroup_fnm, REMARK, DEL_IF, CRT_BY, CRT_DT,WORKGROUP_ID,SEQ,tco_company_pk)
        VALUES
        (THR_WORK_GROUP_SEQ.NEXTVAL,p_workgroup_nm,p_workgroup_fnm,p_remark,0,p_crt_by,SYSDATE,p_workgroup_id,P_SEQ,p_company_pk);

    ELSIF p_action = 'UPDATE' THEN
        UPDATE THR_WORK_GROUP G
        SET G.WORKGROUP_NM = p_workgroup_nm
            ,G.REMARK = p_remark
            ,G.WORKGROUP_ID = p_workgroup_id
            ,G.MOD_BY = p_crt_by
            ,G.MOD_DT = SYSDATE
            ,G.SEQ=P_SEQ
            ,g.workgroup_fnm = p_workgroup_fnm
        WHERE G.DEL_IF = 0
            AND G.PK = p_thr_work_group_pk;
    ELSE
        
         open l_cur for
            select 1
            from thr_employee te
           where te.del_if=0 and te.thr_wg_pk = p_thr_work_group_pk and te.del_if = 0;

            FETCH l_cur INTO l_cur_rec;
              l_flag_exist := l_cur%FOUND;
            CLOSE l_cur;

           IF l_flag_exist=true THEN --CO SU THAY DOI
                raise have_emp;
           END IF;
           
        UPDATE THR_WORK_GROUP G
        SET G.DEL_IF = G.PK
            ,G.MOD_BY = p_crt_by
            ,G.MOD_DT = SYSDATE
        WHERE G.DEL_IF = 0
            AND G.PK = p_thr_work_group_pk;
    END IF;
   EXCEPTION
   when have_emp then
      rollback work;
      raise_application_error (-20007, 'This work group have employees!');
     WHEN NO_DATA_FOUND THEN
       NULL;
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END ST_HR_UPD_HRTI01500_0;
 
 
 
 
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01600_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01600_0 (
   p_action      varchar2,
   p_thr_wd_pk   varchar2,
   p_thr_emp_pk  varchar2,
   p_emp_id      varchar2,
   p_emp_name    varchar2,
   p_org_name    varchar2,
   p_shift       varchar2,
   p_day_type    varchar2,
   p_work_dt     varchar2,
   p_date_in     varchar2,
   p_time_in     varchar2,
   p_date_out    varchar2,
   p_time_out    varchar2,
   p_wt          varchar2,
   p_ot          varchar2,
   p_nt          varchar2,
   p_ont         varchar2,
   p_absence_type varchar2,
   p_absence_time varchar2,
   p_description varchar2,
   p_mod_by      varchar2,
   p_mod_dt      varchar2,
   p_wt_rate     varchar2,
   p_ot_rate     varchar2,
   p_nt_rate     varchar2,
   p_ont_rate    varchar2,
   p_abs_pay_yn  varchar2,
   p_abs_rate    varchar2,
   p_lately_minute  varchar2,
   p_early_minute   varchar2,
   p_crt_by varchar2

) 
IS
   l_kind_ot varchar2(10):='02';
   l_mod_wt_yn  varchar2(1):='N';
   l_mod_abs_yn varchar2(1):='N';
   
   l_date_in  varchar2(8);
   l_time_in  varchar2(5);
   l_date_out varchar2(8);
   l_time_out varchar2(5);
   l_wt       varchar2(10);
   l_ot       varchar2(10);
   l_nt       varchar2(10);
   l_ont      varchar2(10);
   l_shift_time varchar2(2);
   l_hol_type varchar2(10);
   l_days_shift number;
   l_tco_company_pk  number;
   
   l_wt_rate         number;
   l_ot_rate         number;
   l_nt30_rate       number;
   l_nt45_rate       number;
   l_nt60_rate       number;
   l_nt90_rate       number;
   l_ht_rate         number;
   l_ost_rate        number;
   l_oht_rate        number;
   l_st_rate         number;
   l_total_wt_abs    number;
   
   l_absence_type   varchar2(10);
   l_absence_time   varchar2(10);
   l_company_pay_yn varchar2(1);
   l_company_pay_rate number;
   l_insurance_pay_yn varchar2(1);
   l_insurance_pay_rate number ;
   l_short_nm       varchar2(50);
   
   g_date_in varchar2(8);
   g_date_out varchar2(8);
BEGIN
      
    select nvl(max(e.tco_company_pk), 99) 
      into l_tco_company_pk from thr_employee e
      where e.del_if=0
      and e.pk = p_thr_emp_pk;
    
     select  sum(decode(c.code,'01',c.num_1,0)) as wt
            ,sum(decode(c.code,'02',c.num_1,0)) as ot
            ,sum(decode(c.code,'03',c.num_1,0)) as nt30
            ,sum(decode(c.code,'04',c.num_1,0)) as nt45
            ,sum(decode(c.code,'05',c.num_1,0)) as nt60
            ,sum(decode(c.code,'06',c.num_1,0)) as nt90
            ,sum(decode(c.code,'07',c.num_1,0)) as ht
            ,sum(decode(c.code,'08',c.num_1,0)) as ost
            ,sum(decode(c.code,'09',c.num_1,0)) as oht
            ,sum(decode(c.code,'10',c.num_1,0)) as st
             into l_wt_rate,l_ot_rate,l_nt30_rate,l_nt45_rate,l_nt60_rate,l_nt90_rate,l_ht_rate,l_ost_rate,l_oht_rate,l_st_rate
             from thr_code_detail c,thr_code_master d
             where c.del_if=0 and d.del_if=0 and c.thr_code_master_pk=d.pk
             and d.id='HR0028' and nvl(d.use_yn,'N')='Y'
             and (nvl(to_char(c.tco_company_pk),l_tco_company_pk) = l_tco_company_pk );

    select a.date_in
        , a.time_in
        , a.date_out
        , a.time_out
        , a.wt
        , a.ot
        , a.nt
        , a.ont
        , b.absence_type
        , b.absence_time
        , nvl(a.shift_time, 8)
        , a.hol_type
        , a.days_shift
    into l_date_in
        , l_time_in
        , l_date_out
        , l_time_out
        , l_wt
        , l_ot
        , l_nt
        , l_ont 
        , l_absence_type
        , l_absence_time
        , l_shift_time
        , l_hol_type
        , l_days_shift
    from thr_work_date a, thr_absence b
    where a.del_if=0 and b.del_if(+)=0
    and a.thr_emp_pk = b.thr_emp_pk(+)
    and a.work_dt = b.absence_dt(+)
    and a.pk = p_thr_wd_pk;
    
    if nvl(l_date_in, ' ') <> nvl(p_date_in, ' ') or nvl(l_time_in, ' ') <> nvl(p_time_in, ' ')  
       or nvl(l_date_out, ' ') <> nvl(p_date_out, ' ') or nvl(l_time_out, ' ') <> nvl(p_time_out, ' ')
       or nvl(l_wt, 0) <> nvl(p_wt, 0) or nvl(l_ot, 0) <> nvl(p_ot, 0)
       or nvl(l_nt, 0) <> nvl(p_nt, 0) or nvl(l_ont, 0) <> nvl(p_ont, 0) then
        l_mod_wt_yn:='Y';  
    end if;
    
    if nvl(l_absence_type, ' ') <> nvl(p_absence_type, ' ') 
        or nvl(l_absence_time, 0) <> nvl(p_absence_time, 0) then
        l_mod_abs_yn:='Y';
    end if;
    
   if p_action = 'UPDATE' then
    
        
        if nvl(p_absence_time, 0) > 0 and l_hol_type is not null then
            raise_application_error(-20009, 'THIS IS DAY OFF, YOU CAN NOT INPUT ABSENCE !');
        end if;
    
       if  l_mod_wt_yn = 'Y' then 
            
          
            if  p_wt is null then --Auto data
                
               if nvl(l_days_shift, 1) = 1 then 
                    g_date_in:= nvl(p_date_in, p_work_dt);
                    g_date_out:= nvl(p_date_out, p_work_dt);
               else
                    g_date_in:= nvl(p_date_in, p_work_dt);
                    g_date_out:= nvl(p_date_out, to_char(to_date(p_work_dt, 'yyyymmdd')+1, 'yyyymmdd'));
               end if;
            
                update thr_work_date a
                set a.date_in = g_date_in
                   ,a.time_in = p_time_in
                   ,a.date_out = g_date_out
                   ,a.time_out = p_time_out
                   ,a.wt = hr_sf_get_wt_com(g_date_in||p_time_in, g_date_out||p_time_out,a.thr_ws_pk,a.work_dt, nvl(a.tco_company_pk, 99) )
                   ,a.ot = case when a.ot_yn = 'Y' then hr_sf_get_ot_com(a.start_ot, g_date_out||p_time_out , a.thr_ws_pk, a.work_dt,l_kind_ot, nvl(a.tco_company_pk, 99))
                                else 0 end
                   ,a.mod_byhand_yn = 'Y'
                   ,a.mod_by = p_crt_by
                   ,a.mod_dt = sysdate
                   ,a.remark = l_mod_wt_yn
                where a.del_if=0
                and a.pk = p_thr_wd_pk;
                
                update thr_work_date a
                set a.nt = hr_sf_get_nt1_com(a.start_nt,g_date_out||p_time_out, a.thr_ws_pk, a.work_dt, g_date_in||p_time_in, nvl(a.tco_company_pk, 99))
                   ,a.ont= case when a.ot_yn = 'Y' then hr_sf_get_nt2_com(a.start_nt,g_date_out||p_time_out, a.thr_ws_pk, a.work_dt, g_date_in||p_time_in, nvl(a.tco_company_pk, 99))
                                else 0 end
                   ,a.mod_byhand_yn = 'Y'
                   ,a.mod_by = p_crt_by
                   ,a.mod_dt = sysdate
                   ,a.remark = l_mod_wt_yn
                where a.del_if=0
                and a.time_in is not null
                and a.time_out is not null
                and a.pk = p_thr_wd_pk;
            
            else  --Input data
                update thr_work_date a
                set a.date_in = p_date_in
                   ,a.time_in = p_time_in
                   ,a.date_out = p_date_out
                   ,a.time_out = p_time_out
                   ,a.wt = p_wt
                   ,a.ot = p_ot
                   ,a.nt = p_nt
                   ,a.ont= p_ont
                   ,a.mod_byhand_yn = 'Y'
                   ,a.mod_by = p_crt_by
                   ,a.mod_dt = sysdate
                   ,a.remark = l_mod_wt_yn
                where a.del_if=0
                and a.pk = p_thr_wd_pk;
            end if;
            
            -- tinh gio wt rate, ot rate, nt rate
            update thr_work_date a
            set a.wt_rate = case when nvl(a.wt, 0) > 0 then decode(a.hol_type, 'SUN', l_st_rate, 'HOL', l_ht_rate, l_wt_rate) else 0 end
               ,a.ot_rate = case when nvl(a.ot, 0) > 0 then decode(a.hol_type, 'SUN', l_ost_rate, 'HOL', l_oht_rate, l_ot_rate) else 0 end
               ,a.nt_rate = case when nvl(a.nt, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt30_rate) else 0 end
               ,a.ont_rate = case when nvl(a.ont, 0) > 0 then decode(a.hol_type, 'SUN', l_nt60_rate, 'HOL', l_nt90_rate, l_nt45_rate) else 0 end
               ,a.wd = round(nvl(a.wt, 0)/ nvl(a.shift_time, 8), 2)
            where a.del_if=0
            and a.pk = p_thr_wd_pk;
            
       
        end if;
        
        
        if l_mod_abs_yn = 'Y' and l_hol_type is null then
           
            if p_absence_type is not null then
            
               select max(decode(nvl(v.num_1,0), 0, 'N', 'Y')), max(nvl(v.num_1, 0))   
                    , max(decode(nvl(v.num_2,0), 0, 'N', 'Y')), max(nvl(v.num_2, 0))
                    , max(v.char_1)  
               into l_company_pay_yn, l_company_pay_rate, l_insurance_pay_yn, l_insurance_pay_rate, l_short_nm
               from vhr_hr_code v where v.id='HR0003' and v.code = p_absence_type;
               
                 -- co roi thi update
                  update thr_absence a
                    set a.absence_type = p_absence_type
                    , a.absence_time = nvl(p_absence_time, l_shift_time)
                    , a.company_pay_yn = l_company_pay_yn
                    , a.company_pay_rate = l_company_pay_rate
                    , a.insurance_pay_yn = l_insurance_pay_yn
                    , a.insurance_pay_rate = l_insurance_pay_rate
                    , a.short_nm = l_short_nm
                    , a.mod_by = p_crt_by
                    , a.mod_dt = sysdate
                    , a.remark = 'UPDATE FROM WORKING DAILY FORM'
                   where a.del_if=0
                   and a.thr_emp_pk = p_thr_emp_pk
                   and a.absence_dt = p_work_dt;
               
                 -- chua co data thi insert
                 insert into thr_absence(pk, thr_absence_period_pk, thr_emp_pk, thr_wg_pk, thr_ws_pk, absence_type, absence_time
                                     , company_pay_yn, company_pay_rate, insurance_pay_yn, insurance_pay_rate
                                     , absence_dt, start_time, end_time, del_if, crt_dt, crt_by, remark, description
                                     , reg_type, from_dt,to_dt, short_nm, week_no)  
                 select thr_absence_seq.nextval, null, a.pk, a.thr_wg_pk, p_shift, p_absence_type, nvl(p_absence_time, l_shift_time)
                                    ,l_company_pay_yn, l_company_pay_rate, l_insurance_pay_yn, l_insurance_pay_rate
                                    , p_work_dt, null, null, 0, sysdate, p_crt_by, 'INSERT FROM WORKING DAILY FORM', null
                                    , 1, p_work_dt, p_work_dt, l_short_nm, HR_F_GET_WEEKS(p_work_dt)
                 from thr_employee a
                 where a.del_if=0
                 and a.pk =p_thr_emp_pk
                 and a.pk not in (select b.thr_emp_pk from thr_absence b where b.del_if=0
                                    and b.absence_dt = p_work_dt
                                    and b.thr_emp_pk = p_thr_emp_pk);
               
                
             
            end if;
            
        end if;
        
        update thr_absence a
        set A.DEL_IF = a.pk
        , A.MOD_BY = p_crt_by
        , A.MOD_DT = sysdate
        , A.REMARK = 'DELETE AUTO FROM WORKING DAILY'
        where a.del_if=0
        and a.absence_dt = p_work_dt
        and a.thr_emp_pk = p_thr_emp_pk
        and a.absence_type = '13' -- no scan 
        and a.thr_emp_pk in (select w.thr_emp_pk  from thr_work_date w
                                where w.del_if=0
                                and w.pk = p_thr_wd_pk
                                and w.time_in is not null or w.time_out is not null );
        
        
        --kiem tra du lieu wt + absence
        select max(nvl(a.wt, 0) + nvl(b.absence_time, 0))
        into l_total_wt_abs 
        from thr_work_date a, thr_absence b
        where a.del_if=0 and b.del_if(+) = 0
        and a.thr_emp_pk = b.thr_emp_pk(+)
        and a.work_dt = b.absence_dt(+)
        and a.pk = p_thr_wd_pk;
        
        if nvl(l_total_wt_abs, 0) > nvl(l_shift_time, 0) then
            raise_application_error(-20009, 'GIỜ WT VÀ GIỜ VẮNG KHÔNG THỂ VƯỢT GIỜ CA LÀM VIỆC!');
        end if;
        
        update thr_work_date a
        set a.description = p_description
        where a.del_if=0
        and a.pk = p_thr_wd_pk;    
        
   elsif p_action = 'DELETE' then
   
       update thr_work_date a
        set a.del_if = a.pk
        ,a.remark  = 'DELETE BY WORKING DAILY'
        ,a.mod_by = p_crt_by
        ,a.mod_dt = sysdate
        where a.del_if=0
        and a.pk = p_thr_wd_pk;  
        
     -- kiem tra neu co vang thi delete
       update thr_absence a
       set a.del_if= a.pk 
        ,a.remark  = 'DELETE BY WORKING DAILY'
        ,a.mod_by = p_crt_by
        ,a.mod_dt = sysdate
        where a.del_if=0
        and a.thr_emp_pk = p_thr_emp_pk
        and a.absence_dt = p_work_dt; 
         
   end if;
      
      
EXCEPTION
    
    WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20002,SQLERRM);
      ROLLBACK WORK;
END ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01800_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01800_1 (
   p_action             varchar2,
   p_no                 varchar2,
   p_ot_reg_pk          varchar2, 
   p_thr_emp_pk         varchar2,    
   p_org_name           varchar2,    
   p_emp_id             varchar2,   
   p_full_name          varchar2,  
   p_pos_type           varchar2,
   p_job_type           varchar2,
   p_work_dt            varchar2,
   p_start_time         varchar2,
   p_end_time           varchar2, 
   p_ot_hours           varchar2,
   p_description        varchar2,   
   
   p_crt_by     varchar2

)
is

  
begin
     
    
    if p_action = 'UPDATE' then
        update thr_daily_ot_reg a
        set a.start_time = p_start_time
        , a.end_time    =  p_end_time
        , a.ot = round((to_date(p_work_dt||p_end_time, 'YYYYMMDDHH24:MI') -to_date(p_work_dt||p_start_time, 'YYYYMMDDHH24:MI'))*24, 2)
        , a.description = p_description 
        , a.mod_by = p_crt_by
        , a.mod_dt = sysdate
        , a.remark = 'UPDATE DATA'
        where a.del_if=0
        and a.pk = p_ot_reg_pk;
     
    else
     
        update thr_daily_ot_reg a
        set a.del_if = a.pk
        , a.mod_by = p_crt_by
        , a.mod_dt = sysdate
        , a.remark = 'DELETE DATA'
        where a.del_if=0
        and a.pk = p_ot_reg_pk;
        
     end if;                 



exception
    when others then
      raise_application_error(-20002,sqlerrm);
      rollback work;
end ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01801_0;

CREATE OR REPLACE PROCEDURE HPDQ.st_hr_upd_hrti01801_0 (
   p_action              varchar,
   p_no                  varchar2,
   p_thr_emp_pk          varchar2,
   p_emp_id              varchar2,
   p_emp_name            varchar2,
   p_org_pk              varchar2,
   p_org_name            varchar2,
   p_join_dt             varchar2,
   p_work_dt             varchar2,
   p_start_time          varchar2,
   p_end_time            varchar2, 
   p_description         varchar2,
   p_seq                 varchar2,  
   p_crt_by              varchar
)
is

   l_emp_id         varchar2(20);
    
begin
   if p_action = 'INSERT' then
     select max(a.emp_id) into l_emp_id 
     from thr_daily_ot_reg a
     where a.del_if=0
     and a.work_dt = p_work_dt
     and a.thr_emp_pk = p_thr_emp_pk;
   
     if l_emp_id is not null then
        raise_application_error(-20009, 'ALREADY EXIST DATA WITH EMPLOYEE ID '|| l_emp_id);
     end if;
  
     insert into thr_daily_ot_reg(pk, thr_emp_pk,  emp_id, tco_org_pk, pos_type, job_type, work_dt
                                , start_time, end_time, ot, description, del_if, crt_by, crt_dt, sequence_dt, remark)
     select thr_daily_ot_reg_seq.nextval, e.pk,  e.emp_id, e.tco_org_pk, e.pos_type, e.job_type, p_work_dt, p_start_time, p_end_time 
                                ,round((to_date(p_work_dt||p_end_time, 'YYYYMMDDHH24:MI') -to_date(p_work_dt||p_start_time, 'YYYYMMDDHH24:MI'))*24, 2)
                                ,p_description, 0, p_crt_by, sysdate, p_seq, 'INSERT FROM FORM'
     from thr_employee e
     where e.del_if=0 
     and e.pk =  p_thr_emp_pk 
     and e.pk not in (select d.thr_emp_pk from thr_daily_ot_reg d where d.del_if=0
                            and d.work_dt = p_work_dt
                            and D.THR_EMP_PK = e.pk)
      ;
          
   end if;
      
 
---------
exception
   
   when others
   then
      -- CONSIDER LOGGING THE ERROR AND THEN RE-RAISE
      raise_application_error(-20024,sqlerrm );
      rollback work;
end;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01900_1;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01900_1 (
   p_action             varchar2,
   p_no                 varchar2,
   p_table_pk          varchar2, 
   p_thr_emp_pk         varchar2,    
   p_org_name           varchar2,    
   p_emp_id             varchar2,   
   p_full_name          varchar2,  
   p_pos_type           varchar2,
   p_job_type           varchar2,
   p_start_dt           varchar2,
   p_end_dt             varchar2,
   p_reason             varchar2, 
   p_description        varchar2,   
   
   p_crt_by     varchar2

)
is

  
begin
     
    
    if p_action = 'UPDATE' then
    
        update thr_att_time_auto a
        set a.end_dt = p_end_dt
        , a.start_dt =  p_start_dt
        , a.reason = p_reason
        , a.description = p_description 
        , a.mod_by = p_crt_by
        , a.mod_dt = sysdate
        , a.remark = 'UPDATE DATA'
        where a.del_if=0
        and a.pk = p_table_pk;
     
    else
     
        update thr_att_time_auto a
        set a.del_if = a.pk
        , a.mod_by = p_crt_by
        , a.mod_dt = sysdate
        , a.remark = 'DELETE DATA'
        where a.del_if=0
        and a.pk = p_table_pk;
        
     end if;                 



exception
    when others then
      raise_application_error(-20002,sqlerrm);
      rollback work;
end ;
/

DROP PROCEDURE HPDQ.ST_HR_UPD_HRTI01901_0;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_UPD_HRTI01901_0 (
   p_action             varchar2,
   p_no                 varchar2,
   p_table_pk          varchar2, 
   p_emp_id             varchar2,   
   p_full_name          varchar2,  
   p_org_pk             varchar2,  
   p_org_name           varchar2,  
   p_join_dt            varchar2,
   p_start_dt           varchar2,
   p_end_dt             varchar2,
   p_reason             varchar2, 
   p_description        varchar2,   
   p_seq                varchar2,
   p_crt_by     varchar2

)
is

  
begin
     
    
    if p_action = 'INSERT' then
    
        insert into thr_att_time_auto (pk, thr_emp_pk, emp_id, tco_org_pk, pos_type, job_type
            , start_dt, end_dt, reason, description, sequence_dt
            , del_if, crt_by, crt_dt)
        select  thr_att_time_auto_seq.nextval, a.pk, a.emp_id, a.tco_org_pk, a.pos_type, a.job_type
        , p_start_dt, p_end_dt, p_reason, p_description, p_seq
        , 0, p_crt_by, sysdate
        from thr_employee a
        where a.del_if=0
        and upper(a.emp_id) = upper(p_emp_id)
        and not exists (select 1 from thr_att_time_auto b 
                        where b.del_if=0 
                        and b.thr_emp_pk = a.pk
                        and b.start_dt = p_start_dt)
        ;
    
     end if;                 



exception
    when others then
      raise_application_error(-20002,sqlerrm);
      rollback work;
end ;
/

DROP PROCEDURE HPDQ.HP_HR_PRO_HRTI01701_0;

CREATE OR REPLACE PROCEDURE HPDQ.hp_hr_pro_hrti01701_0(
    p_work_mon          in varchar2,
    p_from              in varchar2,    -- YYYYMMDD
    p_to                in varchar2,     -- YYYYMMDD
    p_tco_org_pk        in varchar2,
    p_sal_period        in varchar2,
    p_emp_id            in varchar2,
    p_crt_by            varchar2,
    p_result        out number      -- RETURN VALUE ( NUMBER )
) is

l_error         varchar2(2):='';
l_flag_exist boolean:=false;
l_cur_rec number;
l_cur sys_refcursor;
l_check     exception;
l_exp_wt     exception;
l_exp_ot     exception;
l_probation_num number(1):=0;
flag_cal_resign varchar2(1):='N';

l_pro varchar2(200):='';
l_string varchar2(2000):='';
l_company_pk number:=0;

l_resign_num        number;

l_thr_emp_pk      number;
l_day_in_month    number;
l_wt_in_month_t7_8     number;
l_wt_in_month_t7_4   number;
begin

 
    l_error := '10';
 select o.tco_company_pk into l_company_pk
                                            from tco_org o where o.del_if=0 
                                            and  o.pk= p_tco_org_pk;
   open l_cur for
    select 1 from thr_close a
    where a.del_if=0 and a.month_close=p_work_mon
    and a.id=p_sal_period
    and a.tco_company_pk=l_company_pk 
    and nvl(a.close_yn,'N')='N';

     fetch l_cur into l_cur_rec;
      l_flag_exist := l_cur%found;
    close l_cur;
    if l_flag_exist=false then
        p_result:=-1;
        raise l_check;
    end if;
    
    --find procedure
    open l_cur for
    select a.char_3 from vhr_hr_code a
    where a.id='HR0044' and upper(a.char_1)=upper('ST_HR_PRO_HRTI01700_0') and  nvl(tco_company_pk,l_company_pk)=l_company_pk;

    fetch l_cur into l_pro;
    l_flag_exist:=l_cur%found;
    close l_cur;

if l_flag_exist=true then --CO SU DUNG PROCEDURE RIENG
    l_string := 'Begin ' || l_pro || '(:1,:2,:3,:4,:5,:6,:7); end;' ;
    execute  immediate l_string using in p_work_mon,in p_from,in p_to,in p_tco_org_pk,in p_sal_period,in p_crt_by,out p_result ;

else

  if p_to < p_from then
  
        raise_application_error(-20019, 'VUI LÒNG CHỌN LẠI. NGÀY KẾT THÚC PHẢI LỚN HƠN NGÀY BẮT ĐẦU');
    
  elsif substr(p_to, 1, 6) <> substr(p_from, 1, 6) then
        raise_application_error(-20019, 'NGÀY KẾT THÚC PHẢI TRONG THÁNG');
  end if;

    if p_emp_id is not null then
       
      select max(a.pk) into l_thr_emp_pk 
      from thr_employee a
       where a.del_if=0
       and upper(a.emp_id) = upper(p_emp_id);
           
       if l_thr_emp_pk is null then
         p_result:=-1;
         raise_application_error(-20019, 'KHÔNG TÌM THẤY MÃ NHÂN VIÊN NÀY TRONG HỆ THỐNG, VUI LÒNG KIỂM TRA LẠI');
       end if;
  else 
          l_thr_emp_pk := null;
  end if;
  
    select a.num_3 
    into l_probation_num 
    from vhr_hr_code a
    where a.id='HR0002' 
    and a.code='01' 
    and  nvl(tco_company_pk,l_company_pk)=l_company_pk;
    
    select decode(nvl(a.num_4,0),0,-1,0)
    into l_resign_num 
    from vhr_hr_code a
    where a.id='HR0006' 
    and a.code='11' 
    and  nvl(tco_company_pk,l_company_pk)=l_company_pk;
    
    SELECT COUNT(*) INTO l_day_in_month FROM THR_CALENDAR A
                    WHERE A.DEL_IF=0 AND A.CAR_DATE BETWEEN p_from AND p_to
                     AND NVL(A.HOL_TYPE,' ')<>'SUN' 
                        and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk ;

     SELECT COUNT(*)*8, sum(case when A.DAY_TYPE = 7 then 4 else 8 end) 
        INTO l_wt_in_month_t7_8, l_wt_in_month_t7_4
            FROM THR_CALENDAR A
                    WHERE A.DEL_IF=0 AND A.CAR_DATE BETWEEN p_from AND p_to
                     AND NVL(A.HOL_TYPE,' ')<>'SUN' 
                        and  nvl(TCO_COMPANY_PK,l_company_pk)=l_company_pk ;
                        
                        
 --xac dinh xem tinh luong thoi viec chung hay rieng 
    open l_cur for
            select 1 from thr_close a
            where a.del_if=0 and a.month_close=p_work_mon  and a.id=p_sal_period
            and a.tco_company_pk=l_company_pk ;

             fetch l_cur into l_cur_rec;
              l_flag_exist := l_cur%found;
            close l_cur;
            
            if l_flag_exist=true then

              select (case when nvl(v.num_3,1)=1 then 'N' else 'Y' end) into flag_cal_resign --Y: tinh luong thoi viec rieng
             from thr_close a,vhr_hr_code v
            where a.del_if=0 and v.id='HR0030' and a.id=v.code 
            and a.month_close=p_work_mon  and a.id=p_sal_period
            and a.tco_company_pk=nvl(v.tco_company_pk,a.tco_company_pk)
            and a.tco_company_pk=l_company_pk;
           
             end if;
    
   update thr_work_month s  
   set s.status='A',
       s.times=null,
       s.sal_period=p_sal_period
    where s.del_if=0 and s.work_mon=p_work_mon
    and s.times is not null      
    and s.tco_org_pk in (select g.pk
                                         from tco_org g
                                        where g.del_if = 0
                                        start with g.pk =p_tco_org_pk
                                        connect by prior g.pk =g.p_pk)
     and thr_emp_pk in ( select e.pk from thr_employee e where e.del_if=0                                          
                                and nvl(e.left_dt,'30000101') > p_to             
                                 and s.thr_emp_pk=e.pk and  e.sal_period=p_sal_period)
     and s.thr_emp_pk=nvl(l_thr_emp_pk, s.thr_emp_pk);
       
    

    update thr_work_month w
    set w.del_if = w.pk
    , w.remark = 'DELETE BY PROCESS'
    , w.mod_by = p_crt_by
    , w.mod_dt = sysdate
    where w.del_if=0 and w.work_mon=p_work_mon
    and w.sal_period = p_sal_period
    and w.tco_org_pk in (select g.pk
                                         from tco_org g
                                        where g.del_if = 0
                                        start with g.pk =p_tco_org_pk
                                        connect by prior g.pk =g.p_pk)
    and w.sal_period=p_sal_period
    and nvl(w.close_yn,'N')='N' and w.times is null
    and w.thr_emp_pk=nvl(l_thr_emp_pk, w.thr_emp_pk);
    
    --unit day: total_wt_l1, total_wt_l2; total_hol_l1; total_hol_l2
    insert into thr_work_month(pk, thr_emp_pk, full_name, emp_id, tco_org_pk, thr_wg_pk, work_mon
    , from_dt, to_dt, join_dt, left_dt, status, job_type, pos_type, wt_in_month
    , wt1, wt2, wt3, wt4, wt5, wt6, wt7, wt8, wt9, wt10, wt11, wt12, wt13, wt14, wt15, wt16, wt17, wt18, wt19, wt20
    , wt21, wt22, wt23, wt24, wt25, wt26, wt27, wt28, wt29, wt30, wt31
    , d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20
    , d21, d22, d23, d24, d25, d26, d27, d28, d29, d30, d31
    , remark, del_if, crt_by, crt_dt, confirm_dt
    , sal_period, total_hol_l1, total_hol_l2, total_hol
    
    , total_wt_l1, total_rate_wt_l1, total_wt_l2, total_rate_wt_l2, total_wt, total_rate_wt
    , total_ot_l1, total_ot_l2, total_rate_ot_l1, total_rate_ot_l2, total_ot, total_rate_ot
    , total_ot_tax_l1, total_ot_tax_l2
    , total_st_l1, total_st_l2, total_rate_st_l1, total_rate_st_l2, total_st, total_rate_st
    , total_ost_l1, total_ost_l2, total_rate_ost_l1, total_rate_ost_l2, total_ost, total_rate_ost
    , total_ht_l1, total_ht_l2, total_rate_ht_l1, total_rate_ht_l2, total_ht, total_rate_ht
    , total_oht_l1, total_oht_l2, total_rate_oht_l1, total_rate_oht_l2, total_oht, total_rate_oht
    
    , abs_ale_l1, total_rate_abs_ale_l1, abs_ale_l2, total_rate_abs_ale_l2, total_abs_ale
    , abs_other_pay_l1, total_rate_abs_other_pay_l1, abs_other_pay_l2, total_rate_abs_other_pay_l2, total_abs_other_pay
    , total_abs_pay_l1, total_rate_abs_pay_l1, total_abs_pay_l2, total_rate_abs_pay_l2, total_abs_pay
    , total_abs_npay_l1, total_rate_abs_npay_l1, total_abs_npay_l2, total_rate_abs_npay_l2, total_abs_npay
    
    , d1_type, d2_type, d3_type, d4_type, d5_type, d6_type, d7_type, d8_type, d9_type, d10_type
    , d11_type, d12_type, d13_type, d14_type, d15_type, d16_type, d17_type, d18_type, d19_type, d20_type
    , d21_type, d22_type, d23_type, d24_type, d25_type, d26_type, d27_type, d28_type, d29_type, d30_type, d31_type
    
    , d1_kind, d2_kind, d3_kind, d4_kind, d5_kind, d6_kind, d7_kind, d8_kind, d9_kind, d10_kind
    , d11_kind, d12_kind, d13_kind, d14_kind, d15_kind, d16_kind, d17_kind, d18_kind, d19_kind, d20_kind
    , d21_kind, d22_kind, d23_kind, d24_kind, d25_kind, d26_kind, d27_kind, d28_kind, d29_kind, d30_kind, d31_kind
    
    )
    
    select thr_work_month_seq.nextval,  e.pk, e.full_name, e.emp_id, e.tco_org_pk, e.thr_wg_pk, p_work_mon 
    , p_from, p_to, e.join_dt, e.left_dt, e.status, e.job_type, e.pos_type, decode(nvl(e.saturday_time, 8), 4, nvl(l_wt_in_month_t7_4, 0), nvl(l_wt_in_month_t7_8, 0))
    
    , z.wt1, z.wt2, z.wt3, z.wt4, z.wt5, z.wt6, z.wt7, z.wt8, z.wt9, z.wt10, z.wt11, z.wt12, z.wt13, z.wt14, z.wt15, z.wt16, z.wt17, z.wt18, z.wt19, z.wt20
    , z.wt21, z.wt22, z.wt23, z.wt24, z.wt25, z.wt26, z.wt27, z.wt28, z.wt29, z.wt30, z.wt31
    , z.d1, z.d2, z.d3, z.d4, z.d5, z.d6, z.d7, z.d8, z.d9, z.d10, z.d11, z.d12, z.d13, z.d14, z.d15, z.d16, z.d17, z.d18, z.d19, z.d20
    , z.d21, z.d22, z.d23, z.d24, z.d25, z.d26, z.d27, z.d28, z.d29, z.d30, z.d31
    ,'PROCESS WORKING MONTHLY', 0, p_crt_by, sysdate , nvl(m.confirm_dt,e.confirm_dt), e.sal_period
     , nvl(z.total_hol_l1, 0), nvl(z.total_hol_l2, 0), nvl(z.total_hol_l1, 0) + nvl(z.total_hol_l2, 0) as total_hol
     
    , z.total_wt_l1, z.total_rate_wt_l1, z.total_wt_l2, z.total_rate_wt_l2
    , nvl(z.total_wt_l1, 0) + nvl(z.total_wt_l2, 0) as total_wt
    , nvl(z.total_rate_wt_l1, 0) + nvl(z.total_rate_wt_l2, 0) as total_rate_wt
     
    
    , nvl(z.total_ot_l1, 0),  nvl(z.total_ot_l2, 0), nvl(z.total_rate_ot_l1, 0), nvl(z.total_rate_ot_l2, 0)
    , nvl(z.total_ot_l1, 0) + nvl(z.total_ot_l2, 0) as total_ot
    , nvl(z.total_rate_ot_l1, 0) + nvl(z.total_rate_ot_l2, 0) as total_rate_ot
    
    , nvl(z.total_ot_tax_l1, 0) , nvl(total_ot_tax_l2, 0)
    
    , nvl(z.total_st_l1, 0),  nvl(z.total_st_l2, 0), nvl(z.total_rate_st_l1, 0), nvl(z.total_rate_st_l2, 0)
    , nvl(z.total_st_l1, 0) + nvl(z.total_st_l2, 0) as total_st
    , nvl(z.total_rate_st_l1, 0) + nvl(z.total_rate_st_l2, 0) as total_rate_st
    
    , nvl(z.total_ost_l1, 0),  nvl(z.total_ost_l2, 0), nvl(z.total_rate_ost_l1, 0), nvl(z.total_rate_ost_l2, 0)
    , nvl(z.total_ost_l1, 0) + nvl(z.total_ost_l2, 0) as total_ost
    , nvl(z.total_rate_ost_l1, 0) + nvl(z.total_rate_ost_l2, 0) as total_rate_ost
    
    , nvl(z.total_ht_l1, 0),  nvl(z.total_ht_l2, 0), nvl(z.total_rate_ht_l1, 0), nvl(z.total_rate_ht_l2, 0)
    , nvl(z.total_ht_l1, 0) + nvl(z.total_ht_l2, 0) as total_ht
    , nvl(z.total_rate_ht_l1, 0) + nvl(z.total_rate_ht_l2, 0) as total_rate_ht
    
    , nvl(z.total_oht_l1, 0),  nvl(z.total_oht_l2, 0), nvl(z.total_rate_oht_l1, 0), nvl(z.total_rate_oht_l2, 0)
    , nvl(z.total_oht_l1, 0) + nvl(z.total_oht_l2, 0) as total_oht
    , nvl(z.total_rate_oht_l1, 0) + nvl(z.total_rate_oht_l2, 0) as total_rate_oht
    
    
    , nvl(z.abs_ale_l1, 0) as abs_ale_l1, nvl(z.total_rate_abs_ale_l1, 0) as total_rate_abs_ale_l1
    , nvl(z.abs_ale_l2, 0) as abs_ale_l2, nvl(z.total_rate_abs_ale_l2, 0) as total_rate_abs_ale_l2  
    , nvl(z.abs_ale_l1, 0) +nvl(z.abs_ale_l2, 0) as total_abs_ale
    , nvl(z.abs_other_pay_l1, 0) as abs_other_pay_l1, nvl(z.total_rate_abs_other_pay_l1, 0) as total_rate_abs_other_pay_l1
    , nvl(z.abs_other_pay_l2, 0) as abs_other_pay_l2, nvl(z.total_rate_abs_other_pay_l2, 0) as total_rate_abs_other_pay_l2
    , nvl(z.abs_other_pay_l1, 0) + nvl(z.abs_other_pay_l2, 0) as total_abs_other_pay
    , nvl(z.total_abs_pay_l1, 0) as total_abs_pay_l1, nvl(z.total_rate_abs_pay_l1, 0) as total_rate_abs_pay_l1
    , nvl(z.total_abs_pay_l2, 0) as total_abs_pay_l2, nvl(z.total_rate_abs_pay_l2, 0) as total_rate_abs_pay_l2
    , nvl(z.total_abs_pay_l1, 0) + nvl(z.total_abs_pay_l2, 0) as total_abs_pay
    , nvl(z.total_abs_npay_l1, 0) as total_abs_npay_l1, nvl(z.total_rate_abs_npay_l1, 0) as total_rate_abs_npay_l1
    , nvl(z.total_abs_npay_l2, 0) as total_abs_npay_l2, nvl(z.total_rate_abs_npay_l2, 0) as total_rate_abs_npay_l2
    , nvl(z.total_abs_npay_l1, 0) + nvl(z.total_abs_npay_l2, 0)  as total_abs_npay
    
    , z.d1_type, z.d2_type, z.d3_type, z.d4_type, z.d5_type, z.d6_type, z.d7_type, z.d8_type, z.d9_type, z.d10_type
    , z.d11_type, z.d12_type, z.d13_type, z.d14_type, z.d15_type, z.d16_type, z.d17_type, z.d18_type, z.d19_type, z.d20_type
    , z.d21_type, z.d22_type, z.d23_type, z.d24_type, z.d25_type, z.d26_type, z.d27_type, z.d28_type, z.d29_type, z.d30_type, z.d31_type 
    
    , z.d1_kind, z.d2_kind, z.d3_kind, z.d4_kind, z.d5_kind, z.d6_kind, z.d7_kind, z.d8_kind, z.d9_kind, z.d10_kind
    , z.d11_kind, z.d12_kind, z.d13_kind, z.d14_kind, z.d15_kind, z.d16_kind, z.d17_kind, z.d18_kind, z.d19_kind, z.d20_kind
    , z.d21_kind, z.d22_kind, z.d23_kind, z.d24_kind, z.d25_kind, z.d26_kind, z.d27_kind, z.d28_kind, z.d29_kind, z.d30_kind, z.d31_kind 
    
      from (select   w.thr_emp_pk
                     , sum(nvl(w.wt1_l1, 0) + nvl(w.wt1_l2, 0)) as wt1
                       , sum(nvl(w.wt2_l1, 0) + nvl(w.wt2_l2, 0)) as wt2
                       , sum(nvl(w.wt3_l1, 0) + nvl(w.wt3_l2, 0)) as wt3
                       , sum(nvl(w.wt4_l1, 0) + nvl(w.wt4_l2, 0)) as wt4
                       , sum(nvl(w.wt5_l1, 0) + nvl(w.wt5_l2, 0)) as wt5
                       , sum(nvl(w.wt6_l1, 0) + nvl(w.wt6_l2, 0)) as wt6
                       , sum(nvl(w.wt7_l1, 0) + nvl(w.wt7_l2, 0)) as wt7
                       , sum(nvl(w.wt8_l1, 0) + nvl(w.wt8_l2, 0)) as wt8
                       , sum(nvl(w.wt9_l1, 0) + nvl(w.wt9_l2, 0)) as wt9
                       , sum(nvl(w.wt10_l1, 0) + nvl(w.wt10_l2, 0)) as wt10
                       , sum(nvl(w.wt11_l1, 0) + nvl(w.wt11_l2, 0)) as wt11
                       , sum(nvl(w.wt12_l1, 0) + nvl(w.wt12_l2, 0)) as wt12
                       , sum(nvl(w.wt13_l1, 0) + nvl(w.wt13_l2, 0)) as wt13
                       , sum(nvl(w.wt14_l1, 0) + nvl(w.wt14_l2, 0)) as wt14
                       , sum(nvl(w.wt15_l1, 0) + nvl(w.wt15_l2, 0)) as wt15
                       , sum(nvl(w.wt16_l1, 0) + nvl(w.wt16_l2, 0)) as wt16
                       , sum(nvl(w.wt17_l1, 0) + nvl(w.wt17_l2, 0)) as wt17
                       , sum(nvl(w.wt18_l1, 0) + nvl(w.wt18_l2, 0)) as wt18
                       , sum(nvl(w.wt19_l1, 0) + nvl(w.wt19_l2, 0)) as wt19
                       , sum(nvl(w.wt20_l1, 0) + nvl(w.wt20_l2, 0)) as wt20
                       , sum(nvl(w.wt21_l1, 0) + nvl(w.wt21_l2, 0)) as wt21
                       , sum(nvl(w.wt22_l1, 0) + nvl(w.wt22_l2, 0)) as wt22
                       , sum(nvl(w.wt23_l1, 0) + nvl(w.wt23_l2, 0)) as wt23
                       , sum(nvl(w.wt24_l1, 0) + nvl(w.wt24_l2, 0)) as wt24
                       , sum(nvl(w.wt25_l1, 0) + nvl(w.wt25_l2, 0)) as wt25
                       , sum(nvl(w.wt26_l1, 0) + nvl(w.wt26_l2, 0)) as wt26
                       , sum(nvl(w.wt27_l1, 0) + nvl(w.wt27_l2, 0)) as wt27
                       , sum(nvl(w.wt28_l1, 0) + nvl(w.wt28_l2, 0)) as wt28
                       , sum(nvl(w.wt29_l1, 0) + nvl(w.wt29_l2, 0)) as wt29
                       , sum(nvl(w.wt30_l1, 0) + nvl(w.wt30_l2, 0)) as wt30
                       , sum(nvl(w.wt31_l1, 0) + nvl(w.wt31_l2, 0)) as wt31
                       , sum(nvl(w.d1_l1, 0) + nvl(w.d1_l2, 0)) as d1
                       , sum(nvl(w.d2_l1, 0) + nvl(w.d2_l2, 0)) as d2
                       , sum(nvl(w.d3_l1, 0) + nvl(w.d3_l2, 0)) as d3
                       , sum(nvl(w.d4_l1, 0) + nvl(w.d4_l2, 0)) as d4
                       , sum(nvl(w.d5_l1, 0) + nvl(w.d5_l2, 0)) as d5
                       , sum(nvl(w.d6_l1, 0) + nvl(w.d6_l2, 0)) as d6
                       , sum(nvl(w.d7_l1, 0) + nvl(w.d7_l2, 0)) as d7
                       , sum(nvl(w.d8_l1, 0) + nvl(w.d8_l2, 0)) as d8
                       , sum(nvl(w.d9_l1, 0) + nvl(w.d9_l2, 0)) as d9
                       , sum(nvl(w.d10_l1, 0) + nvl(w.d10_l2, 0)) as d10
                       , sum(nvl(w.d11_l1, 0) + nvl(w.d11_l2, 0)) as d11
                       , sum(nvl(w.d12_l1, 0) + nvl(w.d12_l2, 0)) as d12
                       , sum(nvl(w.d13_l1, 0) + nvl(w.d13_l2, 0)) as d13
                       , sum(nvl(w.d14_l1, 0) + nvl(w.d14_l2, 0)) as d14
                       , sum(nvl(w.d15_l1, 0) + nvl(w.d15_l2, 0)) as d15
                       , sum(nvl(w.d16_l1, 0) + nvl(w.d16_l2, 0)) as d16
                       , sum(nvl(w.d17_l1, 0) + nvl(w.d17_l2, 0)) as d17
                       , sum(nvl(w.d18_l1, 0) + nvl(w.d18_l2, 0)) as d18
                       , sum(nvl(w.d19_l1, 0) + nvl(w.d19_l2, 0)) as d19
                       , sum(nvl(w.d20_l1, 0) + nvl(w.d20_l2, 0)) as d20
                       , sum(nvl(w.d21_l1, 0) + nvl(w.d21_l2, 0)) as d21
                       , sum(nvl(w.d22_l1, 0) + nvl(w.d22_l2, 0)) as d22
                       , sum(nvl(w.d23_l1, 0) + nvl(w.d23_l2, 0)) as d23
                       , sum(nvl(w.d24_l1, 0) + nvl(w.d24_l2, 0)) as d24
                       , sum(nvl(w.d25_l1, 0) + nvl(w.d25_l2, 0)) as d25
                       , sum(nvl(w.d26_l1, 0) + nvl(w.d26_l2, 0)) as d26
                       , sum(nvl(w.d27_l1, 0) + nvl(w.d27_l2, 0)) as d27
                       , sum(nvl(w.d28_l1, 0) + nvl(w.d28_l2, 0)) as d28
                       , sum(nvl(w.d29_l1, 0) + nvl(w.d29_l2, 0)) as d29
                       , sum(nvl(w.d30_l1, 0) + nvl(w.d30_l2, 0)) as d30
                       , sum(nvl(w.d31_l1, 0) + nvl(w.d31_l2, 0)) as d31
                       
                       , sum(w.total_wt_l1) as total_wt_l1
                       , sum(w.total_rate_wt_l1) as total_rate_wt_l1
                       , sum(w.total_wt_l2) as total_wt_l2
                       , sum(w.total_rate_wt_l2) as total_rate_wt_l2
                       
                       , sum(w.total_ot_tax_l1) as total_ot_tax_l1
                       , sum(w.total_ot_tax_l2) as total_ot_tax_l2
                       
                       , sum(w.total_hol_l1) as total_hol_l1
                       , sum(w.total_hol_l2) as total_hol_l2
                       
                       , sum(w.total_ot_l1) as total_ot_l1
                       , sum(w.total_rate_ot_l1) as total_rate_ot_l1
                       , sum(w.total_ot_l2) as total_ot_l2
                       , sum(w.total_rate_ot_l2) as total_rate_ot_l2
                       
                       , sum(w.total_st_l1) as total_st_l1
                       , sum(w.total_rate_st_l1) as total_rate_st_l1
                       , sum(w.total_st_l2) as total_st_l2
                       , sum(w.total_rate_st_l2) as total_rate_st_l2
                       
                       , sum(w.total_ost_l1) as total_ost_l1
                       , sum(w.total_rate_ost_l1) as total_rate_ost_l1
                       , sum(w.total_ost_l2) as total_ost_l2
                       , sum(w.total_rate_ost_l2) as total_rate_ost_l2
                       
                       , sum(w.total_ht_l1) as total_ht_l1
                       , sum(w.total_rate_ht_l1) as total_rate_ht_l1
                       , sum(w.total_ht_l2) as total_ht_l2
                       , sum(w.total_rate_ht_l2) as total_rate_ht_l2
                       
                       , sum(w.total_oht_l1) as total_oht_l1
                       , sum(w.total_rate_oht_l1) as total_rate_oht_l1
                       , sum(w.total_oht_l2) as total_oht_l2
                       , sum(w.total_rate_oht_l2) as total_rate_oht_l2
                       
                       , sum(w.total_nt30_l1) as total_nt30_l1
                       , sum(w.total_rate_nt30_l1) as total_rate_nt30_l1
                       , sum(w.total_nt30_l2) as total_nt30_l2
                       , sum(w.total_rate_nt30_l2) as total_rate_nt30_l2
                       
                       , sum(w.total_nt45_l1) as total_nt45_l1
                       , sum(w.total_rate_nt45_l1) as total_rate_nt45_l1
                       , sum(w.total_nt45_l2) as total_nt45_l2
                       , sum(w.total_rate_nt45_l2) as total_rate_nt45_l2
                       
                       , sum(w.total_nt60_l1) as total_nt60_l1
                       , sum(w.total_rate_nt60_l1) as total_rate_nt60_l1
                       , sum(w.total_nt60_l2) as total_nt60_l2
                       , sum(w.total_rate_nt60_l2) as total_rate_nt60_l2
                       
                       , sum(w.total_nt90_l1) as total_nt90_l1
                       , sum(w.total_rate_nt90_l1) as total_rate_nt90_l1
                       , sum(w.total_nt90_l2) as total_nt90_l2
                       , sum(w.total_rate_nt90_l2) as total_rate_nt90_l2
                       
                       
                       , sum(w.abs_ale_l1) as abs_ale_l1
                       , sum(w.total_rate_abs_ale_l1) as total_rate_abs_ale_l1
                       , sum(w.abs_ale_l2) as abs_ale_l2
                       , sum(w.total_rate_abs_ale_l2) as total_rate_abs_ale_l2
                       
                       , sum(w.abs_other_pay_l1) as abs_other_pay_l1
                       , sum(w.total_rate_abs_other_pay_l1) as total_rate_abs_other_pay_l1
                       , sum(w.abs_other_pay_l2) as abs_other_pay_l2
                       , sum(w.total_rate_abs_other_pay_l2) as total_rate_abs_other_pay_l2
                       
                       , sum(w.total_abs_pay_l1) as total_abs_pay_l1
                       , sum(w.total_rate_abs_pay_l1) as total_rate_abs_pay_l1
                       , sum(w.total_abs_pay_l2) as total_abs_pay_l2
                       , sum(w.total_rate_abs_pay_l2) as total_rate_abs_pay_l2
                       
                       , sum(w.total_abs_npay_l1) as total_abs_npay_l1
                       , sum(w.total_rate_abs_npay_l1) as total_rate_abs_npay_l1
                       , sum(w.total_abs_npay_l2) as total_abs_npay_l2
                       , sum(w.total_rate_abs_npay_l2) as total_rate_abs_npay_l2
                       
                       ,max(w.d1_type_l1||w.d1_type_l2) d1_type
                       ,max(w.d2_type_l1||w.d2_type_l2) d2_type
                       ,max(w.d3_type_l1||w.d3_type_l2) d3_type
                       ,max(w.d4_type_l1||w.d4_type_l2) d4_type
                       ,max(w.d5_type_l1||w.d5_type_l2) d5_type
                       ,max(w.d6_type_l1||w.d6_type_l2) d6_type
                       ,max(w.d7_type_l1||w.d7_type_l2) d7_type
                       ,max(w.d8_type_l1||w.d8_type_l2) d8_type
                       ,max(w.d9_type_l1||w.d9_type_l2) d9_type
                       ,max(w.d10_type_l1||w.d10_type_l2) d10_type
                       ,max(w.d11_type_l1||w.d11_type_l2) d11_type
                       ,max(w.d12_type_l1||w.d12_type_l2) d12_type
                       ,max(w.d13_type_l1||w.d13_type_l2) d13_type
                       ,max(w.d14_type_l1||w.d14_type_l2) d14_type
                       ,max(w.d15_type_l1||w.d15_type_l2) d15_type
                       ,max(w.d16_type_l1||w.d16_type_l2) d16_type
                       ,max(w.d17_type_l1||w.d17_type_l2) d17_type
                       ,max(w.d18_type_l1||w.d18_type_l2) d18_type
                       ,max(w.d19_type_l1||w.d19_type_l2) d19_type
                       ,max(w.d20_type_l1||w.d20_type_l2) d20_type
                       ,max(w.d21_type_l1||w.d21_type_l2) d21_type
                       ,max(w.d22_type_l1||w.d22_type_l2) d22_type
                       ,max(w.d23_type_l1||w.d23_type_l2) d23_type
                       ,max(w.d24_type_l1||w.d24_type_l2) d24_type
                       ,max(w.d25_type_l1||w.d25_type_l2) d25_type
                       ,max(w.d26_type_l1||w.d26_type_l2) d26_type
                       ,max(w.d27_type_l1||w.d27_type_l2) d27_type
                       ,max(w.d28_type_l1||w.d28_type_l2) d28_type
                       ,max(w.d29_type_l1||w.d29_type_l2) d29_type
                       ,max(w.d30_type_l1||w.d30_type_l2) d30_type
                       ,max(w.d31_type_l1||w.d31_type_l2) d31_type
                       
                       ,max(w.d1_kind_l1+w.d1_kind_l2) d1_kind
                       ,max(w.d2_kind_l1+w.d2_kind_l2) d2_kind
                       ,max(w.d3_kind_l1+w.d3_kind_l2) d3_kind
                       ,max(w.d4_kind_l1+w.d4_kind_l2) d4_kind
                       ,max(w.d5_kind_l1+w.d5_kind_l2) d5_kind
                       ,max(w.d6_kind_l1+w.d6_kind_l2) d6_kind
                       ,max(w.d7_kind_l1+w.d7_kind_l2) d7_kind
                       ,max(w.d8_kind_l1+w.d8_kind_l2) d8_kind
                       ,max(w.d9_kind_l1+w.d9_kind_l2) d9_kind
                       ,max(w.d10_kind_l1+w.d10_kind_l2) d10_kind
                       ,max(w.d11_kind_l1+w.d11_kind_l2) d11_kind
                       ,max(w.d12_kind_l1+w.d12_kind_l2) d12_kind
                       ,max(w.d13_kind_l1+w.d13_kind_l2) d13_kind
                       ,max(w.d14_kind_l1+w.d14_kind_l2) d14_kind
                       ,max(w.d15_kind_l1+w.d15_kind_l2) d15_kind
                       ,max(w.d16_kind_l1+w.d16_kind_l2) d16_kind
                       ,max(w.d17_kind_l1+w.d17_kind_l2) d17_kind
                       ,max(w.d18_kind_l1+w.d18_kind_l2) d18_kind
                       ,max(w.d19_kind_l1+w.d19_kind_l2) d19_kind
                       ,max(w.d20_kind_l1+w.d20_kind_l2) d20_kind
                       ,max(w.d21_kind_l1+w.d21_kind_l2) d21_kind
                       ,max(w.d22_kind_l1+w.d22_kind_l2) d22_kind
                       ,max(w.d23_kind_l1+w.d23_kind_l2) d23_kind
                       ,max(w.d24_kind_l1+w.d24_kind_l2) d24_kind
                       ,max(w.d25_kind_l1+w.d25_kind_l2) d25_kind
                       ,max(w.d26_kind_l1+w.d26_kind_l2) d26_kind
                       ,max(w.d27_kind_l1+w.d27_kind_l2) d27_kind
                       ,max(w.d28_kind_l1+w.d28_kind_l2) d28_kind
                       ,max(w.d29_kind_l1+w.d29_kind_l2) d29_kind
                       ,max(w.d30_kind_l1+w.d30_kind_l2) d30_kind
                       ,max(w.d31_kind_l1+w.d31_kind_l2) d31_kind
                from (select t.thr_emp_pk
                       ,sum(case when t.work_dt = p_from  then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt1_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt2_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt3_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt4_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt5_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt6_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt7_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt8_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt9_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt10_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt11_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt12_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt13_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt14_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt15_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt16_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt17_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt18_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt19_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt20_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt21_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt22_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt23_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt24_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt25_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt26_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt27_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt28_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt29_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt30_l1                 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt31_l1         
                       
                       , 0 as wt1_l2, 0 as wt2_l2, 0 as wt3_l2, 0 as wt4_l2, 0 as wt5_l2, 0 as wt6_l2, 0 as wt7_l2, 0 as wt8_l2, 0 as wt9_l2, 0 as wt10_l2
                       , 0 as wt11_l2, 0 as wt12_l2, 0 as wt13_l2, 0 as wt14_l2, 0 as wt15_l2, 0 as wt16_l2, 0 as wt17_l2, 0 as wt18_l2, 0 as wt19_l2, 0 as wt20_l2
                       , 0 as wt21_l2, 0 as wt22_l2, 0 as wt23_l2, 0 as wt24_l2, 0 as wt25_l2, 0 as wt26_l2, 0 as wt27_l2, 0 as wt28_l2, 0 as wt29_l2, 0 as wt30_l2, 0 as wt31_l2
                       
                       ,sum(case when t.work_dt = p_from  then nvl(t.wd, 0) else 0 end) as d1_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d2_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d3_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d4_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d5_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d6_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d7_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d8_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d9_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d10_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d11_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d12_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d13_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d14_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d15_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d16_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d17_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d18_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d19_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d20_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d21_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d22_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d23_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d24_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d25_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d26_l1  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d27_l1   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d28_l1 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d29_l1
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d30_l1                 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d31_l1         
                       
                       , 0 as d1_l2, 0 as d2_l2, 0 as d3_l2, 0 as d4_l2, 0 as d5_l2, 0 as d6_l2, 0 as d7_l2, 0 as d8_l2, 0 as d9_l2, 0 as d10_l2
                       , 0 as d11_l2, 0 as d12_l2, 0 as d13_l2, 0 as d14_l2, 0 as d15_l2, 0 as d16_l2, 0 as d17_l2, 0 as d18_l2, 0 as d19_l2, 0 as d20_l2
                       , 0 as d21_l2, 0 as d22_l2, 0 as d23_l2, 0 as d24_l2, 0 as d25_l2, 0 as d26_l2, 0 as d27_l2, 0 as d28_l2, 0 as d29_l2, 0 as d30_l2, 0 as d31_l2
                       
                       ,max(case when t.work_dt = p_from  then t.hol_type else null end) as d1_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then t.hol_type else null end) as d2_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then t.hol_type else null end) as d3_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then t.hol_type else null end) as d4_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then t.hol_type else null end) as d5_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then t.hol_type else null end) as d6_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then t.hol_type else null end) as d7_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then t.hol_type else null end) as d8_type_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then t.hol_type else null end) as d9_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then t.hol_type else null end) as d10_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then t.hol_type else null end) as d11_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then t.hol_type else null end) as d12_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then t.hol_type else null end) as d13_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then t.hol_type else null end) as d14_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then t.hol_type else null end) as d15_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then t.hol_type else null end) as d16_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then t.hol_type else null end) as d17_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then t.hol_type else null end) as d18_type_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then t.hol_type else null end) as d19_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then t.hol_type else null end) as d20_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then t.hol_type else null end) as d21_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then t.hol_type else null end) as d22_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then t.hol_type else null end) as d23_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then t.hol_type else null end) as d24_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then t.hol_type else null end) as d25_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then t.hol_type else null end) as d26_type_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then t.hol_type else null end) as d27_type_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then t.hol_type else null end) as d28_type_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then t.hol_type else null end) as d29_type_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then t.hol_type else null end) as d30_type_l1                 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then t.hol_type else null end) as d31_type_l1
                       
                       ,max(case when t.work_dt = p_from  then t.day_type else null end) as d1_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then t.day_type else null end) as d2_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then t.day_type else null end) as d3_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then t.day_type else null end) as d4_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then t.day_type else null end) as d5_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then t.day_type else null end) as d6_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then t.day_type else null end) as d7_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then t.day_type else null end) as d8_kind_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then t.day_type else null end) as d9_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then t.day_type else null end) as d10_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then t.day_type else null end) as d11_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then t.day_type else null end) as d12_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then t.day_type else null end) as d13_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then t.day_type else null end) as d14_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then t.day_type else null end) as d15_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then t.day_type else null end) as d16_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then t.day_type else null end) as d17_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then t.day_type else null end) as d18_kind_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then t.day_type else null end) as d19_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then t.day_type else null end) as d20_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then t.day_type else null end) as d21_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then t.day_type else null end) as d22_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then t.day_type else null end) as d23_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then t.day_type else null end) as d24_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then t.day_type else null end) as d25_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then t.day_type else null end) as d26_kind_l1  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then t.day_type else null end) as d27_kind_l1   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then t.day_type else null end) as d28_kind_l1 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then t.day_type else null end) as d29_kind_l1
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then t.day_type else null end) as d30_kind_l1                 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then t.day_type else null end) as d31_kind_l1
                       
                       
                       , '' as d1_type_l2, '' as d2_type_l2, '' as d3_type_l2, '' as d4_type_l2, '' as d5_type_l2, '' as d6_type_l2, '' as d7_type_l2
                       , '' as d8_type_l2, '' as d9_type_l2, '' as d10_type_l2, '' as d11_type_l2, '' as d12_type_l2, '' as d13_type_l2, '' as d14_type_l2
                       , '' as d15_type_l2, '' as d16_type_l2, '' as d17_type_l2, '' as d18_type_l2, '' as d19_type_l2, '' as d20_type_l2, '' as d21_type_l2
                       , '' as d22_type_l2, '' as d23_type_l2, '' as d24_type_l2, '' as d25_type_l2, '' as d26_type_l2, '' as d27_type_l2, '' as d28_type_l2
                       , '' as d29_type_l2, '' as d30_type_l2, '' as d31_type_l2 
                                                 
                       , 0 as d1_kind_l2, 0 as d2_kind_l2, 0 as d3_kind_l2, 0 as d4_kind_l2, 0 as d5_kind_l2, 0 as d6_kind_l2, 0 as d7_kind_l2
                       , 0 as d8_kind_l2, 0 as d9_kind_l2, 0 as d10_kind_l2, 0 as d11_kind_l2, 0 as d12_kind_l2, 0 as d13_kind_l2, 0 as d14_kind_l2
                       , 0 as d15_kind_l2, 0 as d16_kind_l2, 0 as d17_kind_l2, 0 as d18_kind_l2, 0 as d19_kind_l2, 0 as d20_kind_l2, 0 as d21_kind_l2
                       , 0 as d22_kind_l2, 0 as d23_kind_l2, 0 as d24_kind_l2, 0 as d25_kind_l2, 0 as d26_kind_l2, 0 as d27_kind_l2, 0 as d28_kind_l2
                       , 0 as d29_kind_l2, 0 as d30_kind_l2, 0 as d31_kind_l2
                       
                       --wt level1
                       , sum(case when t.hol_type is null then nvl(t.wt,0) end) as total_wt_l1
                       , sum(case when t.hol_type is null then nvl(t.wt,0) * nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_wt_l1
                       , sum(case when t.hol_type is null then nvl(t.ot_xn, 0) else 0 end) as total_ot_l1
                       , sum(case when t.hol_type is null then nvl(t.ot_xn, 0) * nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_ot_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.wt, 0) else 0 end) as total_st_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.wt, 0) * nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_st_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.ot, 0) else 0 end) as total_ost_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.ot, 0)*nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_ost_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.wt, 0) else 0 end) as total_ht_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.wt, 0)*nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_ht_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.ot, 0) else 0 end) as total_oht_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.ot, 0)*nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_oht_l1
                       , sum(case when t.hol_type = 'HOL' then 8 else 0 end) as total_hol_l1
                       , sum(nvl(t.ot, 0) + decode(t.hol_type, NULL, 0, nvl(t.wt, 0))) as total_ot_tax_l1
                       --nt level1
                       , sum(case when t.hol_type is null then nvl(t.nt, 0) else 0 end) as total_nt30_l1
                       , sum(case when t.hol_type is null then nvl(t.nt, 0)* nvl(t.nt_rate, 100)/100 else 0 end) as total_rate_nt30_l1
                       , sum(case when t.hol_type is null then nvl(t.ont, 0) else 0 end) as total_nt45_l1
                       , sum(case when t.hol_type is null then nvl(t.ont, 0)*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt45_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.nt, 0) + nvl(t.ont, 0) else 0 end) as total_nt60_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then (nvl(t.nt, 0) + nvl(t.ont, 0))*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt60_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.nt, 0) + nvl(t.ont, 0) else 0 end) as total_nt90_l1
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then (nvl(t.nt, 0) + nvl(t.ont, 0))*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt90_l1
                       
                       -- absence level1     
                       , sum(case when t.hol_type is null and t.absence_type = '01' then nvl(t.absence_time, 0) else 0 end) as abs_ale_l1
                       , sum(case when t.hol_type is null and t.absence_type = '01' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_ale_l1
                       , sum(case when t.hol_type is null and t.absence_type <> '01' and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0) else 0 end) as abs_other_pay_l1
                       , sum(case when t.hol_type is null and t.absence_type <> '01' and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_other_pay_l1
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0) else 0 end) as total_abs_pay_l1
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_pay_l1
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'N' then nvl(t.absence_time, 0) else 0 end) as total_abs_npay_l1
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'N' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_npay_l1
                       
                       --wt level2
                       , 0 as total_wt_l2
                       , 0 as total_rate_wt_l2
                       , 0 as total_ot_l2
                       , 0 as total_rate_ot_l2
                       , 0 as total_st_l2
                       , 0 as total_rate_st_l2
                       , 0 as total_ost_l2
                       , 0 as total_rate_ost_l2
                       , 0 as total_ht_l2
                       , 0 as total_rate_ht_l2
                       , 0 as total_oht_l2
                       , 0 as total_rate_oht_l2
                       , 0 as total_hol_l2
                       , 0 as total_ot_tax_l2
                       
                       --nt level2
                       , 0 as total_nt30_l2
                       , 0 as total_rate_nt30_l2
                       , 0 as total_nt45_l2
                       , 0 as total_rate_nt45_l2
                       , 0 as total_nt60_l2
                       , 0 as total_rate_nt60_l2
                       , 0 as total_nt90_l2
                       , 0 as total_rate_nt90_l2
                       
                       -- absence level2
                       , 0 as abs_ale_l2
                       , 0 as total_rate_abs_ale_l2
                       , 0 as abs_other_pay_l2
                       , 0 as total_rate_abs_other_pay_l2
                       , 0 as total_abs_pay_l2
                       , 0 as total_rate_abs_pay_l2
                       , 0 as total_abs_npay_l2
                       , 0 as total_rate_abs_npay_l2

                from thr_work_date t,thr_employee d, thr_salary_manage s
                where t.del_if = 0 and d.del_if=0 and s.del_if(+) =0
                  and t.thr_emp_pk = s.thr_emp_pk(+)
                  and s.work_mon(+) = p_work_mon
                  and t.thr_emp_pk=d.pk
                  and t.work_dt between p_from and p_to
                  and nvl(s.confirm_dt(+), p_from)>p_from
                  and t.work_dt between p_from and to_char(to_date(nvl(s.confirm_dt,nvl(d.confirm_dt, p_from)),'YYYYMMDD')-1,'YYYYMMDD')
                  and t.work_dt between d.join_dt and  to_char(to_date(nvl(d.left_dt,'30000101'),'yyyymmdd') + l_resign_num,'yyyymmdd') 
                  and t.work_dt between  d.join_dt and nvl(s.confirm_dt,p_to)
                  and d.join_dt <= p_to
                  and nvl(d.left_dt,p_to) >= p_from
--                  and d.sal_period = p_sal_period
                  and (t.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
                  and t.thr_emp_pk=nvl(l_thr_emp_pk, t.thr_emp_pk)             
                group by  t.thr_emp_pk
              union all
                select t.thr_emp_pk
                       , 0 as wt1_l1, 0 as wt2_l1, 0 as wt3_l1, 0 as wt4_l1, 0 as wt5_l1, 0 as wt6_l1, 0 as wt7_l1, 0 as wt8_l1, 0 as wt9_l1, 0 as wt10_l1
                       , 0 as wt11_l1, 0 as wt12_l1, 0 as wt13_l1, 0 as wt14_l1, 0 as wt15_l1, 0 as wt16_l1, 0 as wt17_l1, 0 as wt18_l1, 0 as wt19_l1, 0 as wt20_l1
                       , 0 as wt21_l1, 0 as wt22_l1, 0 as wt23_l1, 0 as wt24_l1, 0 as wt25_l1, 0 as wt26_l1, 0 as wt27_l1, 0 as wt28_l1, 0 as wt29_l1, 0 as wt30_l1, 0 as wt31_l1
                       ,sum(case when t.work_dt = p_from  then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt1_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt2_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt3_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt4_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt5_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt6_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt7_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt8_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt9_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt10_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt11_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt12_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt13_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt14_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt15_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt16_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt17_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt18_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt19_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt20_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt21_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt22_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt23_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt24_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt25_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt26_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt27_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt28_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt29_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt30_l2                 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then decode(t.hol_type, null, nvl(t.wt,0) + nvl(t.ot_xn, 0), nvl(t.ot_xn, 0)) else 0 end) as wt31_l2
                       
                       , 0 as d1_l1, 0 as d2_l1, 0 as d3_l1, 0 as d4_l1, 0 as d5_l1, 0 as d6_l1, 0 as d7_l1, 0 as d8_l1, 0 as d9_l1, 0 as d10_l1
                       , 0 as d11_l1, 0 as d12_l1, 0 as d13_l1, 0 as d14_l1, 0 as d15_l1, 0 as d16_l1, 0 as d17_l1, 0 as d18_l1, 0 as d19_l1, 0 as d20_l1
                       , 0 as d21_l1, 0 as d22_l1, 0 as d23_l1, 0 as d24_l1, 0 as d25_l1, 0 as d26_l1, 0 as d27_l1, 0 as d28_l1, 0 as d29_l1, 0 as d30_l1, 0 as d31_l1
                       
                       ,sum(case when t.work_dt = p_from  then nvl(t.wd,0) else 0 end) as d1_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then nvl(t.wd,0) else 0 end) as d2_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then nvl(t.wd,0) else 0 end) as d3_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then nvl(t.wd,0) else 0 end) as d4_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d5_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d6_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d7_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d8_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d9_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d10_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d11_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d12_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d13_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d14_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d15_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d16_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d17_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d18_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d19_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d20_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d21_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d22_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d23_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d24_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d25_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d26_l2  
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d27_l2   
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d28_l2 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d29_l2
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d30_l2                 
                       ,sum(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then nvl(t.wd, 0) else 0 end) as d31_l2
                       
                       
                       , '' as d1_type_l1, '' as d2_type_l1, '' as d3_type_l1, '' as d4_type_l1, '' as d5_type_l1, '' as d6_type_l1, '' as d7_type_l1
                       , '' as d8_type_l1, '' as d9_type_l1, '' as d10_type_l1, '' as d11_type_l1, '' as d12_type_l1, '' as d13_type_l1, '' as d14_type_l1
                       , '' as d15_type_l1, '' as d16_type_l1, '' as d17_type_l1, '' as d18_type_l1, '' as d19_type_l1, '' as d20_type_l1, '' as d21_type_l1
                       , '' as d22_type_l1, '' as d23_type_l1, '' as d24_type_l1, '' as d25_type_l1, '' as d26_type_l1, '' as d27_type_l1, '' as d28_type_l1
                       , '' as d29_type_l1, '' as d30_type_l1, '' as d31_type_l1 
                       
                       , 0 as d1_kind_l1, 0 as d2_kind_l1, 0 as d3_kind_l1, 0 as d4_kind_l1, 0 as d5_kind_l1, 0 as d6_kind_l1, 0 as d7_kind_l1
                       , 0 as d8_kind_l1, 0 as d9_kind_l1, 0 as d10_kind_l1, 0 as d11_kind_l1, 0 as d12_kind_l1, 0 as d13_kind_l1, 0 as d14_kind_l1
                       , 0 as d15_kind_l1, 0 as d16_kind_l1, 0 as d17_kind_l1, 0 as d18_kind_l1, 0 as d19_kind_l1, 0 as d20_kind_l1, 0 as d21_kind_l1
                       , 0 as d22_kind_l1, 0 as d23_kind_l1, 0 as d24_kind_l1, 0 as d25_kind_l1, 0 as d26_kind_l1, 0 as d27_kind_l1, 0 as d28_kind_l1
                       , 0 as d29_kind_l1, 0 as d30_kind_l1, 0 as d31_kind_l1
                       
                       ,max(case when t.work_dt = p_from  then t.hol_type else null end) as d1_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then t.hol_type else null end) as d2_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then t.hol_type else null end) as d3_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then t.hol_type else null end) as d4_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then t.hol_type else null end) as d5_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then t.hol_type else null end) as d6_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then t.hol_type else null end) as d7_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then t.hol_type else null end) as d8_type_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then t.hol_type else null end) as d9_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then t.hol_type else null end) as d10_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then t.hol_type else null end) as d11_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then t.hol_type else null end) as d12_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then t.hol_type else null end) as d13_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then t.hol_type else null end) as d14_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then t.hol_type else null end) as d15_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then t.hol_type else null end) as d16_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then t.hol_type else null end) as d17_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then t.hol_type else null end) as d18_type_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then t.hol_type else null end) as d19_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then t.hol_type else null end) as d20_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then t.hol_type else null end) as d21_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then t.hol_type else null end) as d22_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then t.hol_type else null end) as d23_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then t.hol_type else null end) as d24_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then t.hol_type else null end) as d25_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then t.hol_type else null end) as d26_type_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then t.hol_type else null end) as d27_type_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then t.hol_type else null end) as d28_type_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then t.hol_type else null end) as d29_type_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then t.hol_type else null end) as d30_type_l2                 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then t.hol_type else null end) as d31_type_l2   
                       
                       ,max(case when t.work_dt = p_from  then t.day_type else null end) as d1_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+1,'YYYYMMDD') then t.day_type else null end) as d2_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+2,'YYYYMMDD') then t.day_type else null end) as d3_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+3,'YYYYMMDD') then t.day_type else null end) as d4_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+4,'YYYYMMDD') then t.day_type else null end) as d5_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+5,'YYYYMMDD') then t.day_type else null end) as d6_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+6,'YYYYMMDD') then t.day_type else null end) as d7_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+7,'YYYYMMDD') then t.day_type else null end) as d8_kind_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+8,'YYYYMMDD') then t.day_type else null end) as d9_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+9,'YYYYMMDD') then t.day_type else null end) as d10_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+10,'YYYYMMDD') then t.day_type else null end) as d11_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+11,'YYYYMMDD') then t.day_type else null end) as d12_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+12,'YYYYMMDD') then t.day_type else null end) as d13_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+13,'YYYYMMDD') then t.day_type else null end) as d14_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+14,'YYYYMMDD') then t.day_type else null end) as d15_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+15,'YYYYMMDD') then t.day_type else null end) as d16_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+16,'YYYYMMDD') then t.day_type else null end) as d17_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+17,'YYYYMMDD') then t.day_type else null end) as d18_kind_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+18,'YYYYMMDD') then t.day_type else null end) as d19_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+19,'YYYYMMDD') then t.day_type else null end) as d20_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+20,'YYYYMMDD') then t.day_type else null end) as d21_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+21,'YYYYMMDD') then t.day_type else null end) as d22_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+22,'YYYYMMDD') then t.day_type else null end) as d23_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+23,'YYYYMMDD') then t.day_type else null end) as d24_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+24,'YYYYMMDD') then t.day_type else null end) as d25_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+25,'YYYYMMDD') then t.day_type else null end) as d26_kind_l2  
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+26,'YYYYMMDD') then t.day_type else null end) as d27_kind_l2   
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+27,'YYYYMMDD') then t.day_type else null end) as d28_kind_l2 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+28,'YYYYMMDD') then t.day_type else null end) as d29_kind_l2
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+29,'YYYYMMDD') then t.day_type else null end) as d30_kind_l2                 
                       ,max(case when t.work_dt = to_char(to_date(p_from,'YYYYMMDD')+30,'YYYYMMDD') then t.day_type else null end) as d31_kind_l2                                                                                                                      
                       
                       --wt level1
                       , 0 as total_wt_l1
                       , 0 as total_rate_wt_l1
                       , 0 as total_ot_l1
                       , 0 as total_rate_ot_l1
                       , 0 as total_st_l1
                       , 0 as total_rate_st_l1
                       , 0 as total_ost_l1
                       , 0 as total_rate_ost_l1
                       , 0 as total_ht_l1
                       , 0 as total_rate_ht_l1
                       , 0 as total_oht_l1
                       , 0 as total_rate_oht_l1
                       , 0 as total_hol_l1
                       , 0 as total_ot_tax_l1
                       
                       --nt level1
                       , 0 as total_nt30_l1
                       , 0 as total_rate_nt30_l1
                       , 0 as total_nt45_l1
                       , 0 as total_rate_nt45_l1
                       , 0 as total_nt60_l1
                       , 0 as total_rate_nt60_l1
                       , 0 as total_nt90_l1
                       , 0 as total_rate_nt90_l1
                       
                       -- absence level1
                       , 0 as abs_ale_l1
                       , 0 as total_rate_abs_ale_l1
                       , 0 as abs_other_pay_l1
                       , 0 as total_rate_abs_other_pay_l1
                       , 0 as total_abs_pay_l1
                       , 0 as total_rate_abs_pay_l1
                       , 0 as total_abs_npay_l1
                       , 0 as total_rate_abs_npay_l1
                       
                       --wt level2
                       , sum(case when t.hol_type is null then nvl(t.wt,0) end) as total_wt_l2
                       , sum(case when t.hol_type is null then nvl(t.wt,0) * nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_wt_l2
                       , sum(case when t.hol_type is null then nvl(t.ot_xn, 0) else 0 end) as total_ot_l2
                       , sum(case when t.hol_type is null then nvl(t.ot_xn, 0) * nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_ot_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.wt, 0) else 0 end) as total_st_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.wt, 0) * nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_st_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.ot, 0) else 0 end) as total_ost_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.ot, 0)*nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_ost_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.wt, 0) else 0 end) as total_ht_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.wt, 0)*nvl(t.wt_rate, 100)/100 else 0 end) as total_rate_ht_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.ot, 0) else 0 end) as total_oht_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.ot, 0)*nvl(t.ot_rate, 100)/100 else 0 end) as total_rate_oht_l2
                       , sum(case when t.hol_type = 'HOL' then 8 else 0 end) as total_hol_l2
                       , sum(nvl(t.ot, 0) + decode(t.hol_type, NULL, 0, nvl(t.wt, 0))) as total_ot_tax_l2
                       
                       --nt level2
                       , sum(case when t.hol_type is null then nvl(t.nt, 0) else 0 end) as total_nt30_l2
                       , sum(case when t.hol_type is null then nvl(t.nt, 0)* nvl(t.nt_rate, 100)/100 else 0 end) as total_rate_nt30_l2
                       , sum(case when t.hol_type is null then nvl(t.ont, 0) else 0 end) as total_nt45_l2
                       , sum(case when t.hol_type is null then nvl(t.ont, 0)*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt45_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then nvl(t.nt, 0) + nvl(t.ont, 0) else 0 end) as total_nt60_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'SUN' then (nvl(t.nt, 0) + nvl(t.ont, 0))*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt60_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then nvl(t.nt, 0) + nvl(t.ont, 0) else 0 end) as total_nt90_l2
                       , sum(case when nvl(t.hol_type, ' ')= 'HOL' then (nvl(t.nt, 0) + nvl(t.ont, 0))*nvl(t.ont_rate, 100)/100 else 0 end) as total_rate_nt90_l2
                       
                       -- absence level2   
                       , sum(case when t.hol_type is null and t.absence_type = '01' then nvl(t.absence_time, 0) else 0 end) as abs_ale_l2
                       , sum(case when t.hol_type is null and t.absence_type = '01' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_ale_l2
                       , sum(case when t.hol_type is null and t.absence_type <> '01' and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0) else 0 end) as abs_other_pay_l2
                       , sum(case when t.hol_type is null and t.absence_type <> '01' and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_other_pay_l2
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0) else 0 end) as total_abs_pay_l2
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'Y' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_pay_l2
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'N' then nvl(t.absence_time, 0) else 0 end) as total_abs_npay_l2
                       , sum(case when t.hol_type is null and nvl(t.absence_pay_yn, 'N') = 'N' then nvl(t.absence_time, 0)* nvl(t.absence_pay_rate, 100)/100 else 0 end) as total_rate_abs_npay_l2
                       

                from thr_work_date t,thr_employee d, thr_salary_manage s
                where t.del_if = 0 and d.del_if=0 and s.del_if(+) =0
                  and t.thr_emp_pk = s.thr_emp_pk(+)
                  and s.work_mon(+) = p_work_mon
                  and t.thr_emp_pk=d.pk
                  and t.work_dt between p_from and p_to
                  and t.work_dt between d.join_dt and to_char(to_date(nvl(d.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                  and nvl(s.confirm_dt(+), p_from) <= p_to
                  and t.work_dt between nvl(s.confirm_dt,nvl(d.confirm_dt, p_from)) and p_to
                  and d.join_dt <= p_to
                  and nvl(d.left_dt,p_to) >= p_from
--                  and d.sal_period = p_sal_period
                  and (t.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
                  and t.thr_emp_pk=nvl(l_thr_emp_pk, t.thr_emp_pk)
                group by  t.thr_emp_pk) w
                group by w.thr_emp_pk) z   -- WORIKING DAY.
    , thr_employee e, thr_salary_manage m
   where e.del_if=0 and m.del_if(+)=0
   and m.thr_emp_pk(+) = z.thr_emp_pk
   and m.work_mon(+) = p_work_mon
   and e.pk = z.thr_emp_pk(+)
   and e.join_dt <= p_to
   and nvl(e.left_dt,p_to) >= p_from
--   and e.sal_period=p_sal_period
   and (flag_cal_resign='N' or nvl(e.left_dt,to_char(to_date(p_to,'YYYYMMDD')+1 ,'YYYYMMDD'))>p_to)
   and (e.tco_org_pk in  (select  g.pk from tco_org g
                             where g.del_if = 0
                              start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                connect by prior g.pk = g.p_pk)
            or p_tco_org_pk ='ALL')
   and e.pk not in(select x.thr_emp_pk from thr_work_month x 
                        where x.del_if=0 
                        and x.work_mon = p_work_mon 
                        and x.thr_emp_pk=e.pk  )
   and e.pk=nvl(l_thr_emp_pk, e.pk) ;
   

   -- update kieu vang
   update thr_work_month a
   set (a.wt1, a.wt2, a.wt3, a.wt4, a.wt5, a.wt6, a.wt7, a.wt8, a.wt9, a.wt10 
       ,a.wt11, a.wt12, a.wt13, a.wt14, a.wt15, a.wt16, a.wt17, a.wt18, a.wt19, a.wt20
       ,a.wt21, a.wt22, a.wt23, a.wt24, a.wt25, a.wt26, a.wt27, a.wt28, a.wt29, a.wt30, a.wt31)
        = (select max(case when b.absence_dt = a.from_dt and b.absence_type is not null then b.short_nm else a.wt1 end)  as wt1
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+1,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt2 end)  as wt2
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+2,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt3 end)  as wt3
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+3,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt4 end)  as wt4
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+4,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt5 end)  as wt5
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+5,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt6 end)  as wt6
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+6,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt7 end)  as wt7
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+7,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt8 end)  as wt8
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+8,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt9 end)  as wt9
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+9,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt10 end)  as wt10
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+10,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt11 end)  as wt11
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+11,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt12 end)  as wt12
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+12,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt13 end)  as wt13
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+13,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt14 end)  as wt14
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+14,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt15 end)  as wt15
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+15,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt16 end)  as wt16
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+16,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt17 end)  as wt17
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+17,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt18 end)  as wt18
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+18,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt19 end)  as wt19
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+19,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt20 end)  as wt20
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+20,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt21 end)  as wt21
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+21,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt22 end)  as wt22
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+22,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt23 end)  as wt23
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+23,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt24 end)  as wt24
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+24,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt25 end)  as wt25
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+25,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt26 end)  as wt26
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+26,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt27 end)  as wt27
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+27,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt28 end)  as wt28
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+28,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt29 end)  as wt29
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+29,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt30 end)  as wt30
                     ,max(case when b.absence_dt = to_char(to_date(a.from_dt,'yyyymmdd')+30,'yyyymmdd')  and b.absence_type is not null then b.short_nm else a.wt31 end)  as wt31
                    from thr_absence b, thr_work_date d
                    where b.del_if(+)=0 and d.del_if=0
                    and B.THR_EMP_PK(+) = d.thr_emp_pk
                    and b.absence_dt(+) = d.work_dt
                    and d.work_dt between p_from and p_to
                    and d.thr_emp_pk = a.thr_emp_pk
                    ) 
   where a.del_if=0
--   and a.sal_period = p_sal_period
   and a.work_mon = p_work_mon
   and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
   and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk) ;
   
   -- update kieu vang
   update thr_work_month a
   set (a.wt1, a.wt2, a.wt3, a.wt4, a.wt5, a.wt6, a.wt7, a.wt8, a.wt9, a.wt10 
       ,a.wt11, a.wt12, a.wt13, a.wt14, a.wt15, a.wt16, a.wt17, a.wt18, a.wt19, a.wt20
       ,a.wt21, a.wt22, a.wt23, a.wt24, a.wt25, a.wt26, a.wt27, a.wt28, a.wt29, a.wt30, a.wt31)
        = (select max(case when d.work_dt = a.from_dt and nvl(d.wt, 0) = 0 and nvl(a.wt1, '0') = '0' 
                                and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt1 end)  as wt1
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+1,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt2, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt2 end)  as wt2
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+2,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt3, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt3 end)  as wt3
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+3,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt4, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt4 end)  as wt4
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+4,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt5, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt5 end)  as wt5
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+5,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt6, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt6 end)  as wt6
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+6,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt7, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt7 end)  as wt7
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+7,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt8, '0') = '0'
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y'))  
                                then decode(d.reason_type, null, 'X', 'O') else a.wt8 end)  as wt8
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+8,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt9, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt9 end)  as wt9
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+9,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt10, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt10 end)  as wt10
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+10,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt11, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt11 end)  as wt11
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+11,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt12, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt12 end)  as wt12
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+12,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt13, '0') = '0'
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y'))  
                                then decode(d.reason_type, null, 'X', 'O') else a.wt13 end)  as wt13
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+13,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt14, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt14 end)  as wt14
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+14,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt15, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt15 end)  as wt15
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+15,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt16, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt16 end)  as wt16
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+16,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt17, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt17 end)  as wt17
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+17,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt18, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt18 end)  as wt18
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+18,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt19, '0') = '0'
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y'))  
                                then decode(d.reason_type, null, 'X', 'O') else a.wt19 end)  as wt19
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+19,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt20, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt20 end)  as wt20
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+20,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt21, '0') = '0'
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y'))  
                                then decode(d.reason_type, null, 'X', 'O') else a.wt21 end)  as wt21
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+21,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt22, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt22 end)  as wt22
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+22,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt23, '0') = '0'
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y'))  
                                then decode(d.reason_type, null, 'X', 'O') else a.wt23 end)  as wt23
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+23,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt24, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt24 end)  as wt24
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+24,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt25, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt25 end)  as wt25
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+25,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt26, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt26 end)  as wt26
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+26,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt27, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt27 end)  as wt27
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+27,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt28, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt28 end)  as wt28
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+28,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt29, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt29 end)  as wt29
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+29,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt30, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt30 end)  as wt30
                     ,max(case when d.work_dt = to_char(to_date(a.from_dt,'yyyymmdd')+30,'yyyymmdd')  and nvl(d.wt, 0) = 0 and nvl(a.wt31, '0') = '0' 
                                    and (d.hol_type is null or (d.hol_type is not null and nvl(d.shift_sunday_yn, 'N') = 'Y')) 
                                then decode(d.reason_type, null, 'X', 'O') else a.wt31 end)  as wt31
                    from thr_work_date d
                    where d.del_if=0
                    and d.work_dt between p_from and p_to
                    and d.thr_emp_pk = a.thr_emp_pk
                    ) 
   where a.del_if=0
--   and a.sal_period = p_sal_period
   and a.work_mon = p_work_mon
--   and (a.tco_org_pk in  (select  g.pk from tco_org g
--                                                 where g.del_if = 0 
--                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
--                                                    connect by prior g.pk = g.p_pk)
--                                or p_tco_org_pk ='ALL')
   and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk) ;
   
   update thr_work_month a
   set (A.THEMGIOTHUONG_TEMP,  A.THEMGIOCHUNHAT_TEMP, THEMGIOLE) 
                         =  (select sum(case when nvl(w.hol_type, ' ') = ' ' then nvl(w.ot_xn, 0)
                                                        else 0 end)
                                            ,sum(case when nvl(w.hol_type, ' ') = 'SUN' then nvl(w.ot_xn, 0)
                                                        else 0 end)
                                            ,sum(case when nvl(w.hol_type, ' ') = 'HOL' then nvl(w.ot_xn, 0)
                                                        else 0 end)
                                from thr_work_date w, thr_employee e
                                where w.del_if=0 and e.del_if=0
                                and w.thr_emp_pk = e.pk
                                and w.work_dt between p_from and p_to
                                and w.work_dt between e.join_dt and to_char(to_date(nvl(e.left_dt,'30000101'),'YYYYMMDD') + l_resign_num,'YYYYMMDD')
                                and w.thr_emp_pk = a.thr_emp_pk
                                 )
   where a.del_if=0
--   and a.sal_period = p_sal_period
   and a.work_mon = p_work_mon
   and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
   and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk) ; 
 
   update thr_work_month a
   set A.TONGCONG_TEMP = nvl(A.TOTAL_WT, 0) + nvl(A.THEMGIOTHUONG_TEMP, 0) + nvl(A.THEMGIOCHUNHAT_TEMP, 0) 
   where a.del_if=0
--   and a.sal_period = p_sal_period
   and a.work_mon = p_work_mon
   and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
   and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk) ;
   
  
   update thr_work_month a
   set A.TONGCONG = CASE WHEN nvl(A.TONGCONG_TEMP, 0) > nvl(A.WT_IN_MONTH, 0) THEN nvl(A.WT_IN_MONTH, 0)
                         ELSE nvl(A.TONGCONG_TEMP, 0) END 
   where a.del_if=0
--   and a.sal_period = p_sal_period
   and a.work_mon = p_work_mon 
   and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
   and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk) ;
 
    update thr_work_month a
   set A.THEMGIOTHUONG = CASE WHEN nvl(A.TONGCONG_TEMP, 0) - nvl(A.WT_IN_MONTH, 0) > NVL(A.THEMGIOTHUONG_TEMP, 0) THEN 0
                              ELSE NVL(A.THEMGIOTHUONG_TEMP, 0) - (nvl(A.TONGCONG_TEMP, 0) - nvl(A.WT_IN_MONTH, 0)) END
   where a.del_if=0
--   and a.sal_period = p_sal_period
   and a.work_mon = p_work_mon 
   and nvl(A.TONGCONG_TEMP, 0) > nvl(A.WT_IN_MONTH, 0) 
   AND NVL(A.THEMGIOTHUONG_TEMP, 0) > 0
   and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
   and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk) ;
     
   update thr_work_month a
   set A.THEMGIOCHUNHAT = CASE WHEN nvl(A.TONGCONG_TEMP, 0) - nvl(A.WT_IN_MONTH, 0) > NVL(A.THEMGIOTHUONG_TEMP, 0)  
                                THEN (NVL(A.THEMGIOTHUONG_TEMP, 0) + NVL(A.THEMGIOCHUNHAT_TEMP, 0)) - (NVL(A.TONGCONG_TEMP, 0) - NVL(A.WT_IN_MONTH, 0))
                              ELSE NVL(A.THEMGIOCHUNHAT_TEMP, 0) END
   where a.del_if=0
--   and a.sal_period = p_sal_period
   and a.work_mon = p_work_mon 
   and nvl(A.TONGCONG_TEMP, 0) > nvl(A.WT_IN_MONTH, 0) 
   AND NVL(A.THEMGIOCHUNHAT_TEMP, 0) > 0
   and (a.tco_org_pk in  (select  g.pk from tco_org g
                                                 where g.del_if = 0 
                                                  start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                    connect by prior g.pk = g.p_pk)
                                or p_tco_org_pk ='ALL')
   and a.thr_emp_pk=nvl(l_thr_emp_pk, a.thr_emp_pk) ;
 
   
   -- TINH TOAN BANG VANG SUMMARY TREN 3 NGAY
   insert into thr_absence_month(pk, thr_emp_pk, emp_id, full_name, tco_org_pk, work_mon
                            , nghi_phep, nghi_viecrieng, didaotao, nvqs, vosinh, tong_n
                            , nghi_khongphep, nghi_tnld, nghiom_cogiay_bv, nghi_khamthai
                            , nghi_thaisan, nghi_hieuhi_conom, tong_nghi
                            , description, del_if, crt_by, crt_dt)
        select thr_absence_month_seq.nextval, e.pk, e.emp_id, e.full_name, e.tco_org_pk, p_work_mon
                            , t.nghi_phep, t.nghi_viecrieng, t.didaotao, t.nvqs, t.vosinh, t.tong_n
                            , t.nghi_khongphep, t.nghi_tnld, t.nghiom_cogiay_bv, t.nghi_khamthai
                            , t.nghi_thaisan, t.nghi_hieuhi_conom, t.tong_nghi
                            , decode(nvl(t.nghi_phep, 0) , 0, '', 'Nghỉ phép('|| t.nghi_phep||')') 
                            || decode(nvl(t.nghi_viecrieng, 0) , 0, '', ' Nghỉ việc riêng('|| t.nghi_viecrieng||')')
                            || decode(nvl(t.didaotao, 0) , 0, '', ' Đi đào tạo('|| t.didaotao||')') 
                            || decode(nvl(t.nvqs, 0) , 0, '', ' NVQS('|| t.nvqs||')') 
                            || decode(nvl(t.vosinh, 0) , 0, '', ' Vợ sinh('|| t.vosinh ||')') 
                            || decode(nvl(t.nghi_khongphep, 0) , 0, '', ' Nghỉ không phép('|| t.nghi_khongphep||')')
                            || decode(nvl(t.nghi_tnld, 0) , 0, '', ' TNLĐ('|| t.nghi_tnld||')') 
                            || decode(nvl(t.nghiom_cogiay_bv, 0) , 0, '', ' Nghỉ ốm có giấy BV('|| t.nghiom_cogiay_bv||')')  
                            || decode(nvl(t.nghi_khamthai, 0) , 0, '', ' Khám thai('|| t.nghi_khamthai||')') 
                            || decode(nvl(t.nghi_thaisan, 0) , 0, '', ' Thai sản('|| t.nghi_thaisan||')')
                            || decode(nvl(t.nghi_hieuhi_conom, 0) , 0, '', ' Hiếu, hỉ, con ốm('|| t.nghi_hieuhi_conom||')')
                            , 0, p_crt_by, sysdate
            from thr_employee e
            ,(select a.thr_emp_pk
                   , sum(case when nvl(a.absence_type, '0') = '1' then 1 
                              when nvl(a.absence_type, '0') = '2' then 0.5 else 0 end) as nghi_phep 
                   , sum(case when nvl(a.absence_type, '0') = '15' then 1 else 0 end) as nghi_viecrieng
                   , sum(case when nvl(a.absence_type, '0') = '3' then 1 else 0 end) as didaotao
                   , sum(case when nvl(a.absence_type, '0') = '4' then 1 else 0 end) as nvqs
                   , sum(case when nvl(a.absence_type, '0') in ('5', '6') then 1 else 0 end) as vosinh
                   , sum(case when nvl(a.absence_type, '0') in ('3','4','5','6','15') then 1 else 0 end) as tong_n
                   , sum(case when nvl(a.absence_type, '0') = '16' then 1 else 0 end) as nghi_khongphep
                   , sum(case when nvl(a.absence_type, '0') = '10' then 1 else 0 end) as nghi_tnld
                   , sum(case when nvl(a.absence_type, '0') = '11' then 1 else 0 end) as nghiom_cogiay_bv
                   , sum(case when nvl(a.absence_type, '0') = '13' then 1 else 0 end) as nghi_khamthai
                   , sum(case when nvl(a.absence_type, '0') = '12' then 1 else 0 end) as nghi_thaisan
                   , sum(case when nvl(a.absence_type, '0') in ('7', '8', '9') then 1 else 0 end) as nghi_hieuhi_conom
                   , sum(case when nvl(a.absence_type, '0') = '2' then 0.5 
                              when nvl(a.absence_type, '0') in ('1', '15', '3' , '4', '5', '6', '16', '10', '11', '13', '12', '7', '8', '9') then 1
                                    else 0 end) as tong_nghi
                    from thr_absence a
                    where a.del_if=0
                    and a.absence_dt between p_from and p_to
                    group by a.thr_emp_pk) t 
          where e.del_if=0
          and e.pk = t.thr_emp_pk
          and nvl(t.tong_nghi, 0) > 0
           and (e.tco_org_pk in  (select  g.pk from tco_org g
                                                         where g.del_if = 0 
                                                          start with g.pk =decode (p_tco_org_pk,'ALL', 0,p_tco_org_pk)
                                                            connect by prior g.pk = g.p_pk)
                                        or p_tco_org_pk ='ALL')
           and not exists (select 1 from thr_absence_month s
                            where s.del_if=0
                            and s.thr_emp_pk = e.pk
                            and s.work_mon = p_work_mon)
           and e.pk = nvl(l_thr_emp_pk, e.pk) ;
        
        
       hp_hr_pro_hrti01701_2(P_WORK_MON, P_FROM , P_TO, P_TCO_ORG_PK, P_SAL_PERIOD, P_EMP_ID,  P_CRT_BY, P_RESULT  );

end if;    
     
p_result:=1;
commit;
--    EXCEPTION
--    WHEN l_check THEN
--        p_result:=-1;
--        Raise_application_error(-20019, sqlerrm);
--    WHEN l_exp_wt THEN
--        p_result:=-1;
--        Raise_application_error(-20019, 'ERRCODE : exists WORKING_TIME is still SUBMIT or WAITING or CANCEL, Action denied! (T?n t?i gi? công chua du?c APPROVE, Thao tác b? t? ch?i) '||SQLERRM);
--    WHEN l_exp_ot THEN
--        p_result:=-1;
--        Raise_application_error(-20019, 'ERRCODE : exists OVER_TIME is still SUBMIT or WAITING or CANCEL, Action denied! (T?n t?i tang ca chua du?c APPROVE, Thao tác b? t? ch?i) '||SQLERRM);
--    WHEN  OTHERS THEN
--        p_result:=-1;
--        RAISE_APPLICATION_ERROR(-20002, 'ERRCODE : '|| l_error||SQLERRM );
--    ROLLBACK;
end  ;
/

DROP PROCEDURE HPDQ.ST_HR_PRO_HRTI00500_2;

CREATE OR REPLACE PROCEDURE HPDQ.ST_HR_PRO_HRTI00500_2(
    p_no                       varchar,
    p_emp_id                   VARCHAR,    
    p_full_name                varchar,
    p_1    varchar2,
    p_2    varchar2,
    p_3    varchar2,
    p_4    varchar2,
    p_5    varchar2,
    p_6    varchar2,
    p_7    varchar2,
    p_8    varchar2,
    p_9    varchar2,
    p_10    varchar2,
    p_11    varchar2,
    p_12    varchar2,
    p_13    varchar2,
    p_14    varchar2,
    p_15    varchar2,
    p_16    varchar2,
    p_17    varchar2,
    p_18    varchar2,
    p_19    varchar2,
    p_20    varchar2,
    p_21    varchar2,
    p_22    varchar2,
    p_23    varchar2,
    p_24    varchar2,
    p_25    varchar2,
    p_26    varchar2,
    p_27    varchar2,
    p_28    varchar2,
    p_29    varchar2,
    p_30    varchar2,
    p_31    varchar2,
    p_mon   VARCHAR,
    p_from  VARCHAR,
    p_to    VARCHAR,
    P4              VARCHAR,
    P5              VARCHAR,
    P_SEQUENCE_DT    VARCHAR,
    p_crt_by    VARCHAR,
    P_RTN_VALUE     OUT VARCHAR
)
IS               
    tmp         number;
    TYPE Char_Array IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
    p_d Char_Array;
    p_c Char_Array;
    p_h Char_Array;
    p_shif_pk Char_Array;
    d number;
    er varchar2(100);
    default_shift number(5):=1;
     
    l_from varchar2(8);
    l_to varchar2(8);
    l_from_dt varchar2(8);
    l_to_dt varchar2(8);
    l_rtn_num number; 
    l_check     exception;
    l_thr_emp_pk number;
    l_check_data number;
BEGIN

    SELECT max(a.pk) into l_thr_emp_pk 
    FROM THR_EMPLOYEE A
    WHERE A.DEL_IF=0 AND A.EMP_ID = upper(trim(p_emp_id));

p_d(1):=trim(p_1);    p_d(2):=trim(p_2);    p_d(3):=trim(p_3);    p_d(4):=trim(p_4);    p_d(5):=trim(p_5);    p_d(6):=trim(p_6);
p_d(7):=trim(p_7);    p_d(8):=trim(p_8);    p_d(9):=trim(p_9);    p_d(10):=trim(p_10);  p_d(11):=trim(p_11);  p_d(12):=trim(p_12);
p_d(13):=trim(p_13);  p_d(14):=trim(p_14);  p_d(15):=trim(p_15);  p_d(16):=trim(p_16);  p_d(17):=trim(p_17);  p_d(18):=trim(p_18);
p_d(19):=trim(p_19);  p_d(20):=trim(p_20);  p_d(21):=trim(p_21);  p_d(22):=trim(p_22);  p_d(23):=trim(p_23);  p_d(24):=trim(p_24);
p_d(25):=trim(p_25);  p_d(26):=trim(p_26);  p_d(27):=trim(p_27);  p_d(28):=trim(p_28);  p_d(29):=trim(p_29);  p_d(30):=trim(p_30);
p_d(31):=trim(p_31);




    ST_HR_PRO_HRTI00500_3(l_thr_emp_pk, p_mon, p_from, p_to, p_crt_by, l_rtn_num);
    
    if l_rtn_num <> 0 then
        raise l_check;
    end if;

--DOI SHIFT RA PK 
FOR d IN 1..31 LOOP
    p_h(d):=p_d(d);
    er:=p_emp_id||'col:'||d;
    
    --xac dinh ngay 
    if to_number(substr(p_from,-2))+d-1>31 then
        tmp:=to_number(substr(p_from,-2))+d-1-31;
        if tmp<10 then
            p_c(d):=substr(p_to,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_to,1,6)||tmp;
        end if;
    else
        tmp:=to_number(substr(p_from,-2))+d-1;
        if tmp<10 then
            p_c(d):=substr(p_from,1,6)||'0'||tmp;
        else
            p_c(d):=substr(p_from,1,6)||tmp;
        end if;    
    end if;    
    
    --xac dinh pk cua shift 
    IF p_d(d) is null THEN 
       p_shif_pk(d):=NULL;
    ELSE
        
        select max(a.pk) into p_shif_pk(d) 
        from thr_work_shift a
        where a.del_if=0 
        and to_char(a.shift)=p_d(d);
--            and (
--                    (to_char(a.shift)=p_d(d) and upper(substr(p_d(d),1,1))<>'R' )
--                    or (upper(substr(p_d(d),1,1))='R' 
--                        and a.shift=to_number(substr(p_d(d),-length(p_d(d))+1))
--                       )   
--                );
    END IF;   
    
    
    IF p_d(d) IS NOT NULL THEN
    
        SELECT MAX(A.PK) INTO l_check_data 
        FROM THR_WG_SCH_DETAIL A
        WHERE A.DEL_IF=0
        AND A.THR_EMP_PK = l_thr_emp_pk
        AND A.WORK_DT = p_c(d);
    
        IF l_check_data IS NULL THEN -- CHUA CO NGAY LAM VIEC THI INSERT
        
            INSERT INTO THR_WG_SCH_DETAIL(PK, THR_WG_PK, THR_WS_PK, THR_EMP_PK, WORK_DT
                                    , HOL_TYPE, DAY_TYPE, THR_WG_MASTER_PK, TCO_ORG_PK, SALARY_TYPE
                                    , DEL_IF, CRT_BY, CRT_DT, REMARK)
            SELECT THR_WG_SCH_DETAIL_SEQ.NEXTVAL, E.THR_WG_PK, NULL, E.PK, p_c(d)
                                    , C.HOL_TYPE, C.DAY_TYPE, NULL, E.TCO_ORG_PK , E.SALARY_TYPE
                                    , 0, p_crt_by, sysdate, 'INSERT FROM IMPORT WITH NULL MASTER GROUP'
            FROM THR_EMPLOYEE E, THR_CALENDAR C
            WHERE E.DEL_IF=0 AND C.DEL_IF=0
            AND C.TCO_COMPANY_PK = 99
            AND C.CAR_DATE = p_c(d)
            AND E.PK = l_thr_emp_pk;
        
        END IF;
    END IF;
        
END LOOP;

UPDATE THR_WG_SCH_DETAIL G
SET G.THR_WS_PK=(case when G.WORK_DT=p_c(1) and p_shif_pk(1) is not null then p_shif_pk(1) 
                      when G.WORK_DT=p_c(2) and p_shif_pk(2) is not null then p_shif_pk(2)
                      when G.WORK_DT=p_c(3) and p_shif_pk(3) is not null then p_shif_pk(3)
                      when G.WORK_DT=p_c(4) and p_shif_pk(4) is not null then p_shif_pk(4)
                      when G.WORK_DT=p_c(5) and p_shif_pk(5) is not null then p_shif_pk(5)
                      when G.WORK_DT=p_c(6) and p_shif_pk(6) is not null then p_shif_pk(6)
                      when G.WORK_DT=p_c(7) and p_shif_pk(7) is not null then p_shif_pk(7)
                      when G.WORK_DT=p_c(8) and p_shif_pk(8) is not null then p_shif_pk(8)
                      when G.WORK_DT=p_c(9) and p_shif_pk(9) is not null then p_shif_pk(9)
                      when G.WORK_DT=p_c(10) and p_shif_pk(10) is not null then p_shif_pk(10)
                      when G.WORK_DT=p_c(11) and p_shif_pk(11) is not null then p_shif_pk(11)
                      when G.WORK_DT=p_c(12) and p_shif_pk(12) is not null then p_shif_pk(12)
                      when G.WORK_DT=p_c(13) and p_shif_pk(13) is not null then p_shif_pk(13)
                      when G.WORK_DT=p_c(14) and p_shif_pk(14) is not null then p_shif_pk(14)
                      when G.WORK_DT=p_c(15) and p_shif_pk(15) is not null then p_shif_pk(15)
                      when G.WORK_DT=p_c(16) and p_shif_pk(16) is not null then p_shif_pk(16)
                      when G.WORK_DT=p_c(17) and p_shif_pk(17) is not null then p_shif_pk(17)
                      when G.WORK_DT=p_c(18) and p_shif_pk(18) is not null then p_shif_pk(18)
                      when G.WORK_DT=p_c(19) and p_shif_pk(19) is not null then p_shif_pk(19)
                      when G.WORK_DT=p_c(20) and p_shif_pk(20) is not null then p_shif_pk(20)
                      when G.WORK_DT=p_c(21) and p_shif_pk(21) is not null then p_shif_pk(21)
                      when G.WORK_DT=p_c(22) and p_shif_pk(22) is not null then p_shif_pk(22)
                      when G.WORK_DT=p_c(23) and p_shif_pk(23) is not null then p_shif_pk(23)
                      when G.WORK_DT=p_c(24) and p_shif_pk(24) is not null then p_shif_pk(24)
                      when G.WORK_DT=p_c(25) and p_shif_pk(25) is not null then p_shif_pk(25)
                      when G.WORK_DT=p_c(26) and p_shif_pk(26) is not null then p_shif_pk(26)
                      when G.WORK_DT=p_c(27) and p_shif_pk(27) is not null then p_shif_pk(27)
                      when G.WORK_DT=p_c(28) and p_shif_pk(28) is not null then p_shif_pk(28)
                      when G.WORK_DT=p_c(29) and p_shif_pk(29) is not null then p_shif_pk(29)
                      when G.WORK_DT=p_c(30) and p_shif_pk(30) is not null then p_shif_pk(30)
                      when G.WORK_DT=p_c(31) and p_shif_pk(31) is not null then p_shif_pk(31)  
                      else NULL end)
   -- HOA PHAT DUNG QUAT
--   , G.HOL_TYPE = (case when G.WORK_DT= p_c(1) and  p_d(1)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(2) and  p_d(2)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(3) and  p_d(3)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(4) and  p_d(4)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(5) and  p_d(5)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(6) and  p_d(6)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(7) and  p_d(7)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(8) and  p_d(8)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(9) and  p_d(9)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(10) and  p_d(10)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(11) and  p_d(11)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(12) and  p_d(12)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(13) and  p_d(13)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(14) and  p_d(14)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(15) and  p_d(15)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(16) and  p_d(16)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(17) and  p_d(17)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(18) and  p_d(18)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(19) and  p_d(19)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(20) and  p_d(20)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(21) and  p_d(21)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(22) and  p_d(22)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(23) and  p_d(23)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(24) and  p_d(24)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(25) and  p_d(25)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(26) and  p_d(26)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(27) and  p_d(27)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(28) and  p_d(28)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(29) and  p_d(29)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(30) and  p_d(30)= 0 then 'OFF'
--                        when G.WORK_DT= p_c(31) and  p_d(31)= 0 then 'OFF' 
--                        ELSE NULL END)
--,G.HOL_TYPE=(case when G.WORK_DT=p_c(1) and upper(substr(p_h(1),1,1))='R' and p_shif_pk(1) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(2) and upper(substr(p_h(2),1,1))='R' and p_shif_pk(2) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(3) and upper(substr(p_h(3),1,1))='R' and p_shif_pk(3) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(4) and upper(substr(p_h(4),1,1))='R' and p_shif_pk(4) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(5) and upper(substr(p_h(5),1,1))='R' and p_shif_pk(5) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(6) and upper(substr(p_h(6),1,1))='R' and p_shif_pk(6) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(7) and upper(substr(p_h(7),1,1))='R' and p_shif_pk(7) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(8) and upper(substr(p_h(8),1,1))='R' and p_shif_pk(8) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(9) and upper(substr(p_h(9),1,1))='R' and p_shif_pk(9) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(10) and upper(substr(p_h(10),1,1))='R' and p_shif_pk(10) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(11) and upper(substr(p_h(11),1,1))='R' and p_shif_pk(11) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(12) and upper(substr(p_h(12),1,1))='R' and p_shif_pk(12) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(13) and upper(substr(p_h(13),1,1))='R' and p_shif_pk(13) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(14) and upper(substr(p_h(14),1,1))='R' and p_shif_pk(14) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(15) and upper(substr(p_h(15),1,1))='R' and p_shif_pk(15) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(16) and upper(substr(p_h(16),1,1))='R' and p_shif_pk(16) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(17) and upper(substr(p_h(17),1,1))='R' and p_shif_pk(17) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(18) and upper(substr(p_h(18),1,1))='R' and p_shif_pk(18) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(19) and upper(substr(p_h(19),1,1))='R' and p_shif_pk(19) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(20) and upper(substr(p_h(20),1,1))='R' and p_shif_pk(20) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(21) and upper(substr(p_h(21),1,1))='R' and p_shif_pk(21) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(22) and upper(substr(p_h(22),1,1))='R' and p_shif_pk(22) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(23) and upper(substr(p_h(23),1,1))='R' and p_shif_pk(23) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(24) and upper(substr(p_h(24),1,1))='R' and p_shif_pk(24) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(25) and upper(substr(p_h(25),1,1))='R' and p_shif_pk(25) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(26) and upper(substr(p_h(26),1,1))='R' and p_shif_pk(26) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(27) and upper(substr(p_h(27),1,1))='R' and p_shif_pk(27) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(28) and upper(substr(p_h(28),1,1))='R' and p_shif_pk(28) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(29) and upper(substr(p_h(29),1,1))='R' and p_shif_pk(29) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(30) and upper(substr(p_h(30),1,1))='R' and p_shif_pk(30) is not null then nvl(G.HOL_TYPE,'SUN')
--                  when G.WORK_DT=p_c(31) and upper(substr(p_h(31),1,1))='R' and p_shif_pk(31) is not null then nvl(G.HOL_TYPE,'SUN')  
--                  when G.WORK_DT=p_c(1)  and p_shif_pk(1) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(2)  and p_shif_pk(2) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(3)  and p_shif_pk(3) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(4)  and p_shif_pk(4) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(5)  and p_shif_pk(5) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(6)  and p_shif_pk(6) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(7)  and p_shif_pk(7) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(8)  and p_shif_pk(8) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(9)  and p_shif_pk(9) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(10) and p_shif_pk(10) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(11) and p_shif_pk(11) is null  then G.HOL_TYPE
--                  when G.WORK_DT=p_c(12) and p_shif_pk(12) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(13) and p_shif_pk(13) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(14) and p_shif_pk(14) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(15)  and p_shif_pk(15) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(16)  and p_shif_pk(16) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(17)  and p_shif_pk(17) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(18) and p_shif_pk(18) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(19)  and p_shif_pk(19) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(20)  and p_shif_pk(20) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(21)  and p_shif_pk(21) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(22)  and p_shif_pk(22) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(23)  and p_shif_pk(23) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(24)  and p_shif_pk(24) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(25)  and p_shif_pk(25) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(26)  and p_shif_pk(26) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(27)  and p_shif_pk(27) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(28) and p_shif_pk(28) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(29)  and p_shif_pk(29) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(30)  and p_shif_pk(30) is null then G.HOL_TYPE
--                  when G.WORK_DT=p_c(31)  and p_shif_pk(31) is null then G.HOL_TYPE  
--                  else NULL END)  
,G.IMPORT_SEQ= p_sequence_dt   
,G.MOD_BY = p_crt_by
,G.MOD_DT = SYSDATE
,G.REMARK = 'UPDATE FROM IMPORT SCHEDULE'               
WHERE G.DEL_IF=0 AND G.WORK_DT BETWEEN p_from AND p_to
and g.thr_emp_pk in(select e.pk from thr_employee e 
                    where e.del_if=0 and e.emp_id=upper(p_emp_id) 
                     and e.pk = g.thr_emp_pk)
and nvl(g.approve_yn,'N')='N';

-- delete nhung ngay ko lay dc ca lam viec
update thr_wg_sch_detail a
set a.del_if= a.pk
where a.del_if=0
and a.thr_ws_pk is null
and A.WORK_DT between p_from and p_to
and a.thr_emp_pk = l_thr_emp_pk;

/*
select nvl(a.num_5,1) into default_shift
    from vhr_hr_code a where a.id='HR0028' and a.code='01';


UPDATE THR_WG_SCH_DETAIL G
SET G.THR_WS_PK=(select pk from thr_work_shift a where a.del_if=0 and a.shift=default_shift)
WHERE G.DEL_IF=0 AND G.WORK_DT BETWEEN p_from AND p_to
AND G.THR_WS_PK IS NULL
and g.thr_emp_pk in(select e.pk from thr_employee e where e.del_if=0 and e.emp_id=upper(p_emp_id) 
                and e.pk=g.thr_emp_pk)
and nvl(g.approve_yn,'N')='N';                
*/


P_RTN_VALUE := '1';

EXCEPTION          
    WHEN OTHERS
    THEN
   
       P_RTN_VALUE := '-1';
END;
/
